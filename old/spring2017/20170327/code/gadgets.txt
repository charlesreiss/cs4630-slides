Gadgets information
============================================================
0x00002aaaaae5a230 : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaae6f3c5 : adc al, 0 ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaae1953f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae195a9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae710b0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaae7a180 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaadcf13e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00002aaaaae7a1c8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaad1e515 : adc al, 0 ; call 0x777f4
0x00002aaaaad1e514 : adc al, 0 ; call 0x777f5
0x00002aaaaad1a065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad06295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaadfd3c5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaae7f24c : adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaae23505 : adc al, 0x13 ; jmp rdx
0x00002aaaaad71a05 : adc al, 0x16 ; sub eax, edx ; ret
0x00002aaaaae6f94c : adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaae74ec4 : adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae7fc4c : adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaae695b0 : adc al, 0x20 ; jmp 0x1965b6
0x00002aaaaadcf83a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaad0cfc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00002aaaaae6d558 : adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaad7c233 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad947fb : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaae8184c : adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaae81e4c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaad51c4a : adc al, 0x41 ; pop rsp ; ret
0x00002aaaaad79970 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00002aaaaad7a7c3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaad715bb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaacf3825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaae82d4c : adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6abe0 : adc al, 0x52 ; call rsp
0x00002aaaaae59a0c : adc al, 0x5e ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae84e4c : adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaad587aa : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaad01c97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaadc9b36 : adc al, 0x89 ; ret 0xdaf7
0x00002aaaaad45eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaadd0580 : adc al, 0x8a ; sub al, 0 ; ret
0x00002aaaaad2ef54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaad36e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00002aaaaadb36b4 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00002aaaaae1a9d0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaae190fe : adc al, 0x91 ; sub eax, edx ; ret
0x00002aaaaae23501 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaad5773a : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaad5c1e7 : adc al, 0xa ; jmp r10
0x00002aaaaad71b73 : adc al, 0xa ; sub eax, edx ; ret
0x00002aaaaad2f14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00002aaaaadabf67 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00002aaaaae69a68 : adc al, 0xa8 ; in eax, dx ; call rsp
0x00002aaaaada012d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaaddcf94 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaae79d4c : adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaadd6990 : adc al, 0xbf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaad1b031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad1b035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad08f44 : adc al, 0xc7 ; xor eax, eax ; ret
0x00002aaaaae7aa4c : adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae69c40 : adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00002aaaaae7bd4c : adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaad8d6a2 : adc al, 0xe ; jne 0xba69d ; ret
0x00002aaaaae17211 : adc al, 0xe ; sub eax, edx ; ret
0x00002aaaaae7c44c : adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaacd5b87 : adc al, 0xe7 ; ret
0x00002aaaaae6f569 : adc al, 0xe9 ; call qword ptr [rdi]
0x00002aaaaad939a5 : adc al, 0xe9 ; ret 0xffef
0x00002aaaaad94a5c : adc al, 0xe9 ; ret 0xfff9
0x00002aaaaae46271 : adc al, 0xea ; test rdx, rdx ; je 0x173281 ; call rdx
0x00002aaaaae69de9 : adc al, 0xee ; jmp rsp
0x00002aaaaad7a339 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00002aaaaae7d071 : adc al, 0xf2 ; call qword ptr [rdx]
0x00002aaaaae6b2d9 : adc al, 0xf5 ; call rsp
0x00002aaaaae6b709 : adc al, 0xf6 ; call rsp
0x00002aaaaae67b1d : adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae69cf8 : adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaae44c28 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaad509bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00002aaaaadfa74c : adc al, 3 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x127760 ; ret
0x00002aaaaad8c38f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaad71006 : adc al, 7 ; cmp edx, esi ; je 0x9e007 ; ret
0x00002aaaaad70f32 : adc al, 7 ; test dl, dl ; jne 0x9df2f ; ret
0x00002aaaaae6e74c : adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaad17e0f : adc al, 9 ; ret 0x9f74
0x00002aaaaae196e7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19751 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaacd87e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaacda600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaacd37ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaacf4bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00002aaaaacf52bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaad36882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00002aaaaad2ef50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad36e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaad82a0d : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd8f30
0x00002aaaaad87eb5 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccde3d8
0x00002aaaaae7d9ea : adc al, byte ptr [rbx] ; ret 0xa02
0x00002aaaaae7f165 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; call qword ptr [rsi]
0x00002aaaaae7f1a5 : adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae7f1bd : adc al, byte ptr [rcx] ; add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae7f235 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaae7f21d : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaad74e64 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaadc593e : adc al, ch ; insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaad9b9fd : adc al, ch ; popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaada3dc7 : adc al, ch ; ret
0x00002aaaaae87c80 : adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaae676b0 : adc bh, 0xfb ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaae8cf21 : adc bh, al ; jmp qword ptr [rbx]
0x00002aaaaae81850 : adc bh, bh ; hlt ; call rsi
0x00002aaaaae678b0 : adc bh, bh ; sti ; call rax
0x00002aaaaacd6afb : adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaad7ec70 : adc bh, byte ptr [rbx] ; ja 0xabc84 ; cmove rax, rcx ; ret
0x00002aaaaae5a2e4 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaadb4429 : adc bh, dh ; ret 0x30f
0x00002aaaaadf05c4 : adc bh, dh ; ret 0x8080
0x00002aaaaad07f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaad61db5 : adc bl, ch ; call 0xffffffffc3d9770a
0x00002aaaaad5bec5 : adc bl, ch ; call 0xffffffffc401181a
0x00002aaaaad5d6c5 : adc bl, ch ; call 0xffffffffc401301a
0x00002aaaaad1b982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad616d4 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaad78f56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad782c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad78337 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad78297 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad00a6a : adc bl, dh ; ret
0x00002aaaaad78f55 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad782c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad4c616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaade75a1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x00002aaaaad5b7d2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaad0a37d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x00002aaaaad0aeca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x00002aaaaad0a376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaae15a07 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaad9a909 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dd
0x00002aaaaad4fd7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00002aaaaada18d5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaad7c1ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad7c1ce : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c20c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7c28e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad47083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaad1b57c : adc byte ptr [rax + 0x29], cl ; ret
0x00002aaaaad25b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00002aaaaad0a377 : adc byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae08492 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x00002aaaaaddaeaf : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00002aaaaadb4861 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaadb4886 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x00002aaaaad517eb : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00002aaaaae08491 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x00002aaaaaddaeae : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaae15a08 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00002aaaaad4bb3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaaddbb0a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaae00f8a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaae04726 : adc byte ptr [rax + 1], bh ; ret
0x00002aaaaad7d3de : adc byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaad1c06e : adc byte ptr [rax + 1], cl ; ret
0x00002aaaaad715b6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaaddc638 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaae07ded : adc byte ptr [rax + 1], dil ; ret
0x00002aaaaadab25f : adc byte ptr [rax + 2], bh ; ret
0x00002aaaaad7c3b4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad7c2b2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c230 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaae72bf0 : adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaadcfe63 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaae68978 : adc byte ptr [rax - 0x606f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaaddcf91 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaad00a63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaad66934 : adc byte ptr [rax - 0x73], cl ; jg 0x93951 ; jne 0x93928 ; ret
0x00002aaaaaddd1b5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaaddd1b4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaacf3828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaad66d5a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaad77cac : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaad44c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad45fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaad9a90a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc78dc
0x00002aaaaadfe43b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00002aaaaad44c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaacf6654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00002aaaaad5b622 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaad0c2b3 : adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4fd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaade80e6 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00002aaaaad34d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaad106d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00002aaaaad551e9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00002aaaaae01f34 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00002aaaaadb7b54 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaae2007f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaae37c07 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaae37c43 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaad73a54 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaadf5890 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00002aaaaad2ece1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad596e3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaacf956a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaad1bd91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaad1c5a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaadd0c67 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaae68a10 : adc byte ptr [rax - 0x7eaf0004], al ; cld ; call rax
0x00002aaaaae82f00 : adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaadbcdbb : adc byte ptr [rax - 1], bh ; ret
0x00002aaaaadce73b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaad3dbcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaae1b961 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae198f1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad0e19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaadffcea : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaadfe385 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaad7d113 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad5dfac : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae5cfed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaad3e454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x00002aaaaade7b41 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae67810 : adc byte ptr [rax], al ; cld ; call rax
0x00002aaaaad5aca5 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c74
0x00002aaaaad5aca4 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c75
0x00002aaaaad57736 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad18afb : adc byte ptr [rax], al ; ret
0x00002aaaaae67210 : adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaadab2d5 : adc byte ptr [rax], bh ; ret 0x860f
0x00002aaaaadab1f8 : adc byte ptr [rax], bh ; ret 0x870f
0x00002aaaaae67aa4 : adc byte ptr [rax], dh ; cld ; call qword ptr [rax]
0x00002aaaaad7c1ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad7c1cf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c20d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7c28f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad7c391 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaadba241 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x00002aaaaad51bda : adc byte ptr [rbp + 0x39], cl ; ret
0x00002aaaaace3af0 : adc byte ptr [rbp + 0xa], dh ; add byte ptr [rax], al ; ret
0x00002aaaaad1b525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x00002aaaaae674a4 : adc byte ptr [rbp + rdi*8 - 0x25b6f01], ah ; call qword ptr [rax]
0x00002aaaaad61878 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00002aaaaad66938 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00002aaaaae674ac : adc byte ptr [rbp - 0x5a6f0003], ah ; std ; call qword ptr [rax]
0x00002aaaaad96e43 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x00002aaaaadd50b7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00002aaaaade75a2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00002aaaaad7eda2 : adc byte ptr [rbp - 0xd], dh ; ret
0x00002aaaaae67fb0 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaad55320 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad5750b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad0ddb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae78293 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00002aaaaae741ad : adc byte ptr [rbx + 0xa], ch ; ret
0x00002aaaaae726fc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x00002aaaaad4c617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaae67224 : adc byte ptr [rbx + rdi*8], al ; jmp rax
0x00002aaaaad4f892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaad48ad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x00002aaaaae68960 : adc byte ptr [rbx - 0x5d6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaad7cdb0 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00002aaaaadf611b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00002aaaaad7edef : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00002aaaaade7736 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x11474f ; pop rbp ; pop r12 ; ret
0x00002aaaaae672f4 : adc byte ptr [rbx - 5], cl ; push rax ; sti ; call rax
0x00002aaaaae5a450 : adc byte ptr [rbx], al ; jmp qword ptr [rax]
0x00002aaaaae67a28 : adc byte ptr [rbx], dh ; cld ; call qword ptr [rax]
0x00002aaaaae72b10 : adc byte ptr [rbx], dh ; jmp 0x19fb16
0x00002aaaaad47084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaad67577 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00002aaaaadc00b0 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad47fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaad584ab : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad3f478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad7c312 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaad7c2f2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaae68970 : adc byte ptr [rcx - 0x5f6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaae44f88 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaadd0c32 : adc byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad061b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00002aaaaadd0cb2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00002aaaaadb612c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaad8b148 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00002aaaaad8b0cc : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x00002aaaaad51b87 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaae01ef1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaadb60d7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00002aaaaad8bb8b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x00002aaaaae17293 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaae0211f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaae1ae37 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaae6f0d0 : adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x00002aaaaad8c774 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae67894 : adc byte ptr [rcx], al ; cld ; push rax ; add bh, ah ; call rax
0x00002aaaaae0118d : adc byte ptr [rcx], bh ; ret
0x00002aaaaad0dd3e : adc byte ptr [rcx], ch ; ret 0xc269
0x00002aaaaad4f895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaae67a24 : adc byte ptr [rcx], dh ; cld ; call qword ptr [rax]
0x00002aaaaad58ec9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaadf6547 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00002aaaaadcf23d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc279 ; ret
0x00002aaaaade12f3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00002aaaaad99cd6 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae67fa0 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaae6f8f0 : adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaae6f950 : adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaae81dc0 : adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad00e55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaadeb81a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaad5b7d3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaad08d72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaae3ace8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae42d53 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaae18481 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18571 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18391 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae1fcab : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1e7af : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaae1f9af : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1f0af : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1f3af : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1eaa7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae18dd9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00002aaaaae18931 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaae180c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaae18b11 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae182a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae18cf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18c01 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18543 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18633 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18453 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1ed54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f954 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1fc54 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f354 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f054 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1ea4c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae181b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaae1c0dd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1befd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1c8d5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1b7f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1c6f5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae18363 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18183 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18273 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18093 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaad08de3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00002aaaaad6cb48 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00002aaaaad0a37e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00002aaaaad0aecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00002aaaaadc00b9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00002aaaaad0a8ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00002aaaaacd6955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaae239f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaad35031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00002aaaaae68968 : adc byte ptr [rdx - 0x5e6f0004], ah ; cld ; call qword ptr [rax]
0x00002aaaaacd37b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaae678f8 : adc byte ptr [rdx], al ; cld ; push rax ; add edi, esp ; jmp rax
0x00002aaaaadfa7af : adc byte ptr [rdx], al ; je 0x1277bc ; ret
0x00002aaaaae5a42c : adc byte ptr [rdx], al ; jmp qword ptr [rax]
0x00002aaaaae67994 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; call rax
0x00002aaaaae4143b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae67aa8 : adc byte ptr [rdx], dh ; cld ; call qword ptr [rax]
0x00002aaaaae6728c : adc byte ptr [rip + 0x1e80fffb], cl ; sti ; jmp qword ptr [rax]
0x00002aaaaae672cc : adc byte ptr [rip + 0x3a40fffb], bl ; sti ; jmp qword ptr [rax]
0x00002aaaaae12c2d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x00002aaaaae412ea : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00002aaaaae408e5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad5c335 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaad6227b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaad784ab : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaad784aa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaae7bd00 : adc byte ptr [rsi - 0xf], 0xff ; ret
0x00002aaaaae67fa8 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaad0dfea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x00002aaaaacd3453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00002aaaaae67b8c : adc byte ptr [rsp + rdi*8 - 1], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaae67fb8 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00002aaaaad8dd4a : adc byte ptr [rsp - 0x10], al ; ret
0x00002aaaaad1d18f : adc byte ptr [rsp - 4], al ; ret
0x00002aaaaad1d1d5 : adc byte ptr [rsp - 8], al ; ret
0x00002aaaaae1ed57 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae5a270 : adc ch, ch ; int1 ; jmp qword ptr [rax]
0x00002aaaaae69209 : adc ch, dl ; jmp rsp
0x00002aaaaae80a10 : adc cl, 0xf4 ; jmp rcx
0x00002aaaaad71995 : adc cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaad8ea3e : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00002aaaaad8e9bf : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad7cc83 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f29df
0x00002aaaaad1dcef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00002aaaaad71cad : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaadd0a08 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad1a09d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00002aaaaadd1dde : adc cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaadb5ebc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaad6db44 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad5beb5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00002aaaaad1dcf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00002aaaaad8aec4 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00002aaaaad1c5a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00002aaaaad45854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00002aaaaad278df : adc cl, ch ; ret
0x00002aaaaad61760 : adc dh, bh ; ret
0x00002aaaaadfeb4e : adc dh, dh ; ret 0x7401
0x00002aaaaad53c4e : adc dh, dh ; ret 0xf0f
0x00002aaaaacd52e3 : adc dh, dl ; ret
0x00002aaaaadd3dda : adc dl, byte ptr [rsp + rbp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacf8946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaad1bf13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaad47075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaad1c5ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00002aaaaae467ab : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad0d51e : adc dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaad50fd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00002aaaaad4f83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00002aaaaad8b0cf : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00002aaaaadab426 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00002aaaaad5b7d7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaae1d2fb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00002aaaaae6f07d : adc dword ptr [rax], eax ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaae11419 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaade3859 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae19887 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1b7f9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae4674b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaae6f0cd : adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d6 ; jmp qword ptr [rdi]
0x00002aaaaad3889c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaacfcc44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00002aaaaad3ec82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaad3fbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaad3fa9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00002aaaaae6f07c : adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaad6976a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaad26f68 : adc dword ptr [rbx], 0x440f4c00 ; ret 0xf4c
0x00002aaaaad0e172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaadab408 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x00002aaaaad722d7 : adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaae673d4 : adc dword ptr [rcx - 0x5e1e0003], esp ; std ; jmp rcx
0x00002aaaaae5b5c8 : adc dword ptr [rcx - 0xc], edx ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad71f72 : adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaad71f36 : adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaae7f125 : adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaae0e5ee : adc dword ptr [rcx], eax ; ja 0x13b622 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaaddede6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaad72439 : adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaad078c4 : adc dword ptr [rdi], ecx ; ret
0x00002aaaaad0788d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00002aaaaad07c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00002aaaaad7ca0c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaad7cb3f : adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaad7cbdc : adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaadb3412 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b4
0x00002aaaaad7c9de : adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaae19886 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad7d3da : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00002aaaaae67271 : adc eax, 0x1630fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaadb1097 : adc eax, 0x1fffffe ; ret 0x8b49
0x00002aaaaae4676b : adc eax, 0x252108 ; je 0x17377a ; ret
0x00002aaaaae13187 : adc eax, 0x284284 ; add rsp, 8 ; ret
0x00002aaaaae0a629 : adc eax, 0x290972 ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaae001c2 : adc eax, 0x2959b9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaaddb9bf : adc eax, 0x2ba87c ; je 0x1089d0 ; pop rbp ; ret
0x00002aaaaae5aecc : adc eax, 0x2bfff3bc ; mov dl, 0xf3 ; jmp rsp
0x00002aaaaadd1e6e : adc eax, 0x2c727d ; add rsp, 8 ; ret
0x00002aaaaad5b9da : adc eax, 0x33a579 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaad5aaf1 : adc eax, 0x33dd22 ; add rsp, 0x18 ; ret
0x00002aaaaae09792 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad098ad : adc eax, 0x38c7d6 ; ret
0x00002aaaaad01196 : adc eax, 0x394d95 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaacffae9 : adc eax, 0x397faf ; ret
0x00002aaaaacf2929 : adc eax, 0x3a89da ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaad7e06a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaade86fc : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00002aaaaadc83a7 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaae065dd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x00002aaaaad07ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x00002aaaaad07cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00002aaaaad78c58 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00002aaaaad7a36c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00002aaaaae6dda5 : adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaae19411 : adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaacf64fd : adc eax, 0x83489066 ; ret
0x00002aaaaae124bd : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaad10249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaad615e7 : adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x00002aaaaae7f44d : adc eax, 0xd500001 ; hlt ; jmp rcx
0x00002aaaaad7e36a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00002aaaaad41511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaad93d4f : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae1d05e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1b619 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaace1458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaacdc1ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad1e600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaadcde6c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00002aaaaae7f2c5 : adc eax, dword ptr [rcx] ; add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaadf06f3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaad74e68 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00002aaaaae1ea4f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad1b2f9 : adc eax, eax ; ret
0x00002aaaaad1b436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00002aaaaae561e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00002aaaaae74cb9 : adc ebp, ebp ; call rsi
0x00002aaaaadeaab0 : adc ebp, ebx ; ret 0x1f0f
0x00002aaaaad5bb24 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaaddd1bc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x00002aaaaae0face : adc ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaacffb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00002aaaaad4ea4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00002aaaaacf7301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad6bebd : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad7ea54 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00002aaaaadb6375 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x00002aaaaad80129 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x00002aaaaae00290 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaad75034 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00002aaaaad75054 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00002aaaaad75074 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00002aaaaad74ebe : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaadae2fa : adc ecx, edx ; call 0x42d03c47
0x00002aaaaadae34a : adc ecx, edx ; call 0x43d03c97
0x00002aaaaae6c7f1 : adc edi, eax ; call rsp
0x00002aaaaae6bef9 : adc edi, esi ; jmp rsp
0x00002aaaaae67b19 : adc edi, esp ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae576fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaae6bf49 : adc esi, edi ; call rsp
0x00002aaaaae7cfe1 : adc esi, edx ; jmp qword ptr [rcx]
0x00002aaaaad41e5a : adc esi, esi ; ret 0xf20
0x00002aaaaad26f67 : adc qword ptr [r11], 0x440f4c00 ; ret 0xf4c
0x00002aaaaae1ec32 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad722d6 : adc qword ptr [rcx + 7], rdi ; ret
0x00002aaaaad71f71 : adc qword ptr [rcx - 1], rbx ; ret
0x00002aaaaad71f35 : adc qword ptr [rcx - 1], rdi ; ret
0x00002aaaaad72438 : adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaad7cb3e : adc qword ptr [rsi + 3], rdx ; ret
0x00002aaaaad7cbdb : adc qword ptr [rsi + 7], rdx ; ret
0x00002aaaaad7c9dd : adc qword ptr [rsi - 1], rdx ; ret
0x00002aaaaad616d3 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaad41510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaae1b780 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad1b435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaad6175f : adc sil, r15b ; ret
0x00002aaaaae7f21b : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaae8e51b : add ah, ah ; add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00002aaaaae6aa27 : add ah, ah ; je 0x197a20 ; jmp rsp
0x00002aaaaae6aec7 : add ah, ah ; jmp rsp
0x00002aaaaae79a1b : add ah, ah ; mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaae6b68f : add ah, ah ; or al, 0xf6 ; call rsp
0x00002aaaaae8cf1b : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaae7aa1b : add ah, ah ; retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae6db4f : add ah, ah ; salc ; cli ; call rsp
0x00002aaaaae82efb : add ah, al ; add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae6b1bf : add ah, al ; and ah, dh ; call rsp
0x00002aaaaae7fffb : add ah, al ; and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7d4fb : add ah, al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae6b387 : add ah, al ; cmc ; jmp rsp
0x00002aaaaae71afb : add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaae7b8fb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae7df10 : add ah, al ; jmp qword ptr [rdi]
0x00002aaaaae84ffb : add ah, al ; jo 0x1b2008 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae87efb : add ah, al ; lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaae6bd2f : add ah, al ; out 0xf6, al ; call rsp
0x00002aaaaae6dc97 : add ah, al ; sti ; call rsp
0x00002aaaaae812fb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7f233 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaae735ab : add ah, bh ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaad7d06e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaad7d08e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaae82d33 : add ah, bh ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82c33 : add ah, bh ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaae82a33 : add ah, bh ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae678f5 : add ah, bh ; call qword ptr [rax]
0x00002aaaaae67811 : add ah, bh ; call rax
0x00002aaaaae677d1 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaad7d126 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad7d04d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaae83033 : add ah, bh ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae677f1 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaae83333 : add ah, bh ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b8 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae84a60 : add ah, bh ; ret
0x00002aaaaae6794c : add ah, bh ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae72f13 : add ah, bl ; add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff23
0x00002aaaaae82113 : add ah, bl ; add dword ptr [r8], eax ; call 0x241ae64d
0x00002aaaaae82f13 : add ah, bl ; add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae80013 : add ah, bl ; and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7d513 : add ah, bl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae81913 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaae81d13 : add ah, bl ; cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae85013 : add ah, bl ; jo 0x1b2020 ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae76a13 : add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a10 ; call qword ptr [rcx]
0x00002aaaaae763e7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00002aaaaae765b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00002aaaaad7cb3a : add ah, byte ptr [rdx - 0xf] ; jl 0xa9b8f ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaae67c14 : add ah, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc61]
0x00002aaaaad74ebb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaae7f123 : add ah, ch ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaae82e23 : add ah, ch ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae84f23 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae76f23 : add ah, ch ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaae83623 : add ah, ch ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ad ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6fc23 : add ah, ch ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaae8dd23 : add ah, ch ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaae78b23 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae86003 : add ah, cl ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaae82503 : add ah, cl ; add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaae82c03 : add ah, cl ; add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae7b803 : add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaae7c503 : add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaae79103 : add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae83003 : add ah, cl ; push rax ; add dword ptr [rax], eax ; jno 0x1b0008 ; jmp qword ptr [rcx]
0x00002aaaaae70803 : add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaae7d603 : add ah, cl ; test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaae81003 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8272b : add ah, dh ; add dword ptr [r8], r8d ; loopne 0x1af78d ; cmc ; call qword ptr [rdx]
0x00002aaaaae80e2b : add ah, dh ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae8162b : add ah, dh ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82f2b : add ah, dh ; add qword ptr [r8], r8 ; jo 0x1aff30 ; jmp qword ptr [rcx]
0x00002aaaaae6d59f : add ah, dh ; cli ; jmp rsp
0x00002aaaaae7d52b : add ah, dh ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae81d2b : add ah, dh ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6ce3f : add ah, dh ; cmp edi, ecx ; jmp rsp
0x00002aaaaae6a2af : add ah, dh ; fldz ; call rsp
0x00002aaaaae6a8df : add ah, dh ; int1 ; call rsp
0x00002aaaaae8502b : add ah, dh ; jo 0x1b2038 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae78c2b : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c29 ; jmp qword ptr [rcx]
0x00002aaaaae6d74f : add ah, dh ; push rdi ; cli ; jmp rsp
0x00002aaaaae6ddd7 : add ah, dh ; ret 0xfffd
0x00002aaaaae72b0b : add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb1b
0x00002aaaaae73883 : add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaae7040b : add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jle 0x19d404 ; jmp qword ptr [rsi]
0x00002aaaaae7d40b : add ah, dl ; hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae6c517 : add ah, dl ; in al, -9 ; jmp qword ptr [rbx + rax*8]
0x00002aaaaae6d8a7 : add ah, dl ; jg 0x19a8a9 ; call rsp
0x00002aaaaae6a217 : add ah, dl ; jl 0x19720d ; jmp rsp
0x00002aaaaae6d0e7 : add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaae6bc5f : add ah, dl ; mov bl, 0xf6 ; jmp rsp
0x00002aaaaae6a59f : add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaae69d6f : add ah, dl ; or esi, ebp ; call rsp
0x00002aaaaae6a0c7 : add ah, dl ; out dx, al ; call rsp
0x00002aaaaae6d7ff : add ah, dl ; pop rbp ; cli ; call rsp
0x00002aaaaae8310b : add ah, dl ; push rcx ; add dword ptr [rax], eax ; loopne 0x1b018c ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fc0b : add ah, dl ; sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaae80c0b : add ah, dl ; sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaae69c37 : add ah, dl ; xlatb ; in eax, dx ; inc esp ; ret 0
0x00002aaaaad1e2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaadc3713 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad1a463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaadf94e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadf4940 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaae179cd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1c519 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae179f1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae15e3f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaacde320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaadd5aa2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00002aaaaad7e3f3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaadaabdc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaae06ecb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad3d96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae8f499 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaacf9e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaad392b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaad5336f : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaade12f5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00002aaaaad13f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x00002aaaaad51e06 : add al, 0 ; add dh, dh ; ret
0x00002aaaaadf4d93 : add al, 0 ; add dh, dh ; ret 0xf04
0x00002aaaaade86ff : add al, 0 ; cmove rax, rdx ; ret
0x00002aaaaad70ee4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaae149b8 : add al, 0 ; mov edx, 0x190 ; call 0x2dc49
0x00002aaaaad70e54 : add al, 0 ; mov rax, rdi ; ret
0x00002aaaaad18afa : add al, 0x10 ; add bl, dh ; ret
0x00002aaaaae02750 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaad00a69 : add al, 0x10 ; ret
0x00002aaaaaddd0e5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaaddd1bb : add al, 0x11 ; ret
0x00002aaaaad7d0bd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaad21619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaad71a01 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00002aaaaad5d57a : add al, 0x17 ; sub eax, ecx ; ret
0x00002aaaaae6b330 : add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaae0cd8a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaade9bcd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00002aaaaad9c15f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x00002aaaaad69130 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaad91635 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe606
0x00002aaaaad9e6c1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaadc8d5d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00002aaaaaddc7b4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00002aaaaaddc815 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00002aaaaad1998a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaad5b9e1 : add al, 0x24 ; call qword ptr [rdx]
0x00002aaaaad7eac3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacf3bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaadd9823 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaad9f675 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaacf384c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaad08321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaad026d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaad20397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaacfd21d : add al, 0x29 ; ret 0x8941
0x00002aaaaad7c069 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c07b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaad5fa3e : add al, 0x31 ; ret
0x00002aaaaadf4624 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae7163c : add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaad5f93a : add al, 0x37 ; ret
0x00002aaaaadc803d : add al, 0x39 ; ret
0x00002aaaaada9def : add al, 0x39 ; ret 0xec7f
0x00002aaaaad45d5f : add al, 0x3a ; ret
0x00002aaaaad697a4 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00002aaaaad2f464 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c439
0x00002aaaaad7ed66 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaacf38f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00002aaaaadc8073 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad70ef5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaad70f05 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad7a60b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaad70ea5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaadf659e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00002aaaaae3d459 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaae3d46b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00002aaaaad45163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaad435c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad450a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaae2d8ba : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad440cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaad44272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaad44f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad70e65 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad70df5 : add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaad5dd14 : add al, 0x48 ; xor eax, eax ; ret
0x00002aaaaad7f570 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00002aaaaae82e3c : add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaade6e34 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaacf2c05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaae3d467 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaad74f4c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00002aaaaad0812d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaae8d157 : add al, 0x66 ; ret
0x00002aaaaae796b7 : add al, 0x71 ; ret
0x00002aaaaacfcae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x00002aaaaad00a7d : add al, 0x72 ; or bl, dh ; ret
0x00002aaaaae6a1a8 : add al, 0x72 ; out dx, al ; call rsp
0x00002aaaaae7b1a7 : add al, 0x72 ; ret
0x00002aaaaad548d4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00002aaaaad7ed64 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaada2054 : add al, 0x75 ; jae 0xcf070 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaadb755a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaad7e4a2 : add al, 0x75 ; ret
0x00002aaaaae69920 : add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaad58987 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaadcd9b2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00002aaaaad00e30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00002aaaaad00e50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x00002aaaaad00d90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00002aaaaad00e10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00002aaaaad00d30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x00002aaaaad00dd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x00002aaaaad00d70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x00002aaaaad00db0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x00002aaaaad00ed0 : add al, 0x78 ; and eax, 1 ; ret
0x00002aaaaad00d50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x00002aaaaad00df0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00002aaaaad00d10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00002aaaaae6a1f8 : add al, 0x78 ; out dx, al ; call rsp
0x00002aaaaae68400 : add al, 0x79 ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaae76577 : add al, 0x79 ; ret
0x00002aaaaae795df : add al, 0x7b ; ret
0x00002aaaaae4667b : add al, 0x7e ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b1
0x00002aaaaad36886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00002aaaaad7d213 : add al, 0x81 ; je 0xaa1f5 ; ret
0x00002aaaaae190fb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaad7d20f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f9 ; ret
0x00002aaaaae1a9d3 : add al, 0x81 ; sub eax, edx ; ret
0x00002aaaaad70d19 : add al, 0x82 ; add r10, rax ; jmp r10
0x00002aaaaad956aa : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00002aaaaacf40b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaad7d1c8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b8 ; ret
0x00002aaaaad640c7 : add al, 0x82 ; sub eax, ecx ; ret
0x00002aaaaacf9483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaad489b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x00002aaaaad4af04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00002aaaaad808bb : add al, 0x83 ; ret 0x4101
0x00002aaaaadae3e2 : add al, 0x83 ; ret 0x4801
0x00002aaaaad08d5b : add al, 0x83 ; ret 0xf701
0x00002aaaaadeaaa9 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7e
0x00002aaaaadb0ed8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaad7d262 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaa260 ; ret
0x00002aaaaad7ed9e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00002aaaaad7ff19 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00002aaaaad01bb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x00002aaaaad3f1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaad3f303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00002aaaaada6403 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00002aaaaad7ea6e : add al, 0x87 ; test r8d, r8d ; jne 0xaba48 ; ret
0x00002aaaaae3d456 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaad74f2b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaad0c18a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad70d97 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00002aaaaad286a1 : add al, 0x89 ; ret 0x2944
0x00002aaaaad70de2 : add al, 0x8a ; add r10, rax ; jmp r10
0x00002aaaaad7d1cb : add al, 0x8a ; je 0xaa1b5 ; ret
0x00002aaaaad74f14 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00002aaaaadc8f07 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaad7ea58 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00002aaaaad27d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00002aaaaadb0e92 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaad1039d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaae7a2b0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00002aaaaae793b6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaae8da1b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaad018ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x00002aaaaad1e604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x00002aaaaae6acc8 : add al, 0x90 ; jmp rsp
0x00002aaaaae6a5e8 : add al, 0x92 ; out dx, eax ; jmp rsp
0x00002aaaaaddcf97 : add al, 0xa ; ret
0x00002aaaaae69720 : add al, 0xa6 ; jmp 0x196726
0x00002aaaaaddba34 : add al, 0xa8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaacd5315 : add al, 0xaa ; ret
0x00002aaaaad00a66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaae0e5a3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad010b8 : add al, 0xb8 ; ret
0x00002aaaaad7d019 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x00002aaaaae001c9 : add al, 0xc2 ; jmp rax
0x00002aaaaad7ec8b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad08f24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00002aaaaad99dd3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae6d2a8 : add al, 0xd1 ; stc ; call rsp
0x00002aaaaad08f67 : add al, 0xd7 ; xor eax, eax ; ret
0x00002aaaaad1b38d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483e9
0x00002aaaaad1cf6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49fc9
0x00002aaaaade17d8 : add al, 0xe8 ; ret 0xf110
0x00002aaaaae69149 : add al, 0xea ; call rsp
0x00002aaaaad00d35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00002aaaaae1720d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00002aaaaae1ca7b : add al, 0xf ; sub rax, r8 ; ret
0x00002aaaaadaa099 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaad393b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaadc30ca : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaada9bb7 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaad7df75 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00002aaaaad78a2b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaadb6a03 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaadcff29 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaadb6379 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00002aaaaad1b1c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaacfe020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00002aaaaad1b1cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae5a4a5 : add al, 0xf2 ; call rax
0x00002aaaaae5a4a1 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaae5a485 : add al, 0xf2 ; inc eax ; add al, 0xf2 ; jmp rax
0x00002aaaaae5a471 : add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaae5a489 : add al, 0xf2 ; jmp rax
0x00002aaaaae2dc23 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaad3e45b : add al, 0xf3 ; ret
0x00002aaaaad61839 : add al, 0xf6 ; ret 0x7408
0x00002aaaaae67225 : add al, 0xfb ; jmp rax
0x00002aaaaad0233d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaadf5cdb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaad7dfa8 : add al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaae7e3d5 : add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaae6a615 : add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaad2fb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaada8043 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3e419 : add al, 1 ; ret
0x00002aaaaad3e47a : add al, 1 ; xor eax, eax ; ret
0x00002aaaaae7644f : add al, 2 ; hlt ; ret
0x00002aaaaae7edff : add al, 2 ; jle 0x1abe11 ; ret
0x00002aaaaad718ec : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaae41b47 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaacd34b7 : add al, 4 ; ret 0x6080
0x00002aaaaadaadd2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00002aaaaad78b78 : add al, 7 ; add byte ptr [rax], al ; ret
0x00002aaaaad5bf4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaada75b1 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45e0
0x00002aaaaad68bf8 : add al, 7 ; ret
0x00002aaaaad70fcf : add al, 7 ; test r8b, r8b ; jne 0x9dfb8 ; ret
0x00002aaaaad4a403 : add al, 8 ; add byte ptr [rax], al ; ret
0x00002aaaaae6b188 : add al, 8 ; hlt ; call rsp
0x00002aaaaad71b6f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaae7d06f : add al, ah ; adc al, 0xf2 ; call qword ptr [rdx]
0x00002aaaaae797cf : add al, ah ; add edi, ebp ; jmp rsi
0x00002aaaaae84fff : add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae8b7bf : add al, ah ; fdiv st(7) ; jmp rdi
0x00002aaaaae6f07f : add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaae8310f : add al, ah ; jb 0x1b010c ; jmp qword ptr [rcx]
0x00002aaaaae7036f : add al, ah ; jl 0x19d360 ; call qword ptr [rcx]
0x00002aaaaae78d7f : add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00002aaaaae78daf : add al, ah ; mov dh, ch ; jmp rbx
0x00002aaaaae7fdbf : add al, ah ; nop ; hlt ; call qword ptr [rcx]
0x00002aaaaae8eac9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaae8eb21 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaae82ecf : add al, ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8272f : add al, ah ; push rbx ; cmc ; call qword ptr [rdx]
0x00002aaaaacdbd4f : add al, ah ; ret
0x00002aaaaae7fc0f : add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaae71aff : add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaae8cf1f : add al, al ; adc bh, al ; jmp qword ptr [rbx]
0x00002aaaaae7717f : add al, al ; add bh, ch ; jmp rsp
0x00002aaaaae7d40f : add al, al ; and dh, dl ; jmp qword ptr [rcx]
0x00002aaaaae84dbf : add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae82b8f : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8304f : add al, al ; jno 0x1b004c ; jmp qword ptr [rcx]
0x00002aaaaae709bf : add al, al ; mov ebp, ecx ; jmp rsp
0x00002aaaaae82ddf : add al, al ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae5945f : add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaae8295f : add al, al ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae87acf : add al, al ; ret
0x00002aaaaae4f827 : add al, al ; sldt word ptr [rax] ; ret
0x00002aaaaae7830f : add al, al ; sub esi, ebp ; jmp qword ptr [rdi]
0x00002aaaaae85017 : add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae58517 : add al, bh ; loope 0x18551e ; jmp qword ptr [rdi]
0x00002aaaaae58597 : add al, bh ; loope 0x18559e ; jmp qword ptr [rdi]
0x00002aaaaae58617 : add al, bh ; loope 0x18561e ; jmp qword ptr [rdi]
0x00002aaaaae70997 : add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaae82ee7 : add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8c5a7 : add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaae710b7 : add al, bh ; ret
0x00002aaaaae84ec7 : add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae7d1c7 : add al, bh ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaae84dd7 : add al, bl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae7f127 : add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaae7f167 : add al, bl ; fpatan ; call qword ptr [rsi]
0x00002aaaaae7f1a7 : add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae831b7 : add al, bl ; jae 0x1b01b4 ; jmp qword ptr [rcx]
0x00002aaaaae76847 : add al, bl ; jns 0x1a383c ; jmp qword ptr [rcx]
0x00002aaaaae76f27 : add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaad78e7b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaae81147 : add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaae82df7 : add al, bl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82977 : add al, bl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae87af7 : add al, bl ; ret
0x00002aaaaae817a7 : add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae1fb32 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad5152c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaae6d70d : add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaae6d855 : add al, byte ptr [r8] ; xor al, 0x66 ; cli ; call rsp
0x00002aaaaad5beb1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00002aaaaae6d556 : add al, byte ptr [rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaae6d2a6 : add al, byte ptr [rax] ; add al, 0xd1 ; stc ; call rsp
0x00002aaaaad00e87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x00002aaaaad5223d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaadd9826 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x00002aaaaad60d43 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaad47155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaae1041d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaad5a552 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaad56731 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad509c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00002aaaaada9bbb : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaad60a39 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00002aaaaaddc3ae : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad67a8b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaade096b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217f
0x00002aaaaad582a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaacf3d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad0e4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae17b6d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a791 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaada9ba5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaae17b91 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaacd93ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae051ff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00002aaaaae07c7f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaae073df : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00002aaaaad3280d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x00002aaaaad3a494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x00002aaaaadd4c92 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00002aaaaad9f222 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaae0a679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaadd5f12 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaadd5c85 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaadd5b51 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaadd5ac9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaae0cd8c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaaddba45 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaad7e3d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaad9a52a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad44910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad09de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaadb811a : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00002aaaaad8bee9 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00002aaaaadb9a23 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00002aaaaae44354 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00002aaaaadaa65e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaad19076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaad3178e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaadc5d13 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad54315 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaad5152d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaad532a1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaadf7ade : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaacf7c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaacf726c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaae8e76e : add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaadb312d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaae6d3de : add al, byte ptr [rax] ; add r15d, edx ; call rsp
0x00002aaaaad28930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00002aaaaae6d4f6 : add al, byte ptr [rax] ; and al, 0x22 ; cli ; call rsp
0x00002aaaaae6cf0e : add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x00002aaaaae6d70e : add al, byte ptr [rax] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaae6da5e : add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaae8e346 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaae8e466 : add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaae6d59e : add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x00002aaaaae6ce3e : add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaae6d74e : add al, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaae6db4e : add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x00002aaaaae6cf9e : add al, byte ptr [rax] ; je 0x19a00c ; stc ; call rsp
0x00002aaaaae6d476 : add al, byte ptr [rax] ; je 0x19a498 ; cli ; jmp rsp
0x00002aaaaae6d92e : add al, byte ptr [rax] ; je 0x19a8d7 ; cli ; call rsp
0x00002aaaaadf61f2 : add al, byte ptr [rax] ; jne 0x123246 ; mov eax, r8d ; ret
0x00002aaaaad70ec5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaae6d1d6 : add al, byte ptr [rax] ; mov dil, 0xf9 ; call rsp
0x00002aaaaad70e35 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x00002aaaaae4085b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaadef4e9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadd8242 : add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaae6d6de : add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x00002aaaaae6da66 : add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaae6d3c6 : add al, byte ptr [rax] ; push rsp ; sti ; stc ; jmp rsp
0x00002aaaaae8e887 : add al, byte ptr [rax] ; ret
0x00002aaaaae8e8a7 : add al, byte ptr [rax] ; ret 0x503
0x00002aaaaae6d5fe : add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaae6dade : add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaae6d266 : add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaae6cf36 : add al, byte ptr [rax] ; xchg eax, esp ; pop rax ; stc ; jmp rsp
0x00002aaaaae6d0ce : add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x00002aaaaae6d856 : add al, byte ptr [rax] ; xor al, 0x66 ; cli ; call rsp
0x00002aaaaad6c749 : add al, byte ptr [rbp + 0x38] ; ret
0x00002aaaaae68140 : add al, byte ptr [rbx - 0x7d6d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaae80b89 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00002aaaaade74ee : add al, byte ptr [rcx + 0x39] ; ret
0x00002aaaaae6f510 : add al, byte ptr [rcx + 0xa] ; ret
0x00002aaaaad08d6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaadbe0ff : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00002aaaaad2d6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaadae76d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00002aaaaade3ab5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae6a59d : add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaae7e1bd : add al, byte ptr [rcx] ; add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x00002aaaaadf5d18 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaadf5d37 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00002aaaaae74410 : add al, byte ptr [rdi + 0xa] ; ret
0x00002aaaaae7221e : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaae74c8d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00002aaaaae74a65 : add al, byte ptr [rdx] ; push rsi ; ret
0x00002aaaaae79b05 : add al, byte ptr [rdx] ; ret
0x00002aaaaae87fed : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x00002aaaaad41575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00002aaaaae7a2b4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00002aaaaad78c7a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00002aaaaae6d555 : add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaae7d487 : add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaad4b0c2 : add al, ch ; clc ; ret
0x00002aaaaae8b9d7 : add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaadccc8f : add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae79b87 : add al, ch ; frndint ; call qword ptr [rax]
0x00002aaaaae0f11e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae82bd7 : add al, ch ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae76a17 : add al, ch ; jg 0x1a3a0c ; call qword ptr [rcx]
0x00002aaaaae83597 : add al, ch ; jp 0x1b0594 ; jmp qword ptr [rcx]
0x00002aaaaad4234a : add al, ch ; les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00002aaaaae465fd : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x00002aaaaad06542 : add al, ch ; pop rax ; ret
0x00002aaaaae03243 : add al, ch ; push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad2f487 : add al, ch ; ret
0x00002aaaaad901f8 : add al, ch ; ret 0x572
0x00002aaaaad52ef8 : add al, ch ; ret 0x945
0x00002aaaaad42648 : add al, ch ; ret 0xa1
0x00002aaaaadfe458 : add al, ch ; ret 0xcd
0x00002aaaaacfdca8 : add al, ch ; ret 0xea
0x00002aaaaae0b958 : add al, ch ; ret 0xef5c
0x00002aaaaadc5828 : add al, ch ; ret 0xf2cf
0x00002aaaaad7fb78 : add al, ch ; ret 0xf810
0x00002aaaaad17b78 : add al, ch ; ret 0xfe90
0x00002aaaaadf66f8 : add al, ch ; ret 0xff0d
0x00002aaaaad4976d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaadc66ad : add al, ch ; std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae82117 : add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaae7a157 : add al, ch ; sub edx, edi ; jmp qword ptr [rdi]
0x00002aaaaadb4005 : add al, ch ; xor eax, 0x83fff4cc ; call qword ptr [rax]
0x00002aaaaae78a77 : add al, cl ; jo 0x1a5a6d ; jmp qword ptr [rdx]
0x00002aaaaae7fda7 : add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8d827 : add al, cl ; xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00002aaaaae84def : add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae7f1bf : add al, dh ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae75caf : add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaae78a5f : add al, dh ; insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00002aaaaae831cf : add al, dh ; jae 0x1b01cc ; jmp qword ptr [rcx]
0x00002aaaaae735af : add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaacdf427 : add al, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae82e0f : add al, dh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae817bf : add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8013f : add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7ffff : add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae5a38f : add al, dl ; cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaae805af : add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82bbf : add al, dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae79a1f : add al, dl ; jne 0x1a6a16 ; jmp qword ptr [rax]
0x00002aaaaae8357f : add al, dl ; jp 0x1b057c ; jmp qword ptr [rcx]
0x00002aaaaae7a07f : add al, dl ; jrcxz 0x1a7076 ; call rsp
0x00002aaaaae76daf : add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaae7765f : add al, dl ; ret 0xffed
0x00002aaaaae67899 : add bh, ah ; call rax
0x00002aaaaae677d5 : add bh, ah ; jmp rax
0x00002aaaaae678f9 : add bh, ah ; push rax ; add edi, esp ; jmp rax
0x00002aaaaadfd3c2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaacf48ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaadbffed : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaae4754f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaae132d9 : add bh, bh ; and eax, 0x281660 ; ret
0x00002aaaaae8e9e4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaae0466c : add bh, bh ; loope 0x131605 ; ret
0x00002aaaaad4d3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaad8d63a : add bh, bh ; ret
0x00002aaaaae6721d : add bh, bl ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaadc8cf2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf5d09 ; ret
0x00002aaaaad1d080 : add bh, byte ptr [rax + 1] ; ret
0x00002aaaaad4b962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x00002aaaaad0845b : add bh, byte ptr [rax - 1] ; ret
0x00002aaaaae74f0c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x00002aaaaae44722 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00002aaaaaddc2af : add bh, byte ptr [rcx] ; ret
0x00002aaaaae7ee00 : add bh, byte ptr [rsi + 0xa] ; ret
0x00002aaaaae5a2e0 : add bh, ch ; int1 ; call qword ptr [rax]
0x00002aaaaae77181 : add bh, ch ; jmp rsp
0x00002aaaaae8f497 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaada6c45 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaada96bd : add bh, dh ; ret
0x00002aaaaad6f941 : add bh, dh ; ret 0
0x00002aaaaad7e0e9 : add bl, al ; lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00002aaaaad7eccd : add bl, al ; lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaad6102d : add bl, al ; lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaadf5d2e : add bl, al ; mov eax, 0x100 ; ret
0x00002aaaaadf5d34 : add bl, al ; mov eax, 0x102 ; ret
0x00002aaaaada0e8c : add bl, al ; mov eax, 0xffffffff ; ret
0x00002aaaaad7fef1 : add bl, al ; mov eax, 2 ; ret
0x00002aaaaadab9dd : add bl, al ; mov eax, 3 ; ret
0x00002aaaaadab9d7 : add bl, al ; mov eax, 4 ; ret
0x00002aaaaad59bf4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00002aaaaad488bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad9fe5c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00002aaaaadce73d : add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaae04871 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaae1590a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaad5ba2c : add bl, al ; ret
0x00002aaaaae0755e : add bl, al ; xor eax, eax ; ret
0x00002aaaaae5c917 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaae67211 : add bl, bh ; jmp rax
0x00002aaaaae7c207 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaae6ff9d : add bl, byte ptr [rax + 0xa] ; ret
0x00002aaaaae84c55 : add bl, byte ptr [rbp + 0xa] ; ret
0x00002aaaaad465aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaae74a37 : add bl, byte ptr [rcx + 0xa] ; ret
0x00002aaaaae87d58 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00002aaaaae7c2c5 : add bl, byte ptr [rdx + 0xa] ; ret
0x00002aaaaae8f167 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00002aaaaad4e5dd : add bl, ch ; fucomp st(0) ; ret
0x00002aaaaadf8e84 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x125e59
0x00002aaaaad9163a : add bl, ch ; ret 0x1f0f
0x00002aaaaadf8e8b : add bl, ch ; ret 0xb8
0x00002aaaaad7922f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaad7923f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaad07cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaacf3582 : add bl, dh ; ret
0x00002aaaaad060be : add bl, sil ; ret
0x00002aaaaae7c44b : add byte ptr [0xffffffffe8b00000], dl ; int1 ; call qword ptr [rbx]
0x00002aaaaad9ffc7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad24fe7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67f9
0x00002aaaaacf6de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00002aaaaae72b0d : add byte ptr [r8], al ; adc byte ptr [rbx], dh ; jmp 0x19fb19
0x00002aaaaae72abd : add byte ptr [r8], al ; xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaad09e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00002aaaaae72e5d : add byte ptr [r8], r8b ; nop ; pop rsp ; jmp 0x19fe69
0x00002aaaaae72f15 : add byte ptr [r8], r8b ; pop rdi ; jmp 0x19ff21
0x00002aaaaae7d0df : add byte ptr [rax + 0x15], dh ; jmp qword ptr [rcx]
0x00002aaaaad59bef : add byte ptr [rax + 0x16], bh ; ret
0x00002aaaaae8d2b7 : add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00002aaaaae8eb1c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bbb36 ; ret 0xa
0x00002aaaaae8eac4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bbadf ; ret 0xb
0x00002aaaaae78fb7 : add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaae81c67 : add byte ptr [rax + 0x1c], cl ; cmc ; call qword ptr [rdx]
0x00002aaaaae81d2f : add byte ptr [rax + 0x1e], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81def : add byte ptr [rax + 0x1f], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad07bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00002aaaaae7d547 : add byte ptr [rax + 0x24], cl ; jmp qword ptr [rcx]
0x00002aaaaae7b807 : add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaae7b787 : add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae44e8f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad05857 : add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaadb5e52 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00002aaaaad93954 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00002aaaaacfc44a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00002aaaaad51dc5 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaacfb552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00002aaaaae7d687 : add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00002aaaaae7b8ff : add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae0218d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00002aaaaae72abf : add byte ptr [rax + 0x32], al ; jmp 0x19fac7
0x00002aaaaae78787 : add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaad18b6c : add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaadc38bc : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x00002aaaaad509d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaad900d3 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00002aaaaacfedbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaad50997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00002aaaaade76f1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00002aaaaade77b0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00002aaaaad5ab8b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae78f27 : add byte ptr [rax + 0x3e], ch ; cli ; call qword ptr [rax]
0x00002aaaaae66ab5 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaae71def : add byte ptr [rax + 0x44], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaad48f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaae8d98f : add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00002aaaaae82507 : add byte ptr [rax + 0x4b], bl ; cmc ; jmp rax
0x00002aaaaae8dd27 : add byte ptr [rax + 0x54], cl ; clc ; jmp qword ptr [rcx]
0x00002aaaaae6fdd7 : add byte ptr [rax + 0x56], bh ; jmp 0x1b90e3
0x00002aaaaad43675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaae761f7 : add byte ptr [rax + 0x59], ch ; in eax, dx ; call qword ptr [rax]
0x00002aaaaacf292d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00002aaaaae82a07 : add byte ptr [rax + 0x5b], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad410d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaae829ef : add byte ptr [rax + 0x5b], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadd9828 : add byte ptr [rax + 0x5f], bl ; call rax
0x00002aaaaae72f17 : add byte ptr [rax + 0x5f], cl ; jmp 0x19ff1f
0x00002aaaaad01c94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x00002aaaaad2ef51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaad36e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00002aaaaad57737 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00002aaaaad36883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x00002aaaaad3ec83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaad3f94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00002aaaaad018ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x00002aaaaad1e601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00002aaaaad7d016 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00002aaaaadc527b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaad06296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00002aaaaad1e2da : add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaad3ed6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00002aaaaade5485 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaad8527f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00002aaaaad45d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaad1917d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad1e64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaad3fa9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00002aaaaae7be47 : add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00002aaaaad9f68f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00002aaaaad9f6af : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00002aaaaad9f69f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00002aaaaad9f6bf : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00002aaaaad9f67f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00002aaaaae82d67 : add byte ptr [rax + 0x6e], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad9f67e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00002aaaaae82d4f : add byte ptr [rax + 0x6e], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8e463 : add byte ptr [rax + 0x6f980002], ch ; clc ; call rcx
0x00002aaaaad9f8cf : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00002aaaaae6f3c7 : add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaae82f2f : add byte ptr [rax + 0x70], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83007 : add byte ptr [rax + 0x71], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae830c7 : add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae830af : add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83187 : add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7998f : add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00002aaaaad5beaf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00002aaaaae8331f : add byte ptr [rax + 0x76], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83337 : add byte ptr [rax + 0x76], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad44323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad434f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaae833e7 : add byte ptr [rax + 0x78], bl ; cmc ; jmp qword ptr [rbx]
0x00002aaaaad7977f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00002aaaaae8360f : add byte ptr [rax + 0x7b], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83627 : add byte ptr [rax + 0x7b], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae835f7 : add byte ptr [rax + 0x7b], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6e5ff : add byte ptr [rax + 0x7b], dl ; std ; jmp qword ptr [rdx]
0x00002aaaaae769a7 : add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaad9fe57 : add byte ptr [rax + 0x7e], bh ; ret
0x00002aaaaae78c2f : add byte ptr [rax + 0x7e], dl ; out dx, al ; jmp qword ptr [rcx]
0x00002aaaaad9fdaa : add byte ptr [rax + 0x7f], bh ; ret
0x00002aaaaad4082a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad490aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad48b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad8e7bf : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00002aaaaae7f44f : add byte ptr [rax + 0xd], dl ; hlt ; jmp rcx
0x00002aaaaadd9bff : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00002aaaaad4418c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad491ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad00dd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00002aaaaad5f8a5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaad9b9ec : add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaad4bcdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00002aaaaad60a9b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00002aaaaae12c64 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00002aaaaade141b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00002aaaaad247bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaadcbb16 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00002aaaaad904b6 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00002aaaaad615eb : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaadcba8c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaacf8b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaacf8397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00002aaaaacfb094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00002aaaaad9e3cd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00002aaaaadf8adc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00002aaaaad9fe6f : add byte ptr [rax + 0xfc17], bh ; ret
0x00002aaaaae7ff9b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7ffb3 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadfd45f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaad1d0b5 : add byte ptr [rax + 1], bh ; ret
0x00002aaaaad60d45 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaad92502 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x00002aaaaad0f036 : add byte ptr [rax + 1], cl ; ret
0x00002aaaaad0ef0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00002aaaaad8da4c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaad1c510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaad4a3ee : add byte ptr [rax + 1], dil ; ret
0x00002aaaaae0049f : add byte ptr [rax + 2], bh ; ret
0x00002aaaaada0046 : add byte ptr [rax + 7], bh ; ret
0x00002aaaaadbedd2 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00002aaaaadbdf38 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x00002aaaaae4e7cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00002aaaaae7b4e3 : add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaae79fa3 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaad78dfc : add byte ptr [rax + rax], 0 ; ret
0x00002aaaaadc3712 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaacde31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaad3d96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaade86fe : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x00002aaaaad54b3b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaad55339 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaace07af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaae7a17f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00002aaaaae7a1c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaad7e9b5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaae78783 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae69a67 : add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaae837ab : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00002aaaaae73763 : add byte ptr [rax + rbx*2], ch ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaae7b783 : add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae69c3f : add byte ptr [rax + rbx*8], dl ; in eax, dx ; jmp rsp
0x00002aaaaad43a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd222d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00002aaaaad18ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaae6b187 : add byte ptr [rax + rcx], al ; hlt ; call rsp
0x00002aaaaae8e76b : add byte ptr [rax + rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaae6e74b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaae817a3 : add byte ptr [rax + rdi + 1], ch ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae817bb : add byte ptr [rax + rdi - 0x20fffff], al ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6a1f7 : add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x00002aaaaae797cb : add byte ptr [rax + rdi*4 + 0x1e00000], dl ; out dx, eax ; jmp rsi
0x00002aaaaae4f977 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00002aaaaae7efd3 : add byte ptr [rax + rdx - 0x4307ffff], bl ; jmp qword ptr [rdi]
0x00002aaaaae696f7 : add byte ptr [rax + rdx*2], ah ; jmp 0x1966ff
0x00002aaaaae82f73 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae72f93 : add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x4a], bl ; jmp 0x19ffa3
0x00002aaaaae6acc7 : add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaae80feb : add byte ptr [rax + rsi - 0x1cbfffff], dh ; hlt ; call qword ptr [rsi]
0x00002aaaaae84fb3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84f83 : add byte ptr [rax + rsi*2 + 1], cl ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84f53 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae78fe3 : add byte ptr [rax + rsi*4 + 0x54180000], ch ; cli ; call qword ptr [rax]
0x00002aaaaae78fb3 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaae7cfdb : add byte ptr [rax + rsi*8 + 0x13a00000], ah ; jmp qword ptr [rcx]
0x00002aaaaae813c7 : add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813af : add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae81367 : add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x00002aaaaae05fdd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00002aaaaae812ff : add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7c507 : add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaad032f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00002aaaaadc3884 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00002aaaaae7e1bf : add byte ptr [rax - 0x1b], al ; call qword ptr [rsi]
0x00002aaaaae80fef : add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00002aaaaae81007 : add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80e2f : add byte ptr [rax - 0x21], al ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80e47 : add byte ptr [rax - 0x21], bl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80e5f : add byte ptr [rax - 0x21], dh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae79107 : add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae7771f : add byte ptr [rax - 0x26], ah ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaae7f237 : add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaae7f21f : add byte ptr [rax - 0x26], dl ; jmp qword ptr [rcx]
0x00002aaaaae73a37 : add byte ptr [rax - 0x2c], cl ; in al, dx ; call qword ptr [rax]
0x00002aaaaad09081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaae73887 : add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaad06dc7 : add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaad59ace : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaad2f4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00002aaaaad47177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaad7e3df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad7e3bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad7e41f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad7e3cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad7e40f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad07f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00002aaaaae5a49f : add byte ptr [rax - 0x3f000dfc], dh ; add al, 0xf2 ; call rax
0x00002aaaaad249d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad07c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00002aaaaacf291b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00002aaaaad9c63f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00002aaaaae8439f : add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00002aaaaad0f932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaacdc1b7 : add byte ptr [rax - 0x4a], ah ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae72f97 : add byte ptr [rax - 0x4a], bl ; jmp 0x19ff9f
0x00002aaaaae84257 : add byte ptr [rax - 0x4b], ch ; cmc ; call rdi
0x00002aaaaae8063f : add byte ptr [rax - 0x58], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80657 : add byte ptr [rax - 0x58], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae83f0f : add byte ptr [rax - 0x59], ah ; cmc ; call rsi
0x00002aaaaae80547 : add byte ptr [rax - 0x5b], cl ; hlt ; call rax
0x00002aaaaadd1dcf : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00002aaaaae7ff9f : add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7ffb7 : add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7fe27 : add byte ptr [rax - 0x6f], ch ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae7fe0f : add byte ptr [rax - 0x6f], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae78f57 : add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00002aaaaae78f6f : add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaad0a373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaacf9b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaacf9af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaacffb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15f406 ; ret
0x00002aaaaacf392f : add byte ptr [rax - 0x73], cl ; add eax, 0x16b154 ; ret
0x00002aaaaacf393f : add byte ptr [rax - 0x73], cl ; add eax, 0x16d066 ; ret
0x00002aaaaadd073c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8854 ; ret
0x00002aaaaadd057c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8a14 ; ret
0x00002aaaaadfd4ff : add byte ptr [rax - 0x73], cl ; add eax, 0x61a3e ; ret
0x00002aaaaacf9b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaad7e9ff : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaad7ea0f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaadf2b1f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7bd5 ; call rax
0x00002aaaaad7e9ef : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaad53c4a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaad180dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00002aaaaad42218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x00002aaaaad4f748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x00002aaaaad4f2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x00002aaaaad4ef08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x00002aaaaad4dea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x00002aaaaad4dc38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00002aaaaad42511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x00002aaaaae001c6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00002aaaaadc2357 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaad0d721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaae13332 : add byte ptr [rax - 0x75], cl ; add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaae12d1f : add byte ptr [rax - 0x75], cl ; add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaad4fb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x347a09 ; ret
0x00002aaaaacfcc8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39ac59 ; ret
0x00002aaaaacf4a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68b9 ; ret
0x00002aaaaacf4a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a68d9 ; ret
0x00002aaaaadd025e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00002aaaaad46d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00002aaaaad56a2f : add byte ptr [rax - 0x75], cl ; je 0x83a5e ; call rax
0x00002aaaaad56a2e : add byte ptr [rax - 0x75], cl ; je 0x83a5f ; call rax
0x00002aaaaad4e706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaad45fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00002aaaaada1753 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00002aaaaadbe745 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x00002aaaaad47f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00002aaaaada966f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00002aaaaae0df57 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00002aaaaacf642f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaadd8687 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaadd867f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00002aaaaada3dc3 : add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00002aaaaae24e2f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad56d37 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00002aaaaad9bfdf : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaaddbdde : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00002aaaaad2ee57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367111 ; call rax
0x00002aaaaad2e801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x367767 ; call rax
0x00002aaaaad23049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x372f1f ; call rax
0x00002aaaaad203cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x375b9b ; call rax
0x00002aaaaae5b9cc : add byte ptr [rax - 0x761d000c], cl ; hlt ; jmp rdx
0x00002aaaaadf603f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaadd1864 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaadd1f42 : add byte ptr [rax - 0x76b80000], al ; ret
0x00002aaaaade9bcf : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00002aaaaae15a04 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaad5bb21 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad5b9de : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x00002aaaaae15c2f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaad06630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x00002aaaaad5b66e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaade887f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x00002aaaaad0d69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00002aaaaad4fb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaad4d361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad3dbce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaad56931 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4521c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaad06c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00002aaaaae154e9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaad718ee : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaad5a554 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaad90e76 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaadd6365 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00002aaaaadd6265 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00002aaaaad4319f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00002aaaaad90925 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece627b
0x00002aaaaad40cb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaad4b4b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00002aaaaadfc5ec : add byte ptr [rax - 0x77], cl ; out 0x4c, eax ; mov esi, esi ; call 0x558b9
0x00002aaaaad8fe76 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89169
0x00002aaaaad5afc5 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaae0075c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaadd5f21 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaadfeed3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaad49ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaade6b11 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x00002aaaaadb65cc : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x18 ; call 0x1f8a8
0x00002aaaaad56ff5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaacfdd35 : add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad509c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00002aaaaadfa45f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00002aaaaad564dc : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaad820a8 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00002aaaaad1a465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaad34cd7 : add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaad392e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaad41513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaad0713a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00002aaaaad19ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00002aaaaad9170f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x00002aaaaade9bd2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00002aaaaada9bbd : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaad02a5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaaddf7a3 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00002aaaaad528ef : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00002aaaaad252b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00002aaaaacff03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad8f190 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaad69500 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaacff537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaad420c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaad9bc36 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaadd090a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00002aaaaad9b38e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaadd0465 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x00002aaaaadd82e5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaad50b9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x00002aaaaad60a3b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00002aaaaad17dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad258df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x00002aaaaad18cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaadb301f : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00002aaaaad67645 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaad5b5b2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaad4d3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaaded0e4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaae159bc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaae0473c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131754 ; ret
0x00002aaaaae074ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344c4 ; ret
0x00002aaaaae074c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1344dc ; ret
0x00002aaaaae07cfc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d14 ; ret
0x00002aaaaae07d14 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d2c ; ret
0x00002aaaaae07d44 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134d5c ; ret
0x00002aaaaadeb76f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00002aaaaae68054 : add byte ptr [rax - 0x786f0004], cl ; cld ; jmp qword ptr [rax]
0x00002aaaaae8e5b7 : add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaad9c161 : add byte ptr [rax - 0x7af10000], al ; ret
0x00002aaaaad5dd0f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00002aaaaad45b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaad36690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaad75723 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaadd27f1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaae0b333 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaae837af : add byte ptr [rax - 0x7b], dh ; cmc ; jmp rax
0x00002aaaaae3f017 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00002aaaaad24fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x00002aaaaade096d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a217d
0x00002aaaaad55746 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad34cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaad3dd90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaad59d1d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaad00b94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad206d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaad21d8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaadc960f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaae469c6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1739d7 ; ret
0x00002aaaaad57032 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaacf3c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadc420a : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaadf8fdf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00002aaaaadf5254 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaad7c59f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaadd0ebf : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaadf4942 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaad55189 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaad9126f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00002aaaaadf4aca : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaacf4905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaadb7cff : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaae46dff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaaddb38a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00002aaaaad29a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00002aaaaad7147f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00002aaaaacf6de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00002aaaaacfc016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00002aaaaae1728f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad45a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaadaa05f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaad60f3f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaad60ecf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaad073b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaad820df : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaadab167 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00002aaaaacf72b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaadb90bf : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaad3f95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaad339ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaade0a67 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00002aaaaadf1b45 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaad602d0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae19273 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaada9ba7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaae172b3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaad07217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaad71aaf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaad5de4f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00002aaaaacfc7fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaad41e54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaad19067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00002aaaaad82367 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00002aaaaad8e9d9 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00002aaaaae092c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaad901f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaad52ef1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaadf66f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaad4486c : add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaae2b44b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaad421bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00002aaaaadeb99b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad06f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaad0848d : add byte ptr [rax - 1], bh ; ret
0x00002aaaaad098c6 : add byte ptr [rax - 1], dil ; ret
0x00002aaaaae67b68 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x00002aaaaae6d92f : add byte ptr [rax - 6], dh ; call rsp
0x00002aaaaae7c987 : add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00002aaaaad4b0bf : add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00002aaaaae092c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaad901f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaad52ef5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaadf66f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaad3e4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00002aaaaad46ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaad11a8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4d3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaae4754b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaae0e56b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaae2dc2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad6881b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaacfed53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad554e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad7d1d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad68b9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaad42e0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad092c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaad44033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaad50f32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaad88063 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaae40b61 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaacfe0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaad38892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x00002aaaaad4082b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad42dc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad434f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaad4418d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad44324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad48b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad48f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad490ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad491ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad494d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad49e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad4b083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaae7b4e5 : add byte ptr [rax], 0 ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaae69205 : add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaadf8e89 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00002aaaaae7488f : add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaae84e1f : add byte ptr [rax], ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae80c0f : add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaae8162f : add byte ptr [rax], ah ; hlt ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82aff : add byte ptr [rax], ah ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8307f : add byte ptr [rax], ah ; jb 0x1b007c ; jmp qword ptr [rcx]
0x00002aaaaae831ff : add byte ptr [rax], ah ; je 0x1b01fc ; jmp qword ptr [rcx]
0x00002aaaaae79d4f : add byte ptr [rax], ah ; jg 0x1a6d46 ; call qword ptr [rdi]
0x00002aaaaade0b5e : add byte ptr [rax], ah ; jmp 0x10db28
0x00002aaaaad00e14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00002aaaaae7887f : add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00002aaaaae82e3f : add byte ptr [rax], ah ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae829bf : add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaacdbb0f : add byte ptr [rax], ah ; ret 0xf
0x00002aaaaae7a17e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaae7a1c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaae7f24a : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaae6f94a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaae74ec2 : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae7fc4a : add byte ptr [rax], al ; adc al, 0x1d ; add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaae695ae : add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b8
0x00002aaaaae8184a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaae81e4a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaae82d4a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae84e4a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae69a66 : add byte ptr [rax], al ; adc al, 0xa8 ; in eax, dx ; call rsp
0x00002aaaaae79d4a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaae7aa4a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae69c3e : add byte ptr [rax], al ; adc al, 0xd8 ; in eax, dx ; jmp rsp
0x00002aaaaae7bd4a : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae7c44a : add byte ptr [rax], al ; adc al, 0xe5 ; add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaae69cf6 : add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaae6e74a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaacd37b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaae72bee : add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaae6720e : add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaae72b0e : add byte ptr [rax], al ; adc byte ptr [rbx], dh ; jmp 0x19fb18
0x00002aaaaae6f0ce : add byte ptr [rax], al ; adc byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x00002aaaaae6f8ee : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaae6f94e : add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaad08d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaae7bcfe : add byte ptr [rax], al ; adc byte ptr [rsi - 0xf], 0xff ; ret
0x00002aaaaae6f07a : add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaae7df0e : add byte ptr [rax], al ; add ah, al ; jmp qword ptr [rdi]
0x00002aaaaae7163a : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaae82e3a : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae6a1a6 : add byte ptr [rax], al ; add al, 0x72 ; out dx, al ; call rsp
0x00002aaaaae6991e : add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaae6a1f6 : add byte ptr [rax], al ; add al, 0x78 ; out dx, al ; call rsp
0x00002aaaaae6971e : add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196728
0x00002aaaaae5945d : add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaae58515 : add byte ptr [rax], al ; add al, bh ; loope 0x185520 ; jmp qword ptr [rdi]
0x00002aaaaae58595 : add byte ptr [rax], al ; add al, bh ; loope 0x1855a0 ; jmp qword ptr [rdi]
0x00002aaaaae58615 : add byte ptr [rax], al ; add al, bh ; loope 0x185620 ; jmp qword ptr [rdi]
0x00002aaaaae80b87 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00002aaaaade3ab3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4b0c0 : add byte ptr [rax], al ; add al, ch ; clc ; ret
0x00002aaaaad06540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x00002aaaaad2f485 : add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaad901f6 : add byte ptr [rax], al ; add al, ch ; ret 0x572
0x00002aaaaad52ef6 : add byte ptr [rax], al ; add al, ch ; ret 0x945
0x00002aaaaad42646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x00002aaaaadfe456 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x00002aaaaacfdca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00002aaaaae0b956 : add byte ptr [rax], al ; add al, ch ; ret 0xef5c
0x00002aaaaadc5826 : add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaad7fb76 : add byte ptr [rax], al ; add al, ch ; ret 0xf810
0x00002aaaaadf66f6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x00002aaaaae735ad : add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaae4754d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaae0466a : add byte ptr [rax], al ; add bh, bh ; loope 0x131607 ; ret
0x00002aaaaada96bb : add byte ptr [rax], al ; add bh, dh ; ret
0x00002aaaaada0e8a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00002aaaaad7feef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00002aaaaadab9db : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00002aaaaadab9d5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00002aaaaae07e0b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaad5ba2a : add byte ptr [rax], al ; add bl, al ; ret
0x00002aaaaae0755c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00002aaaaad4e5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaad91638 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00002aaaaad7922d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaad7923d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaacfed55 : add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaae150bb : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00002aaaaad28b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaadb5e50 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00002aaaaad93952 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00002aaaaacfedbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaae66ab3 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaad82a79 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaad45d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaad1e64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaad7977d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00002aaaaad9fda8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00002aaaaad9b9ea : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaae12c62 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00002aaaaade1419 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00002aaaaadd197f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaadcbb14 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00002aaaaadcba8a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaacf8b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaacf8395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00002aaaaacfb092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00002aaaaad9e3cb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00002aaaaad9fe6d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00002aaaaadfd45d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00002aaaaad1d0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00002aaaaad7d310 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00002aaaaad0f034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaad0ef0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x00002aaaaae004ad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00002aaaaada0044 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00002aaaaae7a17d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00002aaaaae7a1c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaad7e9b3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaad0f2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaad46eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaad07c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x00002aaaaacf2919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00002aaaaad9c63d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00002aaaaadd1dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00002aaaaad7e9fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaad7ea0d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaad7e9ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaadd025c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00002aaaaad4e704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaad45fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x00002aaaaacf642d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaada3dc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00002aaaaad9bfdd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaad4fb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaad90e74 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaadd6363 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00002aaaaadd6263 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00002aaaaad5afc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaae0075a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaadd5f1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaad49ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00002aaaaad11a20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad564da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaad820a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00002aaaaad34cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaadc248d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaacff03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaada0441 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaad420c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaadd82e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaad2a0dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad67643 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaad4d3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaad3668e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaae0b331 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaadc960d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaad050dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadf8fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00002aaaaad7c59d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaadd0f7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaae108fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaacf4903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaadb7cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00002aaaaae46dfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaaddb388 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00002aaaaad29a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00002aaaaacfc014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00002aaaaae18db3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaadaa05d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaad60f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaad60ecd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaad820dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaacf819d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaadb90bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaad339ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaade0a65 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00002aaaaae1a931 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae18ddd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaad8eb8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaad71aad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaacfcabe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaae2cc44 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaad06f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaad0848b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaae7a17c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00002aaaaae7a1c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaae6720c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaae5945b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; pop rcx ; out dx, al ; jmp rax
0x00002aaaaae58513 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185522 ; jmp qword ptr [rdi]
0x00002aaaaae58593 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1855a2 ; jmp qword ptr [rdi]
0x00002aaaaae58613 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x185622 ; jmp qword ptr [rdi]
0x00002aaaaad7923b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00002aaaaad488cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaad45d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00002aaaaad7e9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00002aaaaad7ea0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00002aaaaad7e9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00002aaaaad4fb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaad564d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaad34cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x30e8
0x00002aaaaad9239b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad2a0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad050db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad7c59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00002aaaaadd0f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00002aaaaae108fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaae46dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaadaa05b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaad60f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x00002aaaaad60ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00002aaaaad820db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00002aaaaacf819b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaadb90bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00002aaaaad3467b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00002aaaaad9249b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaae6720a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; sti ; jmp rax
0x00002aaaaadbcd9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaae912b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaaceb249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaacecf29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaacecf11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaacecf41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaacdc3a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaae58512 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185523 ; jmp qword ptr [rdi]
0x00002aaaaae58592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a3 ; jmp qword ptr [rdi]
0x00002aaaaae58612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185623 ; jmp qword ptr [rdi]
0x00002aaaaae6672a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaacecee2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaacd704a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae8efaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaace145a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaacf160a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaacee382 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaacd6fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00002aaaaae50652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaacd8ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaacd3548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00002aaaaace3e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x00002aaaaace07b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaae50b42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00002aaaaacde322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaacdb652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x00002aaaaacde532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaae91792 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaae91412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaacda602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaae8fb86 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaace0d9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaae8fa36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaacececa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaad7bffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaae6720b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaaceb24b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaad0d899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaadd3e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaad7c7db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaade253b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaae1726b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaad5c2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaae6672b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaad4d61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaacecf2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaacecf13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaacecf43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaade981b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00002aaaaad7e39c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00002aaaaad2ccfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaad20b0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaadd084c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaad4aeec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaae4754c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaacdc3a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaae15dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00002aaaaae5267c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaae5182c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00002aaaaae58514 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185521 ; jmp qword ptr [rdi]
0x00002aaaaae58594 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1855a1 ; jmp qword ptr [rdi]
0x00002aaaaae58614 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x185621 ; jmp qword ptr [rdi]
0x00002aaaaadcdc97 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00002aaaaaddaec7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00002aaaaada905d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00002aaaaadd00a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaad9e3ca : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00002aaaaad698d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00002aaaaae7a1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a71eb ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaad3384e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00002aaaaad91b61 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbad97
0x00002aaaaad2be19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaae42f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaae42f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaae42f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaae42fac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaae42fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaae42efc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaae42f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaae42f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaae42f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaae42f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaae42f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaae42f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaae42f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad7e9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaad7ea0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaad7e9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaae42eec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaae3b09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaad7977c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaad7817c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaad7914c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaad78e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaae3b0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaae3b0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaae3b0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaadc838c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaad7916c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaad7918c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad7917c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad9fe6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00002aaaaad4522c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaad1d0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaae004ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaae0e56c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaada965c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaadeaaab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7c
0x00002aaaaae2dc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaae3b10c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaae0e928 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad791ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaad791bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaadffdca : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad9ac9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad4fb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaad4fb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaae3b0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaad7915c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaad7922c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaad7923c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaad4d61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaae2dd7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaacf358b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaae05b78 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00002aaaaae0e729 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaad69132 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaaddba38 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaad0d89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaad4e9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacfd6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaae6672c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaae66ab2 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaacecee4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaacd704c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae8efac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaace145c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00002aaaaacf160c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaacee384 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaae5164c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaae51de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaacd6fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00002aaaaae50654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaacd8ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaacd354a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00002aaaaace3e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x00002aaaaace07b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaae50b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00002aaaaacde324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x00002aaaaacdb654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x00002aaaaacde534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaae91794 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaae91414 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaacda604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00002aaaaae8fb88 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaace0d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaae8fa38 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaacececc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaad7bffc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaad0d7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4b29c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad68b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaad66872 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93883 ; ret
0x00002aaaaad7bffd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaae6720d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaaceb24d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00002aaaaacfca6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaad9556b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad67381 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaad27d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaad43b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaadff377 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00002aaaaad40714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaae7aa1e : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaad7cd31 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00002aaaaad3f36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00002aaaaacf7aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaadad653 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaada814d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaad3e455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00002aaaaae7bd4e : add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaad7d089 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaad66833 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaad9f866 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaae2d50d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00002aaaaacfcda9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad08a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad088d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad0d9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x00002aaaaae42c98 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00002aaaaad2d37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaad2a21c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00002aaaaad0d89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaad1aa0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaadb381d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x00002aaaaae0ea1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00002aaaaadb3c0d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00002aaaaadbbbdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00002aaaaadd3e4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaad45fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaae7a16e : add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaad87bc6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaae3b0fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00002aaaaae01f59 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaad427d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaade8e1e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00002aaaaae3b0dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00002aaaaad7918d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00002aaaaad48510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00002aaaaad96de0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00002aaaaad29802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaad29785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaad092c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaad7cd50 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00002aaaaad20c1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00002aaaaad7c7dd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaae8f131 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaadb6ba1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x00002aaaaad026d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00002aaaaadd5b61 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00002aaaaadd5c95 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaad5b14d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00002aaaaadabc28 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3f
0x00002aaaaad44034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaad50f33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaadd5aca : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00002aaaaadd5ad9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00002aaaaae710b1 : add byte ptr [rax], al ; add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00002aaaaadc838d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00002aaaaae465dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x17365d ; call 0x1f8b1
0x00002aaaaad18f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaad1ad67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaadb01c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00002aaaaad60631 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad2def4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaad88064 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaad2433c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaade1bbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaad673ef : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00002aaaaadb3ea4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaada77a0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaade253d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaae1726d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaad5c2ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaad8fcbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaadf39c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaae6672d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaad61060 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00002aaaaad61086 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00002aaaaada7fb5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f46
0x00002aaaaad8c245 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00002aaaaadad662 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaadb2be5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaadad4fb : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaad5fe44 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00002aaaaad94cbf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00002aaaaad98431 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00002aaaaad9664d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00002aaaaad94c82 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x00002aaaaae1cc3b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00002aaaaad2701a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaad98b7d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00002aaaaad948ae : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00002aaaaad983a1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00002aaaaadcf13f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00002aaaaadb2b4d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaad0d26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad80955 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaad7e0b2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00002aaaaae44d42 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00002aaaaadba648 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x00002aaaaade7dc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00002aaaaad7cfe5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaae2dd0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaae2dd7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaacf8c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaada3d3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad3fe25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaad4d61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaad60f7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00002aaaaad97734 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00002aaaaad97a4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00002aaaaae0f85b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00002aaaaad8eaf5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x00002aaaaacfd84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaadb157a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00002aaaaad186ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00002aaaaae14f6c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00002aaaaadcdc98 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00002aaaaadbd358 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00002aaaaad8893c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00002aaaaada9cbe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00002aaaaad9599f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00002aaaaadb2b3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaae1cb85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00002aaaaad34a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaadab2cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00002aaaaae7d49e : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae40b62 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad60e92 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaadd5aa3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00002aaaaadc8cf5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00002aaaaae8d126 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00002aaaaae7040e : add byte ptr [rax], al ; add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00002aaaaadc8367 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00002aaaaae7157a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaadb70b5 : add byte ptr [rax], al ; add cl, al ; call 0x66d0c9cd
0x00002aaaaad3a495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x00002aaaaad002c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaadd7056 : add byte ptr [rax], al ; add cl, ch ; ret 0xf771
0x00002aaaaad33226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x00002aaaaad3a732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x00002aaaaad70c35 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x00002aaaaad70b01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x00002aaaaacfe0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00002aaaaadc3051 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00002aaaaad3384f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00002aaaaacecf2d : add byte ptr [rax], al ; add dh, bl ; ret
0x00002aaaaacecf15 : add byte ptr [rax], al ; add dh, cl ; ret
0x00002aaaaacecf45 : add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaacf6ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaadb6a07 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaadb6a16 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00002aaaaae441b1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00002aaaaad34ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00002aaaaad73700 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00002aaaaad73709 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00002aaaaadb6ac9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00002aaaaada7fb6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaae8159a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82e9a : add byte ptr [rax], al ; add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad7e39e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00002aaaaad2c820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaad60d44 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaad20a4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaae05201 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00002aaaaae07c81 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaae073e1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00002aaaaae04664 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00002aaaaae00f65 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae1674e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad089da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00002aaaaad083a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00002aaaaae0d331 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaadc83a9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00002aaaaacf3b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00002aaaaad4dbac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad07b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00002aaaaae01c2d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaacf39ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00002aaaaad08697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00002aaaaad18cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00002aaaaad5fcaa : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00002aaaaacf4aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad08178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae80e5a : add byte ptr [rax], al ; and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade4a ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae81d5a : add byte ptr [rax], al ; and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae72e5a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6c
0x00002aaaaae696f6 : add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196700
0x00002aaaaae6a11e : add byte ptr [rax], al ; and al, 0x6e ; out dx, al ; call rsp
0x00002aaaaae8505a : add byte ptr [rax], al ; and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae75c5a : add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae7765a : add byte ptr [rax], al ; and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae77a5a : add byte ptr [rax], al ; and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaae69c0e : add byte ptr [rax], al ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaae7d49f : add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaadf8e88 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x125e55
0x00002aaaaae7488e : add byte ptr [rax], al ; and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaae79d4e : add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaae7887e : add byte ptr [rax], al ; and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00002aaaaae7ff9a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad4aeee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaae7b86e : add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaad010eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00002aaaaad60f7e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaad5dbf0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaad5f8a4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00002aaaaae6e066 : add byte ptr [rax], al ; call 0x111998ca
0x00002aaaaae79b86 : add byte ptr [rax], al ; call 0x111a686b
0x00002aaaaad5b26c : add byte ptr [rax], al ; call 0x114494
0x00002aaaaae76a16 : add byte ptr [rax], al ; call 0x121a27a1
0x00002aaaaae6fd86 : add byte ptr [rax], al ; call 0x1319b6e3
0x00002aaaaae71196 : add byte ptr [rax], al ; call 0x1319cb66
0x00002aaaaae6fe36 : add byte ptr [rax], al ; call 0x1819b799
0x00002aaaaae7d486 : add byte ptr [rax], al ; call 0x221a96b5
0x00002aaaaae7a156 : add byte ptr [rax], al ; call 0x281a6b8b
0x00002aaaaacf4956 : add byte ptr [rax], al ; call 0x2dc44
0x00002aaaaae053af : add byte ptr [rax], al ; call 0x2e624
0x00002aaaaaddf2d8 : add byte ptr [rax], al ; call 0x356f9
0x00002aaaaae4754e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00002aaaaacdc3a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00002aaaaad8e65d : add byte ptr [rax], al ; call r12
0x00002aaaaacf3850 : add byte ptr [rax], al ; call rax
0x00002aaaaadd5aa9 : add byte ptr [rax], al ; call rbx
0x00002aaaaae15dfe : add byte ptr [rax], al ; call rcx
0x00002aaaaae5267e : add byte ptr [rax], al ; call rdi
0x00002aaaaad0cfcc : add byte ptr [rax], al ; call rdx
0x00002aaaaae5182e : add byte ptr [rax], al ; call rsp
0x00002aaaaae58516 : add byte ptr [rax], al ; clc ; loope 0x18551f ; jmp qword ptr [rdi]
0x00002aaaaae58596 : add byte ptr [rax], al ; clc ; loope 0x18559f ; jmp qword ptr [rdi]
0x00002aaaaae58616 : add byte ptr [rax], al ; clc ; loope 0x18561f ; jmp qword ptr [rdi]
0x00002aaaaae70996 : add byte ptr [rax], al ; clc ; mov cl, ch ; jmp rsp
0x00002aaaaae710b6 : add byte ptr [rax], al ; clc ; ret
0x00002aaaaae7d1c6 : add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaae7f232 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaae735aa : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaae82d32 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82c32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaae82a32 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83032 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83332 : add byte ptr [rax], al ; cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b9 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae71dee : add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaae7d49a : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae7d482 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; call 0x221a96b9
0x00002aaaaadcdc99 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00002aaaaaddaec9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00002aaaaad8893d : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaada905f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00002aaaaadd00a7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaad9e3cc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00002aaaaade7c19 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00002aaaaad698d8 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00002aaaaad9fdfd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaade111f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaae80e72 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae82972 : add byte ptr [rax], al ; cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae82f72 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae85072 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae7b072 : add byte ptr [rax], al ; cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaae3f016 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaae7a646 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaae7d606 : add byte ptr [rax], al ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaad47697 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x746a8 ; pop rbx ; ret
0x00002aaaaad9eb40 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcbb53 ; ret
0x00002aaaaad7f067 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xac081 ; mov eax, edi ; ret
0x00002aaaaad45aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x00002aaaaae71bd6 : add byte ptr [rax], al ; cmp rbp, rdx ; call qword ptr [rbx]
0x00002aaaaad563d7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x833a8 ; ret
0x00002aaaaad9fee4 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xccf17 ; ret
0x00002aaaaae74cb6 : add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaae7a436 : add byte ptr [rax], al ; cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaae7b782 : add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae82112 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaae85012 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae79012 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00002aaaaae7b076 : add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaae76846 : add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaae81912 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaae81d12 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7d512 : add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae82f12 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff19 ; jmp qword ptr [rcx]
0x00002aaaaae72f12 : add byte ptr [rax], al ; fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff24
0x00002aaaaae76a12 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00002aaaaad080d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00002aaaaae8272a : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; loopne 0x1af78e ; cmc ; call qword ptr [rdx]
0x00002aaaaae80e2a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae8162a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82f2a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; jo 0x1aff31 ; jmp qword ptr [rcx]
0x00002aaaaae7d52a : add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae81d2a : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6a2ae : add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaae8502a : add byte ptr [rax], al ; hlt ; jo 0x1b2039 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae78c2a : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c2a ; jmp qword ptr [rcx]
0x00002aaaaae8cf1a : add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaae7aa1a : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae79a1a : add byte ptr [rax], al ; in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaae7f122 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaae82e22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae84f22 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae76f22 : add byte ptr [rax], al ; in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaae83622 : add byte ptr [rax], al ; in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ae ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6fc22 : add byte ptr [rax], al ; in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaae8dd22 : add byte ptr [rax], al ; in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaae78b22 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae7f1a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae817a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae769a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaae8c5a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaae888a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaae811a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae82bef : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7be46 : add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaae8e97e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x00002aaaaadc8cf6 : add byte ptr [rax], al ; jbe 0xf5d05 ; ret
0x00002aaaaae698de : add byte ptr [rax], al ; je 0x196944 ; in eax, dx ; jmp rsp
0x00002aaaaae782aa : add byte ptr [rax], al ; je 0x1a525a ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaae78daa : add byte ptr [rax], al ; je 0x1a5d65 ; add byte ptr [rax], al ; loopne 0x1a5d43 ; out dx, al ; jmp rbx
0x00002aaaaae7a1de : add byte ptr [rax], al ; je 0x1a71e9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaae7aaaa : add byte ptr [rax], al ; je 0x1a7a82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae802aa : add byte ptr [rax], al ; je 0x1ad2da ; add dword ptr [rax], eax ; loopne 0x1ad255 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813aa : add byte ptr [rax], al ; je 0x1ae3eb ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82daa : add byte ptr [rax], al ; je 0x1afe05 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae830aa : add byte ptr [rax], al ; je 0x1b0108 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00b1 ; jmp qword ptr [rcx]
0x00002aaaaae837aa : add byte ptr [rax], al ; je 0x1b080f ; add dword ptr [rax], eax ; jo 0x1b0740 ; cmc ; jmp rax
0x00002aaaaae8e51f : add byte ptr [rax], al ; je 0x1bb51f ; call qword ptr [rdi]
0x00002aaaaad4082c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad42dc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad434f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaad4418e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad44325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad48b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad48f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad490ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad491ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad494d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad49e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad4b084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad59a57 : add byte ptr [rax], al ; je 0x86a64 ; ret
0x00002aaaaad5b376 : add byte ptr [rax], al ; je 0x88384 ; ret
0x00002aaaaad66876 : add byte ptr [rax], al ; je 0x9387f ; ret
0x00002aaaaad7e9b4 : add byte ptr [rax], al ; je 0xaba28 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad9ff0b : add byte ptr [rax], al ; je 0xccf5e ; mov eax, 0x20 ; ret
0x00002aaaaadba8b6 : add byte ptr [rax], al ; je 0xe78f6 ; xor eax, eax ; ret
0x00002aaaaadc8368 : add byte ptr [rax], al ; je 0xf5375 ; ret
0x00002aaaaae44d43 : add byte ptr [rax], al ; jg 0x171d56 ; neg eax ; ret
0x00002aaaaad7e0b3 : add byte ptr [rax], al ; jg 0xab0bf ; neg eax ; ret
0x00002aaaaae42c99 : add byte ptr [rax], al ; jl 0x16fca6 ; neg eax ; ret
0x00002aaaaae6ffb2 : add byte ptr [rax], al ; jl 0x19cfdf ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaae710b2 : add byte ptr [rax], al ; jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaae710b2 : add byte ptr [rax], al ; jl 0x19e0f0 ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaae74cb2 : add byte ptr [rax], al ; jl 0x1a1d2c ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaae78fb2 : add byte ptr [rax], al ; jl 0x1a5f6f ; add byte ptr [rax], al ; js 0x1a5fdd ; cli ; call qword ptr [rax]
0x00002aaaaae7cbb2 : add byte ptr [rax], al ; jl 0x1a9bab ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaae7ffb2 : add byte ptr [rax], al ; jl 0x1acfdf ; add dword ptr [rax], eax ; js 0x1acf56 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae831b2 : add byte ptr [rax], al ; jl 0x1b0211 ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae84fb2 : add byte ptr [rax], al ; jl 0x1b202f ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae7040f : add byte ptr [rax], al ; jle 0x19d400 ; jmp qword ptr [rsi]
0x00002aaaaae696a6 : add byte ptr [rax], al ; jmp 0x1966b0
0x00002aaaaad3280f : add byte ptr [rax], al ; jmp 0x5baf4
0x00002aaaaad33850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x00002aaaaad3a496 : add byte ptr [rax], al ; jmp 0x63700
0x00002aaaaad4e5dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00002aaaaad91b63 : add byte ptr [rax], al ; jmp 0xbad95
0x00002aaaaad91639 : add byte ptr [rax], al ; jmp 0xbe602
0x00002aaaaad08325 : add byte ptr [rax], al ; jmp rax
0x00002aaaaae0466b : add byte ptr [rax], al ; jmp rcx
0x00002aaaaad9fddf : add byte ptr [rax], al ; jne 0xccdb0 ; ret
0x00002aaaaad9ffee : add byte ptr [rax], al ; jne 0xccfd1 ; xor eax, eax ; ret
0x00002aaaaae7020e : add byte ptr [rax], al ; jns 0x19d201 ; jmp qword ptr [rcx]
0x00002aaaaae7998e : add byte ptr [rax], al ; jo 0x1a6a0a ; out dx, eax ; call rax
0x00002aaaaae7d0de : add byte ptr [rax], al ; jo 0x1aa0fc ; jmp qword ptr [rcx]
0x00002aaaaae84f82 : add byte ptr [rax], al ; jo 0x1b1f91 ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae8e76f : add byte ptr [rax], al ; jp 0x1bb76f ; call qword ptr [rcx]
0x00002aaaaae6fdd6 : add byte ptr [rax], al ; js 0x19ce36 ; jmp 0x1b90e4
0x00002aaaaae78fb6 : add byte ptr [rax], al ; js 0x1a5fd9 ; cli ; call qword ptr [rax]
0x00002aaaaae7b786 : add byte ptr [rax], al ; js 0x1a87b4 ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae7b806 : add byte ptr [rax], al ; js 0x1a8834 ; int1 ; call qword ptr [rcx]
0x00002aaaaae7c986 : add byte ptr [rax], al ; js 0x1a9988 ; int1 ; call rsi
0x00002aaaaada0045 : add byte ptr [rax], al ; js 0xcd055 ; ret
0x00002aaaaae8eb14 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaae8eabc : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaadfef91 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaadff378 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaae42f7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaae42f8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaae42f9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaae42fae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaae42fbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaae42edd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaae42efe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaae42f0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaae42f1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaae42f2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaae42f3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaae42f4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaae42e8a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaae42f5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaae42f6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad7e88b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad7e9ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaad7ea0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaad7e9fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaae42eee : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaacf392e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b154] ; ret
0x00002aaaaacf393e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d066] ; ret
0x00002aaaaadfd4fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a3e] ; ret
0x00002aaaaadf2b1e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaad180dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00002aaaaad42217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00002aaaaad4ef07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x00002aaaaad4f2f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x00002aaaaad4f747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x00002aaaaad42510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x00002aaaaad4dc37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x00002aaaaad4dea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00002aaaaae82ee2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae78fe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaae833e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e9 ; jmp qword ptr [rbx]
0x00002aaaaae7a1e2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaae78d7e : add byte ptr [rax], al ; loopne 0x1a5d0f ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae78dae : add byte ptr [rax], al ; loopne 0x1a5d3f ; out dx, al ; jmp rbx
0x00002aaaaae797ce : add byte ptr [rax], al ; loopne 0x1a67d8 ; out dx, eax ; jmp rsi
0x00002aaaaae7d06e : add byte ptr [rax], al ; loopne 0x1aa08b ; call qword ptr [rdx]
0x00002aaaaae8eac8 : add byte ptr [rax], al ; loopne 0x1bbadb ; ret 0xb
0x00002aaaaae8eb20 : add byte ptr [rax], al ; loopne 0x1bbb32 ; ret 0xa
0x00002aaaaae7f1ea : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae6f8ea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaae7fbea : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaae70fea : add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaae80fea : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adff0 ; call qword ptr [rsi]
0x00002aaaaae71dea : add byte ptr [rax], al ; mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaae829ea : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae72bea : add byte ptr [rax], al ; mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaae82bea : add byte ptr [rax], al ; mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae69a2e : add byte ptr [rax], al ; mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x00002aaaaae69bce : add byte ptr [rax], al ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaae7bede : add byte ptr [rax], al ; mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00002aaaaae7c44e : add byte ptr [rax], al ; mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaae77a5e : add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaae5a49e : add byte ptr [rax], al ; mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaae3d3fe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaae390ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaae78ef6 : add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaae3b09e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaada7d2e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaad70e0e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaad7977e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaad7817e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaad7914e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaae78846 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaad78e4e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaad45b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae3b0de : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaae3b0fe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaae3b0ee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00002aaaaae3b0ce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaadc838e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaad7916e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaad70e3e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaad7918e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad7919e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaad7917e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad28765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaadffd8e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00002aaaaadffd7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x00002aaaaadffdae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00002aaaaadffd9e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00002aaaaadc8c14 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaad9c220 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaad7818e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaad59bee : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00002aaaaad9f68e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00002aaaaad9f6ae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00002aaaaad9f69e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00002aaaaad9f6be : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00002aaaaad9f8ce : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00002aaaaad9fda9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00002aaaaad8e7be : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00002aaaaadd9bfe : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00002aaaaad9fe6e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00002aaaaadeb99a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaad06f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad0848c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaadfd45e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaad1d0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaae004ae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00002aaaaadd83da : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00002aaaaae407ee : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaad4f85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaadffcdc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaae0e56e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaada965e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaadc837e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaad4a42e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00002aaaaad4a3fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00002aaaaad4602e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad0987e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38c802] ; ret
0x00002aaaaad427d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0896f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaacf422c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00002aaaaaddf3cb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00002aaaaad27e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaacf48a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaade8e1f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade8ff8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad44035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaae0543a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12e716
0x00002aaaaae699c6 : add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x00002aaaaad781be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae7d1c2 : add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaadeaaad : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x117a7a
0x00002aaaaae2d50e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad781ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad43103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad441f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x00002aaaaad44386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x00002aaaaad48be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x00002aaaaad49531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x00002aaaaad48511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaadd5aa4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00002aaaaae805f2 : add byte ptr [rax], al ; mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae6fbf2 : add byte ptr [rax], al ; mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaae7c6f2 : add byte ptr [rax], al ; mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaae802f2 : add byte ptr [rax], al ; mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae835f2 : add byte ptr [rax], al ; mov esp, 0x48000156 ; jnp 0x1b05f9 ; jmp qword ptr [rcx]
0x00002aaaaae761f2 : add byte ptr [rax], al ; mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae811f2 : add byte ptr [rax], al ; mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae82df2 : add byte ptr [rax], al ; mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae87af2 : add byte ptr [rax], al ; mov esp, 0xd800019b ; ret
0x00002aaaaae84ef2 : add byte ptr [rax], al ; mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaad2064b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00002aaaaade6b10 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00002aaaaae15a03 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaae159bb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaae15c2e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaad5bb20 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae3b11e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaae3b13e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaae3b14e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaae3b15e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaae3b16e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaae3b17e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaae3b18e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaae3b12e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaae3b10e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaad6711e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaae0e92a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad791ae : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaad791ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad791ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad791fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad7920e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad7921e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad791de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaad791be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad1d0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaad492dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae0473b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaadffd1c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad0e293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00002aaaaadc82ac : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00002aaaaadffcec : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaadeb76e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaadb65cb : add byte ptr [rax], al ; mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a9
0x00002aaaaad0662f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00002aaaaad0d5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaae0a67b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaad083e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00002aaaaad7e3be : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00002aaaaad7e3ce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00002aaaaad7e3de : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00002aaaaad7e3ee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00002aaaaad7e3fe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00002aaaaad7e40e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00002aaaaad7e41e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00002aaaaad4e239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaad476b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaade6de6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaad4e705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaadd8676 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaad0d720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaad9ac9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad47f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaad4fb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaae13331 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaae12d1e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaad4fb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347a09] ; ret
0x00002aaaaacf4a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaacf4a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaadd025d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00002aaaaad50f34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x00002aaaaad40c05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd5566 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3dbcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaad0daac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad06ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaad4fb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaae134aa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaad56ff4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad41539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaae465de : add byte ptr [rax], al ; mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8b0
0x00002aaaaadbe744 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaad45fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x00002aaaaadd5c96 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaad026d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaadd5b62 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaadd5ada : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaadd5acb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaae0075b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaadd5f20 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00002aaaaae09795 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad3fb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00002aaaaad3f433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00002aaaaad5a553 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x00002aaaaae0cd8e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00002aaaaad781ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad5a040 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00002aaaaadabc29 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c3e
0x00002aaaaad509c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x00002aaaaad2ee56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367111] ; call rax
0x00002aaaaad2e800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x367767] ; call rax
0x00002aaaaad23048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaad203cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaad5b14e : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaad5a2b0 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00002aaaaad59e22 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00002aaaaad5afc4 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00002aaaaae6f3c2 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaae7f2c2 : add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaae830c2 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae813c2 : add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae3b0be : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaae3b0ae : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaae84ec2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaad7915e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaad70eae : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad70e1e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00002aaaaad0e2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaad0e324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaad07e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaadb312e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0118
0x00002aaaaad7922e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaad7923e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaae69de6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaae802da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7d0da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa100 ; jmp qword ptr [rcx]
0x00002aaaaae68eae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaae7cdda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaae835da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaae7aada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaad3f94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaad1ac8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaad4d61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaae2d69e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae2dd7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaae2dd0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaae77cbe : add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaae782ae : add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaae770af : add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaae75c5e : add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaadeb7ad : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaae72e5e : add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe68
0x00002aaaaacf358d : add byte ptr [rax], al ; nop ; ret
0x00002aaaaae0e179 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00002aaaaae05b7a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00002aaaaae0e72b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaae7157e : add byte ptr [rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaae80542 : add byte ptr [rax], al ; or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaae80e42 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae81142 : add byte ptr [rax], al ; or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaae76842 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaae78842 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaae7a642 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaae7be42 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaae7d542 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae8e342 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaae7cbb6 : add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaae7b4e6 : add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaae74ec6 : add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaad08d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00002aaaaadcea08 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00002aaaaae7163e : add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaadd9964 : add byte ptr [rax], al ; or eax, edi ; ret
0x00002aaaaae8f606 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x00002aaaaae84e7a : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaad07e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00002aaaaae70966 : add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaae72f96 : add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaadd9827 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaae73886 : add byte ptr [rax], al ; pop rax ; shr ah, 1 ; jmp rbx
0x00002aaaaae7bd4f : add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaad27ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad27d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad43b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaaddba3a : add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaae73a7a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaad7d08a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00002aaaaad0d89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaad1aa0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaade91a5 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaad25c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaad42c80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaad9f867 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaacfcdaa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaacf2b0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad088d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaacfd6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad66834 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaae6672e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00002aaaaae698b6 : add byte ptr [rax], al ; pop rcx ; in eax, dx ; jmp rsp
0x00002aaaaae72f16 : add byte ptr [rax], al ; pop rdi ; jmp 0x19ff20
0x00002aaaaae76092 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaae8b992 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaae84e92 : add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae72f92 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaae83592 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb20
0x00002aaaaae70992 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaae81392 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae87c7a : add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaae6a0ee : add byte ptr [rax], al ; push 0xee ; jmp rsp
0x00002aaaaae78c2e : add byte ptr [rax], al ; push rax ; jle 0x1a5c26 ; jmp qword ptr [rcx]
0x00002aaaaae6e5fe : add byte ptr [rax], al ; push rax ; jnp 0x19b605 ; jmp qword ptr [rdx]
0x00002aaaaae66ab4 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaade7dde : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaae8307a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae83182 : add byte ptr [rax], al ; push rdx ; add dword ptr [rax], eax ; js 0x1b0206 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8357a : add byte ptr [rax], al ; push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaae7488a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaae7508a : add byte ptr [rax], al ; push rsp ; jno 0x1a2098 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaae7998a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaae84d8a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae6a44e : add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaae7e3d2 : add byte ptr [rax], al ; pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaae81dd2 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82bd2 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; call 0x221af152
0x00002aaaaae8b9d2 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaae883d2 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaacecee6 : add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaae73a7e : add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaacd3977 : add byte ptr [rax], al ; ret
0x00002aaaaae48a06 : add byte ptr [rax], al ; ret 0
0x00002aaaaae4f97e : add byte ptr [rax], al ; ret 0x10
0x00002aaaaace145e : add byte ptr [rax], al ; ret 0x16
0x00002aaaaacf160e : add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaacee386 : add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaae5164e : add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaae51de6 : add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaacd6fee : add byte ptr [rax], al ; ret 0x23
0x00002aaaaae50656 : add byte ptr [rax], al ; ret 0x24
0x00002aaaaacd8ec6 : add byte ptr [rax], al ; ret 0x26
0x00002aaaaacd354c : add byte ptr [rax], al ; ret 0x2800
0x00002aaaaace3e8e : add byte ptr [rax], al ; ret 0x30
0x00002aaaaace07b6 : add byte ptr [rax], al ; ret 0x31
0x00002aaaaae50b46 : add byte ptr [rax], al ; ret 0x33
0x00002aaaaacd3886 : add byte ptr [rax], al ; ret 0x440c
0x00002aaaaacde326 : add byte ptr [rax], al ; ret 0x4f
0x00002aaaaacdb656 : add byte ptr [rax], al ; ret 0x53
0x00002aaaaacde536 : add byte ptr [rax], al ; ret 0x56
0x00002aaaaae4f17e : add byte ptr [rax], al ; ret 0xa
0x00002aaaaae4f57e : add byte ptr [rax], al ; ret 0xd
0x00002aaaaae70fee : add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaacf26ba : add byte ptr [rax], al ; ret 1
0x00002aaaaae52c22 : add byte ptr [rax], al ; ret 2
0x00002aaaaacd41c6 : add byte ptr [rax], al ; ret 3
0x00002aaaaacda606 : add byte ptr [rax], al ; ret 4
0x00002aaaaacd456e : add byte ptr [rax], al ; ret 5
0x00002aaaaace0d9e : add byte ptr [rax], al ; ret 6
0x00002aaaaae53622 : add byte ptr [rax], al ; ret 7
0x00002aaaaacd4a8a : add byte ptr [rax], al ; ret 8
0x00002aaaaae53a22 : add byte ptr [rax], al ; ret 9
0x00002aaaaae7aa7a : add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaacd438e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x00002aaaaae5301e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00002aaaaae7717e : add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaae7765e : add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae7a07a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaae4f426 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00002aaaaae79a1e : add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaae5a38e : add byte ptr [rax], al ; sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaae80652 : add byte ptr [rax], al ; sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad60b ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82e52 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae83152 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaae84f52 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae7a152 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8f
0x00002aaaaae7bd66 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae6ffb6 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaae7d516 : add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae73766 : add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaae78d7a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d13 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae7a07e : add byte ptr [rax], al ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaae7d40e : add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae7830e : add byte ptr [rax], al ; shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00002aaaaadc8216 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaae7f162 : add byte ptr [rax], al ; sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaae70962 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaae81c62 : add byte ptr [rax], al ; sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaae73762 : add byte ptr [rax], al ; sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaae7bd62 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae7d686 : add byte ptr [rax], al ; sub al, 0xf2 ; jmp rcx
0x00002aaaaae6e062 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x111998ce
0x00002aaaaae8e462 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaae7c6f6 : add byte ptr [rax], al ; sub bh, ch ; int1 ; jmp rcx
0x00002aaaaae415ac : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00002aaaaadcf140 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00002aaaaae7a16f : add byte ptr [rax], al ; sub edi, edx ; call qword ptr [rdi]
0x00002aaaaad07efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaad4f016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaad5d791 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00002aaaaadcff35 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00002aaaaadc8d2b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00002aaaaade74d5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaad8e7c3 : add byte ptr [rax], al ; syscall ; ret
0x00002aaaaae78782 : add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae75b26 : add byte ptr [rax], al ; test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaae76096 : add byte ptr [rax], al ; test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae78b26 : add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae79226 : add byte ptr [rax], al ; test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00002aaaaae7c436 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaae7c406 : add byte ptr [rax], al ; test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00002aaaaae805df : add byte ptr [rax], al ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae6e736 : add byte ptr [rax], al ; test bpl, al ; call qword ptr [rax]
0x00002aaaaae6e74e : add byte ptr [rax], al ; test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaae77cba : add byte ptr [rax], al ; test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae72aba : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19facc
0x00002aaaaae829ba : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7e1ba : add byte ptr [rax], al ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaae84dba : add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae81dba : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fdba : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd5b ; hlt ; call qword ptr [rcx]
0x00002aaaaae7887a : add byte ptr [rax], al ; test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00002aaaaadffc3f : add byte ptr [rax], al ; test eax, eax ; je 0x12cc58 ; xor eax, eax ; ret
0x00002aaaaad81023 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae041
0x00002aaaaad83944 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb0961
0x00002aaaaad860fb : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3121
0x00002aaaaad3e456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00002aaaaae7d682 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x00002aaaaade7c7d : add byte ptr [rax], al ; test rax, rax ; je 0x114cb7 ; call rax
0x00002aaaaae0b332 : add byte ptr [rax], al ; test rax, rax ; jne 0x138328 ; pop rbx ; ret
0x00002aaaaae7717a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaae68a82 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaae69206 : add byte ptr [rax], al ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaae6f0ca : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d9 ; jmp qword ptr [rdi]
0x00002aaaaae69146 : add byte ptr [rax], al ; xchg eax, esp ; add al, 0xea ; call rsp
0x00002aaaaae82eca : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff4a ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae68d3e : add byte ptr [rax], al ; xchg eax, esp ; jg 0x195d31 ; jmp rsp
0x00002aaaaae797ca : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaacecece : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaae7a1ca : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00002aaaaae69e0e : add byte ptr [rax], al ; xchg eax, esp ; sbb esi, ebp ; call rsp
0x00002aaaaae8066a : add byte ptr [rax], al ; xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae7166a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaae7b4e2 : add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaae7a16a : add byte ptr [rax], al ; xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaae7b86a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaae7d06a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08f ; call qword ptr [rdx]
0x00002aaaaae8d26a : add byte ptr [rax], al ; xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaae8e76a : add byte ptr [rax], al ; xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaae72abe : add byte ptr [rax], al ; xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaadce7da : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaae7d52e : add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae7cdde : add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaae7508e : add byte ptr [rax], al ; xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x00002aaaaad7bffe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaadf0ef6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaae16216 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaad8dc5c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaae0054e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00002aaaaae00506 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaad0d26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad9a515 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaad0cee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad0cf06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad4d38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x00002aaaaad0dfbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00002aaaaad5fc01 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaad2039b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaadd5a16 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaadd5a3b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaadd5a5f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaadd5a7f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaacfca70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00002aaaaad60f2d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaae84e37 : add byte ptr [rax], bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae8b997 : add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaae81397 : add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82c37 : add byte ptr [rax], bh ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00002aaaaae80f37 : add byte ptr [rax], bh ; loop 0x1adf33 ; jmp qword ptr [rcx]
0x00002aaaaae811a7 : add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae82d37 : add byte ptr [rax], bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82e57 : add byte ptr [rax], bh ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7d607 : add byte ptr [rax], bh ; sub dh, dl ; jmp qword ptr [rdi]
0x00002aaaaae81917 : add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaae7d517 : add byte ptr [rax], bl ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae7e3d7 : add byte ptr [rax], bl ; call rcx
0x00002aaaaae6fc27 : add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaae82c07 : add byte ptr [rax], bl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae78e67 : add byte ptr [rax], bl ; mov gs, esi ; call qword ptr [rcx]
0x00002aaaaae7bd67 : add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae78fe7 : add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaae845d7 : add byte ptr [rax], bl ; ret 0xfff5
0x00002aaaaae805f7 : add byte ptr [rax], bl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae70807 : add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaae7fee7 : add byte ptr [rax], bl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7b627 : add byte ptr [rax], bl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00002aaaaae85047 : add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae6fbf7 : add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaae83157 : add byte ptr [rax], ch ; jae 0x1b0154 ; call qword ptr [rsi]
0x00002aaaaae82f17 : add byte ptr [rax], ch ; jo 0x1aff14 ; jmp qword ptr [rcx]
0x00002aaaaae79fa7 : add byte ptr [rax], ch ; mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaae7c6f7 : add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaae73437 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00002aaaaae802f7 : add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae83847 : add byte ptr [rax], ch ; xchg ebp, esi ; jmp rax
0x00002aaaaad66874 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x93881 ; ret
0x00002aaaaae7cbb7 : add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00002aaaaae84e07 : add byte ptr [rax], cl ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae7f2c7 : add byte ptr [rax], cl ; fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaae82ae7 : add byte ptr [rax], cl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae888a7 : add byte ptr [rax], cl ; loop 0x1b58aa ; call rsi
0x00002aaaaad00d74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00002aaaaae82e27 : add byte ptr [rax], cl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae89e97 : add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00002aaaaae7b4e7 : add byte ptr [rax], cl ; sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00002aaaaae74ec7 : add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaae80017 : add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae79f77 : add byte ptr [rax], cl ; xchg eax, esp ; sti ; call qword ptr [rax]
0x00002aaaaae7d52f : add byte ptr [rax], dh ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae7508f : add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaad7bfff : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaae835df : add byte ptr [rax], dh ; jnp 0x1b05dc ; jmp qword ptr [rcx]
0x00002aaaaae7cddf : add byte ptr [rax], dh ; or dh, dl ; call rsi
0x00002aaaaacdf4e7 : add byte ptr [rax], dh ; ret
0x00002aaaaae8060f : add byte ptr [rax], dh ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae7feff : add byte ptr [rax], dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6720f : add byte ptr [rax], dl ; add bl, bh ; jmp rax
0x00002aaaaade7b40 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3dd25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad3dd33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae8502f : add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae695af : add byte ptr [rax], dl ; jmp 0x1965b7
0x00002aaaaae6f0cf : add byte ptr [rax], dl ; jno 0x19c0d4 ; jmp qword ptr [rdi]
0x00002aaaaae82eff : add byte ptr [rax], dl ; jo 0x1afefc ; jmp qword ptr [rcx]
0x00002aaaaad00e54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00002aaaaae8184f : add byte ptr [rax], dl ; push rsp ; call rsi
0x00002aaaaae8dcef : add byte ptr [rax], dl ; push rsp ; clc ; call qword ptr [rax]
0x00002aaaaaceb24f : add byte ptr [rax], dl ; ret
0x00002aaaaae802df : add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8d57f : add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaae72b0f : add byte ptr [rax], dl ; xor ebp, ebx ; jmp qword ptr [rsi]
0x00002aaaaae72bed : add byte ptr [rax], r8b ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaad47696 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x746a9 ; pop rbx ; ret
0x00002aaaaad080d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00002aaaaada7d2d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaad70e0d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaad70e3d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaad59bed : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00002aaaaad5aafd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00002aaaaada0e85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00002aaaaae0b33d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00002aaaaad4602d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad43155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00002aaaaad781ad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad49530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x00002aaaaad6711d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaadeb76d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaade6de5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaadd8675 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaad06ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00002aaaaad7941d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00002aaaaad781ed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaadfe99d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00002aaaaad18a35 : add byte ptr [rax], r8b ; ret
0x00002aaaaae16215 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaad0d7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad0cf05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00002aaaaad7e0bd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00002aaaaae15bb7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00002aaaaad1d59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x00002aaaaae15a7c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaad8c267 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00002aaaaade513d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad26993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x00002aaaaacfca71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaad9556d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad67383 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaade7ddf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00002aaaaad8c2bb : add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaadd4a8a : add byte ptr [rbp + 0x395374c0], al ; ret
0x00002aaaaad53d5e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00002aaaaad53ed6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaacf33df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaad27d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaad43b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaad5fc7e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00002aaaaad3dcbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaadf61f3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x00002aaaaadde56b : add byte ptr [rbp + 0xa], dh ; jmp 0x10b599
0x00002aaaaadee081 : add byte ptr [rbp + 0xa], dh ; jmp 0x11b0b0
0x00002aaaaae09583 : add byte ptr [rbp + 0xa], dh ; jmp 0x1365b1
0x00002aaaaad58952 : add byte ptr [rbp + 0xa], dh ; jmp 0x85980
0x00002aaaaadee0d9 : add byte ptr [rbp + 0xb], dh ; jmp 0x11b10a
0x00002aaaaadd2be1 : add byte ptr [rbp + 0xb], dh ; jmp 0xffc11
0x00002aaaaad1baef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00002aaaaad1b9df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00002aaaaad0d6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00002aaaaae15b44 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaae6b5bf : add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x00002aaaaae68c4f : add byte ptr [rbp + rbp - 0x17], dl ; call rsp
0x00002aaaaae6b017 : add byte ptr [rbp + rbp*2 - 0xd], ah ; call rsp
0x00002aaaaae6c39f : add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x00002aaaaae68f97 : add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x00002aaaaae698df : add byte ptr [rbp + rbx*2 - 0x13], dh ; jmp rsp
0x00002aaaaae77cbb : add byte ptr [rbp + rbx*4 + 0x1900000], al ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae68a87 : add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaae4f577 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00002aaaaad531ff : add byte ptr [rbp + rcx*4 + 0x2d], cl ; push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaad481a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00002aaaaadfef92 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00002aaaaad480be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00002aaaaadff379 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00002aaaaad40716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaae75cab : add byte ptr [rbp + rdi*2], dh ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaae8dceb : add byte ptr [rbp + rdi*8 + 0x54100001], dh ; clc ; call qword ptr [rax]
0x00002aaaaae6c6cf : add byte ptr [rbp + rdi*8 - 9], dl ; jmp rsp
0x00002aaaaae6c32f : add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaae7d49b : add byte ptr [rbp + rsi*8], ah ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae7d483 : add byte ptr [rbp + rsi*8], cl ; add al, ch ; and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaae7aa20 : add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae46734 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00002aaaaad81024 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xae040
0x00002aaaaad83945 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb0960
0x00002aaaaad860fc : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3120
0x00002aaaaad9ffef : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00002aaaaad9fde0 : add byte ptr [rbp - 0x38], dh ; ret
0x00002aaaaae4f823 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00002aaaaad9ff52 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00002aaaaad7cd33 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00002aaaaad3f36f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00002aaaaae6826c : add byte ptr [rbp - 0x7b6f0004], al ; cld ; jmp qword ptr [rax]
0x00002aaaaadb5d8c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaad967e2 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x00002aaaaad0c957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaacf7ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaad7125b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00002aaaaad2eeff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00002aaaaadad655 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00002aaaaada814f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaadf4d9e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x00002aaaaad1a057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaae82bf0 : add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaad57c65 : add byte ptr [rbp - 0xcf98740], al ; ret
0x00002aaaaad08305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaad3e457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00002aaaaae7bd50 : add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae67d80 : add byte ptr [rbp - 4], bl ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae6cf9f : add byte ptr [rbp - 7], dh ; call rsp
0x00002aaaaae6ca87 : add byte ptr [rbp - 8], ah ; jmp rsp
0x00002aaaaae190f9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00002aaaaae030c9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x00002aaaaad4a42f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaad7d08b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00002aaaaad47698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00002aaaaad66835 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaad53ec7 : add byte ptr [rbx + 0x342c5615], cl ; add dh, dh ; ret 0xf02
0x00002aaaaad4fba7 : add byte ptr [rbx + 0x348bb505], al ; add byte ptr [rcx], al ; ret
0x00002aaaaad9f868 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaad25c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaad781bf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae3d43f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00002aaaaae407ef : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00002aaaaad7a5df : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00002aaaaad712bc : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad42c81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaad58c87 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaae2d50f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00002aaaaada8040 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x00002aaaaad570f7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00002aaaaacf32e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacfcdab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaacf2b0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad088d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad4af0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00002aaaaad788a9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaae7fc4b : add byte ptr [rbx + 0x66b00001], dl ; stc ; call qword ptr [rax]
0x00002aaaaadc837f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00002aaaaad4a3ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00002aaaaad7f068 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00002aaaaae78290 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00002aaaaadb811c : add byte ptr [rbx + 0xf4801e1], al ; ret
0x00002aaaaad0d9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00002aaaaae8f49b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00002aaaaacd37bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00002aaaaae6d3df : add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaae42c9a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00002aaaaae6ab7f : add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x00002aaaaae6da5f : add byte ptr [rbx + rax*8], ah ; cli ; jmp rsp
0x00002aaaaade5334 : add byte ptr [rbx + rbp], cl ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaae77a5b : add byte ptr [rbx + rbx*4], ah ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaae6cd07 : add byte ptr [rbx + rbx*8], dh ; clc ; call rsp
0x00002aaaaaddedaa : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaad42dc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00002aaaaae7eac3 : add byte ptr [rbx + rcx - 0x7847ffff], cl ; call qword ptr [rsi]
0x00002aaaaade6e5a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00002aaaaae72abb : add byte ptr [rbx + rcx*2 + 0x32400000], al ; jmp 0x19facb
0x00002aaaaae82ae3 : add byte ptr [rbx + rcx*2 + 0x6c080001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad1d007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaad1b427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaae7aa4b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae6d3c7 : add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaae6a6c7 : add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00002aaaaae7f2c3 : add byte ptr [rbx + rdx - 0x24f7ffff], cl ; call qword ptr [rdi]
0x00002aaaaae6d6df : add byte ptr [rbx + rdx*2 - 6], al ; call rsp
0x00002aaaaae7f24b : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaae812cb : add byte ptr [rbx + rsi - 0x16ffffff], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6dcc7 : add byte ptr [rbx + rsi*2], dh ; sti ; call rsp
0x00002aaaaae8d2b3 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], bl ; clc ; jmp qword ptr [rcx]
0x00002aaaaae8d26b : add byte ptr [rbx + rsi*8], dh ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaad2d37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaad9f647 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcc661 ; ret
0x00002aaaaad4762f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad7d10f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00002aaaaad7d108 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00002aaaaad7d101 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00002aaaaad7d0fa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00002aaaaad7d0f3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00002aaaaad7d0ec : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00002aaaaadd83db : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00002aaaaadfab86 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x127b98 ; ret
0x00002aaaaade759f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1145b9 ; ret
0x00002aaaaad2a21e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00002aaaaad7ce49 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00002aaaaad7ce34 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00002aaaaae802f3 : add byte ptr [rbx - 0x64d7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae802db : add byte ptr [rbx - 0x64efffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae802c3 : add byte ptr [rbx - 0x6507ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad0d724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00002aaaaade1abd : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaad8beeb : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00002aaaaad8bac1 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x00002aaaaacfe769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaadb9a25 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x00002aaaaad1aa10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaacf376f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00002aaaaad2ad38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00002aaaaadb381f : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x00002aaaaad46e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00002aaaaae44356 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00002aaaaad3fe34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaae0ea1f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00002aaaaada3c37 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00002aaaaada9187 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00002aaaaadb3c0f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00002aaaaadaa660 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaadbbbdf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00002aaaaadd3e4f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00002aaaaade7f7f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x00002aaaaad45fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaadf79d4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x00002aaaaae8f603 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00002aaaaae67a58 : add byte ptr [rbx], ch ; cld ; jmp rax
0x00002aaaaae7a170 : add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaae6c4d7 : add byte ptr [rbx], dh ; idiv edi ; ret 1
0x00002aaaaad28766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00002aaaaad87bc8 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaacff2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00002aaaaad8fba8 : add byte ptr [rcx + 0x308f090d], cl ; add byte ptr [rcx + 1], cl ; ret
0x00002aaaaae3b0ff : add byte ptr [rcx + 0x3518911], cl ; ret
0x00002aaaaad5de7f : add byte ptr [rcx + 0x39], cl ; ret
0x00002aaaaae01f5b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaad0fe6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaad19078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaad61976 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaad2e773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaadc98be : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaad427d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00002aaaaad431e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaade8e20 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00002aaaaae3b0df : add byte ptr [rcx + 0x4518811], cl ; ret
0x00002aaaaad7918f : add byte ptr [rcx + 0x4578817], cl ; ret
0x00002aaaaad4ea06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00002aaaaadbcab6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00002aaaaadd434a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00002aaaaad48512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00002aaaaad45b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00002aaaaae234fe : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaad70d16 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x00002aaaaad1ac90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x00002aaaaae4085c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaad78038 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaae6828c : add byte ptr [rcx + 0x7720fffc], 0xfc ; jmp rax
0x00002aaaaad00f1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00002aaaaad07c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00002aaaaadd1f3f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad96de2 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00002aaaaadd52b5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaadb5eb7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaada6a18 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaad29804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaad29787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaad3159b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad539a4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00002aaaaad092c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00002aaaaad7cd52 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00002aaaaad20c20 : add byte ptr [rcx + 0xf], cl ; ret
0x00002aaaaadb7027 : add byte ptr [rcx + 1], al ; ret
0x00002aaaaad7c7df : add byte ptr [rcx + 1], cl ; ret
0x00002aaaaacd3881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00002aaaaae8f133 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaad57998 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00002aaaaae6a55f : add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaae7a07b : add byte ptr [rcx + rax*8], al ; add al, dl ; jrcxz 0x1a707a ; call rsp
0x00002aaaaae6e063 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x111998cd
0x00002aaaaae6caaf : add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x00002aaaaae7488b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaae888a3 : add byte ptr [rcx + rbp*4 + 1], ch ; add byte ptr [rax], cl ; loop 0x1b58ae ; call rsi
0x00002aaaaae7887b : add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], ah ; out dx, al ; call qword ptr [rdx]
0x00002aaaaae78843 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaae6d557 : add byte ptr [rcx + rbp], dl ; cli ; jmp rsp
0x00002aaaaae6d477 : add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaae698b7 : add byte ptr [rcx + rbx*2 - 0x13], al ; jmp rsp
0x00002aaaaae6943f : add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x00002aaaaae6cccf : add byte ptr [rcx + rbx*8 - 8], al ; call rsp
0x00002aaaaae7b86b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaad43fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x00002aaaaae6c9e7 : add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaae0a7e1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00002aaaaad9c221 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00002aaaaad9c2eb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00002aaaaadb6ba3 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x00002aaaaad5402f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad6711f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x00002aaaaad026d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00002aaaaadd5b63 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00002aaaaadd5c97 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaad5b14f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00002aaaaad5a2b1 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaad5a041 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00002aaaaadabc2a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd8c3d
0x00002aaaaad71182 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaad44036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00002aaaaad50f35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00002aaaaad59e23 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaadd5acc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00002aaaaae0a4ad : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaad53f45 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00002aaaaadd5adb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00002aaaaadfede1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaadff928 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaae76843 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaad563d8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a7 ; ret
0x00002aaaaae8184b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaae6f0cb : add byte ptr [rcx + rdx + 0x71100000], dl ; std ; jmp qword ptr [rdi]
0x00002aaaaae6bef7 : add byte ptr [rcx + rdx - 9], dl ; jmp rsp
0x00002aaaaae830c3 : add byte ptr [rcx + rdx*2 + 0x72680001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8307b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], ah ; jb 0x1b0080 ; jmp qword ptr [rcx]
0x00002aaaaae830ab : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae770ab : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaae6b27f : add byte ptr [rcx + rdx*4], dh ; hlt ; jmp rsp
0x00002aaaaae6d2a7 : add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaae7b073 : add byte ptr [rcx + rdx*8], bh ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaae6f07b : add byte ptr [rcx + rdx], al ; add al, ah ; in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaae8505b : add byte ptr [rcx + rsi*2], ah ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae85073 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae7508b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaae7d0db : add byte ptr [rcx + rsi*8 + 0x15700000], ah ; jmp qword ptr [rcx]
0x00002aaaaae68fe7 : add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x00002aaaaae7d06b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; loopne 0x1aa08e ; call qword ptr [rdx]
0x00002aaaaae710b3 : add byte ptr [rcx + rsi], bh ; add al, bh ; ret
0x00002aaaaad594a3 : add byte ptr [rcx - 0x173fce16], cl ; ret
0x00002aaaaacd547b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00002aaaaad1542b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00002aaaaad124d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x00002aaaaad0f213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00002aaaaad7fa19 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00002aaaaadd1748 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaadc838f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00002aaaaad13f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00002aaaaad8509a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad05964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x00002aaaaacf9e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaacf9e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaacf9e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaad31790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaadd55cf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaae465df : add byte ptr [rcx - 0x75], cl ; jge 0x17365b ; call 0x1f8af
0x00002aaaaadc489a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad18f94 : add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaadeb0f7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x00002aaaaad70e3f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00002aaaaada4623 : add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaadb0214 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00002aaaaad1ad69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaadb01c9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00002aaaaada1958 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xce97b ; call 0x8ab78
0x00002aaaaad2c781 : add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad392b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaad54317 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaad2def6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaadebcab : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaad42777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad47f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaadb5706 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaad37326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaad88066 : add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaada3f17 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x00002aaaaad2433e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaacf5d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaad673f1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00002aaaaadc05f5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaad3957b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00002aaaaadb3ea6 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaacf5cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00002aaaaada77a2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaade253f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x00002aaaaae1726f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00002aaaaad587e0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaad5c2ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00002aaaaad0df9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00002aaaaad8fcbf : add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaadc6cb0 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00002aaaaadc6c2f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x00002aaaaadfd00f : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaacf9556 : add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaadf3ad7 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x00002aaaaad532a3 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaade2753 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaad9f64a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00002aaaaae6672f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00002aaaaae67f90 : add byte ptr [rcx - 4], dl ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaae6c8a7 : add byte ptr [rcx - 8], al ; jmp rsp
0x00002aaaaad61062 : add byte ptr [rcx - 9], cl ; ret 1
0x00002aaaaad61088 : add byte ptr [rcx - 9], cl ; ret 2
0x00002aaaaae86005 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaae5cfeb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaad5a8d3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaad010e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00002aaaaae09a81 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad60b91 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaad5d78f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00002aaaaae6b32f : add byte ptr [rcx], al ; cmc ; jmp rsp
0x00002aaaaadec7e0 : add byte ptr [rcx], al ; jmp 0x1195ab
0x00002aaaaadecba0 : add byte ptr [rcx], al ; jmp 0x11997b
0x00002aaaaad00e34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x00002aaaaae0e55f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaad4fbad : add byte ptr [rcx], al ; ret
0x00002aaaaadace77 : add byte ptr [rcx], al ; ret 0x8b48
0x00002aaaaadae60a : add byte ptr [rcx], al ; ret 0xc083
0x00002aaaaadb0d0e : add byte ptr [rcx], al ; ret 0xda39
0x00002aaaaada7fb7 : add byte ptr [rcx], al ; setg dl ; jmp 0xd4f44
0x00002aaaaad8c247 : add byte ptr [rcx], bh ; ret
0x00002aaaaad098a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00002aaaaada6a1d : add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaadad664 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaadb2be7 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaadad4fd : add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaae67280 : add byte ptr [rcx], bl ; sti ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaae8f16b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x00002aaaaade3017 : add byte ptr [rcx], ch ; clc ; ret
0x00002aaaaad5fe46 : add byte ptr [rcx], ch ; ret
0x00002aaaaad94cc1 : add byte ptr [rcx], ch ; ret 0x2941
0x00002aaaaad8fb26 : add byte ptr [rcx], ch ; ret 0x428d
0x00002aaaaad98433 : add byte ptr [rcx], ch ; ret 0x748d
0x00002aaaaad9664f : add byte ptr [rcx], ch ; ret 0x8d41
0x00002aaaaad94c84 : add byte ptr [rcx], ch ; ret 0xbe0f
0x00002aaaaae1cc3d : add byte ptr [rcx], ch ; ret 0xca39
0x00002aaaaad07efe : add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaad98b7f : add byte ptr [rcx], ch ; ret 0xd129
0x00002aaaaad948b0 : add byte ptr [rcx], ch ; ret 0xd629
0x00002aaaaad983a3 : add byte ptr [rcx], ch ; ret 0xf889
0x00002aaaaadcf141 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00002aaaaadeb831 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00002aaaaadd9965 : add byte ptr [rcx], cl ; clc ; ret
0x00002aaaaad4cd2a : add byte ptr [rcx], cl ; ret 0x8948
0x00002aaaaadb2b4f : add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaad37122 : add byte ptr [rcx], dh ; div dh ; ret
0x00002aaaaad07a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae09ed8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaad8d9b7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00002aaaaad0d26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad00f2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00002aaaaad0ef27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaad4d38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x00002aaaaad0d08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad5fc02 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00002aaaaacf7c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaacf6dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaacf726e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaadcd0d3 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaae81c63 : add byte ptr [rdi + 0x1c480001], ch ; cmc ; call qword ptr [rdx]
0x00002aaaaae2b35a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00002aaaaad7e0b4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00002aaaaae44d44 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00002aaaaae6919f : add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaae696a7 : add byte ptr [rdi + rax*2 - 0x15], ah ; jmp rsp
0x00002aaaaae6d0cf : add byte ptr [rdi + rax*4 - 7], al ; call rsp
0x00002aaaaae69baf : add byte ptr [rdi + rax*8 - 0x13], al ; call rsp
0x00002aaaaae7a643 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaae84ef3 : add byte ptr [rdi + rbp*2 + 0x18f80001], bh ; stc ; jmp qword ptr [rsi]
0x00002aaaaae84ec3 : add byte ptr [rdi + rbp*2 + 0x18f80001], cl ; stc ; jmp qword ptr [rsi]
0x00002aaaaae84e4b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae78ef3 : add byte ptr [rdi + rbp*4 - 0x780000], bh ; stc ; call qword ptr [rax]
0x00002aaaaae80e5b : add byte ptr [rdi + rbp], ah ; add dword ptr [rax], eax ; jo 0x1ade49 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80e73 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae80e43 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae7fee3 : add byte ptr [rdi + rbx - 0x6ce7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7bec3 : add byte ptr [rdi + rbx*8 - 0x6a480000], cl ; int1 ; call qword ptr [rax]
0x00002aaaaae7bedb : add byte ptr [rdi + rbx*8 - 0x6a500000], ah ; int1 ; call qword ptr [rax]
0x00002aaaaae6deaf : add byte ptr [rdi + rbx*8 - 3], al ; call rsp
0x00002aaaaae7be43 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaad26f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x00002aaaaad25ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00002aaaaadeb9a7 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x00002aaaaae6c77f : add byte ptr [rdi + rcx - 8], dh ; jmp rsp
0x00002aaaaae82ecb : add byte ptr [rdi + rcx*2 + 0x6fe00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82ee3 : add byte ptr [rdi + rcx*2 + 0x6ff80001], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae72e5b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6b
0x00002aaaaae82e3b : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82e53 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaad00d34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00002aaaaae89e93 : add byte ptr [rdi + rdi*4 + 1], bl ; add byte ptr [rax], cl ; push 0xf7 ; jmp rsi
0x00002aaaaae6da3f : add byte ptr [rdi + rdi*4 - 6], dl ; jmp rsp
0x00002aaaaae81e4b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaae7765b : add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae6dda7 : add byte ptr [rdi + rsi*2 - 3], al ; call rsp
0x00002aaaaae6991f : add byte ptr [rdi + rsi*2], al ; in eax, dx ; jmp rsp
0x00002aaaaae6d1d7 : add byte ptr [rdi + rsi*4 - 7], al ; call rsp
0x00002aaaaae6bdaf : add byte ptr [rdi + rsi*8 - 0xa], dl ; call rsp
0x00002aaaaae7d683 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax + 0x2c], cl ; jmp rcx
0x00002aaaaae7163b : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaae7166b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaae7c6f3 : add byte ptr [rdi - 0x10d80000], bh ; int1 ; jmp rcx
0x00002aaaaad9ffc8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae689c0 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00002aaaaadba64a : add byte ptr [rdi - 0xa], dh ; ret
0x00002aaaaae6aa9f : add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaae75c5b : add byte ptr [rdi*2 + 0x4b900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae8fa34 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00002aaaaad07dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaae80653 : add byte ptr [rdi], bl ; add dword ptr [rax], eax ; js 0x1ad60a ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae67a40 : add byte ptr [rdi], ch ; cld ; call rax
0x00002aaaaade7dc7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00002aaaaae2ccd6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaad7cfe7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaae2dd0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaaddae81 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaaddc9d4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x109965 ; loopne 0x1099e5 ; ret
0x00002aaaaad00ecd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x00002aaaaae2dd7f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaada0fd7 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaadfb21f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaacf8c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaada3d3f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad3fe27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaad5d58f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaad7ef50 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaad4d61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00002aaaaae4086f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaad6110f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaad7153f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaad7154f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaad7152f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaad7108f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x00002aaaaad70f4f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaad68b5f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00002aaaaad60f9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaad60f8f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaad60f7f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00002aaaaad07bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00002aaaaad07df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00002aaaaad97736 : add byte ptr [rdi], cl ; ret
0x00002aaaaad97a50 : add byte ptr [rdi], cl ; ret 0x144
0x00002aaaaae0f85d : add byte ptr [rdi], cl ; ret 0x3145
0x00002aaaaad8eaf7 : add byte ptr [rdi], cl ; ret 0x3bba
0x00002aaaaacfd850 : add byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaadb157c : add byte ptr [rdi], cl ; ret 0x833b
0x00002aaaaad186ae : add byte ptr [rdi], cl ; ret 0x8539
0x00002aaaaae14f6e : add byte ptr [rdi], cl ; ret 0x8941
0x00002aaaaae05ff1 : add byte ptr [rdi], cl ; ret 0x8d48
0x00002aaaaad03316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00002aaaaadcdc9a : add byte ptr [rdi], cl ; ret 0x90c3
0x00002aaaaadbd35a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00002aaaaad8893e : add byte ptr [rdi], cl ; ret 0xc3f3
0x00002aaaaada9cc0 : add byte ptr [rdi], cl ; ret 0xc689
0x00002aaaaad959a1 : add byte ptr [rdi], cl ; ret 0xd801
0x00002aaaaadf5d1b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00002aaaaadf5cc0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00002aaaaadf5cfb : add byte ptr [rdi], cl ; ret 0xff83
0x00002aaaaad07e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaacf9550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaad0e4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad0e9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad2a44b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadb2b3d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaad8f2f1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00002aaaaad8f25d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00002aaaaae0926b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d8 ; ret
0x00002aaaaae1cb87 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00002aaaaad34a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaadab2ce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00002aaaaae8066b : add byte ptr [rdi], dh ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae149b9 : add byte ptr [rdx + 0x190], bh ; call 0x2dc48
0x00002aaaaadfe8bb : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x00002aaaaacf4971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x00002aaaaae3d3ff : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00002aaaaae390cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00002aaaaad7a59f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00002aaaaacf4952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00002aaaaada3ffd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00002aaaaae7f44b : add byte ptr [rdx + 0xd500001], dl ; hlt ; jmp rcx
0x00002aaaaacdc207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae8fd2f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae053ab : add byte ptr [rdx + 5], bh ; call 0x2e628
0x00002aaaaacf489f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00002aaaaaddb9c3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00002aaaaae7e1bb : add byte ptr [rdx + rax - 0x1abfffff], al ; call qword ptr [rsi]
0x00002aaaaae761f3 : add byte ptr [rdx + rax*4 + 0x59680000], bh ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae7a153 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; call 0x281a6b8e
0x00002aaaaae7a16b : add byte ptr [rdx + rax*8], dh ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaae6a0ef : add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaad07c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00002aaaaae7c983 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], bh ; int1 ; call rsi
0x00002aaaaae70993 : add byte ptr [rdx + rbp], bl ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaae70963 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaae8b993 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaae6f94b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; jmp qword ptr [rax]
0x00002aaaaae74ec3 : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaade915b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaad690c3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00002aaaaae4f177 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00002aaaaae6b657 : add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaae829bb : add byte ptr [rdx + rcx*2 + 0x5b200001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae829eb : add byte ptr [rdx + rcx*2 + 0x5b500001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82973 : add byte ptr [rdx + rcx*2], bh ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae769a3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaae7998b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00002aaaaae8d98b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], ah ; clc ; call qword ptr [rbx]
0x00002aaaaae7f1a3 : add byte ptr [rdx + rdx + 1], ch ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae7f1eb : add byte ptr [rdx + rdx - 0x25dfffff], dh ; jmp qword ptr [rcx]
0x00002aaaaae7f1d3 : add byte ptr [rdx + rdx - 0x25f7ffff], bl ; jmp qword ptr [rcx]
0x00002aaaaae7f1bb : add byte ptr [rdx + rdx - 0x260fffff], al ; jmp qword ptr [rcx]
0x00002aaaaae831cb : add byte ptr [rdx + rdx*2 + 0x73f00001], dl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae831b3 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, bl ; jae 0x1b01b8 ; jmp qword ptr [rcx]
0x00002aaaaae83183 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6cf0f : add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x00002aaaaae83153 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaae6abdf : add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaae7717b : add byte ptr [rdx + rdx*4], al ; add al, al ; add bh, ch ; jmp rsp
0x00002aaaaae6a5e7 : add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaae7f163 : add byte ptr [rdx + rdx], ch ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaae811a3 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae6a44f : add byte ptr [rdx + rsi - 0x11], dl ; call rsp
0x00002aaaaae811f3 : add byte ptr [rdx + rsi - 0x1877ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6a1a7 : add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x00002aaaaae7d1c3 : add byte ptr [rdx + rsi*8 + 0x19f80000], cl ; jmp qword ptr [rcx]
0x00002aaaaae7d4a0 : add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae5a470 : add byte ptr [rdx + rsi*8], al ; jmp qword ptr [rax]
0x00002aaaaae81143 : add byte ptr [rdx + rsi], cl ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaad90fb2 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc7
0x00002aaaaaddf3d7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00002aaaaaddf3d6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x00002aaaaae8e770 : add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaad0f2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaae6d4f7 : add byte ptr [rdx], ah ; cli ; call rsp
0x00002aaaaae6ce3d : add byte ptr [rdx], al ; add ah, dh ; cmp edi, ecx ; jmp rsp
0x00002aaaaad00e86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00002aaaaadfa766 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaade12f7 : add byte ptr [rdx], al ; call rax
0x00002aaaaae677d4 : add byte ptr [rdx], al ; cld ; jmp rax
0x00002aaaaad00d94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00002aaaaae80b88 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00002aaaaacd55af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaae8f12f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00002aaaaae679b4 : add byte ptr [rdx], ch ; cld ; jmp rax
0x00002aaaaadd703f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae5a4b4 : add byte ptr [rip + 0x510fff2], al ; jmp qword ptr [rax]
0x00002aaaaacd3450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00002aaaaae01efa : add byte ptr [rip - 0x76b40000], al ; ret
0x00002aaaaad9eb41 : add byte ptr [rip - 0xfff], bh ; jae 0xcbb52 ; ret
0x00002aaaaae0a0d7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaae1ca45 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaae40b64 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaadb312f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaadb3112 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaad07ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x00002aaaaad07b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaad7144c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaad60e94 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaacdbfc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaadd5aa5 : add byte ptr [rsi + 1], bh ; call rbx
0x00002aaaaadd5c92 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00002aaaaadd5b5e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00002aaaaadd5ad6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00002aaaaae8c5a3 : add byte ptr [rsi + 1], ch ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaacd999f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae805ab : add byte ptr [rsi + 1], dh ; add al, dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadd5f10 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00002aaaaadd5c83 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00002aaaaadd5b4f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00002aaaaadd5ac7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00002aaaaadc8cf7 : add byte ptr [rsi + 6], dh ; ret
0x00002aaaaadd48ff : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00002aaaaae8e5b3 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], ch ; sti ; call rcx
0x00002aaaaad9ff0c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae68e7f : add byte ptr [rsi + rax*4 - 0x17], dh ; jmp rsp
0x00002aaaaae6a11f : add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00002aaaaae78d7b : add byte ptr [rsi + rbp*4], al ; add al, ah ; mov dh, ch ; call qword ptr [rsi]
0x00002aaaaae78dab : add byte ptr [rsi + rbp*4], dh ; add al, ah ; mov dh, ch ; jmp rbx
0x00002aaaaae7cddb : add byte ptr [rsi + rbp*8 + 0xa300000], ah ; call rsi
0x00002aaaaae6fdd3 : add byte ptr [rsi + rbx + 0x56780000], bl ; jmp 0x1b90e7
0x00002aaaaae7fda3 : add byte ptr [rsi + rbx + 1], ch ; add al, cl ; nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7fdbb : add byte ptr [rsi + rbx - 0x6f1fffff], al ; hlt ; call qword ptr [rcx]
0x00002aaaaae83ddb : add byte ptr [rsi + rbx*2 - 0x5fcfffff], ah ; cmc ; call rdi
0x00002aaaaae7bd63 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae7bd4b : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaae8d128 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00002aaaaae82dc3 : add byte ptr [rsi + rcx*2 + 0x6ea80001], cl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82ddb : add byte ptr [rsi + rcx*2 + 0x6ec00001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82df3 : add byte ptr [rsi + rcx*2 + 0x6ed80001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82d4b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae76dab : add byte ptr [rsi + rcx*4], dh ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaae81dbb : add byte ptr [rsi + rdi + 0x1f100001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81dd3 : add byte ptr [rsi + rdi + 0x1f280001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81deb : add byte ptr [rsi + rdi + 0x1f400001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae71deb : add byte ptr [rsi + rdi + 0x44400000], dh ; cli ; jmp qword ptr [rcx]
0x00002aaaaae79d4b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaae81d5b : add byte ptr [rsi + rdi], ah ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae835db : add byte ptr [rsi + rdx*2 + 0x7b300001], ah ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae835f3 : add byte ptr [rsi + rdx*2 + 0x7b480001], bh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8357b : add byte ptr [rsi + rdx*2 + 1], al ; add al, dl ; jp 0x1b0580 ; jmp qword ptr [rcx]
0x00002aaaaae83593 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, ch ; jp 0x1b0598 ; jmp qword ptr [rcx]
0x00002aaaaae6d70f : add byte ptr [rsi + rdx*2], ah ; cli ; jmp rsp
0x00002aaaaae7b5f3 : add byte ptr [rsi + rdx*8 + 0x1fb80000], bh ; int1 ; call qword ptr [rsi]
0x00002aaaaae6ba57 : add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaae8d57b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], dl ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaae7d543 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae70410 : add byte ptr [rsi - 0x17], bh ; jmp qword ptr [rsi]
0x00002aaaaae805f3 : add byte ptr [rsi - 0x57e7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae805db : add byte ptr [rsi - 0x57ffffff], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaacf4a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0986d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaae6c557 : add byte ptr [rsi - 9], dl ; jmp rsp
0x00002aaaaacf2b0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae6971f : add byte ptr [rsi], al ; jmp 0x196727
0x00002aaaaae672d8 : add byte ptr [rsi], bh ; sti ; call rax
0x00002aaaaae80543 : add byte ptr [rsi], cl ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaae6d857 : add byte ptr [rsi], dh ; cli ; call rsp
0x00002aaaaadcee42 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaae8d270 : add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaae8439b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], dl ; cmc ; call rsi
0x00002aaaaadc8369 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00002aaaaae7e3d3 : add byte ptr [rsp + rax - 0xfe7ffff], bl ; call rcx
0x00002aaaaae9140f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaae8e343 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaae7cbb3 : add byte ptr [rsp + rbp*8], bh ; add byte ptr [rax], cl ; add esi, edx ; call rdi
0x00002aaaaae7fbeb : add byte ptr [rsp + rbx - 0x784fffff], dh ; hlt ; call qword ptr [rax]
0x00002aaaaadd35d3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00002aaaaae82bbb : add byte ptr [rsp + rcx*2 + 0x6cd00001], al ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82bd3 : add byte ptr [rsp + rcx*2 + 0x6ce80001], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82beb : add byte ptr [rsp + rcx*2 + 0x6d000001], dh ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82b8b : add byte ptr [rsp + rcx*2 + 1], dl ; add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae699c7 : add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00002aaaaae79b83 : add byte ptr [rsp + rdi*4], cl ; add al, ch ; frndint ; call qword ptr [rax]
0x00002aaaaae68764 : add byte ptr [rsp + rdi*8 - 0x3546f01], ch ; jmp qword ptr [rax]
0x00002aaaaae7dbdb : add byte ptr [rsp + rdi*8 - 0x59600000], ah ; call rdi
0x00002aaaaae67fd0 : add byte ptr [rsp + rdi*8], dh ; jmp qword ptr [rax]
0x00002aaaaae69cf7 : add byte ptr [rsp + rdi*8], dl ; in eax, dx ; call rsp
0x00002aaaaae6f3c3 : add byte ptr [rsp + rdx + 0x6f680000], cl ; std ; call qword ptr [rcx]
0x00002aaaaae833e3 : add byte ptr [rsp + rdx*2 + 0x78580001], ch ; cmc ; jmp qword ptr [rbx]
0x00002aaaaae6a617 : add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaae69c0f : add byte ptr [rsp + rdx*8], ah ; in eax, dx ; jmp rsp
0x00002aaaaae81393 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813ab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813c3 : add byte ptr [rsp + rsi - 0x1397ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6ba07 : add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaae6b78f : add byte ptr [rsp - 0xa], dl ; call rsp
0x00002aaaaae6ae1f : add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00002aaaaae883d3 : add byte ptr [rsp - 0xe57ffff], bl ; sti ; call rcx
0x00002aaaaae6c507 : add byte ptr [rsp - 9], dh ; push rsp ; ret 1
0x00002aaaaad28ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae71ded : add byte ptr ds:[rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaadd48fe : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x00002aaaaad0913a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaad4d360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad43983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad2f4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaae09794 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaae7157d : add byte ptr ss:[rax], al ; or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaae67760 : add ch, 0xfb ; call rax
0x00002aaaaadb070a : add ch, al ; nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaadb63fc : add ch, al ; out dx, al ; ret
0x00002aaaaad080d7 : add ch, bl ; fpatan ; ret
0x00002aaaaae676bc : add ch, bl ; sti ; jmp rax
0x00002aaaaae5823c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaae5823d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaad8f85c : add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaad45e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaae68638 : add ch, byte ptr [rdx - 0x566d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaadfa764 : add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaad29840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaae5a26c : add ch, ch ; int1 ; call qword ptr [rax]
0x00002aaaaad08f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaadb70b7 : add cl, al ; call 0x66d0c9cb
0x00002aaaaad09882 : add cl, al ; cmp byte ptr [rax], al ; ret
0x00002aaaaad25fc1 : add cl, bl ; in eax, -0x21 ; loopne 0x52f56 ; ret 0xe680
0x00002aaaaad27f3a : add cl, bl ; in eax, -0x21 ; loopne 0x54ecf ; ret 0xe680
0x00002aaaaae676d4 : add cl, bl ; sti ; jmp rax
0x00002aaaaadd8235 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaad74efc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00002aaaaad2a15e : add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaad7ee19 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad0f964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaad0f98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaacf9b13 : add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaadf58d6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x00002aaaaadf58e4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x00002aaaaadd8236 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaad47079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaacfd293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x00002aaaaadd83bb : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaad92690 : add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaad74efd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00002aaaaad70d77 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaad43caf : add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaad4f842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00002aaaaadd1e62 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00002aaaaad1c45c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00002aaaaad5be40 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaacf8654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00002aaaaada16b7 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaad5bea3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00002aaaaae0e2b5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00002aaaaad454b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00002aaaaae76658 : add cl, byte ptr [rbp + 0xa] ; ret
0x00002aaaaadf6b2f : add cl, byte ptr [rbp + 0xf] ; ret
0x00002aaaaad1035d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaadba26e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x00002aaaaad5b915 : add cl, byte ptr [rbp - 0x77] ; ret
0x00002aaaaae2db52 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaadd0462 : add cl, byte ptr [rbx - 0x76b7ffd4] ; ret 0xb6e9
0x00002aaaaada8906 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x00002aaaaad3ecf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00002aaaaae01187 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00002aaaaad9c3ce : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00002aaaaadb311e : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00002aaaaad8a98b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x00002aaaaad00d54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00002aaaaadc9b3f : add cl, byte ptr [rdi] ; ret 0x8348
0x00002aaaaadc9a97 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00002aaaaade3855 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad38898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaad53ed0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaad40005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00002aaaaae1ca4b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaad7cdb3 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00002aaaaacd34b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaae88e00 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x00002aaaaae812d0 : add cl, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad3a497 : add cl, ch ; pop rdi ; ret 0xffff
0x00002aaaaad002c7 : add cl, ch ; ret
0x00002aaaaadd7058 : add cl, ch ; ret 0xf771
0x00002aaaaad33228 : add cl, ch ; ret 0xffb8
0x00002aaaaad3a734 : add cl, ch ; ret 0xffbf
0x00002aaaaad70c37 : add cl, ch ; ret 0xffd3
0x00002aaaaad13f85 : add cl, ch ; ret 0xffec
0x00002aaaaad04d06 : add cl, ch ; ret 0xfff1
0x00002aaaaad70b03 : add cl, ch ; ret 0xfff5
0x00002aaaaacfe0b1 : add cl, ch ; ret 0xfffb
0x00002aaaaadc3053 : add cl, ch ; ret 0xfffd
0x00002aaaaad53206 : add cl, ch ; ret 0xfffe
0x00002aaaaad33851 : add cl, ch ; ret 0xffff
0x00002aaaaade7f76 : add cl, cl ; ret
0x00002aaaaae8e97f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00002aaaaae76450 : add dh, ah ; ret
0x00002aaaaad18af8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00002aaaaada7d2f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00002aaaaae5c91b : add dh, bh ; jmp rdi
0x00002aaaaae52677 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaae2dd03 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaacecf2f : add dh, bl ; ret
0x00002aaaaad7c03b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaae763f6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00002aaaaad6bfcd : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaadaa0c8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7094
0x00002aaaaae06622 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae732e5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00002aaaaae88dc5 : add dh, byte ptr [rdx + 0xa] ; ret
0x00002aaaaad6b9b3 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x00002aaaaad6ff14 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaad6dfd0 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x00002aaaaad6ff13 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00002aaaaae06621 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaacecf17 : add dh, cl ; ret
0x00002aaaaacecf47 : add dh, dh ; ret
0x00002aaaaadbe533 : add dh, dh ; ret 0x4002
0x00002aaaaacf6ff6 : add dh, dh ; ret 0x4801
0x00002aaaaad61828 : add dh, dh ; ret 0x7404
0x00002aaaaadb6a09 : add dh, dh ; ret 0x7408
0x00002aaaaad40b9f : add dh, dh ; ret 0x7420
0x00002aaaaae42d87 : add dh, dh ; ret 0x7501
0x00002aaaaae42d94 : add dh, dh ; ret 0x7502
0x00002aaaaad34ba4 : add dh, dh ; ret 0x7504
0x00002aaaaae42d59 : add dh, dh ; ret 0x7510
0x00002aaaaae42d66 : add dh, dh ; ret 0x7520
0x00002aaaaae42d73 : add dh, dh ; ret 0x7540
0x00002aaaaadcb127 : add dh, dh ; ret 0xf01
0x00002aaaaad53ecd : add dh, dh ; ret 0xf02
0x00002aaaaadf4d95 : add dh, dh ; ret 0xf04
0x00002aaaaad2721f : add dh, dh ; ret 0xf08
0x00002aaaaad73702 : add dh, dh ; ret 0xf20
0x00002aaaaad7370b : add dh, dh ; ret 0xf40
0x00002aaaaae5a44d : add dh, dl ; call qword ptr [rax]
0x00002aaaaae5a445 : add dh, dl ; call rax
0x00002aaaaae5a42d : add dh, dl ; jmp qword ptr [rax]
0x00002aaaaae5a449 : add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaaddc2ae : add dil, byte ptr [rcx] ; ret
0x00002aaaaad8d639 : add dil, r15b ; ret
0x00002aaaaae67794 : add dl, al ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaae67738 : add dl, bl ; sti ; jmp rax
0x00002aaaaae782e5 : add dl, ch ; ret
0x00002aaaaae5a3f9 : add dl, dh ; call qword ptr [rax]
0x00002aaaaae5a3f5 : add dl, dh ; jmp rax
0x00002aaaaad0794f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaae8e8b0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00002aaaaae6b3d5 : add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaae790c4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00002aaaaacf9e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00002aaaaad9264c : add dword ptr [r8 - 0x73], ecx ; jl 0xbf6ab ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaad19274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaad3f70e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaad3fe92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaae82115 : add dword ptr [r8], eax ; call 0x241ae64b
0x00002aaaaae6aec5 : add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaae8272d : add dword ptr [r8], r8d ; loopne 0x1af78b ; cmc ; call qword ptr [rdx]
0x00002aaaaae82505 : add dword ptr [r8], r8d ; pop rax ; cmc ; jmp rax
0x00002aaaaacf9486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaad4accc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaada7dd8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaae3d401 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00002aaaaadab9ef : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x00002aaaaacf9af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaadab403 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00002aaaaad89da7 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00002aaaaadcba23 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00002aaaaadb3ad6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00002aaaaad1c5f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00002aaaaad24fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00002aaaaadcba17 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaadab4d3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00002aaaaada5a95 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00002aaaaad8b222 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x00002aaaaad71e10 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00002aaaaad1b083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00002aaaaad1b21b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x00002aaaaade0285 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaade025f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00002aaaaad97e25 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaadd40f1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00002aaaaadd1d73 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaadb811f : add dword ptr [rax + 0xf], ecx ; ret
0x00002aaaaad3732a : add dword ptr [rax + 1], ecx ; ret
0x00002aaaaacf3622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00002aaaaada7d53 : add dword ptr [rax + 1], edi ; ret
0x00002aaaaacd34b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaadf633c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00002aaaaae74b3e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00002aaaaad6b9a5 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00002aaaaae7e4f6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x00002aaaaaded876 : add dword ptr [rax - 0x18], edx ; ret
0x00002aaaaada5e07 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00002aaaaada5e06 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x00002aaaaad02453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00002aaaaadd8232 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaad9264d : add dword ptr [rax - 0x73], ecx ; jl 0xbf6aa ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaadc2455 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xef49b
0x00002aaaaad74ed6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00002aaaaae39062 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaad70d66 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00002aaaaad81bb1 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaad51809 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaad4e428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaad4af5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaad5d921 : add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaad3dd94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaadc316c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00002aaaaada1ce0 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00002aaaaadb4102 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00002aaaaad4c3ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00002aaaaada2890 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x00002aaaaade0b58 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2e
0x00002aaaaadf6020 : add dword ptr [rax - 0x78], eax ; ja 0x12302b ; ret
0x00002aaaaae5aa73 : add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaae3f01a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00002aaaaad69878 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaacf51f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaadf4a58 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00002aaaaadaa663 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00002aaaaad193dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00002aaaaadb074f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00002aaaaadbbbe2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00002aaaaadb3c12 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x00002aaaaad3f70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00002aaaaad0ae49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00002aaaaada5c23 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00002aaaaacf446c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00002aaaaad99ca6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x00002aaaaacf6c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00002aaaaad1024e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaadf4d88 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00002aaaaada0fdb : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaad8955c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x00002aaaaad3fe93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00002aaaaadcd581 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00002aaaaad2fb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaadb999a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00002aaaaadab694 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaada9e8e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x00002aaaaad4e5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaae76095 : add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaaddbde4 : add dword ptr [rax], 1 ; ret
0x00002aaaaae6abde : add dword ptr [rax], eax ; adc al, 0x52 ; call rsp
0x00002aaaaae87c7e : add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaae8184e : add dword ptr [rax], eax ; adc bh, bh ; hlt ; call rsi
0x00002aaaaae82efe : add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae81dbe : add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae80a0e : add dword ptr [rax], eax ; adc cl, 0xf4 ; jmp rcx
0x00002aaaaae6b32e : add dword ptr [rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaae6acc6 : add dword ptr [rax], eax ; add al, 0x90 ; jmp rsp
0x00002aaaaae6a5e6 : add dword ptr [rax], eax ; add al, 0x92 ; out dx, eax ; jmp rsp
0x00002aaaaae6b186 : add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00002aaaaada2875 : add dword ptr [rax], eax ; add al, ch ; ret
0x00002aaaaad7085a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00002aaaaadf5d2c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x00002aaaaadf5d32 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x00002aaaaadf5d24 : add dword ptr [rax], eax ; add bl, al ; ret
0x00002aaaaad40cba : add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaacfc448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00002aaaaacfb550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00002aaaaad420bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad3ed68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00002aaaaae0eda6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaad59acc : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaad53c48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaae15c2d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaad39504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadb5a58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad694fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaacff535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaad45b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaad56f09 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad57030 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaacfe95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadf5252 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaad55187 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaad88e1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae17d0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad073b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaacf991d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaad602ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae1e1bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17c61 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaacfc7fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaad4486a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaad45090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaacf4901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae5267a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaae5182a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00002aaaaae51652 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae5164a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00002aaaaae51de2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00002aaaaad2c81e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00002aaaaad20a4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00002aaaaae00f63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaadd02b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaadd5aa7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00002aaaaae44d41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x171d58 ; neg eax ; ret
0x00002aaaaad7e0b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xab0c1 ; neg eax ; ret
0x00002aaaaae42c97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16fca8 ; neg eax ; ret
0x00002aaaaad91637 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbe604
0x00002aaaaada0043 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcd057 ; ret
0x00002aaaaae047e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaae05438 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12e718
0x00002aaaaad1d09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaadffd1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaadd5c94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaadd5b60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaadd5ad8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaadd5f1e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00002aaaaad3fb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00002aaaaad3f431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00002aaaaadabc27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd8c40
0x00002aaaaad27d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad43b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaad4ea63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade0e71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaad5ab5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad1b064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad3e46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad53ed4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaadb5d8a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaae82bee : add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaadca9b6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad18097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaade1abb : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaad46e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x00002aaaaad3fe32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaad5a2af : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x00002aaaaad5a03f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00002aaaaad59e21 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaad39558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00002aaaaacf5d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaadc05f3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaad39579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00002aaaaad587de : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaadfd00d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaacf9554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaade2751 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaade30ff : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00002aaaaad94683 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaad4cd28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x00002aaaaacf6dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaada0fd5 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaadf5d19 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00002aaaaadf5cbe : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00002aaaaadf5cf9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00002aaaaad7144a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaae8d26e : add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaae812ce : add dword ptr [rax], eax ; add cl, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadae9ec : add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaae42d85 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00002aaaaae42d92 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00002aaaaae42d9f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00002aaaaae42d57 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaae42d64 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaae42d71 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00002aaaaae00281 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00002aaaaadd21fd : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaad289c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00002aaaaae8162e : add dword ptr [rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae87efe : add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaae80c0e : add dword ptr [rax], eax ; and bl, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae829be : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaae82e3e : add dword ptr [rax], eax ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae8307e : add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae84e7e : add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaae7f1ee : add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae6c8a6 : add dword ptr [rax], eax ; and eax, r15d ; jmp rsp
0x00002aaaaae8505e : add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae82bd6 : add dword ptr [rax], eax ; call 0x221af14e
0x00002aaaaae83596 : add dword ptr [rax], eax ; call 0x221afb1c
0x00002aaaaae82116 : add dword ptr [rax], eax ; call 0x241ae64a
0x00002aaaaae8b9d6 : add dword ptr [rax], eax ; call 0xffffffffe81b81c0
0x00002aaaaae85016 : add dword ptr [rax], eax ; clc ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae6ca86 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00002aaaaae82ee6 : add dword ptr [rax], eax ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8c5a6 : add dword ptr [rax], eax ; clc ; push rdi ; call qword ptr [rdx]
0x00002aaaaae84ec6 : add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaad60a9a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00002aaaaae81396 : add dword ptr [rax], eax ; cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae811a6 : add dword ptr [rax], eax ; cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82c36 : add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaae86006 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaae82e56 : add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae85a7e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00002aaaaae82d36 : add dword ptr [rax], eax ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae81d16 : add dword ptr [rax], eax ; cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81836 : add dword ptr [rax], eax ; cmp dh, bh ; hlt ; jmp rdi
0x00002aaaaae80f36 : add dword ptr [rax], eax ; cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7f206 : add dword ptr [rax], eax ; cmp dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae84e96 : add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae82a36 : add dword ptr [rax], eax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae85d26 : add dword ptr [rax], eax ; fadd dword ptr [rbx - 0xa] ; jmp rdi
0x00002aaaaae82976 : add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae7f126 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rbx]
0x00002aaaaae7f166 : add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaae7f1a6 : add dword ptr [rax], eax ; fcomp st(1) ; jmp qword ptr [rcx]
0x00002aaaaae80e2e : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae831b6 : add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae817a6 : add dword ptr [rax], eax ; fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6ccce : add dword ptr [rax], eax ; fprem ; call rsp
0x00002aaaaae81146 : add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaae82df6 : add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae6a8de : add dword ptr [rax], eax ; hlt ; int1 ; call rsp
0x00002aaaaae6ddd6 : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00002aaaaae6aec6 : add dword ptr [rax], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaae6aa26 : add dword ptr [rax], eax ; in al, 0x74 ; int1 ; jmp rsp
0x00002aaaaae7e1be : add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaae6b016 : add dword ptr [rax], eax ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaae6dda6 : add dword ptr [rax], eax ; ja 0x19adad ; call rsp
0x00002aaaaae6ab7e : add dword ptr [rax], eax ; je 0x197bca ; call rsp
0x00002aaaaae6ba06 : add dword ptr [rax], eax ; je 0x198a06 ; jmp rsp
0x00002aaaaae6c506 : add dword ptr [rax], eax ; je 0x1994f5 ; idiv edi ; hlt ; ret 1
0x00002aaaaae6c77e : add dword ptr [rax], eax ; je 0x199796 ; clc ; jmp rsp
0x00002aaaaad1a056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaae83006 : add dword ptr [rax], eax ; jno 0x1b0005 ; jmp qword ptr [rcx]
0x00002aaaaae835f6 : add dword ptr [rax], eax ; jnp 0x1b05f5 ; jmp qword ptr [rcx]
0x00002aaaaae80e5e : add dword ptr [rax], eax ; jo 0x1ade46 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82f2e : add dword ptr [rax], eax ; jo 0x1aff2d ; jmp qword ptr [rcx]
0x00002aaaaae837ae : add dword ptr [rax], eax ; jo 0x1b073c ; cmc ; jmp rax
0x00002aaaaae80fee : add dword ptr [rax], eax ; jrcxz 0x1adfec ; call qword ptr [rsi]
0x00002aaaaae81006 : add dword ptr [rax], eax ; jrcxz 0x1ae004 ; jmp qword ptr [rcx]
0x00002aaaaae7ffb6 : add dword ptr [rax], eax ; js 0x1acf52 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80656 : add dword ptr [rax], eax ; js 0x1ad607 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae83186 : add dword ptr [rax], eax ; js 0x1b0202 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83336 : add dword ptr [rax], eax ; js 0x1b03b5 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83626 : add dword ptr [rax], eax ; js 0x1b06aa ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fc0e : add dword ptr [rax], eax ; loopne 0x1acc7d ; stc ; call qword ptr [rax]
0x00002aaaaae7fdbe : add dword ptr [rax], eax ; loopne 0x1acd57 ; hlt ; call qword ptr [rcx]
0x00002aaaaae802ae : add dword ptr [rax], eax ; loopne 0x1ad251 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8272e : add dword ptr [rax], eax ; loopne 0x1af78a ; cmc ; call qword ptr [rdx]
0x00002aaaaae82ece : add dword ptr [rax], eax ; loopne 0x1aff46 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8310e : add dword ptr [rax], eax ; loopne 0x1b0189 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6ae6e : add dword ptr [rax], eax ; mov ah, 0x32 ; jmp rsp
0x00002aaaaae81d5e : add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fc4e : add dword ptr [rax], eax ; mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaae82e9e : add dword ptr [rax], eax ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fbee : add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaae81286 : add dword ptr [rax], eax ; mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae811f6 : add dword ptr [rax], eax ; mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80e76 : add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae82f76 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaad7123c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad71181 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaae6c7ee : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x00002aaaaae6adf6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x00002aaaaae6a94e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x00002aaaaae80546 : add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaae84d8e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae8022e : add dword ptr [rax], eax ; nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae8159e : add dword ptr [rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82dae : add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8066e : add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae7f2c6 : add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaae82e26 : add dword ptr [rax], eax ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae862f6 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaae89e96 : add dword ptr [rax], eax ; or byte ptr [rdx - 9], ch ; jmp rsi
0x00002aaaaae6b656 : add dword ptr [rax], eax ; or dh, dh ; jmp rsp
0x00002aaaaae888a6 : add dword ptr [rax], eax ; or dl, ah ; sti ; call rsi
0x00002aaaaae7f1d6 : add dword ptr [rax], eax ; or dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae85076 : add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae82506 : add dword ptr [rax], eax ; pop rax ; cmc ; jmp rax
0x00002aaaaae80e46 : add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae833e6 : add dword ptr [rax], eax ; pop rax ; js 0x1b03e5 ; jmp qword ptr [rbx]
0x00002aaaaad712bb : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaae84e4e : add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae8590e : add dword ptr [rax], eax ; push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaae813ae : add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae830ae : add dword ptr [rax], eax ; push rax ; jb 0x1b00ad ; jmp qword ptr [rcx]
0x00002aaaaae82d4e : add dword ptr [rax], eax ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae829ee : add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fe0e : add dword ptr [rax], eax ; push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6bef6 : add dword ptr [rax], eax ; push rsp ; adc edi, esi ; jmp rsp
0x00002aaaaae6ae1e : add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaae6b78e : add dword ptr [rax], eax ; push rsp ; and al, 0xf6 ; call rsp
0x00002aaaaae8dd26 : add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaae6c9e6 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x00002aaaaae6aa9e : add dword ptr [rax], eax ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaae6bdae : add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaae6c556 : add dword ptr [rax], eax ; push rsp ; out 0xf7, al ; jmp rsp
0x00002aaaaae8cf1e : add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaae81e4e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaad5bd02 : add dword ptr [rax], eax ; ret
0x00002aaaaae6bcd6 : add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaae85ace : add dword ptr [rax], eax ; sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00002aaaaae8357e : add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaae81c66 : add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaae7e3d6 : add dword ptr [rax], eax ; sbb al, dh ; call rcx
0x00002aaaaae82c06 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae81916 : add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaae85186 : add dword ptr [rax], eax ; sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00002aaaaae7f24e : add dword ptr [rax], eax ; sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaae84dbe : add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaae82f16 : add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae83156 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaae81dd6 : add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6c55e : add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaae82dc6 : add dword ptr [rax], eax ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83036 : add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae883d6 : add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaae6b886 : add dword ptr [rax], eax ; test byte ptr [rbp - 0xa], bl ; call rsp
0x00002aaaaae6c366 : add dword ptr [rax], eax ; test byte ptr [rbx - 9], ah ; jmp rsp
0x00002aaaaae6b3d6 : add dword ptr [rax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaae6b2d6 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaae6b706 : add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf6 ; call rsp
0x00002aaaaae6c8de : add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaae6b406 : add dword ptr [rax], eax ; xchg eax, esp ; cmc ; jmp rsp
0x00002aaaaae6db96 : add dword ptr [rax], eax ; xchg eax, esp ; fdivr st(2) ; jmp rsp
0x00002aaaaae6caae : add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00002aaaaae6dcc6 : add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x00002aaaaae6a55e : add dword ptr [rax], eax ; xor al, 0x81 ; out dx, eax ; jmp rsp
0x00002aaaaae6b27e : add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaae6a616 : add dword ptr [rax], eax ; xor al, 0x94 ; out dx, eax ; call rsp
0x00002aaaaae6cd06 : add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaae6c4d6 : add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaae6c526 : add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaae6a6c6 : add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaae835de : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaad608f1 : add dword ptr [rax], edi ; ret
0x00002aaaaacf3ccc : add dword ptr [rax], edi ; ret 0xaf72
0x00002aaaaad6bef7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaad6a0ea : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00002aaaaad7cdec : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00002aaaaade9fff : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00002aaaaad9650b : add dword ptr [rbp + 1], ecx ; ret
0x00002aaaaad1b060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x00002aaaaad1033d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaad68070 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x00002aaaaad1f5b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00002aaaaadb6acb : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00002aaaaadd8149 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaad6996c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad697d4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad6987c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaae2dbc2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaada77c2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00002aaaaacd571e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x00002aaaaadef3f8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00002aaaaada8044 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00002aaaaae01ea8 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00002aaaaada8041 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad6ff05 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaad6dfc1 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00002aaaaada970a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf6042 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaad06391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00002aaaaad89559 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00002aaaaada91bf : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00002aaaaadaadd4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00002aaaaae8e884 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaae774a2 : add dword ptr [rbx], eax ; mov edi, 0x380e0a01 ; ret
0x00002aaaaae776da : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x00002aaaaae6ed13 : add dword ptr [rbx], eax ; ret 0xe01
0x00002aaaaae8e881 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaae047d1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaad6c194 : add dword ptr [rcx + 0x29], ecx ; ret
0x00002aaaaad7eb7f : add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaad673d0 : add dword ptr [rcx + 0x39], ecx ; ret
0x00002aaaaad91749 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x00002aaaaacf6dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00002aaaaacf7298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00002aaaaadb62c0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00002aaaaad842c1 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00002aaaaad00712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00002aaaaae0cf4c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad19987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaad54542 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00002aaaaad74f16 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00002aaaaad3f208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaad1eccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaad95545 : add dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaacf5d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00002aaaaadf630f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaad6d764 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x00002aaaaad6cdc7 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x00002aaaaad04491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00002aaaaadf6114 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00002aaaaade0275 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaad94b69 : add dword ptr [rcx - 0x7f], eax ; ret
0x00002aaaaad602e7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae862f5 : add dword ptr [rcx], 0 ; or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaadfcf8b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x00002aaaaae6b885 : add dword ptr [rcx], 0xf65d8400 ; call rsp
0x00002aaaaad7e8eb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaadf5d2b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae6a55d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaada9605 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00002aaaaada964f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaaddc123 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00002aaaaadba54b : add dword ptr [rcx], edi ; ret
0x00002aaaaadab9b9 : add dword ptr [rcx], edi ; ret 0xe875
0x00002aaaaadb8243 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaad53204 : add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaae0e5a0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00002aaaaae0e560 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaae0e5ef : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaae5aa6f : add dword ptr [rdi + 1], ecx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaae469ca : add dword ptr [rdi + 3], esi ; ret
0x00002aaaaad67e07 : add dword ptr [rdi - 0x1a], edi ; ret
0x00002aaaaae82493 : add dword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaae7d353 : add dword ptr [rdi], 2 ; ret
0x00002aaaaae8dc63 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaae8077b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaadf7580 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaada7fb8 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaad00e35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00002aaaaacf8942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaad94801 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaad7ce4c : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaad7ce37 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaad073b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaae3aede : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaadb6a12 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaad30530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00002aaaaadbe309 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00002aaaaadf1e13 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x00002aaaaad19dbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00002aaaaadbeb1b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00002aaaaad7cd15 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaad7d210 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00002aaaaad74ed4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00002aaaaae6ed0f : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaad7ca5c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad3e417 : add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaad3e478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00002aaaaad7200d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaaddbb2b : add dword ptr [rdx + rax*2], 1 ; ret
0x00002aaaaae7644e : add dword ptr [rdx + rax], -0xc ; ret
0x00002aaaaad9d583 : add dword ptr [rdx - 0x76b7ffd1], esp ; ret 0x8d48
0x00002aaaaae777ad : add dword ptr [rdx], 0x43 ; ret
0x00002aaaaae79b0e : add dword ptr [rdx], 0x4b ; ret
0x00002aaaaae8d12c : add dword ptr [rdx], 0x51 ; ret
0x00002aaaaae82104 : add dword ptr [rdx], 0x53 ; ret
0x00002aaaaae80b8d : add dword ptr [rdx], 0x54 ; ret
0x00002aaaaae851db : add dword ptr [rdx], 0x5b ; ret
0x00002aaaaae71fb4 : add dword ptr [rdx], 0x63 ; ret
0x00002aaaaae726f4 : add dword ptr [rdx], 0x6f ; ret
0x00002aaaaae75414 : add dword ptr [rdx], 0x77 ; ret
0x00002aaaaae7221d : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaae74c8c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00002aaaaae74a64 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00002aaaaae79b04 : add dword ptr [rdx], 2 ; ret
0x00002aaaaae87fec : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x00002aaaaadf611f : add dword ptr [rdx], eax ; pop rbx ; ret
0x00002aaaaae709a9 : add dword ptr [rdx], ecx ; ret
0x00002aaaaadf611e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x00002aaaaad4fba8 : add dword ptr [rip + 0x348bb5], 1 ; ret
0x00002aaaaad74e65 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00002aaaaae795ef : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaae7385e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0874 ; ret
0x00002aaaaae7386c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaad74ee7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00002aaaaae7b260 : add dword ptr [rsi], 0x77 ; ret
0x00002aaaaae768fe : add dword ptr [rsi], 0xa ; ret
0x00002aaaaae7e700 : add dword ptr [rsi], 2 ; ret
0x00002aaaaae76970 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00002aaaaae790c5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00002aaaaae8229e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00002aaaaad6bfbe : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaada974c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd6763 ; je 0xd66f3 ; pop rbx ; ret
0x00002aaaaae80e2d : add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaad6ff04 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaae81dbd : add dword ptr ds:[rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad073b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaae81d5d : add dword ptr ds:[rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81dd5 : add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae1fc57 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae80545 : add dword ptr es:[rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaae6b32d : add dword ptr fs:[rax], eax ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaada964e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaae8162d : add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae8159d : add dword ptr ss:[rax], eax ; nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaad5dfab : add eax, 0x10 ; ret
0x00002aaaaad617a1 : add eax, 0x10e4a ; ret
0x00002aaaaae06e52 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x00002aaaaacffb3a : add eax, 0x15f406 ; ret
0x00002aaaaacf3932 : add eax, 0x16b154 ; ret
0x00002aaaaacf3942 : add eax, 0x16d066 ; ret
0x00002aaaaad91b40 : add eax, 0x16e ; ret
0x00002aaaaad5df5f : add eax, 0x1713c ; ret
0x00002aaaaad5bcff : add eax, 0x1777c ; ret
0x00002aaaaad6163b : add eax, 0x1b330 ; ret
0x00002aaaaad60a97 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00002aaaaae8f605 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00002aaaaae7c0f4 : add eax, 0x2300e44 ; ret 0xe0a
0x00002aaaaae78054 : add eax, 0x2300e4a ; ret
0x00002aaaaae7a204 : add eax, 0x2300e55 ; ret
0x00002aaaaad61015 : add eax, 0x26 ; ret
0x00002aaaaae13335 : add eax, 0x2840d6 ; call qword ptr [rax]
0x00002aaaaae12d22 : add eax, 0x2846e9 ; call qword ptr [rax]
0x00002aaaaae0a792 : add eax, 0x28b701 ; add rsp, 8 ; ret
0x00002aaaaae0a762 : add eax, 0x28b799 ; add rsp, 8 ; ret
0x00002aaaaae0a702 : add eax, 0x28b881 ; add rsp, 8 ; ret
0x00002aaaaae0a732 : add eax, 0x28b8a9 ; add rsp, 8 ; ret
0x00002aaaaad5fe43 : add eax, 0x29000000 ; ret
0x00002aaaaad94bba : add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaad94cfa : add eax, 0x2941c229 ; ret 0x6b45
0x00002aaaaadfae02 : add eax, 0x29b1e1 ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaadfe9ca : add eax, 0x29c3ed ; add rsp, 8 ; ret
0x00002aaaaadfe9b1 : add eax, 0x29c406 ; test eax, eax ; je 0x12b9c9 ; ret
0x00002aaaaadfddca : add eax, 0x29cf71 ; pop rbx ; ret
0x00002aaaaadfdd92 : add eax, 0x29cfa9 ; pop rbx ; ret
0x00002aaaaadfdcd3 : add eax, 0x29d068 ; pop rbx ; ret
0x00002aaaaadfa74b : add eax, 0x2a0314 ; test eax, eax ; je 0x127761 ; ret
0x00002aaaaadf33e2 : add eax, 0x2a4491 ; ret
0x00002aaaaadf2aa0 : add eax, 0x2a4dbb ; add rsp, 8 ; ret
0x00002aaaaade7ef9 : add eax, 0x2b2222 ; pop rbp ; ret
0x00002aaaaaddc752 : add eax, 0x2b9719 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaadd43d0 : add eax, 0x2c4e4b ; add rsp, 0x18 ; ret
0x00002aaaaadd437c : add eax, 0x2c4edf ; pop rbp ; pop r12 ; ret
0x00002aaaaadd3e38 : add eax, 0x2c5393 ; add rsp, 8 ; ret
0x00002aaaaadd3dd9 : add eax, 0x2c5412 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae3af64 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00002aaaaadd0906 : add eax, 0x2c6e95 ; mov rdx, rax ; jmp 0xfd8a6
0x00002aaaaadd0870 : add eax, 0x2c6f2b ; add rsp, 8 ; ret
0x00002aaaaadd1efb : add eax, 0x2c71f0 ; add rsp, 8 ; ret
0x00002aaaaadd19c9 : add eax, 0x2c7652 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd073f : add eax, 0x2c8854 ; ret
0x00002aaaaadd057f : add eax, 0x2c8a14 ; ret
0x00002aaaaadd03ac : add eax, 0x2c8be7 ; add rsp, 8 ; ret
0x00002aaaaae790c3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00002aaaaad8dc2e : add eax, 0x30ad8d ; add rsp, 8 ; ret
0x00002aaaaad5fc27 : add eax, 0x338c5c ; add rsp, 8 ; ret
0x00002aaaaad56560 : add eax, 0x33f97b ; mov qword ptr [rax], rdi ; ret
0x00002aaaaad54166 : add eax, 0x341c65 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad53f41 : add eax, 0x341e8a ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaad56571 : add eax, 0x34224e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad4fb12 : add eax, 0x347a09 ; ret
0x00002aaaaad4fc16 : add eax, 0x348b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad3dc85 : add eax, 0x35aa76 ; pop rbx ; pop rbp ; ret
0x00002aaaaade8682 : add eax, 0x37c19 ; ret
0x00002aaaaade8772 : add eax, 0x37ec9 ; ret
0x00002aaaaad098bc : add eax, 0x38c7cb ; mov eax, edx ; ret
0x00002aaaaad09881 : add eax, 0x38c802 ; ret
0x00002aaaaad09871 : add eax, 0x38c816 ; ret
0x00002aaaaae84a59 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaad0e0e2 : add eax, 0x38d36f ; add rsp, 8 ; ret
0x00002aaaaad009cd : add eax, 0x39541e ; mov qword ptr [rax], rdx ; ret
0x00002aaaaacfcc92 : add eax, 0x39ac59 ; ret
0x00002aaaaacf4a52 : add eax, 0x3a68b9 ; ret
0x00002aaaaacf4a42 : add eax, 0x3a68d9 ; ret
0x00002aaaaae07114 : add eax, 0x3d8d4800 ; ret
0x00002aaaaae0ba15 : add eax, 0x3d8d4800 ; ret 0x535
0x00002aaaaadc83b7 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x00002aaaaae3d498 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00002aaaaae39148 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00002aaaaad78246 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaadf7582 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaad70daa : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00002aaaaae5a4b5 : add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00002aaaaae5bddd : add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaae5bde9 : add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaae3d519 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaae39189 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00002aaaaae5be61 : add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaadd87f0 : add eax, 0x5b000000 ; pop rbp ; ret
0x00002aaaaad41576 : add eax, 0x5b000000 ; ret
0x00002aaaaae053aa : add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2e629
0x00002aaaaacd4569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x00002aaaaae5321d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00002aaaaad51c18 : add eax, 0x5c415d5b ; ret
0x00002aaaaadc20dd : add eax, 0x5d000000 ; pop r12 ; ret
0x00002aaaaadfd502 : add eax, 0x61a3e ; ret
0x00002aaaaae5be6d : add eax, 0x628fff5 ; cmc ; call qword ptr [rcx]
0x00002aaaaae8f169 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00002aaaaae8e465 : add eax, 0x6f980002 ; clc ; call rcx
0x00002aaaaae6dcc5 : add eax, 0x73340001 ; sti ; call rsp
0x00002aaaaae8e51d : add eax, 0x74000002 ; clc ; call qword ptr [rdi]
0x00002aaaaada5677 : add eax, 0x740e3941 ; ret
0x00002aaaaad8c2ba : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00002aaaaad8c266 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x00002aaaaad0150f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaad61e3b : add eax, 0x80 ; ret
0x00002aaaaad103bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaad78a4e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00002aaaaadab9b3 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaad7cd0f : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaadb5704 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaadca87b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae178fd : add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1a451 : add eax, 0x83480000 ; ret 0xe910
0x00002aaaaae17851 : add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaada785d : add eax, 0x83480f75 ; ret
0x00002aaaaae3d49b : add eax, 0x8428d48 ; ret
0x00002aaaaad3ed9a : add eax, 0x89480012 ; ret 0x8948
0x00002aaaaae01efb : add eax, 0x894c0000 ; ret
0x00002aaaaad4234e : add eax, 0x89c08500 ; ret 0x8389
0x00002aaaaade7dc9 : add eax, 0x89c78944 ; ret
0x00002aaaaacf9b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaacf9af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x00002aaaaacf9b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaacf9e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaacf9e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaad7a0f2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00002aaaaae0a756 : add eax, 0xa0 ; add rsp, 8 ; ret
0x00002aaaaae0a786 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00002aaaaad66890 : add eax, 0xb3db ; ret
0x00002aaaaad66861 : add eax, 0xb63a ; ret
0x00002aaaaad668a4 : add eax, 0xbcb07 ; ret
0x00002aaaaad5feec : add eax, 0xbcd7f ; ret
0x00002aaaaad5fb5c : add eax, 0xbcfdf ; ret
0x00002aaaaad617e2 : add eax, 0xbee69 ; ret
0x00002aaaaad5d6ec : add eax, 0xbf30f ; ret
0x00002aaaaad5c14f : add eax, 0xc ; ret
0x00002aaaaae12c2e : add eax, 0xc0310000 ; pop rbx ; ret
0x00002aaaaae4189a : add eax, 0xc0310000 ; ret
0x00002aaaaacd3451 : add eax, 0xc1c107c ; ret 0x4412
0x00002aaaaad7e0ed : add eax, 0xc20ce ; ret
0x00002aaaaad7ecc9 : add eax, 0xc31b2 ; ret
0x00002aaaaae3d51d : add eax, 0xc428d48 ; ret
0x00002aaaaad7988d : add eax, 0xc478d48 ; ret
0x00002aaaaad7ecd1 : add eax, 0xc5a6a ; ret
0x00002aaaaad040d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00002aaaaad61e9e : add eax, 0xd ; ret
0x00002aaaaad7a6cd : add eax, 0xd478d48 ; ret
0x00002aaaaad5f83f : add eax, 0xd999c ; ret
0x00002aaaaad61ccf : add eax, 0xda08c ; ret
0x00002aaaaad5d5df : add eax, 0xda44c ; ret
0x00002aaaaad61def : add eax, 0xdb77c ; ret
0x00002aaaaad61029 : add eax, 0xdf812 ; ret
0x00002aaaaad61031 : add eax, 0xe1f9a ; ret
0x00002aaaaad5beec : add eax, 0xe6dbf ; ret
0x00002aaaaad59d54 : add eax, 0xe8000000 ; ret
0x00002aaaaae0b955 : add eax, 0xe8000000 ; ret 0xef5c
0x00002aaaaad707fe : add eax, 0xe9000000 ; ret
0x00002aaaaad7ecb5 : add eax, 0xe916 ; ret
0x00002aaaaada6a16 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaad7e0e5 : add eax, 0xf596 ; ret
0x00002aaaaadd5f42 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00002aaaaadd5f67 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00002aaaaadd60b0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00002aaaaadd6149 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaae2dbb3 : add eax, 0xf7f0ff3 ; ret
0x00002aaaaad1f8ad : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad206d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaad21d8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaade8641 : add eax, 0xfff8984a ; ret
0x00002aaaaade8731 : add eax, 0xfff89eaa ; ret
0x00002aaaaade87bb : add eax, 0xfff941a0 ; ret
0x00002aaaaae0920e : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00002aaaaad299f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00002aaaaadc8e87 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x00002aaaaaddc01b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaaddbdcc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00002aaaaad7cdea : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad61c7b : add eax, 1 ; ret
0x00002aaaaacf48e5 : add eax, 2 ; push rax ; call rbx
0x00002aaaaad7e388 : add eax, 2 ; ret
0x00002aaaaad7e3a1 : add eax, 3 ; ret
0x00002aaaaada960b : add eax, 8 ; ret
0x00002aaaaacf3be9 : add eax, dword ptr [0] ; ret
0x00002aaaaad13f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00002aaaaad85775 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00002aaaaad51dc3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaad50abb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaae73885 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x30], bl ; in al, dx ; jmp rbx
0x00002aaaaadb301d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00002aaaaad55744 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaacf3c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadc4208 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaadf4ac8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00002aaaaae17a9d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a5f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17ac1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae054ae : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae01c2b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaaddb726 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaade7c17 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00002aaaaadd4cac : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00002aaaaadd648d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00002aaaaadd64e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00002aaaaadd6564 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00002aaaaadd6664 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00002aaaaad7e3e3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaadcff33 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00002aaaaadf45a4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00002aaaaad7ce47 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00002aaaaae0a7df : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00002aaaaade74e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaadb0212 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00002aaaaad0df9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00002aaaaad532e3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaadf79d5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaad27f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed1 ; ret 0xe680
0x00002aaaaadd0077 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad7d070 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaad7d090 : add eax, dword ptr [rax] ; ret
0x00002aaaaae7cc43 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00002aaaaae76652 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x00002aaaaadf601d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302e ; ret
0x00002aaaaae3af29 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00002aaaaad47d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00002aaaaae6f50a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00002aaaaae7440a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x00002aaaaaddd1ba : add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaadf8b0d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x00002aaaaae6a5e5 : add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaad06e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaad393b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaae1620a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaae15b2e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaaddcf96 : add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaae3b029 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00002aaaaae7ddf0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00002aaaaae75052 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00002aaaaae8cafa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00002aaaaae72b72 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00002aaaaae7644a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00002aaaaae8229a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00002aaaaad7d141 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad234c8 : add eax, eax ; ret
0x00002aaaaae11416 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad5799a : add eax, ebp ; jmp rax
0x00002aaaaad67ba0 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaadd50a3 : add eax, ebx ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaade8807 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad2c823 : add eax, ecx ; jmp rax
0x00002aaaaad60d4a : add eax, ecx ; ret
0x00002aaaaad71665 : add eax, edi ; add rax, r8 ; ret
0x00002aaaaad60d47 : add eax, edi ; add rax, rcx ; ret
0x00002aaaaad92504 : add eax, edi ; jmp rax
0x00002aaaaad5f8ab : add eax, edi ; ret
0x00002aaaaae1ca5b : add eax, edi ; sub rax, r8 ; ret
0x00002aaaaae1ccb0 : add eax, edi ; sub rax, rdx ; ret
0x00002aaaaadc8e5d : add eax, edx ; cmp rdi, rsi ; ja 0xf5e58 ; ret
0x00002aaaaad01c9a : add eax, edx ; jmp rax
0x00002aaaaae00c8e : add eax, edx ; ret
0x00002aaaaad5dd06 : add eax, edx ; sub rax, rdi ; ret
0x00002aaaaadd0075 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad01bbc : add eax, esi ; jmp rax
0x00002aaaaad8eb17 : add eax, esi ; ret
0x00002aaaaad234c7 : add eax, r8d ; ret
0x00002aaaaad23198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaae8dc65 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00002aaaaad8df0b : add ebp, dword ptr [rcx] ; ret 0x48d
0x00002aaaaadfe014 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00002aaaaae8e8b3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaadb7e28 : add ebp, eax ; ret 0xf3a9
0x00002aaaaae74891 : add ebp, ebp ; call qword ptr [rsi]
0x00002aaaaae8e8b5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaae8e8a5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaacd6182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaada288e : add ebx, 1 ; mov rdx, rax ; jmp 0xcf835
0x00002aaaaae15c32 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00002aaaaae465b9 : add ebx, dword ptr [rbp + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b0
0x00002aaaaadf654d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00002aaaaae76668 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00002aaaaadf8ad9 : add ebx, dword ptr [rip + 0xf48002a] ; ret 0xff81
0x00002aaaaade6e3c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00002aaaaad1b471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaadd0e5b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaacd6792 : add ebx, ebp ; in al, -0x12 ; jne 0x3778 ; ret 0x975
0x00002aaaaadd4271 : add ebx, ebp ; ret
0x00002aaaaad3345d : add ebx, ebp ; ret 0x894c
0x00002aaaaae5ea11 : add ebx, edi ; call rax
0x00002aaaaae5ea0d : add ebx, edi ; dec eax ; add ebx, edi ; call rax
0x00002aaaaae5ea15 : add ebx, edi ; jmp rax
0x00002aaaaae2dd73 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaaddc88f : add ebx, esi ; ret
0x00002aaaaae0cb9e : add ebx, esp ; call r14
0x00002aaaaad61734 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8e729 ; ret
0x00002aaaaadc7f9f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaadf63ad : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaad74f6a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00002aaaaadf0598 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00002aaaaad5145a : add ecx, dword ptr [rax + 0x29] ; ret
0x00002aaaaada77c5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00002aaaaade3d24 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00002aaaaadf1b19 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00002aaaaad69281 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x00002aaaaadf1279 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad690af : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaacf9b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaad454b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaaddb76d : add ecx, dword ptr [rax - 0x42] ; ret
0x00002aaaaadf656c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00002aaaaadd1664 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00002aaaaad70d8a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00002aaaaad55d7e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaad51cd8 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaade4217 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x00002aaaaacf7205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaad0bf4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad0c027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad4a75b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00002aaaaad1037d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaae15ef1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x00002aaaaae2dae2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad781e4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00002aaaaadcc7e9 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00002aaaaade56a4 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00002aaaaad74f6b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00002aaaaad8b6b9 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00002aaaaad8a378 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00002aaaaad269a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00002aaaaae7a2b2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00002aaaaae793b8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaae8da1d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaad78a10 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaae8077f : add ecx, dword ptr [rdx] ; ret
0x00002aaaaae776db : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00002aaaaacfee48 : add ecx, eax ; jmp rcx
0x00002aaaaae233cb : add ecx, ebx ; jmp r9
0x00002aaaaad1ac96 : add ecx, ebx ; jmp rcx
0x00002aaaaadd4864 : add ecx, ebx ; ret
0x00002aaaaadd4578 : add ecx, ebx ; ret 0x3944
0x00002aaaaad0629c : add ecx, edi ; jmp rcx
0x00002aaaaad36e4a : add ecx, edx ; jmp rcx
0x00002aaaaad7d0e4 : add ecx, esi ; jmp rcx
0x00002aaaaae051dd : add edi, 0x10 ; jmp rcx
0x00002aaaaadfe36f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaae0054a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaae07c84 : add edi, 0x58 ; jmp rcx
0x00002aaaaae073e4 : add edi, 0x68 ; jmp rcx
0x00002aaaaae04667 : add edi, 0xc8 ; jmp rcx
0x00002aaaaad70d64 : add edi, 1 ; mov rax, rdi ; ret
0x00002aaaaada3a1b : add edi, 1 ; test dl, dl ; jne 0xd0a09 ; ret
0x00002aaaaad70d75 : add edi, 2 ; mov rax, rdi ; ret
0x00002aaaaad70d88 : add edi, 3 ; mov rax, rdi ; ret
0x00002aaaaad70d95 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaad70da8 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaad70d32 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaae44f7f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00002aaaaae774a3 : add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00002aaaaacf38f4 : add edi, ebp ; call rax
0x00002aaaaae591c8 : add edi, ebp ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae591cc : add edi, ebp ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae797d1 : add edi, ebp ; jmp rsi
0x00002aaaaae67221 : add edi, ebx ; call qword ptr [rax]
0x00002aaaaadb3e9d : add edi, ebx ; jmp rdi
0x00002aaaaae233c8 : add edi, edx ; add r9, r11 ; jmp r9
0x00002aaaaae6d3e1 : add edi, edx ; call rsp
0x00002aaaaadf6385 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaad3faa2 : add edi, esi ; jmp rdi
0x00002aaaaae67879 : add edi, esp ; call qword ptr [rax]
0x00002aaaaae67859 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaae678fd : add edi, esp ; jmp rax
0x00002aaaaadf6311 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaad16417 : add edx, dword ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaad71568 : add edx, eax ; jl 0x9e5d7 ; add rax, rdi ; ret
0x00002aaaaad71578 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad71598 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad715b8 : add edx, eax ; jl 0x9e5d9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad70d1c : add edx, eax ; jmp r10
0x00002aaaaacf40b8 : add edx, eax ; jmp rdx
0x00002aaaaad1c0b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaadb36b7 : add edx, ecx ; jmp rdx
0x00002aaaaadc89d4 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae5a429 : add edx, esi ; call qword ptr [rax]
0x00002aaaaae5a409 : add edx, esi ; call rax
0x00002aaaaae5a405 : add edx, esi ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaae5a421 : add edx, esi ; jmp rax
0x00002aaaaad976b5 : add edx, esi ; jmp rdx
0x00002aaaaad8dcd5 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00002aaaaae5a425 : add edx, esi ; push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaae06435 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad7c099 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaae751c2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00002aaaaae094e4 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae09996 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae82392 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x00002aaaaae001b2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00002aaaaacfd697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00002aaaaad7123a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad712b9 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad1906b : add esi, eax ; jmp qword ptr [rax]
0x00002aaaaad018f2 : add esi, eax ; jmp rsi
0x00002aaaaae0e1f3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaae8e885 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaae81919 : add esi, ebp ; call qword ptr [rdi]
0x00002aaaaae77cc1 : add esi, ebp ; call qword ptr [rsi]
0x00002aaaaae2dc93 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae153f3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaadc900c : add esi, ebx ; ret
0x00002aaaaad08f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaae42c9c : add esi, edi ; fadd st(3) ; ret
0x00002aaaaad7d129 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad06413 : add esi, edi ; jmp rsi
0x00002aaaaae233c5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaae7cbb9 : add esi, edx ; call rdi
0x00002aaaaae5a46d : add esi, edx ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaae5a465 : add esi, edx ; inc eax ; add esi, edx ; jmp rax
0x00002aaaaae5a451 : add esi, edx ; jmp qword ptr [rax]
0x00002aaaaae5a469 : add esi, edx ; jmp rax
0x00002aaaaada96db : add esi, esi ; ret
0x00002aaaaad41948 : add esi, esi ; ret 0x7420
0x00002aaaaae00f88 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00002aaaaad5a954 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaae0e7f6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad428c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaad0ddae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0883e : add esp, 0x10 ; pop rbx ; ret
0x00002aaaaad58ec7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad8c441 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad60b8f : add esp, 0x100 ; ret
0x00002aaaaad5d78d : add esp, 0x100 ; sub rax, rdx ; ret
0x00002aaaaad3dd23 : add esp, 0x1000 ; pop rbx ; ret
0x00002aaaaad3dd31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad089dd : add esp, 0x108 ; ret
0x00002aaaaadca6be : add esp, 0x120 ; pop rbx ; ret
0x00002aaaaad08d8b : add esp, 0x140 ; pop rbx ; ret
0x00002aaaaad083ab : add esp, 0x148 ; ret
0x00002aaaaadf25c0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaadcf83d : add esp, 0x18 ; mov eax, edx ; ret
0x00002aaaaad3e316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00002aaaaae0cf96 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaae0e76c : add esp, 0x18 ; movzx eax, al ; ret
0x00002aaaaad7189b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadfef12 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaad0e175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0db50 : add esp, 0x18 ; ret
0x00002aaaaad9e6b2 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaadc9cb7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad1d803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaad421b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad44cc8 : add esp, 0x20 ; pop rbx ; ret
0x00002aaaaae05f79 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc9c64 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaacf3b8e : add esp, 0x28 ; jmp rax
0x00002aaaaacf36bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad17c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad07ad3 : add esp, 0x28 ; ret
0x00002aaaaad3dc51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaadceb15 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaadf3e4a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadfdc9b : add esp, 0x30 ; pop rbx ; ret
0x00002aaaaadf3e79 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaada04e8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9baf7 : add esp, 0x38 ; ret
0x00002aaaaad08e0c : add esp, 0x40 ; pop rbx ; ret
0x00002aaaaaddc818 : add esp, 0x40 ; ret
0x00002aaaaae05d05 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd7578 : add esp, 0x408 ; ret
0x00002aaaaad1d67c : add esp, 0x440 ; pop rbx ; ret
0x00002aaaaadcad72 : add esp, 0x48 ; movzx eax, al ; ret
0x00002aaaaae01b17 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadf7584 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9c3d2 : add esp, 0x48 ; ret
0x00002aaaaad7ef5c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae12c2b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadcee4f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadc9557 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc9b10 : add esp, 0x60 ; pop rbx ; ret
0x00002aaaaadbae91 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaae0ab7c : add esp, 0x68 ; ret
0x00002aaaaae09270 : add esp, 0x70 ; pop rbx ; ret
0x00002aaaaadd814d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaad27e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad489a0 : add esp, 0x80 ; mov eax, edx ; ret
0x00002aaaaad3ea61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad50f30 : add esp, 0x80 ; mov rax, r8 ; ret
0x00002aaaaad18383 : add esp, 0x80 ; pop rbx ; ret
0x00002aaaaad3e4b9 : add esp, 0x80 ; ret
0x00002aaaaad0cedf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad088d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaad08b99 : add esp, 0x90 ; pop rbx ; ret
0x00002aaaaad09951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaacf39af : add esp, 0x98 ; ret
0x00002aaaaae08f74 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad09cfd : add esp, 0xa8 ; ret
0x00002aaaaad8ea56 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad3e62d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad9a38e : add esp, 0xd0 ; pop rbx ; ret
0x00002aaaaad0869a : add esp, 0xd0 ; ret
0x00002aaaaadd737e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad18cf4 : add esp, 0xd8 ; ret
0x00002aaaaae05473 : add esp, 8 ; add eax, 2 ; ret
0x00002aaaaad5fcad : add esp, 8 ; jmp rax
0x00002aaaaadf629d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00002aaaaad230df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaad4343d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaacf4218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x00002aaaaad18c44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e77e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad711cd : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaad056a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaad50b28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaad92284 : add esp, 8 ; mov rax, rdx ; ret
0x00002aaaaad0d1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaad57e0f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaae0cd1c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaad4afc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00002aaaaae019f7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaad183b6 : add esp, 8 ; movzx eax, al ; ret
0x00002aaaaadf99ea : add esp, 8 ; movzx eax, ax ; ret
0x00002aaaaae00c89 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaad44fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaad05dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaacf4a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4c158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaad08133 : add esp, 8 ; ret
0x00002aaaaae12a71 : add esp, 8 ; sar eax, 0x1f ; ret
0x00002aaaaae0e864 : add esp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaad4ad51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaadbcd4b : add esp, 8 ; xor eax, eax ; ret
0x00002aaaaae852ac : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x00002aaaaae677f5 : add esp, edi ; call rax
0x00002aaaaae67875 : add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaae67895 : add esp, edi ; push rax ; add bh, ah ; call rax
0x00002aaaaadef3f7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00002aaaaae8077a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaae82efd : add qword ptr [r8], r8 ; adc byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae82e3d : add qword ptr [r8], r8 ; and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82ee5 : add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82e55 : add qword ptr [r8], r8 ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82d35 : add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82f2d : add qword ptr [r8], r8 ; jo 0x1aff2e ; jmp qword ptr [rcx]
0x00002aaaaae82ecd : add qword ptr [r8], r8 ; loopne 0x1aff47 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82e9d : add qword ptr [r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82f15 : add qword ptr [r8], r8 ; sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae6b015 : add qword ptr [r8], rax ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaade0274 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x00002aaaaacf6c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00002aaaaae82bed : add qword ptr [rax], r8 ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82bd5 : add qword ptr [rax], r8 ; call 0x221af14f
0x00002aaaaae82c35 : add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaae82df5 : add qword ptr [rax], r8 ; fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae82dad : add qword ptr [rax], r8 ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82e25 : add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82d4d : add qword ptr [rax], r8 ; push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82c05 : add qword ptr [rax], r8 ; sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82dc5 : add qword ptr [rax], r8 ; test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadf161c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae829bd : add qword ptr [rax], rax ; and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaae82a35 : add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82975 : add qword ptr [rax], rax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae829ed : add qword ptr [rax], rax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae82492 : add qword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaae3aedd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaae82e9c : add qword ptr fs:[r8], r8 ; mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad70d1b : add r10, rax ; jmp r10
0x00002aaaaae2dd72 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dd02 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dc92 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae6d3e0 : add r15d, edx ; call rsp
0x00002aaaaae1c680 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18b14 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaadaa65d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00002aaaaadf61f1 : add r8b, byte ptr [r8] ; jne 0x123247 ; mov eax, r8d ; ret
0x00002aaaaad70ec4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad70e34 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00002aaaaae6d74d : add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaad27f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed2 ; ret 0xe680
0x00002aaaaae15ef0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaae233ca : add r9, r11 ; jmp r9
0x00002aaaaacf9e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00002aaaaadf58d5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00002aaaaadbf9d9 : add r9b, r13b ; ret
0x00002aaaaacf9e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x00002aaaaae1f832 : add rax, -0x7cb80000 ; ret 0xe910
0x00002aaaaae3af63 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00002aaaaad7cde9 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad7e390 : add rax, 1 ; ret
0x00002aaaaad7e387 : add rax, 2 ; ret
0x00002aaaaad7e3a0 : add rax, 3 ; ret
0x00002aaaaacf3be8 : add rax, qword ptr [0] ; ret
0x00002aaaaad06e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaae16209 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00002aaaaae15b2d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00002aaaaacf3be7 : add rax, qword ptr fs:[0] ; ret
0x00002aaaaad57999 : add rax, r13 ; jmp rax
0x00002aaaaad01bbb : add rax, r14 ; jmp rax
0x00002aaaaad71667 : add rax, r8 ; ret
0x00002aaaaad70e84 : add rax, r9 ; jmp rax
0x00002aaaaade8806 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad2c822 : add rax, rcx ; jmp rax
0x00002aaaaad60d49 : add rax, rcx ; ret
0x00002aaaaad71664 : add rax, rdi ; add rax, r8 ; ret
0x00002aaaaad60d46 : add rax, rdi ; add rax, rcx ; ret
0x00002aaaaad92503 : add rax, rdi ; jmp rax
0x00002aaaaad5f8aa : add rax, rdi ; ret
0x00002aaaaae1ca5a : add rax, rdi ; sub rax, r8 ; ret
0x00002aaaaae1ccaf : add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaad01c99 : add rax, rdx ; jmp rax
0x00002aaaaad5dd05 : add rax, rdx ; sub rax, rdi ; ret
0x00002aaaaad20a50 : add rax, rsi ; jmp rax
0x00002aaaaada288d : add rbx, 1 ; mov rdx, rax ; jmp 0xcf836
0x00002aaaaae465b8 : add rbx, qword ptr [r13 + 0x70] ; mov rdi, qword ptr [rbx] ; call 0x1f8b1
0x00002aaaaae0cb9d : add rbx, r12 ; call r14
0x00002aaaaada3d42 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x00002aaaaad1ac95 : add rcx, r11 ; jmp rcx
0x00002aaaaacfee47 : add rcx, r8 ; jmp rcx
0x00002aaaaad36888 : add rcx, rax ; jmp rcx
0x00002aaaaad0629b : add rcx, rdi ; jmp rcx
0x00002aaaaad36e49 : add rcx, rdx ; jmp rcx
0x00002aaaaad7d0e3 : add rcx, rsi ; jmp rcx
0x00002aaaaae051dc : add rdi, 0x10 ; jmp rcx
0x00002aaaaadfe36e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaae00549 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00002aaaaae07c83 : add rdi, 0x58 ; jmp rcx
0x00002aaaaae073e3 : add rdi, 0x68 ; jmp rcx
0x00002aaaaae04666 : add rdi, 0xc8 ; jmp rcx
0x00002aaaaad70d63 : add rdi, 1 ; mov rax, rdi ; ret
0x00002aaaaada3a1a : add rdi, 1 ; test dl, dl ; jne 0xd0a0a ; ret
0x00002aaaaad70d74 : add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaad70d87 : add rdi, 3 ; mov rax, rdi ; ret
0x00002aaaaae44f7e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaadb3e9c : add rdi, r11 ; jmp rdi
0x00002aaaaacf38f3 : add rdi, rbp ; call rax
0x00002aaaaae233c7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaadf6384 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaad3faa1 : add rdi, rsi ; jmp rdi
0x00002aaaaad956ac : add rdx, r8 ; jmp rdx
0x00002aaaaad1c0b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaad71567 : add rdx, rax ; jl 0x9e5d8 ; add rax, rdi ; ret
0x00002aaaaad71566 : add rdx, rax ; jl 0x9e5d9 ; add rax, rdi ; ret
0x00002aaaaacf40b7 : add rdx, rax ; jmp rdx
0x00002aaaaadb36b6 : add rdx, rcx ; jmp rdx
0x00002aaaaad976b4 : add rdx, rsi ; jmp rdx
0x00002aaaaae06434 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad018f1 : add rsi, rax ; jmp rsi
0x00002aaaaae0e1f2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaad06412 : add rsi, rdi ; jmp rsi
0x00002aaaaad5a953 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaae0e7f5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad428c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaad0ddad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0883d : add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad8c440 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad60b8e : add rsp, 0x100 ; ret
0x00002aaaaad3dd22 : add rsp, 0x1000 ; pop rbx ; ret
0x00002aaaaad089dc : add rsp, 0x108 ; ret
0x00002aaaaadca6bd : add rsp, 0x120 ; pop rbx ; ret
0x00002aaaaad08d8a : add rsp, 0x140 ; pop rbx ; ret
0x00002aaaaad083aa : add rsp, 0x148 ; ret
0x00002aaaaadf25bf : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaadcf83c : add rsp, 0x18 ; mov eax, edx ; ret
0x00002aaaaad3e315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00002aaaaae0cf95 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaae0e76b : add rsp, 0x18 ; movzx eax, al ; ret
0x00002aaaaad0e174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0db4f : add rsp, 0x18 ; ret
0x00002aaaaad9e6b1 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaad1d802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaad421b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad44cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaadc9c63 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaacf3b8d : add rsp, 0x28 ; jmp rax
0x00002aaaaad17c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad07ad2 : add rsp, 0x28 ; ret
0x00002aaaaad3dc50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaadceb14 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaadf3e49 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadfdc9a : add rsp, 0x30 ; pop rbx ; ret
0x00002aaaaada04e7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9baf6 : add rsp, 0x38 ; ret
0x00002aaaaad08e0b : add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaaddc817 : add rsp, 0x40 ; ret
0x00002aaaaadd7577 : add rsp, 0x408 ; ret
0x00002aaaaad1d67b : add rsp, 0x440 ; pop rbx ; ret
0x00002aaaaadcad71 : add rsp, 0x48 ; movzx eax, al ; ret
0x00002aaaaadf7583 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9c3d1 : add rsp, 0x48 ; ret
0x00002aaaaad7ef5b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadcee4e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadc9556 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc9b0f : add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaae0ab7b : add rsp, 0x68 ; ret
0x00002aaaaae0926f : add rsp, 0x70 ; pop rbx ; ret
0x00002aaaaadd814c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4899f : add rsp, 0x80 ; mov eax, edx ; ret
0x00002aaaaad18382 : add rsp, 0x80 ; pop rbx ; ret
0x00002aaaaad3e4b8 : add rsp, 0x80 ; ret
0x00002aaaaad088d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00002aaaaad08b98 : add rsp, 0x90 ; pop rbx ; ret
0x00002aaaaad09950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00002aaaaacf39ae : add rsp, 0x98 ; ret
0x00002aaaaae08f73 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad09cfc : add rsp, 0xa8 ; ret
0x00002aaaaad9a38d : add rsp, 0xd0 ; pop rbx ; ret
0x00002aaaaad08699 : add rsp, 0xd0 ; ret
0x00002aaaaadd737d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad18cf3 : add rsp, 0xd8 ; ret
0x00002aaaaae05472 : add rsp, 8 ; add eax, 2 ; ret
0x00002aaaaad5fcac : add rsp, 8 ; jmp rax
0x00002aaaaad230de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaad4343c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaacf4217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00002aaaaad18c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad711cc : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaad056a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaad50b27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaad92283 : add rsp, 8 ; mov rax, rdx ; ret
0x00002aaaaad0d1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaad57e0e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaae0cd1b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaad4afc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00002aaaaae019f6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaad183b5 : add rsp, 8 ; movzx eax, al ; ret
0x00002aaaaadf99e9 : add rsp, 8 ; movzx eax, ax ; ret
0x00002aaaaae00c88 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaad44fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaacf4a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4c157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaad08132 : add rsp, 8 ; ret
0x00002aaaaae12a70 : add rsp, 8 ; sar eax, 0x1f ; ret
0x00002aaaaae0e863 : add rsp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaad4ad50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaadbcd4a : add rsp, 8 ; xor eax, eax ; ret
0x00002aaaaad668ee : add sil, sil ; ret 0x7404
0x00002aaaaae678f4 : add spl, dil ; call qword ptr [rax]
0x00002aaaaaddbde3 : add word ptr [rax], 1 ; ret
0x00002aaaaaddbb2a : add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaae67b41 : and ah, bh ; jmp rax
0x00002aaaaade7efa : and ah, byte ptr [rdx] ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x00002aaaaae6b1c1 : and ah, dh ; call rsp
0x00002aaaaae81630 : and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae7036d : and al, 0 ; add al, ah ; jl 0x19d362 ; call qword ptr [rcx]
0x00002aaaaad75721 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaad69131 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaae7040d : and al, 0 ; add byte ptr [rax], al ; jle 0x19d402 ; jmp qword ptr [rsi]
0x00002aaaaad690c2 : and al, 0 ; je 0x960d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc9b3d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00002aaaaadc4b20 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae0930b : and al, 0x10 ; call qword ptr [r10]
0x00002aaaaad9af60 : and al, 0x10 ; call rax
0x00002aaaaae07fcf : and al, 0x10 ; call rcx
0x00002aaaaad5414a : and al, 0x10 ; call rdi
0x00002aaaaad07f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00002aaaaade12f2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00002aaaaadd5241 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaad47fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00002aaaaadfe43a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00002aaaaade11ee : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaad54033 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaacf9a19 : and al, 0x14 ; jmp 0x26830
0x00002aaaaacf9a18 : and al, 0x14 ; jmp 0x26831
0x00002aaaaad51c49 : and al, 0x14 ; pop r12 ; ret
0x00002aaaaad1605c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaad19dba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00002aaaaad566eb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaadb65d0 : and al, 0x18 ; call 0x1f8a4
0x00002aaaaad10fe4 : and al, 0x18 ; call 0x3c0a8
0x00002aaaaadfeeda : and al, 0x18 ; call qword ptr [rax]
0x00002aaaaacf7073 : and al, 0x18 ; call r12
0x00002aaaaacf382c : and al, 0x18 ; call rax
0x00002aaaaae04b97 : and al, 0x18 ; call rcx
0x00002aaaaadfec09 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaae0a270 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaad70d4d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaad54145 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaacf4858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00002aaaaad9b701 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaacf7367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaacf7d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaad7fab7 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaad0b381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00002aaaaad480c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00002aaaaad7fd67 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaad7f7ff : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaadc2459 : and al, 0x18 ; mov rdx, rax ; jmp 0xef497
0x00002aaaaadc2458 : and al, 0x18 ; mov rdx, rax ; jmp 0xef498
0x00002aaaaae0911c : and al, 0x1c ; call qword ptr [r10]
0x00002aaaaadfede8 : and al, 0x1c ; call qword ptr [rax]
0x00002aaaaae15bb5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00002aaaaadb80d7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad525e5 : and al, 0x20 ; add al, ch ; ret
0x00002aaaaacd3975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00002aaaaadb5a56 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad53d11 : and al, 0x20 ; call qword ptr [rax]
0x00002aaaaacfbabc : and al, 0x20 ; call r14
0x00002aaaaacf6e53 : and al, 0x20 ; call r15
0x00002aaaaad5408d : and al, 0x20 ; call rax
0x00002aaaaad7f4cb : and al, 0x20 ; call rbx
0x00002aaaaae0499f : and al, 0x20 ; call rcx
0x00002aaaaad7f12b : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaadfe3ba : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x137649
0x00002aaaaacf8110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaacf706e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaad8cb3f : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaae6d4f8 : and al, 0x22 ; cli ; call rsp
0x00002aaaaae56384 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00002aaaaad0fe68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaadfe3bf : and al, 0x28 ; call 0x137644
0x00002aaaaadfe3be : and al, 0x28 ; call 0x137645
0x00002aaaaad065db : and al, 0x28 ; call 0x1f8a4
0x00002aaaaad065da : and al, 0x28 ; call 0x1f8a5
0x00002aaaaacf736c : and al, 0x28 ; call rax
0x00002aaaaad7f000 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaad54088 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaacfbab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaacf6e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaad57403 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00002aaaaae0a4b4 : and al, 0x2a ; call qword ptr [rax]
0x00002aaaaadfec0e : and al, 0x2c ; call qword ptr [rax]
0x00002aaaaae80e5c : and al, 0x2f ; add dword ptr [rax], eax ; jo 0x1ade48 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadc6508 : and al, 0x2f ; mov qword ptr [rsp + 0x40], rax ; call 0x1f7f9
0x00002aaaaad1315f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00002aaaaadff37d : and al, 0x30 ; call qword ptr [rax]
0x00002aaaaacf7807 : and al, 0x30 ; call r12
0x00002aaaaacf8592 : and al, 0x30 ; call r14
0x00002aaaaacf8352 : and al, 0x30 ; call r15
0x00002aaaaacf7d07 : and al, 0x30 ; call rax
0x00002aaaaacf78bb : and al, 0x30 ; call rbx
0x00002aaaaad0bfe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaae0e6f9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00002aaaaad8d46e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaad7f9ac : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00002aaaaad309df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00002aaaaada76c1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaacfb2b1 : and al, 0x38 ; call r14
0x00002aaaaacf8b5a : and al, 0x38 ; call r15
0x00002aaaaacfb04a : and al, 0x38 ; call rbx
0x00002aaaaade4fa7 : and al, 0x38 ; jmp 0x111f71
0x00002aaaaade4fa6 : and al, 0x38 ; jmp 0x111f72
0x00002aaaaae15a99 : and al, 0x38 ; jne 0x142a80 ; add rsp, 0x48 ; ret
0x00002aaaaae15a98 : and al, 0x38 ; jne 0x142a81 ; add rsp, 0x48 ; ret
0x00002aaaaadd0165 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaad065d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00002aaaaacf8f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaacf7802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaacf858d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaacf834d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaacf78b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaadd4ad4 : and al, 0x39 ; ret
0x00002aaaaad71096 : and al, 0x39 ; ret 0x2574
0x00002aaaaae0a275 : and al, 0x3a ; call qword ptr [rax]
0x00002aaaaae81d5c : and al, 0x3e ; add dword ptr [rax], eax ; mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadb40ba : and al, 0x40 ; add rax, rdx ; jmp rax
0x00002aaaaadc650d : and al, 0x40 ; call 0x1f7f4
0x00002aaaaadc650c : and al, 0x40 ; call 0x1f7f5
0x00002aaaaacf986a : and al, 0x40 ; call rbx
0x00002aaaaacf9caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaadf9ec1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacfb2ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaacf8b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaacfb045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaadfc925 : and al, 0x41 ; call rsp
0x00002aaaaadcf83b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00002aaaaad9e6c2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaadc8d5e : and al, 0x48 ; add esp, 0x18 ; ret
0x00002aaaaad421b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaaddc7b5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00002aaaaaddc816 : and al, 0x48 ; add esp, 0x40 ; ret
0x00002aaaaad56a33 : and al, 0x48 ; call rax
0x00002aaaaae1592d : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00002aaaaad7eac4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc65ce : and al, 0x48 ; mov qword ptr [r14], rbx ; call 0x1f8af
0x00002aaaaacf9865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaad8e1fd : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaad68f3c : and al, 0x48 ; test esi, esi ; jne 0x95f53 ; jmp 0x95f0d
0x00002aaaaae72e5c : and al, 0x4f ; add byte ptr [rax], al ; nop ; pop rsp ; jmp 0x19fe6a
0x00002aaaaae696f8 : and al, 0x50 ; jmp 0x1966fe
0x00002aaaaae6cf10 : and al, 0x52 ; stc ; call rsp
0x00002aaaaae6d710 : and al, 0x56 ; cli ; jmp rsp
0x00002aaaaad51c44 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaadff94b : and al, 0x60 ; call rax
0x00002aaaaae5c204 : and al, 0x63 ; cmc ; call qword ptr [rbx]
0x00002aaaaae5c2d8 : and al, 0x63 ; cmc ; call rsi
0x00002aaaaae5c2e8 : and al, 0x63 ; cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaadcc7e7 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00002aaaaad8e202 : and al, 0x68 ; call r12
0x00002aaaaad56d3b : and al, 0x68 ; call rax
0x00002aaaaad580cb : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaae6a120 : and al, 0x6e ; out dx, al ; call rsp
0x00002aaaaae15e3d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaad7fc6d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00002aaaaad7f6e3 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00002aaaaae8505c : and al, 0x71 ; add dword ptr [rax], eax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaad9413b : and al, 0x71 ; jmp 0xbf36f
0x00002aaaaadc810d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaae75c5c : and al, 0x7d ; add byte ptr [rax], al ; nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaad11a8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad88062 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaadb156f : and al, 0x83 ; ret 0x4801
0x00002aaaaae5ab6c : and al, 0x84 ; call qword ptr [rsi]
0x00002aaaaadc5824 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaad88c13 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad893bb : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaad548d6 : and al, 0x89 ; ret 0xb48b
0x00002aaaaadc437f : and al, 0x89 ; ret 0xe883
0x00002aaaaacf6ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaadb2be3 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaae7765c : and al, 0x97 ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaacfca6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaad87bc4 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaadad4f9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaae77a5c : and al, 0x9b ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaadad660 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaadb2b4b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaadad7bc : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaadc9a95 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00002aaaaadd0262 : and al, 0xb0 ; ret
0x00002aaaaae01f57 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaad60a98 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00002aaaaad0883b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad0db4d : and al, 0xc ; add rsp, 0x18 ; ret
0x00002aaaaae15be0 : and al, 0xc ; add rsp, 0x38 ; ret
0x00002aaaaad3da55 : and al, 0xc ; call 0xf6d04
0x00002aaaaadc8ef7 : and al, 0xc ; call rax
0x00002aaaaae6da60 : and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaae5b44c : and al, 0xc4 ; call qword ptr [rcx]
0x00002aaaaae5b444 : and al, 0xc4 ; jmp qword ptr [rdi]
0x00002aaaaacd51d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00002aaaaadb2b39 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaae0ec5b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae69c10 : and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaad44868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaadcd961 : and al, 0xe8 ; cdq ; ret
0x00002aaaaad07f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaad0802b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00002aaaaad08009 : and al, 0xe8 ; ret
0x00002aaaaad1d218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad08027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaad08005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaae59e31 : and al, 0xf0 ; jmp qword ptr [rax - 0x1f000fdb]
0x00002aaaaad080c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad8dd46 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaad8dd4c : and al, 0xf0 ; ret
0x00002aaaaae7b721 : and al, 0xf1 ; jmp rcx
0x00002aaaaae7d4a1 : and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae6ae21 : and al, 0xf3 ; jmp rsp
0x00002aaaaad9feea : and al, 0xf3 ; ret
0x00002aaaaae6b791 : and al, 0xf6 ; call rsp
0x00002aaaaae6c8e1 : and al, 0xf8 ; jmp rsp
0x00002aaaaad669f6 : and al, 0xf8 ; jne 0x938d2 ; ret
0x00002aaaaad1d1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaad1d1d7 : and al, 0xf8 ; ret
0x00002aaaaad1d18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaad1d191 : and al, 0xfc ; ret
0x00002aaaaad081a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaad081ab : and al, 0xfe ; ret
0x00002aaaaad91636 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00002aaaaae6d2a5 : and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaae91410 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00002aaaaad0a304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaad78b58 : and al, 7 ; add byte ptr [rax], al ; ret
0x00002aaaaad8c456 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad0dfec : and al, 8 ; add rsp, 0x18 ; ret
0x00002aaaaae00ab7 : and al, 8 ; call qword ptr [rax]
0x00002aaaaad5b672 : and al, 8 ; call qword ptr [rdx]
0x00002aaaaade11f3 : and al, 8 ; call rax
0x00002aaaaadd5158 : and al, 8 ; call rbx
0x00002aaaaadff92f : and al, 8 ; call rcx
0x00002aaaaad0805a : and al, 8 ; fscale ; fstp st(1) ; ret
0x00002aaaaae0d8bf : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaacf2c01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad40e25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaae0d9fc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaadf236b : and al, 8 ; mov rdi, r13 ; call r12
0x00002aaaaae0cfbf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad0ad66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaad0c1a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaad07f3b : and al, 8 ; ret
0x00002aaaaad9e7ec : and al, 8 ; test rax, rax ; je 0xcb7fc ; call rax
0x00002aaaaad9e7eb : and al, 8 ; test rax, rax ; je 0xcb7fd ; call rax
0x00002aaaaae0e6fe : and al, 8 ; xor eax, eax ; call rdx
0x00002aaaaae67630 : and al, bl ; sti ; jmp rax
0x00002aaaaad07b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00002aaaaad08176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaadad37d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae8013d : and al, byte ptr [rcx] ; add al, dh ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6aa9d : and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaadd6eda : and al, byte ptr [rdi + 0x3948fffa] ; ret
0x00002aaaaad5beba : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00002aaaaad00e32 : and ax, 0x100 ; movzx eax, ax ; ret
0x00002aaaaad00e52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x00002aaaaad00d92 : and ax, 0x200 ; movzx eax, ax ; ret
0x00002aaaaad00e12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00002aaaaad00d32 : and ax, 0x400 ; movzx eax, ax ; ret
0x00002aaaaad00dd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x00002aaaaad00d72 : and ax, 0x800 ; movzx eax, ax ; ret
0x00002aaaaad00db2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x00002aaaaae67b09 : and bh, ah ; call qword ptr [rax]
0x00002aaaaad2983e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaacd5f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaae68320 : and bh, byte ptr [rbp - 4] ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaae68330 : and bh, byte ptr [rbx - 4] ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaae68338 : and bh, byte ptr [rdx - 4] ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaae5cd34 : and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d38 ; jmp qword ptr [rdx]
0x00002aaaaae5cd2c : and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaae5cccc : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd0 ; jmp qword ptr [rdx]
0x00002aaaaae5cd68 : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6c ; jmp qword ptr [rdx]
0x00002aaaaae6d4f9 : and bh, dl ; call rsp
0x00002aaaaae87f00 : and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaae67688 : and bl, ah ; sti ; jmp qword ptr [rax]
0x00002aaaaad79137 : and bl, al ; nop dword ptr [rax] ; ret
0x00002aaaaae80c10 : and bl, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae68848 : and bl, byte ptr [rsi - 0x626d0004] ; cld ; jmp qword ptr [rdx]
0x00002aaaaae695b1 : and bl, ch ; call rsp
0x00002aaaaade0b5f : and bl, ch ; ret
0x00002aaaaad5aaf2 : and bl, ch ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00002aaaaad0842f : and bl, dh ; ret
0x00002aaaaade2d10 : and byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaad49b8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaad7c3b6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad4e1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x00002aaaaade2e8d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaad59e8b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaade187d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89d
0x00002aaaaade2d11 : and byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad52cd9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00002aaaaad1de2c : and byte ptr [rax + 1], cl ; ret
0x00002aaaaad71596 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaad7e0ef : and byte ptr [rax + rax], cl ; ret
0x00002aaaaaddaeab : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaacf8111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaad8e2c2 : and byte ptr [rax - 0x75], cl ; je 0xbb2f3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaad545e3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x00002aaaaad49b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaadc5696 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad0d68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x00002aaaaad40fe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaade19dd : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf10e
0x00002aaaaad5ba9b : and byte ptr [rax - 0x77], cl ; jae 0x88ab1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0e463 : and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad92a51 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x00002aaaaae13472 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00002aaaaad90fb6 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00002aaaaad1998c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaadeba55 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x00002aaaaacf5d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00002aaaaacff374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x00002aaaaae0665b : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x00002aaaaacf5b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad4b9d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00002aaaaae68030 : and byte ptr [rax - 4], al ; jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaae67f98 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaae6731c : and byte ptr [rax - 5], 0xff ; shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00002aaaaadbedd0 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00002aaaaadbdf36 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00002aaaaad9ff2b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaad7d10c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad9ff10 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaadf8e8a : and byte ptr [rax], al ; jmp 0x125e53
0x00002aaaaae67fdc : and byte ptr [rax], bh ; cld ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaae679d0 : and byte ptr [rax], ch ; cld ; jmp rax
0x00002aaaaad7a26c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00002aaaaad7c3b7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaae0aafe : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00002aaaaada91bc : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae67380 : and byte ptr [rbp - 0x795f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaada81fc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaae67f70 : and byte ptr [rbp - 4], dl ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaad05fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad421b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae6f50d : and byte ptr [rbx + 0xa410204], al ; ret
0x00002aaaaae7440d : and byte ptr [rbx + 0xa470204], al ; ret
0x00002aaaaae76655 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00002aaaaae7edfd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x00002aaaaae672d4 : and byte ptr [rbx + rdi*8], bh ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaad2d2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00002aaaaad20c5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00002aaaaae673cc : and byte ptr [rbx - 0x5f9a0003], ah ; std ; call qword ptr [rcx]
0x00002aaaaad410d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaae829c0 : and byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00002aaaaae68038 : and byte ptr [rbx - 4], al ; jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaae67350 : and byte ptr [rbx - 5], dh ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaae67fe4 : and byte ptr [rbx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaacfc81c : and byte ptr [rcx + 0x39], cl ; ret
0x00002aaaaad4e1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00002aaaaae720e6 : and byte ptr [rcx + 0xa], al ; ret
0x00002aaaaadfe3bb : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x137648
0x00002aaaaad1d805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00002aaaaad8cb40 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x00002aaaaad1d215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00002aaaaae0f3d8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaacf5c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00002aaaaae67ff4 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaae67360 : and byte ptr [rcx - 5], bh ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaae7fffd : and byte ptr [rcx], al ; add al, dh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7ff9d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7ffb5 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], bh ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadca6c0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaae80015 : and byte ptr [rcx], al ; add byte ptr [rax], cl ; xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae74890 : and byte ptr [rcx], al ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaae67a54 : and byte ptr [rcx], ch ; cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaae05f7b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad99b38 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae79d50 : and byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00002aaaaae78880 : and byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00002aaaaae82e40 : and byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae68004 : and byte ptr [rdi - 4], al ; jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaae68290 : and byte ptr [rdi - 4], dh ; jmp rax
0x00002aaaaae67f60 : and byte ptr [rdi - 4], dl ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaae67370 : and byte ptr [rdi - 5], bh ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaae67a70 : and byte ptr [rdi], ah ; cld ; jmp rax
0x00002aaaaad00e15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaacf5c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad78e29 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00002aaaaacf5d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaae42d60 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaadf9150 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00002aaaaadd0e9d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00002aaaaadd0e3c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaae68018 : and byte ptr [rdi], dh ; cld ; jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaae67278 : and byte ptr [rdi], dl ; sti ; call qword ptr [rax]
0x00002aaaaae67378 : and byte ptr [rdx - 0x7c5f0005], al ; sti ; jmp qword ptr [rax]
0x00002aaaaae83080 : and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae84e80 : and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaae68020 : and byte ptr [rdx], bh ; cld ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaae67a3c : and byte ptr [rip + 0x2f00fffc], ch ; cld ; call rax
0x00002aaaaae67fd4 : and byte ptr [rip + 0x36a0fffc], dh ; cld ; jmp qword ptr [rax]
0x00002aaaaae68028 : and byte ptr [rip + 0x3ea0fffc], bh ; cld ; jmp qword ptr [rax]
0x00002aaaaae46732 : and byte ptr [rip + 0x5be17500], ah ; ret
0x00002aaaaae408fa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae8cafd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00002aaaaae72b75 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00002aaaaadaa129 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x00002aaaaacd5c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00002aaaaae675f0 : and byte ptr [rsi - 0x482e0003], dh ; std ; call rcx
0x00002aaaaae68040 : and byte ptr [rsi - 4], al ; jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaae67f68 : and byte ptr [rsi - 4], dl ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaae67358 : and byte ptr [rsi - 5], dh ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaae67fec : and byte ptr [rsi], bh ; cld ; jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaadd1731 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaae68958 : and byte ptr [rsp + rdi*8 - 0x35c6f01], ah ; call qword ptr [rax]
0x00002aaaaae7ff9c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad7e382 : and ch, 0xf ; je 0xab3a9 ; add rax, 2 ; ret
0x00002aaaaae54285 : and ch, bl ; call rdx
0x00002aaaaae54289 : and ch, bl ; jmp rsp
0x00002aaaaad7e36d : and cl, 0xf ; je 0xab395 ; ret
0x00002aaaaacd695a : and cl, ah ; ret
0x00002aaaaae67684 : and cl, ah ; sti ; jmp qword ptr [rax]
0x00002aaaaad1a254 : and cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaad673d8 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad6111d : and cl, byte ptr [rcx - 0x77] ; ret
0x00002aaaaadeba15 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x00002aaaaad24158 : and cl, ch ; ret 0xfffa
0x00002aaaaae6adf9 : and dh, bl ; jmp rsp
0x00002aaaaad564f9 : and dh, byte ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae84e09 : and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaadae9ff : and dh, dh ; ret
0x00002aaaaad61747 : and dh, dh ; ret 0x7504
0x00002aaaaae7d411 : and dh, dl ; jmp qword ptr [rcx]
0x00002aaaaad2983d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00002aaaaae7f1f0 : and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae5b748 : and dl, byte ptr [rax - 0xc] ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b934 : and dl, byte ptr [rax - 0xc] ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b840 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaae5b5d0 : and dl, byte ptr [rax - 0xc] ; jmp qword ptr [rdx]
0x00002aaaaae5b94c : and dl, byte ptr [rax - 0xc] ; jmp rax
0x00002aaaaae5b800 : and dl, byte ptr [rax - 0xc] ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b7e4 : and dl, byte ptr [rax - 0xc] ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b630 : and dl, byte ptr [rdx - 0xc] ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaada5387 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00002aaaaad22ff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaae57ea2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00002aaaaad45cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad42779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x00002aaaaae5c40c : and dword ptr [rcx - 0x6982000b], ebx ; cmc ; jmp qword ptr [rbx]
0x00002aaaaadf6526 : and dword ptr [rcx - 0xa], eax ; ret
0x00002aaaaad15203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00002aaaaad8337b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00002aaaaad08f66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00002aaaaad4aef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaad090c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaae7b870 : and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaae54f59 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaad78c5b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae57ea1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaae469b6 : and eax, 0 ; add bl, dh ; ret
0x00002aaaaacf3beb : and eax, 0 ; ret
0x00002aaaaadce723 : and eax, 0x100f ; ret
0x00002aaaaad0818a : and eax, 0x200 ; ret
0x00002aaaaae54359 : and eax, 0x25e0ffeb ; jmp 0x181365
0x00002aaaaae5435d : and eax, 0x25e0ffeb ; jmp 0x181369
0x00002aaaaae54361 : and eax, 0x25e0ffeb ; jmp 0x18136d
0x00002aaaaae54365 : and eax, 0x25e0ffeb ; jmp 0x181371
0x00002aaaaae54369 : and eax, 0x25e0ffeb ; jmp 0x181375
0x00002aaaaae5436d : and eax, 0x25e0ffeb ; jmp 0x181379
0x00002aaaaae54371 : and eax, 0x25e0ffeb ; jmp 0x18137d
0x00002aaaaae54375 : and eax, 0x25e0ffeb ; jmp 0x181381
0x00002aaaaae54351 : and eax, 0x270effeb ; jmp 0x18135d
0x00002aaaaae54350 : and eax, 0x270effeb ; jmp 0x18135e
0x00002aaaaae132db : and eax, 0x281660 ; ret
0x00002aaaaadd9824 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00002aaaaad9f676 : and eax, 0x2d0 ; ret
0x00002aaaaacf3b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x00002aaaaad5fca7 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x00002aaaaacf384d : and eax, 0x30 ; call rax
0x00002aaaaad0cfc9 : and eax, 0x30 ; call rdx
0x00002aaaaad08322 : and eax, 0x30 ; jmp rax
0x00002aaaaad026d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x00002aaaaad20398 : and eax, 0x30 ; xor esi, esi ; call rax
0x00002aaaaad7d06d : and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaad7d08d : and eax, 0x3fc00 ; ret
0x00002aaaaad7d04c : and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaae75a2c : and eax, 0x4000001 ; ret 0x18f
0x00002aaaaadd517f : and eax, 0x49fff1d7 ; mov edi, dword ptr [rbp] ; call rbx
0x00002aaaaae46733 : and eax, 0x5be17500 ; ret
0x00002aaaaae5b76c : and eax, 0x79fff451 ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad00f22 : and eax, 0x7f ; ret
0x00002aaaaad7d0c0 : and eax, 0x7ff80000 ; ret
0x00002aaaaad07b44 : and eax, 0x80 ; ret
0x00002aaaaad07c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00002aaaaad4a402 : and eax, 0x804 ; ret
0x00002aaaaadd0e5d : and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaadaba29 : and eax, 0x8348d231 ; ret 0x4801
0x00002aaaaadc331f : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaad539a3 : and eax, 0x950f4100 ; ret
0x00002aaaaade7567 : and eax, 0xc ; cmp eax, 4 ; je 0x114578 ; ret
0x00002aaaaade7738 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaad40360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae469c5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00002aaaaadd9961 : and eax, 0xfff ; or eax, edi ; ret
0x00002aaaaadeb82d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00002aaaaadeb7c8 : and eax, 0xffffff ; ret
0x00002aaaaadf5433 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00002aaaaadd426f : and eax, 1 ; jmp 0x10123b
0x00002aaaaada9708 : and eax, 1 ; pop rbx ; ret
0x00002aaaaad00ed2 : and eax, 1 ; ret
0x00002aaaaada9608 : and eax, 2 ; add eax, 8 ; ret
0x00002aaaaad00d52 : and eax, 2 ; movzx eax, ax ; ret
0x00002aaaaada9654 : and eax, 2 ; ret
0x00002aaaaad1b46c : and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaad00df2 : and eax, 4 ; movzx eax, ax ; ret
0x00002aaaaad00d12 : and eax, 8 ; movzx eax, ax ; ret
0x00002aaaaad07e74 : and eax, 8 ; ret
0x00002aaaaae102a2 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadabe1a : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00002aaaaae802f5 : and eax, dword ptr [rcx] ; add byte ptr [rax], ch ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae802dd : and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae3b009 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00002aaaaad09558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaacd5d17 : and eax, ebp ; clc ; ret
0x00002aaaaae6c8a9 : and eax, edi ; jmp rsp
0x00002aaaaad07852 : and eax, edx ; movq xmm0, rax ; ret
0x00002aaaaad07792 : and eax, edx ; ret
0x00002aaaaad077e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaad010ed : and eax, esi ; ret
0x00002aaaaae6c8a8 : and eax, r15d ; jmp rsp
0x00002aaaaad45cc0 : and ebp, edi ; pop rbx ; ret
0x00002aaaaae6b331 : and ebp, esi ; jmp rsp
0x00002aaaaade7502 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114515 ; ret
0x00002aaaaada974f : and ebx, 8 ; je 0xd66f0 ; pop rbx ; ret
0x00002aaaaad0dfb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00002aaaaae41e75 : and ecx, 0xff ; sub eax, ecx ; ret
0x00002aaaaae415a8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00002aaaaad488c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad52d5b : and ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaadc2c3b : and ecx, dword ptr [rax - 0x75] ; je 0xefc6c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaadff09e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad587ac : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaadd2be5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00002aaaaad4fc4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00002aaaaadf9c56 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00002aaaaadd1d79 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaadd1dd2 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00002aaaaadf9c7d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00002aaaaad00f32 : and edi, 0xffffff80 ; sete al ; ret
0x00002aaaaad489b3 : and edx, 1 ; mov eax, edx ; ret
0x00002aaaaacd5bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x00002aaaaad1d1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x00002aaaaae7d489 : and esi, edx ; jmp qword ptr [rcx]
0x00002aaaaae84d61 : and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaaded0e1 : and esp, dword ptr [rdi - 0x76b7ffd6] ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaae67b05 : and esp, edi ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaadb070d : and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaad08f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaad090c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad56572 : and r14b, byte ptr [rax + r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad09557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad07851 : and rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaad07bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00002aaaaad07bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00002aaaaad689fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00002aaaaad60f80 : bsf eax, eax ; add rax, rdi ; ret
0x00002aaaaad60f90 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaad60fa0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaad60f70 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaad60ebf : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad68bf3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaad61c75 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00002aaaaad5dba6 : bsf eax, edx ; ret
0x00002aaaaad5dd02 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00002aaaaad68d10 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaad5dbf2 : bsf rax, rdx ; ret
0x00002aaaaad71661 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00002aaaaad5f8a7 : bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaad71530 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaad71540 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaad71550 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaad5fb2b : bsr eax, esi ; add rax, rdi ; ret
0x00002aaaaad5fa39 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaad5f935 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaad5f8a6 : bsr rax, rax ; add rax, rdi ; ret
0x00002aaaaad5fb2a : bsr rax, rsi ; add rax, rdi ; ret
0x00002aaaaad5fa38 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaad5f934 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaae07dad : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaadeb7a2 : bswap eax ; ret
0x00002aaaaacd5bfb : bswap ebx ; clc ; ret
0x00002aaaaad37055 : call 0x11064057
0x00002aaaaad37582 : call 0x11064584
0x00002aaaaad37d3c : call 0x11064d3e
0x00002aaaaad38126 : call 0x11065128
0x00002aaaaad39b8b : call 0x11066b8d
0x00002aaaaad3c03b : call 0x1106903d
0x00002aaaaad3d04f : call 0x1106a051
0x00002aaaaae6e068 : call 0x111998c8
0x00002aaaaae79b88 : call 0x111a6869
0x00002aaaaad5b26e : call 0x114492
0x00002aaaaae76a18 : call 0x121a279f
0x00002aaaaae0543e : call 0x12e712
0x00002aaaaae6fd88 : call 0x1319b6e1
0x00002aaaaae71198 : call 0x1319cb64
0x00002aaaaadfe34c : call 0x137642
0x00002aaaaad08f40 : call 0x140ca753
0x00002aaaaadf2a06 : call 0x143ef7
0x00002aaaaae6fe38 : call 0x1819b797
0x00002aaaaacfb3a9 : call 0x1c506f9
0x00002aaaaae06535 : call 0x1f7e2
0x00002aaaaadc650f : call 0x1f7f2
0x00002aaaaadc650e : call 0x1f7f3
0x00002aaaaacf6659 : call 0x1f8a2
0x00002aaaaad9b383 : call 0x1f8a9
0x00002aaaaadc65d3 : call 0x1f8aa
0x00002aaaaad076c0 : call 0x1f8ae
0x00002aaaaadb2d9b : call 0x1f8b0
0x00002aaaaad205bc : call 0x2104d5be
0x00002aaaaad20beb : call 0x2104dbed
0x00002aaaaad20c99 : call 0x2104dc9b
0x00002aaaaad210e1 : call 0x2104e0e3
0x00002aaaaad210f0 : call 0x2104e0f2
0x00002aaaaad229b4 : call 0x2104f9b6
0x00002aaaaad22b2c : call 0x2104fb2e
0x00002aaaaae7d488 : call 0x221a96b3
0x00002aaaaae82bd8 : call 0x221af14c
0x00002aaaaae83598 : call 0x221afb1a
0x00002aaaaae82118 : call 0x241ae648
0x00002aaaaad66c04 : call 0x247dc75d
0x00002aaaaae7a158 : call 0x281a6b89
0x00002aaaaacf4958 : call 0x2dc42
0x00002aaaaad11d01 : call 0x2dc48
0x00002aaaaacf968b : call 0x2dc49
0x00002aaaaae053b1 : call 0x2e622
0x00002aaaaaddf2da : call 0x356f7
0x00002aaaaad9049f : call 0x39772
0x00002aaaaadc20f8 : call 0x3b3c2
0x00002aaaaad32abe : call 0x3bd42
0x00002aaaaad10fe6 : call 0x3c0a6
0x00002aaaaadae184 : call 0x42d03acd
0x00002aaaaadae2fc : call 0x42d03c45
0x00002aaaaadae1d4 : call 0x43d03b1d
0x00002aaaaadae34c : call 0x43d03c95
0x00002aaaaada4504 : call 0x480d2110
0x00002aaaaad82a13 : call 0x4ccd8f2a
0x00002aaaaad851db : call 0x4ccdb5f2
0x00002aaaaad87ebb : call 0x4ccde3d2
0x00002aaaaad49a44 : call 0x4d177
0x00002aaaaae2d2fa : call 0x4f94b2f8
0x00002aaaaae2d2f9 : call 0x4f94b2f9
0x00002aaaaae2fdca : call 0x4f94ddc8
0x00002aaaaae2fdc9 : call 0x4f94ddc9
0x00002aaaaae328ea : call 0x4f9508e8
0x00002aaaaae328e9 : call 0x4f9508e9
0x00002aaaaadfc5f3 : call 0x558b2
0x00002aaaaadb69f9 : call 0x66d0c309
0x00002aaaaadb6f57 : call 0x66d0c867
0x00002aaaaadb70b9 : call 0x66d0c9c9
0x00002aaaaae68b8a : call 0x71d897
0x00002aaaaad38d5f : call 0x71fd2
0x00002aaaaadea18e : call 0x73442
0x00002aaaaad9fddd : call 0x750ccee6
0x00002aaaaadd0692 : call 0x76598
0x00002aaaaad1e517 : call 0x777f2
0x00002aaaaad32111 : call 0x7b3a2
0x00002aaaaad58f01 : call 0x82182
0x00002aaaaad8fe7d : call 0x89162
0x00002aaaaad718d3 : call 0x8ab72
0x00002aaaaad21a7c : call 0x8ad12
0x00002aaaaadb7430 : call 0x8e694
0x00002aaaaad8c6eb : call 0x8e806
0x00002aaaaadb08c4 : call 0x938c6
0x00002aaaaadf1899 : call 0x95bb8
0x00002aaaaacf32f6 : call 0xa9eb6
0x00002aaaaacf33fa : call 0xa9fd6
0x00002aaaaadc884e : call 0xcc697
0x00002aaaaadc887b : call 0xcc6b7
0x00002aaaaadc6457 : call 0xef752
0x00002aaaaadd9dfd : call 0xf106e06
0x00002aaaaadd9e1d : call 0xf106e26
0x00002aaaaadd24b3 : call 0xf17d541
0x00002aaaaadd304a : call 0xf17e0d8
0x00002aaaaad3da57 : call 0xf6d02
0x00002aaaaadf08d9 : call 0xf6d06
0x00002aaaaadd31ca : call 0xfc3e2
0x00002aaaaadfe9c4 : call 0xfc828
0x00002aaaaad8e3e2 : call 0xfcdec09
0x00002aaaaadd1859 : call 0xfe678
0x00002aaaaad0808d : call 0xffffffff816a131d
0x00002aaaaadf0fb9 : call 0xffffffff835adfc4
0x00002aaaaadf54f7 : call 0xffffffff895be787
0x00002aaaaad8df19 : call 0xffffffff89cdd840
0x00002aaaaad8e08a : call 0xffffffff89cdd9b1
0x00002aaaaad8e283 : call 0xffffffff89cddbaa
0x00002aaaaae559c3 : call 0xffffffffaedac839
0x00002aaaaad8d8ba : call 0xffffffffc234f102
0x00002aaaaad24feb : call 0xffffffffc23e67f5
0x00002aaaaad549fb : call 0xffffffffc241620c
0x00002aaaaae00db5 : call 0xffffffffc2879e43
0x00002aaaaad1a641 : call 0xffffffffc28db769
0x00002aaaaad551e8 : call 0xffffffffc2916a01
0x00002aaaaada050c : call 0xffffffffc295d517
0x00002aaaaadc316b : call 0xffffffffc2984975
0x00002aaaaade1abf : call 0xffffffffc29a36c9
0x00002aaaaadf5a9e : call 0xffffffffc29b311a
0x00002aaaaae02654 : call 0xffffffffc29c3e65
0x00002aaaaada88cd : call 0xffffffffc2e1683c
0x00002aaaaad78a94 : call 0xffffffffc30a5aa4
0x00002aaaaad7cc86 : call 0xffffffffc30f29dc
0x00002aaaaad7cc9f : call 0xffffffffc30f29f5
0x00002aaaaad1a0a0 : call 0xffffffffc33db8aa
0x00002aaaaade0970 : call 0xffffffffc34a217a
0x00002aaaaade0c0c : call 0xffffffffc34a2416
0x00002aaaaad7f5ac : call 0xffffffffc3670712
0x00002aaaaade2588 : call 0xffffffffc39a4192
0x00002aaaaae3ddc5 : call 0xffffffffc39cbcde
0x00002aaaaae3ee45 : call 0xffffffffc39ccd5e
0x00002aaaaad0a2fd : call 0xffffffffc3b2824e
0x00002aaaaad61db7 : call 0xffffffffc3d97708
0x00002aaaaad5bec7 : call 0xffffffffc4011818
0x00002aaaaad5d6c7 : call 0xffffffffc4013018
0x00002aaaaad8553c : call 0xffffffffc7446d49
0x00002aaaaad9977d : call 0xffffffffde966787
0x00002aaaaad07f57 : call 0xffffffffe28511e7
0x00002aaaaae8b9d8 : call 0xffffffffe81b81be
0x00002aaaaad2fba9 : call 0xfffffffffa0e517b
0x00002aaaaade0ba1 : call 0xffffffffff9623ae
0x00002aaaaae0911e : call qword ptr [r10]
0x00002aaaaad508af : call qword ptr [r15]
0x00002aaaaae5a6b3 : call qword ptr [rax + 0x10fff229]
0x00002aaaaae67fbb : call qword ptr [rax + 0x10fffc53]
0x00002aaaaae67fb3 : call qword ptr [rax + 0x10fffc54]
0x00002aaaaae67fab : call qword ptr [rax + 0x10fffc55]
0x00002aaaaae67fa3 : call qword ptr [rax + 0x10fffc56]
0x00002aaaaae67f9b : call qword ptr [rax + 0x10fffc57]
0x00002aaaaae6897b : call qword ptr [rax + 0x10fffc9f]
0x00002aaaaae68973 : call qword ptr [rax + 0x10fffca0]
0x00002aaaaae6896b : call qword ptr [rax + 0x10fffca1]
0x00002aaaaae68963 : call qword ptr [rax + 0x10fffca2]
0x00002aaaaae6895b : call qword ptr [rax + 0x10fffca3]
0x00002aaaaae68993 : call qword ptr [rax + 0x10fffca4]
0x00002aaaaae6749f : call qword ptr [rax + 0x10fffda3]
0x00002aaaaae674a7 : call qword ptr [rax + 0x10fffda4]
0x00002aaaaae674af : call qword ptr [rax + 0x10fffda5]
0x00002aaaaae6762b : call qword ptr [rax + 0x20fffbe5]
0x00002aaaaae67a6b : call qword ptr [rax + 0x20fffc34]
0x00002aaaaae679cb : call qword ptr [rax + 0x20fffc35]
0x00002aaaaae67d83 : call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae67b6b : call qword ptr [rax + 0x20fffc5f]
0x00002aaaaae6826f : call qword ptr [rax + 0x20fffc84]
0x00002aaaaae68057 : call qword ptr [rax + 0x20fffc87]
0x00002aaaaae68767 : call qword ptr [rax + 0x20fffcab]
0x00002aaaaad46ed7 : call qword ptr [rax + 0x80]
0x00002aaaaae67b3f : call qword ptr [rax - 0x1f0003e0]
0x00002aaaaae67aeb : call qword ptr [rax - 0x1f0003e7]
0x00002aaaaae67973 : call qword ptr [rax - 0x1f00040c]
0x00002aaaaae6791f : call qword ptr [rax - 0x1f000413]
0x00002aaaaae677a7 : call qword ptr [rax - 0x1f000438]
0x00002aaaaae67753 : call qword ptr [rax - 0x1f00043f]
0x00002aaaaae6730f : call qword ptr [rax - 0x1f0004a4]
0x00002aaaaae5b96f : call qword ptr [rax - 0x1f000bae]
0x00002aaaaae5b53f : call qword ptr [rax - 0x1f000bb4]
0x00002aaaaae47c8f : call qword ptr [rax - 0x2f00148e]
0x00002aaaaad078fc : call qword ptr [rax - 0x3d]
0x00002aaaaae5a1ff : call qword ptr [rax - 0x4f000e16]
0x00002aaaaae5a1df : call qword ptr [rax - 0x4f000e17]
0x00002aaaaae5a1bf : call qword ptr [rax - 0x4f000e18]
0x00002aaaaae6749b : call qword ptr [rax - 0x6f00025e]
0x00002aaaaae679c7 : call qword ptr [rax - 0x6f0003cd]
0x00002aaaaae5a4b7 : call qword ptr [rax]
0x00002aaaaae4678e : call qword ptr [rbx]
0x00002aaaaae59cfb : call qword ptr [rcx - 0x12]
0x00002aaaaae674df : call qword ptr [rcx - 0x2e00024b]
0x00002aaaaae5b4cf : call qword ptr [rcx]
0x00002aaaaae68eab : call qword ptr [rdi + rbp*2 - 0x745c0000]
0x00002aaaaae6d1e3 : call qword ptr [rdi + rbx + 2]
0x00002aaaaad508b0 : call qword ptr [rdi]
0x00002aaaaae67c17 : call qword ptr [rdx + 0x22fffc61]
0x00002aaaaae68143 : call qword ptr [rdx + 0x22fffc82]
0x00002aaaaae6884b : call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaae6863b : call qword ptr [rdx + 0x22fffca9]
0x00002aaaaad5b674 : call qword ptr [rdx]
0x00002aaaaae67bb3 : call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaae6809f : call qword ptr [rsi + 0x26fffc86]
0x00002aaaaae68597 : call qword ptr [rsi + 0x26fffcad]
0x00002aaaaacdc3a8 : call qword ptr [rsi]
0x00002aaaaae5b798 : call qword ptr [rsp + rsi*8 - 1]
0x00002aaaaacf7075 : call r12
0x00002aaaaacf4be2 : call r14
0x00002aaaaacf6e55 : call r15
0x00002aaaaad3fb4b : call r8
0x00002aaaaade6d6f : call r9
0x00002aaaaadf1ebc : call rax
0x00002aaaaad00a78 : call rbx
0x00002aaaaacfe398 : call rcx
0x00002aaaaacf6e56 : call rdi
0x00002aaaaad0cfce : call rdx
0x00002aaaaacf4be3 : call rsi
0x00002aaaaacf7076 : call rsp
0x00002aaaaae01ef9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x00002aaaaacff534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00002aaaaae80231 : cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad0d6a4 : cdq ; idiv rsi ; ret
0x00002aaaaae57700 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaad441f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x00002aaaaae5b5f8 : cdq ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaadcd963 : cdq ; ret
0x00002aaaaadfaad3 : cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaadce5fe : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaadf656d : cdqe ; shr rax, 4 ; ret
0x00002aaaaad34d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaad548d3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00002aaaaadcff28 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaad247ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaacfe0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaad2a15d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaad7ee18 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad43cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaad67e33 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaad3dd93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00002aaaaad6bef6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaad06390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00002aaaaad94800 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaad7cd14 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00002aaaaadf5435 : clc ; add eax, 0x10 ; ret
0x00002aaaaad94bb9 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaae001b1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00002aaaaad71666 : clc ; add rax, r8 ; ret
0x00002aaaaad60d48 : clc ; add rax, rcx ; ret
0x00002aaaaade8882 : clc ; add rsp, 8 ; ret
0x00002aaaaae85018 : clc ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaad00f21 : clc ; and eax, 0x7f ; ret
0x00002aaaaadeb7c7 : clc ; and eax, 0xffffff ; ret
0x00002aaaaadeb7a1 : clc ; bswap eax ; ret
0x00002aaaaae8dcf2 : clc ; call qword ptr [rax]
0x00002aaaaae8d992 : clc ; call qword ptr [rbx]
0x00002aaaaae8e772 : clc ; call qword ptr [rcx]
0x00002aaaaae8e34a : clc ; call qword ptr [rdi]
0x00002aaaaae8d272 : clc ; call qword ptr [rdx]
0x00002aaaaae8e46a : clc ; call rcx
0x00002aaaaae6c7f2 : clc ; call rsp
0x00002aaaaadf5411 : clc ; cmc ; je 0x12240d ; pop rbx ; ret
0x00002aaaaacd6af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaae41e19 : clc ; cmp rcx, rax ; jne 0x16ee4b ; xor eax, eax ; ret
0x00002aaaaae41e18 : clc ; cmp rcx, rax ; jne 0x16ee4c ; xor eax, eax ; ret
0x00002aaaaae42c59 : clc ; cmp rcx, rax ; jne 0x16fc8b ; xor eax, eax ; ret
0x00002aaaaae42c58 : clc ; cmp rcx, rax ; jne 0x16fc8c ; xor eax, eax ; ret
0x00002aaaaad0d6a2 : clc ; cqo ; idiv rsi ; ret
0x00002aaaaad59d20 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaad4bb0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaadd0a03 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad00b97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae124c2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaad692d5 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaadd137f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaadd81e5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaad206d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaad21d90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaae0a819 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaad48f7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaae6c77a : clc ; dec esp ; iretd ; add dword ptr [rax], eax ; je 0x19979a ; clc ; jmp rsp
0x00002aaaaae6caaa : clc ; inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00002aaaaadd21a9 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaacfe76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00002aaaaae6c8da : clc ; inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaacf9cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x00002aaaaae8cf22 : clc ; jmp qword ptr [rbx]
0x00002aaaaae8d2ba : clc ; jmp qword ptr [rcx]
0x00002aaaaae6c85a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00002aaaaad92505 : clc ; jmp rax
0x00002aaaaae6c782 : clc ; jmp rsp
0x00002aaaaae44c3a : clc ; jne 0x171d47 ; ret
0x00002aaaaae44c39 : clc ; jne 0x171d48 ; ret
0x00002aaaaad669f7 : clc ; jne 0x938d1 ; ret
0x00002aaaaade77f4 : clc ; leave ; ret
0x00002aaaaae58518 : clc ; loope 0x18551d ; jmp qword ptr [rdi]
0x00002aaaaae58598 : clc ; loope 0x18559d ; jmp qword ptr [rdi]
0x00002aaaaae58618 : clc ; loope 0x18561d ; jmp qword ptr [rdi]
0x00002aaaaae58698 : clc ; loope 0x18569d ; jmp qword ptr [rdi]
0x00002aaaaae58718 : clc ; loope 0x18571d ; jmp qword ptr [rdi]
0x00002aaaaae58798 : clc ; loope 0x18579d ; jmp qword ptr [rdi]
0x00002aaaaadd16d8 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaad70e68 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaae56362 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaae70998 : clc ; mov cl, ch ; jmp rsp
0x00002aaaaae24e17 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae25787 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2d087 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae25987 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cff7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae25b87 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cf67 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae24e33 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad71fdc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaad1d1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaacf421c : clc ; neg eax ; ret
0x00002aaaaad5d817 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x00002aaaaad5d7c1 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00002aaaaae82ee8 : clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad71966 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad697ab : clc ; pop rbx ; ret
0x00002aaaaad4769a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00002aaaaae14daf : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00002aaaaad9adfd : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00002aaaaad1b4c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00002aaaaad4efd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00002aaaaade7f81 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00002aaaaad45cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00002aaaaad4e595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00002aaaaae6ca82 : clc ; push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00002aaaaae8c5a8 : clc ; push rdi ; call qword ptr [rdx]
0x00002aaaaacd5bd1 : clc ; ret
0x00002aaaaae66732 : clc ; ret 0x6e1f
0x00002aaaaadeb7b1 : clc ; ror ax, 8 ; ret
0x00002aaaaacd68ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaad0d633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaadeb4ab : clc ; sar rax, 6 ; ret
0x00002aaaaada7381 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaae84ec8 : clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae7d1c8 : clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaad1ba2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaadeb847 : clc ; shr eax, 0x18 ; ret
0x00002aaaaae465ce : clc ; std ; ja 0x17359e ; call 0x1f8ae
0x00002aaaaae67981 : clc ; sti ; call rax
0x00002aaaaae5a6b0 : clc ; sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x00002aaaaae1ca5c : clc ; sub rax, r8 ; ret
0x00002aaaaae1ccb1 : clc ; sub rax, rdx ; ret
0x00002aaaaacfe392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00002aaaaae7f234 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], ch ; jmp qword ptr [rcx]
0x00002aaaaae735ac : cld ; add byte ptr [rax], al ; add al, dh ; mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaae6a44d : cld ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaad9fe72 : cld ; add byte ptr [rax], al ; ret
0x00002aaaaadfa763 : cld ; add ch, byte ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00002aaaaad7d06f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaad7d08f : cld ; add eax, dword ptr [rax] ; ret
0x00002aaaaae82d34 : cld ; add qword ptr [r8], r8 ; cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae82c34 : cld ; add qword ptr [rax], r8 ; cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaae82a34 : cld ; add qword ptr [rax], rax ; cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae67fba : cld ; call qword ptr [rax + 0x10fffc53]
0x00002aaaaae67fb2 : cld ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaae67faa : cld ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaae67fa2 : cld ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaae67f9a : cld ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaae6897a : cld ; call qword ptr [rax + 0x10fffc9f]
0x00002aaaaae68972 : cld ; call qword ptr [rax + 0x10fffca0]
0x00002aaaaae6896a : cld ; call qword ptr [rax + 0x10fffca1]
0x00002aaaaae68962 : cld ; call qword ptr [rax + 0x10fffca2]
0x00002aaaaae6895a : cld ; call qword ptr [rax + 0x10fffca3]
0x00002aaaaae68992 : cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaae67a6a : cld ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaae679ca : cld ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaae67d82 : cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae67b6a : cld ; call qword ptr [rax + 0x20fffc5f]
0x00002aaaaae6826e : cld ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaae68056 : cld ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaae68766 : cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaae67b3e : cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaae67aea : cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaae679c6 : cld ; call qword ptr [rax - 0x6f0003cd]
0x00002aaaaae6780e : cld ; call qword ptr [rax]
0x00002aaaaae67c16 : cld ; call qword ptr [rdx + 0x22fffc61]
0x00002aaaaae68142 : cld ; call qword ptr [rdx + 0x22fffc82]
0x00002aaaaae6884a : cld ; call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaae6863a : cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaae67c36 : cld ; call qword ptr [rdx]
0x00002aaaaae67bb2 : cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaae6809e : cld ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaae68596 : cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaae67b92 : cld ; call qword ptr [rsi]
0x00002aaaaae67afa : cld ; call rax
0x00002aaaaae67c26 : cld ; call rdx
0x00002aaaaae67bc2 : cld ; call rsi
0x00002aaaaae67cee : cld ; call rsp
0x00002aaaaad2f467 : cld ; cmove rsi, r9 ; jmp 0x5c436
0x00002aaaaae44d32 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d48 ; xor eax, eax ; ret
0x00002aaaaae44d31 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; xor eax, eax ; ret
0x00002aaaaae124be : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaadb5709 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaadb62ec : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaae67cca : cld ; dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaad08057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00002aaaaae69cf9 : cld ; in eax, dx ; call rsp
0x00002aaaaae6780a : cld ; inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaae67ae6 : cld ; inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaae67b3a : cld ; inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaae6828a : cld ; inc dword ptr [rax + 0x20fffc81] ; ja 0x195298 ; jmp rax
0x00002aaaaae679ae : cld ; inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaae67a36 : cld ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaae67a9e : cld ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaae67a06 : cld ; inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaae67a0a : cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaae67b76 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaae6848a : cld ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaae678c6 : cld ; inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae678ca : cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae6785a : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaae6855a : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaae68772 : cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaae68062 : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaae6827a : cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaae678a6 : cld ; inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaae677d2 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaae689be : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaae68762 : cld ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaae68052 : cld ; inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaae67d7e : cld ; inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae67f8e : cld ; inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaae679b2 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaae67a56 : cld ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaae6826a : cld ; inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaae67fce : cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaad7d127 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad7d04e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaae683fe : cld ; inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaadb63d9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaadf4f19 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaae681d6 : cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaae67cea : cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaae67c22 : cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaae68646 : cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaae68636 : cld ; inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaae67bbe : cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaae685a2 : cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaae680aa : cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaae67bae : cld ; inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaae68592 : cld ; inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaae6809a : cld ; inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaae67b1a : cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae67b06 : cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaae684c6 : cld ; inc eax ; ja 0x1954d0 ; push qword ptr [rax] ; ja 0x1954d4 ; call rax
0x00002aaaaae6857a : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaae5a395 : cld ; int1 ; call qword ptr [rax]
0x00002aaaaae5a391 : cld ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaada195b : cld ; je 0xce978 ; call 0x8ab75
0x00002aaaaae682ca : cld ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaae68012 : cld ; jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaae67fd6 : cld ; jmp qword ptr [rax + 0x20fffc36]
0x00002aaaaae6801a : cld ; jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaae67fde : cld ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaae68022 : cld ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaae67fe6 : cld ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaae6802a : cld ; jmp qword ptr [rax + 0x20fffc3e]
0x00002aaaaae67fee : cld ; jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaae68032 : cld ; jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaae67ff6 : cld ; jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaae6803a : cld ; jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaae67ffe : cld ; jmp qword ptr [rax + 0x20fffc45]
0x00002aaaaae68042 : cld ; jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaae68006 : cld ; jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaae67f7a : cld ; jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaae67f72 : cld ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaae67f6a : cld ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaae67f62 : cld ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaae67f5a : cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaae67f92 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaae68952 : cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaae6785e : cld ; jmp qword ptr [rax]
0x00002aaaaae7b62a : cld ; jmp qword ptr [rbx]
0x00002aaaaae6833a : cld ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaae68332 : cld ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaae6832a : cld ; jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaae68322 : cld ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaae6831a : cld ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaae67c1a : cld ; jmp qword ptr [rdx]
0x00002aaaaae67b8e : cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaae67bb6 : cld ; jmp qword ptr [rsi]
0x00002aaaaae677d6 : cld ; jmp rax
0x00002aaaaae67c4a : cld ; jmp rdx
0x00002aaaaae67ba6 : cld ; jmp rsi
0x00002aaaaae67cd2 : cld ; jmp rsp
0x00002aaaaae42a66 : cld ; jne 0x16fc9f ; xor eax, eax ; ret
0x00002aaaaae44d35 : cld ; jne 0x171d45 ; xor eax, eax ; ret
0x00002aaaaae44d34 : cld ; jne 0x171d46 ; xor eax, eax ; ret
0x00002aaaaae44c55 : cld ; jne 0x171d47 ; ret
0x00002aaaaae44c54 : cld ; jne 0x171d48 ; ret
0x00002aaaaae6880a : cld ; lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaae67e0a : cld ; ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaae255a2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae257a5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae259a5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae25ba5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad71fee : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaad3280b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x00002aaaaae1ff68 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaae251d6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d216 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae253b6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d196 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae25596 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d116 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae24ff6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d296 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad70d51 : cld ; mov rax, rdi ; ret
0x00002aaaaad1d18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaad7ee3a : cld ; pop rbx ; ret
0x00002aaaaae67b16 : cld ; push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae67b02 : cld ; push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaae67b72 : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaae6805e : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x00002aaaaae6876e : cld ; push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaae68556 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaae67d8a : cld ; push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaae68402 : cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaae687be : cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaae689c2 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaae677ee : cld ; push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaae67876 : cld ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaae684ca : cld ; push qword ptr [rax] ; ja 0x1954d0 ; call rax
0x00002aaaaae682c6 : cld ; push qword ptr [rax] ; js 0x1952d0 ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaae67f56 : cld ; push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaae67cce : cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaae681d2 : cld ; push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x00002aaaaae67ce6 : cld ; push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00002aaaaae68642 : cld ; push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x00002aaaaae68316 : cld ; push qword ptr [rdx] ; jle 0x195320 ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaae67bba : cld ; push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00002aaaaae680a6 : cld ; push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x00002aaaaae6859e : cld ; push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaae6808e : cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaae67896 : cld ; push rax ; add bh, ah ; call rax
0x00002aaaaae83034 : cld ; push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae678fa : cld ; push rax ; add edi, esp ; jmp rax
0x00002aaaaae677f2 : cld ; push rax ; add esp, edi ; call rax
0x00002aaaaae68286 : cld ; push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaae687ba : cld ; push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaae6898e : cld ; push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaae67996 : cld ; push rax ; sub edi, esp ; call rax
0x00002aaaaae83334 : cld ; push rbx ; add dword ptr [rax], eax ; js 0x1b03b7 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad1d192 : cld ; ret
0x00002aaaaad194a0 : cld ; ret 0x37
0x00002aaaaae6798d : cld ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaae6794d : cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae55816 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaad8d69e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a1 ; ret
0x00002aaaaae6bcd4 : cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaada75b5 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dc
0x00002aaaaad587a9 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaad0dd3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00002aaaaad8ea3d : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00002aaaaad8e9be : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad58986 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaad9f649 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00002aaaaad8f85b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaad95d6a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad0f963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00002aaaaad0f98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaad47078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaadf6b2e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00002aaaaad7cdb2 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00002aaaaacf9485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaad7ca5b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad7200c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad94cf9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00002aaaaad8df0a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00002aaaaacd6791 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3779 ; ret 0x975
0x00002aaaaadd1730 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaadd1dd1 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00002aaaaae78f2a : cli ; call qword ptr [rax]
0x00002aaaaae7a172 : cli ; call qword ptr [rdi]
0x00002aaaaad5a55a : cli ; call rax
0x00002aaaaadb7433 : cli ; call rcx
0x00002aaaaae6d3e2 : cli ; call rsp
0x00002aaaaadc89d5 : cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad0da01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x00002aaaaae6d5fa : cli ; dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00002aaaaae6d852 : cli ; dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x00002aaaaadb628c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaae6d552 : cli ; dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaae6d74a : cli ; dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaae6dada : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaae6d59a : cli ; inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x00002aaaaae6d3da : cli ; inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x00002aaaaae1ff2b : cli ; jg 0x14cf3e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae2041b : cli ; jg 0x14d42e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae207bb : cli ; jg 0x14d7ce ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae44e51 : cli ; jg 0x171e63 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaad71fc7 : cli ; jg 0x9efda ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad7271a : cli ; jg 0x9f72d ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad72e67 : cli ; jg 0x9fe7a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad7ca26 : cli ; jg 0xa9a38 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaae5e586 : cli ; jmp qword ptr [rax - 0x4700059e]
0x00002aaaaae71df2 : cli ; jmp qword ptr [rcx]
0x00002aaaaae6da52 : cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaae6da5a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaae7a15a : cli ; jmp qword ptr [rdi]
0x00002aaaaae5d4ba : cli ; jmp rax
0x00002aaaaae6d47a : cli ; jmp rsp
0x00002aaaaae6d6da : cli ; lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaae6da3a : cli ; lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x00002aaaaae6d70a : cli ; ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaae6d8a2 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ae ; call rsp
0x00002aaaaae259a8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae0e942 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad70d37 : cli ; mov rax, rdi ; ret
0x00002aaaaad36b65 : cli ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaadef300 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaad61138 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaae18366 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad8d716 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00002aaaaad10322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaae57c81 : cli ; push 0x6e ; ja 0x184c0e ; ret 0x48f
0x00002aaaaae5d4b6 : cli ; push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x00002aaaaae6d472 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaae68950 : cli ; pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaacffb2f : cli ; ret
0x00002aaaaad8e9dc : cli ; ret 0x10
0x00002aaaaadcf442 : cli ; ret 0x2c
0x00002aaaaae56725 : cli ; ret 0xac65
0x00002aaaaada737e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaade6ebb : cli ; setae al ; ret
0x00002aaaaad5dc49 : cli ; test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x00002aaaaad5de18 : cli ; test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x00002aaaaae5536a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00002aaaaad93d4e : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae8e886 : cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaae8e8a6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaae1c8d8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae7d49d : cmc ; add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae7d485 : cmc ; add byte ptr [rax], al ; call 0x221a96b6
0x00002aaaaae7d484 : cmc ; add byte ptr [rax], al ; call 0x221a96b7
0x00002aaaaad7e0e7 : cmc ; add byte ptr [rax], al ; ret
0x00002aaaaae7d515 : cmc ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae7d52d : cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae6cd05 : cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaae4755a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae5bf1e : cmc ; call qword ptr [rax]
0x00002aaaaae5c206 : cmc ; call qword ptr [rbx]
0x00002aaaaae5be72 : cmc ; call qword ptr [rcx]
0x00002aaaaae5c1fa : cmc ; call qword ptr [rdi]
0x00002aaaaae81c6a : cmc ; call qword ptr [rdx]
0x00002aaaaae8315a : cmc ; call qword ptr [rsi]
0x00002aaaaae5bde2 : cmc ; call rax
0x00002aaaaae83de2 : cmc ; call rdi
0x00002aaaaae5c422 : cmc ; call rdx
0x00002aaaaae5c2da : cmc ; call rsi
0x00002aaaaae5c032 : cmc ; call rsp
0x00002aaaaadc66b1 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad9ba01 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaae5bf1a : cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaae5bf16 : cmc ; dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaae5c046 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaae6b32a : cmc ; dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaae6b3d2 : cmc ; dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaae5c3fe : cmc ; inc eax ; mov dr0, ebp ; call rsi
0x00002aaaaadf5412 : cmc ; je 0x12240c ; pop rbx ; ret
0x00002aaaaae5c412 : cmc ; jmp qword ptr [rbx]
0x00002aaaaae5c40a : cmc ; jmp qword ptr [rcx]
0x00002aaaaae81e52 : cmc ; jmp qword ptr [rdx]
0x00002aaaaae5bdee : cmc ; jmp rax
0x00002aaaaae83762 : cmc ; jmp rdi
0x00002aaaaae6b332 : cmc ; jmp rsp
0x00002aaaaadd4406 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaae5bdda : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaae5bde6 : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaae5be5e : cmc ; lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaae6b402 : cmc ; ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00002aaaaae580a9 : cmc ; mov ch, 0xab ; ret
0x00002aaaaae2d19a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2522e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae44243 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaad41291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaae54f57 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaad4b18d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae6b2d2 : cmc ; push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaae5c2ea : cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaae5c04a : cmc ; push rsp ; cmc ; call rsp
0x00002aaaaae5b744 : cmc ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad9b353 : cmc ; ret
0x00002aaaaae67939 : cmc ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae44247 : cmc ; sub eax, edx ; ret
0x00002aaaaae576e5 : cmc ; xlatb ; ret 0x4e27
0x00002aaaaadbce01 : cmova eax, edx ; ret
0x00002aaaaad8eb11 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaad500b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad5d8a7 : cmovae eax, ecx ; ret
0x00002aaaaad1d5c1 : cmovae eax, edi ; ret
0x00002aaaaaddaecc : cmovae eax, esi ; ret
0x00002aaaaacd68a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x00002aaaaad500b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad1d5c0 : cmovae rax, rdi ; ret
0x00002aaaaaddaecb : cmovae rax, rsi ; ret
0x00002aaaaad0dc7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaad3e2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaadc8d5b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00002aaaaad69db9 : cmove eax, ebx ; pop rbx ; ret
0x00002aaaaad47f51 : cmove eax, ecx ; ret
0x00002aaaaae0e71a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaad61c78 : cmove eax, edx ; add eax, 1 ; ret
0x00002aaaaad8e852 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00002aaaaadc9b40 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaad59d23 : cmove eax, edx ; add rsp, 8 ; ret
0x00002aaaaad0090b : cmove eax, edx ; ret
0x00002aaaaada9061 : cmove eax, esi ; ret
0x00002aaaaad70e01 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00002aaaaad8c6e8 : cmove esi, ecx ; call 0x8e809
0x00002aaaaad2f469 : cmove esi, ecx ; jmp 0x5c434
0x00002aaaaad47f50 : cmove r8, rcx ; ret
0x00002aaaaadc8d5a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00002aaaaad69db8 : cmove rax, rbx ; pop rbx ; ret
0x00002aaaaad7ec74 : cmove rax, rcx ; ret
0x00002aaaaae0e719 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaad61c89 : cmove rax, rdx ; add eax, 1 ; ret
0x00002aaaaad8e851 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00002aaaaad59d22 : cmove rax, rdx ; add rsp, 8 ; ret
0x00002aaaaad0090a : cmove rax, rdx ; ret
0x00002aaaaad2f468 : cmove rsi, r9 ; jmp 0x5c435
0x00002aaaaad44bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x00002aaaaad4df3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x00002aaaaad9d254 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4c943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0da04 : cmovne eax, ebx ; pop rbx ; ret
0x00002aaaaade3011 : cmovne eax, ecx ; ret
0x00002aaaaad698db : cmovne eax, edi ; ret
0x00002aaaaae12c66 : cmovne eax, edx ; add rsp, 8 ; ret
0x00002aaaaad5bf53 : cmovne eax, edx ; ret
0x00002aaaaade2fa4 : cmovne eax, esi ; ret
0x00002aaaaadd31c7 : cmovne ebx, eax ; call 0xfc3e5
0x00002aaaaad0da03 : cmovne rax, rbx ; pop rbx ; ret
0x00002aaaaad698da : cmovne rax, rdi ; ret
0x00002aaaaae12c65 : cmovne rax, rdx ; add rsp, 8 ; ret
0x00002aaaaad5bf52 : cmovne rax, rdx ; ret
0x00002aaaaadd31c6 : cmovne rbx, rax ; call 0xfc3e6
0x00002aaaaade1122 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaade1121 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00002aaaaadfae60 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x00002aaaaad21d5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x00002aaaaad2c434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x00002aaaaad70d73 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x00002aaaaad0d6f6 : cmovs eax, edx ; pop rbx ; ret
0x00002aaaaacf6b8c : cmovs eax, edx ; ret
0x00002aaaaad6d4d4 : cmovs ebp, dword ptr [rcx] ; ret
0x00002aaaaad52b81 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x00002aaaaae01e58 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x00002aaaaad6c043 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00002aaaaad7d0a6 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x00002aaaaad2f466 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c437
0x00002aaaaae67fdd : cmp ah, bh ; jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaae6801d : cmp ah, bh ; jmp qword ptr [rax]
0x00002aaaaae1cbd3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaae1ca48 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaae1caaf : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaae81398 : cmp ah, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadd51a1 : cmp al, 0x24 ; call rbx
0x00002aaaaae1592c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaadfb4a5 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaae80e74 : cmp al, 0x2f ; add dword ptr [rax], eax ; mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaad0bfed : cmp al, 0x33 ; call rax
0x00002aaaaad697a5 : cmp al, 0x3d ; jne 0x967df ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaada3b2c : cmp al, 0x3f ; jne 0xd0af1 ; mov eax, 1 ; ret
0x00002aaaaada3b44 : cmp al, 0x3f ; jne 0xd0b0e ; mov eax, 1 ; ret
0x00002aaaaae56360 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaae82974 : cmp al, 0x4a ; add dword ptr [rax], eax ; fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae82f74 : cmp al, 0x50 ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae67e10 : cmp al, 0x51 ; cld ; jmp rdx
0x00002aaaaae85074 : cmp al, 0x71 ; add dword ptr [rax], eax ; pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaad5df60 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00002aaaaadb3e9a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00002aaaaae6c524 : cmp al, 0xc3 ; add dword ptr [rax], eax ; xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaae7b074 : cmp al, 0xd1 ; add byte ptr [rax], al ; fdiv st(0) ; call qword ptr [rax]
0x00002aaaaae5b454 : cmp al, 0xdc ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaad6bfc0 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaae7a439 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaae85911 : cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaae67980 : cmp al, 0xfb ; call rax
0x00002aaaaae672d5 : cmp al, 0xfb ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaae6a44c : cmp al, 0xfc ; add byte ptr [rax], al ; push rsp ; xor ch, bh ; call rsp
0x00002aaaaae67fe9 : cmp al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaad807c6 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae42a43 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad78d40 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00002aaaaad443fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00002aaaaacd8ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaacf292c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaacf33de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacf4a45 : cmp al, byte ptr [rax] ; ret
0x00002aaaaadb074c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x00002aaaaae6ae1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp - 0xd], dl ; jmp rsp
0x00002aaaaadc30c9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaae44706 : cmp al, byte ptr [rsi - 1] ; jne 0x17172c ; xor eax, eax ; ret
0x00002aaaaad06504 : cmp al, ch ; xchg eax, esi ; ret
0x00002aaaaad60f76 : cmp al, dh ; ret
0x00002aaaaad60f75 : cmp al, r14b ; ret
0x00002aaaaad07f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00002aaaaae811a8 : cmp bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae68021 : cmp bh, ah ; jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaade2f6a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaae672d1 : cmp bh, bl ; jmp qword ptr [rax]
0x00002aaaaade2fa2 : cmp bh, cl ; cmovne eax, esi ; ret
0x00002aaaaae6730d : cmp bl, bh ; call qword ptr [rax - 0x1f0004a4]
0x00002aaaaade4fa8 : cmp bl, ch ; ret
0x00002aaaaad35808 : cmp bl, ch ; ret 0x8148
0x00002aaaaad32b89 : cmp bl, ch ; ret 0x858b
0x00002aaaaad67123 : cmp bl, dh ; ret
0x00002aaaaae03e53 : cmp bpl, byte ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaad7e096 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaad46d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00002aaaaadb9fd9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade1b89 : cmp byte ptr [r8], r9b ; je 0x10ebb3 ; mov rdx, r8 ; jmp 0x10eba3
0x00002aaaaad1e82a : cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaadc4bce : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x00002aaaaad61baf : cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaacf7ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaae07ce6 : cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaad60fb7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaad8e2c7 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaadac6b7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00002aaaaacf8f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaadabd51 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaadabd50 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaad065d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x00002aaaaadd5154 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00002aaaaadbbb3b : cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad46d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00002aaaaade484f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00002aaaaadc6636 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00002aaaaadc2c40 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaadfe630 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00002aaaaae0024e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00002aaaaae06511 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00002aaaaad318b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadd1612 : cmp byte ptr [rax - 1], bh ; ret
0x00002aaaaae3f018 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00002aaaaad60fa6 : cmp byte ptr [rax], ah ; ret
0x00002aaaaadb153a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00002aaaaad0e0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae677d0 : cmp byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaad4e563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x00002aaaaad098bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaad09874 : cmp byte ptr [rax], al ; ret
0x00002aaaaade187f : cmp byte ptr [rax], bh ; je 0x10e8ae ; mov rdx, rax ; jmp 0x10e89b
0x00002aaaaae0b2d9 : cmp byte ptr [rax], bl ; je 0x1382e4 ; ret
0x00002aaaaade1b8a : cmp byte ptr [rax], cl ; je 0x10ebb2 ; mov rdx, r8 ; jmp 0x10eba2
0x00002aaaaadb9fda : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad5bf50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00002aaaaad71556 : cmp byte ptr [rax], dh ; ret
0x00002aaaaade187e : cmp byte ptr [rax], dil ; je 0x10e8af ; mov rdx, rax ; jmp 0x10e89c
0x00002aaaaad60f96 : cmp byte ptr [rax], dl ; ret
0x00002aaaaad60f95 : cmp byte ptr [rax], r10b ; ret
0x00002aaaaad60fa5 : cmp byte ptr [rax], r12b ; ret
0x00002aaaaad71555 : cmp byte ptr [rax], r14b ; ret
0x00002aaaaad5bf4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00002aaaaad7e09a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00002aaaaad7e099 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaade1880 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10e89a
0x00002aaaaae15a9a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x00002aaaaadd83de : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00002aaaaadaad28 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00002aaaaae82c38 : cmp byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00002aaaaacffb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaada04ea : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae7d9e4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00002aaaaae86008 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00002aaaaad7e097 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00002aaaaad45ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00002aaaaad90899 : cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaadaa0c5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd70a7 ; jmp 0xd7097
0x00002aaaaad84203 : cmp byte ptr [rcx - 0x17d7dbb4], cl ; ret
0x00002aaaaadd0166 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00002aaaaadbdd4c : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00002aaaaad13195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00002aaaaae817a5 : cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae817bd : cmp byte ptr [rcx], al ; add al, dh ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae3f019 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00002aaaaad7a154 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00002aaaaae7a648 : cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaacd5054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaae82e58 : cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaad0d6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00002aaaaae85a80 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rbx]
0x00002aaaaad6b9a7 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x00002aaaaad4e528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00002aaaaadae9e8 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaae412ed : cmp byte ptr [rdi], dl ; ret
0x00002aaaaae41e00 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaae41de9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaae41dd2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaae4088e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae6d59d : cmp byte ptr [rdx], al ; add ah, dh ; cli ; jmp rsp
0x00002aaaaae7d608 : cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaae82d38 : cmp byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae81d18 : cmp byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae03e54 : cmp ch, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaae1cab2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaae6fbf9 : cmp ch, cl ; call qword ptr [rax]
0x00002aaaaae6fc29 : cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaadb3410 : cmp cl, 0x11 ; je 0xe0452 ; mov rdx, rax ; jmp 0xe03b6
0x00002aaaaad8e088 : cmp cl, al ; call 0xffffffff89cdd9b3
0x00002aaaaad534c6 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaadacfcf : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaae060a7 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaade0262 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x00002aaaaadfd013 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaad1a27c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaada971e : cmp cl, byte ptr [rsi] ; je 0xd66bb ; pop rbx ; ret
0x00002aaaaad0fa26 : cmp cl, ch ; ret
0x00002aaaaadb2308 : cmp cl, ch ; ret 0xfffe
0x00002aaaaade2fe3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaae81838 : cmp dh, bh ; hlt ; jmp rdi
0x00002aaaaad0d6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00002aaaaad736e5 : cmp dh, dh ; ret 0x7501
0x00002aaaaade300f : cmp dh, dl ; cmovne eax, ecx ; ret
0x00002aaaaade2f69 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaae672d0 : cmp dil, bl ; jmp qword ptr [rax]
0x00002aaaaade2fa1 : cmp dil, cl ; cmovne eax, esi ; ret
0x00002aaaaad4a898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae44e90 : cmp dl, 1 ; jb 0x171e9e ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad7200b : cmp dl, 1 ; jb 0x9f01d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad7275e : cmp dl, 1 ; jb 0x9f770 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad72eab : cmp dl, 1 ; jb 0x9febd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad7ca5a : cmp dl, 1 ; jb 0xa9a68 ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad5d862 : cmp dl, 3 ; je 0x8a88f ; movsx eax, dl ; ret
0x00002aaaaad5d862 : cmp dl, 3 ; je 0x8a890 ; movsx eax, dl ; ret
0x00002aaaaad5d861 : cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x00002aaaaae80f38 : cmp dl, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7f208 : cmp dl, bl ; jmp qword ptr [rcx]
0x00002aaaaacd5b86 : cmp dl, byte ptr [rdi] ; ret
0x00002aaaaad45aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x00002aaaaad6f4f3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae16553 : cmp dword ptr [rax - 8], eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae0b2d8 : cmp dword ptr [rax], 0x18 ; je 0x1382e5 ; ret
0x00002aaaaacffae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x397faf], dl ; ret
0x00002aaaaad009d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00002aaaaad01199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaacfcc95 : cmp dword ptr [rax], eax ; ret
0x00002aaaaad08304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x00002aaaaada7fb2 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd4f49
0x00002aaaaae2ccd8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaadf2f33 : cmp dword ptr [rcx + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaad6786e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00002aaaaad0b1ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00002aaaaae81915 : cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; add esi, ebp ; call qword ptr [rdi]
0x00002aaaaae8184d : cmp dword ptr [rcx], eax ; add byte ptr [rax], dl ; push rsp ; call rsi
0x00002aaaaadfa7ad : cmp dword ptr [rdi + 0x10], 2 ; je 0x1277be ; ret
0x00002aaaaad4a3e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00002aaaaad4e561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00002aaaaad8d670 : cmp dword ptr [rdi + 8], edx ; jne 0xba653 ; ret
0x00002aaaaade6e58 : cmp dword ptr [rdi], 0 ; je 0x113e6e ; ret
0x00002aaaaade7f6f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00002aaaaad5b371 : cmp dword ptr [rip + 0x33d4f0], 0 ; je 0x88389 ; ret
0x00002aaaaadb312b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaae05bd0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x132be8 ; xor eax, eax ; ret
0x00002aaaaadd48fd : cmp dword ptr [rsi], 0 ; je 0x10190e ; pop rbx ; ret
0x00002aaaaacd6836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00002aaaaadc9a93 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00002aaaaae0b2d7 : cmp dword ptr fs:[rax], 0x18 ; je 0x1382e6 ; ret
0x00002aaaaacd6ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00002aaaaad1e512 : cmp eax, 0x1445f1 ; call 0x777f7
0x00002aaaaae81c65 : cmp eax, 0x1c480001 ; cmc ; call qword ptr [rdx]
0x00002aaaaae81d15 : cmp eax, 0x1e380001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae81d2d : cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadf2b22 : cmp eax, 0x2a7bd5 ; call rax
0x00002aaaaadf22c3 : cmp eax, 0x2a83d8 ; call rax
0x00002aaaaadd38bb : cmp eax, 0x2c2950 ; ret
0x00002aaaaae6ae6d : cmp eax, 0x32b40001 ; jmp rsp
0x00002aaaaade7966 : cmp eax, 0x3948002b ; ret 0x840f
0x00002aaaaae68029 : cmp eax, 0x3ea0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaadb312c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe011a
0x00002aaaaad9ffeb : cmp eax, 0x7275 ; jne 0xccfd4 ; xor eax, eax ; ret
0x00002aaaaad48bdf : cmp eax, 0x89000056 ; ret 0x98eb
0x00002aaaaad697a6 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00002aaaaad9ae0a : cmp eax, 0x89e18948 ; ret 0xf631
0x00002aaaaadcde6d : cmp eax, 0xa1 ; je 0xfae90 ; neg eax ; pop rbx ; ret
0x00002aaaaad924fe : cmp eax, 0xc8571 ; add rax, rdi ; jmp rax
0x00002aaaaad9049a : cmp eax, 0xd00ef ; call 0x39777
0x00002aaaaadf5410 : cmp eax, 0xf5 ; je 0x12240e ; pop rbx ; ret
0x00002aaaaae465cd : cmp eax, 0xfd ; ja 0x17359f ; call 0x1f8af
0x00002aaaaad8893a : cmp eax, 0xff ; cmove eax, edx ; ret
0x00002aaaaae14dae : cmp eax, 0xff ; je 0x141dc9 ; add rsp, 8 ; ret
0x00002aaaaad45cba : cmp eax, 0xff ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad45cfe : cmp eax, 0xff ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad4e594 : cmp eax, 0xff ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4ef77 : cmp eax, 0xff ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaade7f80 : cmp eax, 0xff ; jne 0x114f7f ; xor eax, eax ; leave ; ret
0x00002aaaaad1b4c4 : cmp eax, 0xff ; jne 0x484b9 ; mov rax, rdx ; ret
0x00002aaaaad47699 : cmp eax, 0xff ; jne 0x746a6 ; pop rbx ; ret
0x00002aaaaad4efcf : cmp eax, 0xff ; jne 0x7bfc0 ; pop rbx ; ret
0x00002aaaaadd7acf : cmp eax, 0xfffff000 ; ja 0x104ae8 ; ret
0x00002aaaaadd978f : cmp eax, 0xfffff000 ; ja 0x1067a8 ; ret
0x00002aaaaadd99d1 : cmp eax, 0xfffff000 ; ja 0x1069e7 ; ret
0x00002aaaaadd9a83 : cmp eax, 0xfffff000 ; ja 0x106a98 ; ret
0x00002aaaaadd9abd : cmp eax, 0xfffff000 ; ja 0x106ad8 ; ret
0x00002aaaaadda66e : cmp eax, 0xfffff000 ; ja 0x107687 ; ret
0x00002aaaaadda7ee : cmp eax, 0xfffff000 ; ja 0x107807 ; ret
0x00002aaaaaddac88 : cmp eax, 0xfffff000 ; ja 0x107c97 ; ret
0x00002aaaaaddad2a : cmp eax, 0xfffff000 ; ja 0x107d3f ; ret
0x00002aaaaaddadda : cmp eax, 0xfffff000 ; ja 0x107def ; ret
0x00002aaaaade7c3b : cmp eax, 0xfffff000 ; ja 0x114c50 ; ret
0x00002aaaaade7ce8 : cmp eax, 0xfffff000 ; ja 0x114d12 ; ret
0x00002aaaaade99ad : cmp eax, 0xfffff000 ; ja 0x1169c8 ; ret
0x00002aaaaade9a5d : cmp eax, 0xfffff000 ; ja 0x116a78 ; ret
0x00002aaaaad08429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x00002aaaaad08731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x00002aaaaad0879d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00002aaaaad087e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00002aaaaad8e888 : cmp eax, 0xfffff000 ; ja 0xbb8a0 ; ret
0x00002aaaaad9a828 : cmp eax, 0xfffff000 ; ja 0xc7840 ; pop rbx ; ret
0x00002aaaaad9baa2 : cmp eax, 0xfffff000 ; ja 0xc8ab7 ; ret
0x00002aaaaad9e431 : cmp eax, 0xfffff000 ; ja 0xcb447 ; ret
0x00002aaaaad9e4cb : cmp eax, 0xfffff000 ; ja 0xcb4df ; ret
0x00002aaaaad9e5bc : cmp eax, 0xfffff000 ; ja 0xcb5cf ; ret
0x00002aaaaad9f714 : cmp eax, 0xfffff000 ; ja 0xcc727 ; ret
0x00002aaaaad9f784 : cmp eax, 0xfffff000 ; ja 0xcc797 ; ret
0x00002aaaaad9f9d8 : cmp eax, 0xfffff000 ; ja 0xcc9e7 ; ret
0x00002aaaaad9fa58 : cmp eax, 0xfffff000 ; ja 0xcca67 ; ret
0x00002aaaaadc9006 : cmp eax, 0xfffff000 ; ja 0xf6018 ; ret
0x00002aaaaadc9055 : cmp eax, 0xfffff000 ; ja 0xf6068 ; ret
0x00002aaaaadc90a6 : cmp eax, 0xfffff000 ; ja 0xf60b8 ; ret
0x00002aaaaadc90fe : cmp eax, 0xfffff000 ; ja 0xf6118 ; ret
0x00002aaaaadc9162 : cmp eax, 0xfffff000 ; ja 0xf6178 ; ret
0x00002aaaaadc91bb : cmp eax, 0xfffff000 ; ja 0xf61d0 ; ret
0x00002aaaaadc939a : cmp eax, 0xfffff000 ; ja 0xf63b0 ; ret
0x00002aaaaadc9a64 : cmp eax, 0xfffff000 ; ja 0xf6aa8 ; ret
0x00002aaaaadcdee3 : cmp eax, 0xfffff000 ; ja 0xfaef8 ; ret
0x00002aaaaadcdf37 : cmp eax, 0xfffff000 ; ja 0xfaf48 ; ret
0x00002aaaaadce68b : cmp eax, 0xfffff000 ; ja 0xfb69f ; ret
0x00002aaaaadcebaf : cmp eax, 0xfffff000 ; ja 0xfbbc7 ; ret
0x00002aaaaadcf45b : cmp eax, 0xfffff000 ; ja 0xfc46f ; ret
0x00002aaaaadcf50b : cmp eax, 0xfffff000 ; ja 0xfc51f ; ret
0x00002aaaaadcf5b6 : cmp eax, 0xfffff000 ; ja 0xfc5c7 ; ret
0x00002aaaaadcf626 : cmp eax, 0xfffff000 ; ja 0xfc637 ; ret
0x00002aaaaadcf6a7 : cmp eax, 0xfffff000 ; ja 0xfc6b7 ; ret
0x00002aaaaadcf757 : cmp eax, 0xfffff000 ; ja 0xfc767 ; ret
0x00002aaaaadcfca7 : cmp eax, 0xfffff000 ; ja 0xfccb8 ; ret
0x00002aaaaadd13c8 : cmp eax, 0xfffff000 ; ja 0xfe3e0 ; ret
0x00002aaaaadd145c : cmp eax, 0xfffff000 ; ja 0xfe470 ; ret
0x00002aaaaadd14fc : cmp eax, 0xfffff000 ; ja 0xfe510 ; ret
0x00002aaaaadd1550 : cmp eax, 0xfffff000 ; ja 0xfe568 ; ret
0x00002aaaaadd38ea : cmp eax, 0xfffff001 ; jae 0x1008f9 ; ret
0x00002aaaaadd3b58 : cmp eax, 0xfffff001 ; jae 0x100b67 ; ret
0x00002aaaaadd3b88 : cmp eax, 0xfffff001 ; jae 0x100b97 ; ret
0x00002aaaaadd3bc1 : cmp eax, 0xfffff001 ; jae 0x100c00 ; ret
0x00002aaaaadd3c18 : cmp eax, 0xfffff001 ; jae 0x100c27 ; ret
0x00002aaaaadd3c48 : cmp eax, 0xfffff001 ; jae 0x100c57 ; ret
0x00002aaaaadd3c7b : cmp eax, 0xfffff001 ; jae 0x100c8a ; ret
0x00002aaaaadd3ca8 : cmp eax, 0xfffff001 ; jae 0x100cb7 ; ret
0x00002aaaaadd3cd8 : cmp eax, 0xfffff001 ; jae 0x100ce7 ; ret
0x00002aaaaadd3d08 : cmp eax, 0xfffff001 ; jae 0x100d17 ; ret
0x00002aaaaadd3d38 : cmp eax, 0xfffff001 ; jae 0x100d47 ; ret
0x00002aaaaadd83fb : cmp eax, 0xfffff001 ; jae 0x10540a ; ret
0x00002aaaaadd8428 : cmp eax, 0xfffff001 ; jae 0x105437 ; ret
0x00002aaaaadd8458 : cmp eax, 0xfffff001 ; jae 0x105467 ; ret
0x00002aaaaadd848b : cmp eax, 0xfffff001 ; jae 0x10549a ; ret
0x00002aaaaadd84bb : cmp eax, 0xfffff001 ; jae 0x1054ca ; ret
0x00002aaaaadd84e8 : cmp eax, 0xfffff001 ; jae 0x1054f7 ; ret
0x00002aaaaadd851b : cmp eax, 0xfffff001 ; jae 0x10552a ; ret
0x00002aaaaadd8548 : cmp eax, 0xfffff001 ; jae 0x105557 ; ret
0x00002aaaaadd8578 : cmp eax, 0xfffff001 ; jae 0x105587 ; ret
0x00002aaaaadd85ab : cmp eax, 0xfffff001 ; jae 0x1055ba ; ret
0x00002aaaaadd85d8 : cmp eax, 0xfffff001 ; jae 0x1055e7 ; ret
0x00002aaaaadd860b : cmp eax, 0xfffff001 ; jae 0x10561a ; ret
0x00002aaaaadd96f8 : cmp eax, 0xfffff001 ; jae 0x106707 ; ret
0x00002aaaaadd9728 : cmp eax, 0xfffff001 ; jae 0x106737 ; ret
0x00002aaaaadd9858 : cmp eax, 0xfffff001 ; jae 0x106867 ; ret
0x00002aaaaadd9898 : cmp eax, 0xfffff001 ; jae 0x1068a7 ; ret
0x00002aaaaadd98c8 : cmp eax, 0xfffff001 ; jae 0x1068d7 ; ret
0x00002aaaaadd98f8 : cmp eax, 0xfffff001 ; jae 0x106907 ; ret
0x00002aaaaadd9928 : cmp eax, 0xfffff001 ; jae 0x106937 ; ret
0x00002aaaaadd9b4b : cmp eax, 0xfffff001 ; jae 0x106b5a ; ret
0x00002aaaaadd9b78 : cmp eax, 0xfffff001 ; jae 0x106b87 ; ret
0x00002aaaaadd9ba8 : cmp eax, 0xfffff001 ; jae 0x106bb7 ; ret
0x00002aaaaadd9bd8 : cmp eax, 0xfffff001 ; jae 0x106be7 ; ret
0x00002aaaaadd9c1b : cmp eax, 0xfffff001 ; jae 0x106c2a ; ret
0x00002aaaaadd9c48 : cmp eax, 0xfffff001 ; jae 0x106c57 ; ret
0x00002aaaaadd9c78 : cmp eax, 0xfffff001 ; jae 0x106c87 ; ret
0x00002aaaaadd9ca8 : cmp eax, 0xfffff001 ; jae 0x106cb7 ; ret
0x00002aaaaadd9cd8 : cmp eax, 0xfffff001 ; jae 0x106ce7 ; ret
0x00002aaaaadd9d08 : cmp eax, 0xfffff001 ; jae 0x106d17 ; ret
0x00002aaaaadd9d38 : cmp eax, 0xfffff001 ; jae 0x106d47 ; ret
0x00002aaaaadd9d68 : cmp eax, 0xfffff001 ; jae 0x106d77 ; ret
0x00002aaaaadd9d98 : cmp eax, 0xfffff001 ; jae 0x106da7 ; ret
0x00002aaaaadd9dcb : cmp eax, 0xfffff001 ; jae 0x106dda ; ret
0x00002aaaaadd9e04 : cmp eax, 0xfffff001 ; jae 0x106e46 ; ret
0x00002aaaaadd9e58 : cmp eax, 0xfffff001 ; jae 0x106e67 ; ret
0x00002aaaaadd9e8b : cmp eax, 0xfffff001 ; jae 0x106e9a ; ret
0x00002aaaaadd9eb8 : cmp eax, 0xfffff001 ; jae 0x106ec7 ; ret
0x00002aaaaadd9ee8 : cmp eax, 0xfffff001 ; jae 0x106ef7 ; ret
0x00002aaaaadd9f18 : cmp eax, 0xfffff001 ; jae 0x106f27 ; ret
0x00002aaaaadd9f48 : cmp eax, 0xfffff001 ; jae 0x106f57 ; ret
0x00002aaaaadd9f78 : cmp eax, 0xfffff001 ; jae 0x106f87 ; ret
0x00002aaaaadd9fab : cmp eax, 0xfffff001 ; jae 0x106fba ; ret
0x00002aaaaadd9fdb : cmp eax, 0xfffff001 ; jae 0x106fea ; ret
0x00002aaaaadda008 : cmp eax, 0xfffff001 ; jae 0x107017 ; ret
0x00002aaaaadda038 : cmp eax, 0xfffff001 ; jae 0x107047 ; ret
0x00002aaaaadda06b : cmp eax, 0xfffff001 ; jae 0x10707a ; ret
0x00002aaaaadda09b : cmp eax, 0xfffff001 ; jae 0x1070aa ; ret
0x00002aaaaadda0cb : cmp eax, 0xfffff001 ; jae 0x1070da ; ret
0x00002aaaaadda104 : cmp eax, 0xfffff001 ; jae 0x107146 ; ret
0x00002aaaaadda158 : cmp eax, 0xfffff001 ; jae 0x107167 ; ret
0x00002aaaaadda194 : cmp eax, 0xfffff001 ; jae 0x1071d6 ; ret
0x00002aaaaadda1e8 : cmp eax, 0xfffff001 ; jae 0x1071f7 ; ret
0x00002aaaaadda218 : cmp eax, 0xfffff001 ; jae 0x107227 ; ret
0x00002aaaaadda254 : cmp eax, 0xfffff001 ; jae 0x107296 ; ret
0x00002aaaaadda2a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00002aaaaadda2db : cmp eax, 0xfffff001 ; jae 0x1072ea ; ret
0x00002aaaaadda308 : cmp eax, 0xfffff001 ; jae 0x107317 ; ret
0x00002aaaaadda338 : cmp eax, 0xfffff001 ; jae 0x107347 ; ret
0x00002aaaaadda36b : cmp eax, 0xfffff001 ; jae 0x10737a ; ret
0x00002aaaaadda3a1 : cmp eax, 0xfffff001 ; jae 0x1073e0 ; ret
0x00002aaaaadda3f8 : cmp eax, 0xfffff001 ; jae 0x107407 ; ret
0x00002aaaaadda42b : cmp eax, 0xfffff001 ; jae 0x10743a ; ret
0x00002aaaaadda45b : cmp eax, 0xfffff001 ; jae 0x10746a ; ret
0x00002aaaaadda4b1 : cmp eax, 0xfffff001 ; jae 0x1074f0 ; ret
0x00002aaaaadda508 : cmp eax, 0xfffff001 ; jae 0x107517 ; ret
0x00002aaaaadda541 : cmp eax, 0xfffff001 ; jae 0x107580 ; ret
0x00002aaaaadda598 : cmp eax, 0xfffff001 ; jae 0x1075a7 ; ret
0x00002aaaaadda5c8 : cmp eax, 0xfffff001 ; jae 0x1075d7 ; ret
0x00002aaaaadda5fb : cmp eax, 0xfffff001 ; jae 0x10760a ; ret
0x00002aaaaadda628 : cmp eax, 0xfffff001 ; jae 0x107637 ; ret
0x00002aaaaadda724 : cmp eax, 0xfffff001 ; jae 0x107766 ; ret
0x00002aaaaadda781 : cmp eax, 0xfffff001 ; jae 0x1077c0 ; ret
0x00002aaaaadda8a1 : cmp eax, 0xfffff001 ; jae 0x1078e0 ; ret
0x00002aaaaadda904 : cmp eax, 0xfffff001 ; jae 0x107946 ; ret
0x00002aaaaadda95b : cmp eax, 0xfffff001 ; jae 0x10796a ; ret
0x00002aaaaadda988 : cmp eax, 0xfffff001 ; jae 0x107997 ; ret
0x00002aaaaadda9b8 : cmp eax, 0xfffff001 ; jae 0x1079c7 ; ret
0x00002aaaaadda9eb : cmp eax, 0xfffff001 ; jae 0x1079fa ; ret
0x00002aaaaaddaf44 : cmp eax, 0xfffff001 ; jae 0x107f86 ; ret
0x00002aaaaaddafa4 : cmp eax, 0xfffff001 ; jae 0x107fe6 ; ret
0x00002aaaaaddaff8 : cmp eax, 0xfffff001 ; jae 0x108007 ; ret
0x00002aaaaaddb028 : cmp eax, 0xfffff001 ; jae 0x108037 ; ret
0x00002aaaaaddb058 : cmp eax, 0xfffff001 ; jae 0x108067 ; ret
0x00002aaaaaddb088 : cmp eax, 0xfffff001 ; jae 0x108097 ; ret
0x00002aaaaaddb0bb : cmp eax, 0xfffff001 ; jae 0x1080ca ; ret
0x00002aaaaaddb0eb : cmp eax, 0xfffff001 ; jae 0x1080fa ; ret
0x00002aaaaaddb118 : cmp eax, 0xfffff001 ; jae 0x108127 ; ret
0x00002aaaaaddb148 : cmp eax, 0xfffff001 ; jae 0x108157 ; ret
0x00002aaaaaddb178 : cmp eax, 0xfffff001 ; jae 0x108187 ; ret
0x00002aaaaaddb1a8 : cmp eax, 0xfffff001 ; jae 0x1081b7 ; ret
0x00002aaaaae12aab : cmp eax, 0xfffff001 ; jae 0x13faba ; ret
0x00002aaaaae12afb : cmp eax, 0xfffff001 ; jae 0x13fb0a ; ret
0x00002aaaaad08768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x00002aaaaad08e28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x00002aaaaad1ab22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x00002aaaaad3e368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x00002aaaaad3e39b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00002aaaaad8e968 : cmp eax, 0xfffff001 ; jae 0xbb977 ; ret
0x00002aaaaad91a58 : cmp eax, 0xfffff001 ; jae 0xbea67 ; ret
0x00002aaaaad91a88 : cmp eax, 0xfffff001 ; jae 0xbea97 ; ret
0x00002aaaaad9e388 : cmp eax, 0xfffff001 ; jae 0xcb397 ; ret
0x00002aaaaad9e57b : cmp eax, 0xfffff001 ; jae 0xcb58a ; ret
0x00002aaaaad9e658 : cmp eax, 0xfffff001 ; jae 0xcb667 ; ret
0x00002aaaaad9e6e1 : cmp eax, 0xfffff001 ; jae 0xcb720 ; ret
0x00002aaaaad9e741 : cmp eax, 0xfffff001 ; jae 0xcb780 ; ret
0x00002aaaaad9eb42 : cmp eax, 0xfffff001 ; jae 0xcbb51 ; ret
0x00002aaaaad9ebc8 : cmp eax, 0xfffff001 ; jae 0xcbbd7 ; ret
0x00002aaaaad9f6d8 : cmp eax, 0xfffff001 ; jae 0xcc6e7 ; ret
0x00002aaaaad9f878 : cmp eax, 0xfffff001 ; jae 0xcc887 ; ret
0x00002aaaaad9f8a8 : cmp eax, 0xfffff001 ; jae 0xcc8b7 ; ret
0x00002aaaaad9f908 : cmp eax, 0xfffff001 ; jae 0xcc917 ; ret
0x00002aaaaad9f938 : cmp eax, 0xfffff001 ; jae 0xcc947 ; ret
0x00002aaaaad9f968 : cmp eax, 0xfffff001 ; jae 0xcc977 ; ret
0x00002aaaaad9f998 : cmp eax, 0xfffff001 ; jae 0xcc9a7 ; ret
0x00002aaaaadbcb88 : cmp eax, 0xfffff001 ; jae 0xe9b97 ; ret
0x00002aaaaadbcbb8 : cmp eax, 0xfffff001 ; jae 0xe9bc7 ; ret
0x00002aaaaadbcbe8 : cmp eax, 0xfffff001 ; jae 0xe9bf7 ; ret
0x00002aaaaadbcc18 : cmp eax, 0xfffff001 ; jae 0xe9c27 ; ret
0x00002aaaaadbcc48 : cmp eax, 0xfffff001 ; jae 0xe9c57 ; ret
0x00002aaaaadbcc78 : cmp eax, 0xfffff001 ; jae 0xe9c87 ; ret
0x00002aaaaadbcca8 : cmp eax, 0xfffff001 ; jae 0xe9cb7 ; ret
0x00002aaaaadbccd8 : cmp eax, 0xfffff001 ; jae 0xe9ce7 ; ret
0x00002aaaaadc7e94 : cmp eax, 0xfffff001 ; jae 0xf4ed6 ; ret
0x00002aaaaadc7ef4 : cmp eax, 0xfffff001 ; jae 0xf4f36 ; ret
0x00002aaaaadc8f68 : cmp eax, 0xfffff001 ; jae 0xf5f77 ; ret
0x00002aaaaadc9208 : cmp eax, 0xfffff001 ; jae 0xf6217 ; ret
0x00002aaaaadc9238 : cmp eax, 0xfffff001 ; jae 0xf6247 ; ret
0x00002aaaaadc9308 : cmp eax, 0xfffff001 ; jae 0xf6317 ; ret
0x00002aaaaadc9338 : cmp eax, 0xfffff001 ; jae 0xf6347 ; ret
0x00002aaaaadc93f8 : cmp eax, 0xfffff001 ; jae 0xf6407 ; ret
0x00002aaaaadc9428 : cmp eax, 0xfffff001 ; jae 0xf6437 ; ret
0x00002aaaaadc9461 : cmp eax, 0xfffff001 ; jae 0xf64a0 ; ret
0x00002aaaaadc9681 : cmp eax, 0xfffff001 ; jae 0xf66c0 ; ret
0x00002aaaaadc96e1 : cmp eax, 0xfffff001 ; jae 0xf6720 ; ret
0x00002aaaaadc9738 : cmp eax, 0xfffff001 ; jae 0xf6747 ; ret
0x00002aaaaadc9bc8 : cmp eax, 0xfffff001 ; jae 0xf6bd7 ; ret
0x00002aaaaadc9d11 : cmp eax, 0xfffff001 ; jae 0xf6d50 ; ret
0x00002aaaaadc9d68 : cmp eax, 0xfffff001 ; jae 0xf6d77 ; ret
0x00002aaaaadc9d98 : cmp eax, 0xfffff001 ; jae 0xf6da7 ; ret
0x00002aaaaadc9dc8 : cmp eax, 0xfffff001 ; jae 0xf6dd7 ; ret
0x00002aaaaadc9df8 : cmp eax, 0xfffff001 ; jae 0xf6e07 ; ret
0x00002aaaaadc9e28 : cmp eax, 0xfffff001 ; jae 0xf6e37 ; ret
0x00002aaaaadc9e61 : cmp eax, 0xfffff001 ; jae 0xf6ea0 ; ret
0x00002aaaaadc9eb8 : cmp eax, 0xfffff001 ; jae 0xf6ec7 ; ret
0x00002aaaaadc9ee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00002aaaaadca718 : cmp eax, 0xfffff001 ; jae 0xf7727 ; ret
0x00002aaaaadca748 : cmp eax, 0xfffff001 ; jae 0xf7757 ; ret
0x00002aaaaadca778 : cmp eax, 0xfffff001 ; jae 0xf7787 ; ret
0x00002aaaaadca7ab : cmp eax, 0xfffff001 ; jae 0xf77ba ; ret
0x00002aaaaadcad88 : cmp eax, 0xfffff001 ; jae 0xf7d97 ; ret
0x00002aaaaadcadbb : cmp eax, 0xfffff001 ; jae 0xf7dca ; ret
0x00002aaaaadcade8 : cmp eax, 0xfffff001 ; jae 0xf7df7 ; ret
0x00002aaaaadcae18 : cmp eax, 0xfffff001 ; jae 0xf7e27 ; ret
0x00002aaaaadcae48 : cmp eax, 0xfffff001 ; jae 0xf7e57 ; ret
0x00002aaaaadcae7b : cmp eax, 0xfffff001 ; jae 0xf7e8a ; ret
0x00002aaaaadcaea8 : cmp eax, 0xfffff001 ; jae 0xf7eb7 ; ret
0x00002aaaaadcaed8 : cmp eax, 0xfffff001 ; jae 0xf7ee7 ; ret
0x00002aaaaadcaf08 : cmp eax, 0xfffff001 ; jae 0xf7f17 ; ret
0x00002aaaaadcdb41 : cmp eax, 0xfffff001 ; jae 0xfab80 ; ret
0x00002aaaaadcdeab : cmp eax, 0xfffff001 ; jae 0xfaeba ; ret
0x00002aaaaadce624 : cmp eax, 0xfffff001 ; jae 0xfb666 ; ret
0x00002aaaaadced78 : cmp eax, 0xfffff001 ; jae 0xfbd87 ; ret
0x00002aaaaadceda8 : cmp eax, 0xfffff001 ; jae 0xfbdb7 ; ret
0x00002aaaaadcedd8 : cmp eax, 0xfffff001 ; jae 0xfbde7 ; ret
0x00002aaaaadcf178 : cmp eax, 0xfffff001 ; jae 0xfc187 ; ret
0x00002aaaaadcf358 : cmp eax, 0xfffff001 ; jae 0xfc367 ; ret
0x00002aaaaadcf391 : cmp eax, 0xfffff001 ; jae 0xfc3d0 ; ret
0x00002aaaaadcf3f1 : cmp eax, 0xfffff001 ; jae 0xfc430 ; ret
0x00002aaaaadcf8e8 : cmp eax, 0xfffff001 ; jae 0xfc8f7 ; ret
0x00002aaaaadcf988 : cmp eax, 0xfffff001 ; jae 0xfc997 ; ret
0x00002aaaaadcf9c4 : cmp eax, 0xfffff001 ; jae 0xfca06 ; ret
0x00002aaaaadcfb18 : cmp eax, 0xfffff001 ; jae 0xfcb27 ; ret
0x00002aaaaadcfb48 : cmp eax, 0xfffff001 ; jae 0xfcb57 ; ret
0x00002aaaaadcfb81 : cmp eax, 0xfffff001 ; jae 0xfcbc0 ; ret
0x00002aaaaadcfbd8 : cmp eax, 0xfffff001 ; jae 0xfcbe7 ; ret
0x00002aaaaadcfc11 : cmp eax, 0xfffff001 ; jae 0xfcc50 ; ret
0x00002aaaaadcfc68 : cmp eax, 0xfffff001 ; jae 0xfcc77 ; ret
0x00002aaaaadcffd8 : cmp eax, 0xfffff001 ; jae 0xfcfe7 ; ret
0x00002aaaaadd0008 : cmp eax, 0xfffff001 ; jae 0xfd017 ; ret
0x00002aaaaadd0038 : cmp eax, 0xfffff001 ; jae 0xfd047 ; ret
0x00002aaaaadd1588 : cmp eax, 0xfffff001 ; jae 0xfe597 ; ret
0x00002aaaaadd15b8 : cmp eax, 0xfffff001 ; jae 0xfe5c7 ; ret
0x00002aaaaade7f58 : cmp eax, 0xfffffe93 ; call rax
0x00002aaaaad7d17f : cmp eax, 2 ; je 0xaa197 ; xor eax, eax ; ret
0x00002aaaaae0cea1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00002aaaaadad37e : cmp eax, 3 ; je 0xda398 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaade756a : cmp eax, 4 ; je 0x114575 ; ret
0x00002aaaaae71afd : cmp eax, dword ptr [rax] ; add al, ah ; xor al, 0xea ; jmp rax
0x00002aaaaad4c615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaae8f604 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x00002aaaaadd5f41 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00002aaaaad7dfbe : cmp eax, dword ptr [rsi + 0x10] ; jne 0xab0b9 ; ret
0x00002aaaaad7dfd3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xab0b9 ; ret
0x00002aaaaad7dfe8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xab0b9 ; ret
0x00002aaaaad7e003 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xab0b9 ; ret
0x00002aaaaad7e01e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xab0b9 ; ret
0x00002aaaaad7e033 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b5 ; ret
0x00002aaaaad7e048 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b5 ; ret
0x00002aaaaad7e053 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b5 ; ret
0x00002aaaaad7e06e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b5 ; ret
0x00002aaaaad7e083 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b5 ; ret
0x00002aaaaad7e098 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b5 ; ret
0x00002aaaaad7e0a3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b5 ; ret
0x00002aaaaad7dfa3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xab0b9 ; ret
0x00002aaaaad7df73 : cmp eax, dword ptr [rsi + 4] ; jne 0xab0b9 ; ret
0x00002aaaaad7df88 : cmp eax, dword ptr [rsi + 8] ; jne 0xab0b9 ; ret
0x00002aaaaae44c0a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x171d49 ; ret
0x00002aaaaae44c23 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x171d49 ; ret
0x00002aaaaae44d33 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d47 ; xor eax, eax ; ret
0x00002aaaaae44c53 : cmp eax, dword ptr [rsi - 4] ; jne 0x171d49 ; ret
0x00002aaaaae44c38 : cmp eax, dword ptr [rsi - 8] ; jne 0x171d49 ; ret
0x00002aaaaad7df5d : cmp eax, dword ptr [rsi] ; jne 0xab0b8 ; ret
0x00002aaaaadd31c4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfc3e8
0x00002aaaaad4fc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaad7107d : cmp eax, ecx ; je 0x9e065 ; ret
0x00002aaaaacd6af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaae44723 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaade6ddb : cmp eax, edx ; jb 0x113dd6 ; xor eax, eax ; ret
0x00002aaaaae0a6f1 : cmp eax, edx ; je 0x137708 ; add rsp, 8 ; ret
0x00002aaaaadf59ca : cmp eax, edx ; jne 0x1229a9 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaad1b085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x00002aaaaad5ab8d : cmp eax, edx ; jne 0x87b47 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4e2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaade0dd9 : cmp eax, esi ; jb 0x10ddf1 ; mov eax, 1 ; ret
0x00002aaaaada9a98 : cmp eax, esi ; jge 0xd6a75 ; mov edx, eax ; jmp 0xd6a7e
0x00002aaaaae03cd4 : cmp ebp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00002aaaaae71bd9 : cmp ebp, edx ; call qword ptr [rbx]
0x00002aaaaade7506 : cmp ebx, 0xa ; je 0x114511 ; ret
0x00002aaaaad927df : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaad51c15 : cmp ebx, eax ; je 0x7ec26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae4678a : cmp ebx, ebp ; jae 0x17379d ; call qword ptr [rbx]
0x00002aaaaae4678a : cmp ebx, ebp ; jae 0x1737a1 ; call qword ptr [rbx]
0x00002aaaaae467b9 : cmp ebx, ebp ; jb 0x1737b3 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaad1bb7c : cmp ecx, 0xff ; jne 0x48b79 ; mov rax, rdx ; ret
0x00002aaaaadc3285 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x00002aaaaadfe8b5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00002aaaaadc65a9 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaacf7ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad8eb10 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaad6ff07 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x00002aaaaad6dfc3 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x00002aaaaad47f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaacf2b03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x00002aaaaae41e1b : cmp ecx, eax ; jne 0x16ee49 ; xor eax, eax ; ret
0x00002aaaaae42c5b : cmp ecx, eax ; jne 0x16fc89 ; xor eax, eax ; ret
0x00002aaaaae42c8f : cmp ecx, eax ; jne 0x16fc9c ; xor eax, eax ; ret
0x00002aaaaae0e2d3 : cmp ecx, edx ; jae 0x13b2e6 ; xor eax, eax ; ret
0x00002aaaaae0e313 : cmp ecx, edx ; jae 0x13b326 ; xor eax, eax ; ret
0x00002aaaaad71028 : cmp ecx, edx ; je 0x9e029 ; cmp ecx, esi ; je 0x9e029 ; ret
0x00002aaaaad7102c : cmp ecx, esi ; je 0x9e025 ; ret
0x00002aaaaad7f069 : cmp edi, 0x7f ; ja 0xac07f ; mov eax, edi ; ret
0x00002aaaaad68147 : cmp edi, 0xd ; je 0x95161 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaae469c8 : cmp edi, 1 ; ja 0x1739d5 ; ret
0x00002aaaaaddcaed : cmp edi, 9 ; setbe al ; ret
0x00002aaaaad1d49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00002aaaaad234b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x00002aaaaae6ce41 : cmp edi, ecx ; jmp rsp
0x00002aaaaadcf241 : cmp edi, edx ; ja 0xfc275 ; ret
0x00002aaaaadc8e60 : cmp edi, esi ; ja 0xf5e55 ; ret
0x00002aaaaad1d5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaae67fe5 : cmp edi, esp ; jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaae68025 : cmp edi, esp ; jmp qword ptr [rax]
0x00002aaaaad9f648 : cmp edx, 0 ; mov eax, edx ; jle 0xcc660 ; ret
0x00002aaaaadeb7df : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00002aaaaad8b9cd : cmp edx, 0x8944ffff ; ret 0x894d
0x00002aaaaad0da00 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00002aaaaada3af6 : cmp edx, 1 ; sete al ; ret
0x00002aaaaad4c6a1 : cmp edx, dword ptr [rax + 0xf480034] ; ret 0x8948
0x00002aaaaad00a7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x00002aaaaade77b2 : cmp edx, eax ; jne 0x114795 ; ret
0x00002aaaaad563da : cmp edx, eax ; jne 0x833a5 ; ret
0x00002aaaaad7e5b7 : cmp edx, eax ; jne 0xab5a7 ; xor eax, eax ; ret
0x00002aaaaadf58e6 : cmp edx, eax ; sbb eax, eax ; ret
0x00002aaaaae0e1bf : cmp edx, ecx ; je 0x13b1d5 ; ret
0x00002aaaaad61738 : cmp edx, ecx ; jne 0x8e725 ; ret
0x00002aaaaad9fee7 : cmp edx, ecx ; jne 0xccf14 ; ret
0x00002aaaaade6eba : cmp edx, edi ; setae al ; ret
0x00002aaaaadf62d6 : cmp edx, esi ; jb 0x1232cd ; mov eax, 0xffffffff ; ret
0x00002aaaaad71008 : cmp edx, esi ; je 0x9e005 ; ret
0x00002aaaaad7ff16 : cmp edx, esi ; je 0xacf27 ; test edx, edx ; jne 0xacf19 ; ret
0x00002aaaaad46059 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x00002aaaaad4a4f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaacfd695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x00002aaaaad7ec71 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00002aaaaae00bfa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12dbf1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaae675b0 : cmp esi, dword ptr [rsi - 0x482e0003] ; std ; call rcx
0x00002aaaaae576e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00002aaaaad45d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaae1cd68 : cmp esi, ecx ; jle 0x149cad ; ret
0x00002aaaaad4f00a : cmp esi, ecx ; jne 0x7c007 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaadf634e : cmp esi, edx ; ja 0x12333d ; mov eax, 0xffffffff ; ret
0x00002aaaaad1b21d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x00002aaaaae6828d : cmp esp, 0xfc7720ff ; jmp rax
0x00002aaaaae6810d : cmp esp, 0xfc8162ff ; call rdx
0x00002aaaaae6808d : cmp esp, 0xfc8176ff ; jmp rsi
0x00002aaaaae68289 : cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaae689dd : cmp esp, 0xff ; push rax ; test edi, esp ; call rax
0x00002aaaaae67fe1 : cmp esp, edi ; jmp qword ptr [rax]
0x00002aaaaadc8e2c : cmp esp, esi ; ja 0xf5dc8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad01198 : cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaad45aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00002aaaaad4a3e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00002aaaaad4e560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x00002aaaaade6e57 : cmp qword ptr [rdi], 0 ; je 0x113e6f ; ret
0x00002aaaaadd48fc : cmp qword ptr [rsi], 0 ; je 0x10190f ; pop rbx ; ret
0x00002aaaaad67122 : cmp r11b, r14b ; ret
0x00002aaaaade7505 : cmp r11d, 0xa ; je 0x114512 ; ret
0x00002aaaaadc8e2b : cmp r12, rsi ; ja 0xf5dc9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad2f465 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c438
0x00002aaaaad7107c : cmp r8d, ecx ; je 0x9e066 ; ret
0x00002aaaaada9a97 : cmp r8d, esi ; jge 0xd6a76 ; mov edx, eax ; jmp 0xd6a7f
0x00002aaaaacf2b02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00002aaaaadb340f : cmp r9b, 0x11 ; je 0xe0453 ; mov rdx, rax ; jmp 0xe03b7
0x00002aaaaade15d1 : cmp r9b, r13b ; ret
0x00002aaaaadd7ace : cmp rax, -0x1000 ; ja 0x104ae9 ; ret
0x00002aaaaadd978e : cmp rax, -0x1000 ; ja 0x1067a9 ; ret
0x00002aaaaadd99d0 : cmp rax, -0x1000 ; ja 0x1069e8 ; ret
0x00002aaaaadd9a82 : cmp rax, -0x1000 ; ja 0x106a99 ; ret
0x00002aaaaadd9abc : cmp rax, -0x1000 ; ja 0x106ad9 ; ret
0x00002aaaaadda66d : cmp rax, -0x1000 ; ja 0x107688 ; ret
0x00002aaaaadda7ed : cmp rax, -0x1000 ; ja 0x107808 ; ret
0x00002aaaaaddac87 : cmp rax, -0x1000 ; ja 0x107c98 ; ret
0x00002aaaaaddad29 : cmp rax, -0x1000 ; ja 0x107d40 ; ret
0x00002aaaaaddadd9 : cmp rax, -0x1000 ; ja 0x107df0 ; ret
0x00002aaaaade7c3a : cmp rax, -0x1000 ; ja 0x114c51 ; ret
0x00002aaaaade7ce7 : cmp rax, -0x1000 ; ja 0x114d13 ; ret
0x00002aaaaade99ac : cmp rax, -0x1000 ; ja 0x1169c9 ; ret
0x00002aaaaade9a5c : cmp rax, -0x1000 ; ja 0x116a79 ; ret
0x00002aaaaad08428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x00002aaaaad08730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x00002aaaaad0879c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00002aaaaad087e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00002aaaaad8e887 : cmp rax, -0x1000 ; ja 0xbb8a1 ; ret
0x00002aaaaad9a827 : cmp rax, -0x1000 ; ja 0xc7841 ; pop rbx ; ret
0x00002aaaaad9baa1 : cmp rax, -0x1000 ; ja 0xc8ab8 ; ret
0x00002aaaaad9e430 : cmp rax, -0x1000 ; ja 0xcb448 ; ret
0x00002aaaaad9e4ca : cmp rax, -0x1000 ; ja 0xcb4e0 ; ret
0x00002aaaaad9e5bb : cmp rax, -0x1000 ; ja 0xcb5d0 ; ret
0x00002aaaaad9f713 : cmp rax, -0x1000 ; ja 0xcc728 ; ret
0x00002aaaaad9f783 : cmp rax, -0x1000 ; ja 0xcc798 ; ret
0x00002aaaaad9f9d7 : cmp rax, -0x1000 ; ja 0xcc9e8 ; ret
0x00002aaaaad9fa57 : cmp rax, -0x1000 ; ja 0xcca68 ; ret
0x00002aaaaadc9005 : cmp rax, -0x1000 ; ja 0xf6019 ; ret
0x00002aaaaadc9054 : cmp rax, -0x1000 ; ja 0xf6069 ; ret
0x00002aaaaadc90a5 : cmp rax, -0x1000 ; ja 0xf60b9 ; ret
0x00002aaaaadc90fd : cmp rax, -0x1000 ; ja 0xf6119 ; ret
0x00002aaaaadc9161 : cmp rax, -0x1000 ; ja 0xf6179 ; ret
0x00002aaaaadc91ba : cmp rax, -0x1000 ; ja 0xf61d1 ; ret
0x00002aaaaadc9399 : cmp rax, -0x1000 ; ja 0xf63b1 ; ret
0x00002aaaaadc9a63 : cmp rax, -0x1000 ; ja 0xf6aa9 ; ret
0x00002aaaaadcdee2 : cmp rax, -0x1000 ; ja 0xfaef9 ; ret
0x00002aaaaadcdf36 : cmp rax, -0x1000 ; ja 0xfaf49 ; ret
0x00002aaaaadce68a : cmp rax, -0x1000 ; ja 0xfb6a0 ; ret
0x00002aaaaadcebae : cmp rax, -0x1000 ; ja 0xfbbc8 ; ret
0x00002aaaaadcf45a : cmp rax, -0x1000 ; ja 0xfc470 ; ret
0x00002aaaaadcf50a : cmp rax, -0x1000 ; ja 0xfc520 ; ret
0x00002aaaaadcf5b5 : cmp rax, -0x1000 ; ja 0xfc5c8 ; ret
0x00002aaaaadcf625 : cmp rax, -0x1000 ; ja 0xfc638 ; ret
0x00002aaaaadcf6a6 : cmp rax, -0x1000 ; ja 0xfc6b8 ; ret
0x00002aaaaadcf756 : cmp rax, -0x1000 ; ja 0xfc768 ; ret
0x00002aaaaadcfca6 : cmp rax, -0x1000 ; ja 0xfccb9 ; ret
0x00002aaaaadd13c7 : cmp rax, -0x1000 ; ja 0xfe3e1 ; ret
0x00002aaaaadd145b : cmp rax, -0x1000 ; ja 0xfe471 ; ret
0x00002aaaaadd14fb : cmp rax, -0x1000 ; ja 0xfe511 ; ret
0x00002aaaaadd154f : cmp rax, -0x1000 ; ja 0xfe569 ; ret
0x00002aaaaadd38e9 : cmp rax, -0xfff ; jae 0x1008fa ; ret
0x00002aaaaadd3b57 : cmp rax, -0xfff ; jae 0x100b68 ; ret
0x00002aaaaadd3b87 : cmp rax, -0xfff ; jae 0x100b98 ; ret
0x00002aaaaadd3bc0 : cmp rax, -0xfff ; jae 0x100c01 ; ret
0x00002aaaaadd3c17 : cmp rax, -0xfff ; jae 0x100c28 ; ret
0x00002aaaaadd3c47 : cmp rax, -0xfff ; jae 0x100c58 ; ret
0x00002aaaaadd3c7a : cmp rax, -0xfff ; jae 0x100c8b ; ret
0x00002aaaaadd3ca7 : cmp rax, -0xfff ; jae 0x100cb8 ; ret
0x00002aaaaadd3cd7 : cmp rax, -0xfff ; jae 0x100ce8 ; ret
0x00002aaaaadd3d07 : cmp rax, -0xfff ; jae 0x100d18 ; ret
0x00002aaaaadd3d37 : cmp rax, -0xfff ; jae 0x100d48 ; ret
0x00002aaaaadd83fa : cmp rax, -0xfff ; jae 0x10540b ; ret
0x00002aaaaadd8427 : cmp rax, -0xfff ; jae 0x105438 ; ret
0x00002aaaaadd8457 : cmp rax, -0xfff ; jae 0x105468 ; ret
0x00002aaaaadd848a : cmp rax, -0xfff ; jae 0x10549b ; ret
0x00002aaaaadd84ba : cmp rax, -0xfff ; jae 0x1054cb ; ret
0x00002aaaaadd84e7 : cmp rax, -0xfff ; jae 0x1054f8 ; ret
0x00002aaaaadd851a : cmp rax, -0xfff ; jae 0x10552b ; ret
0x00002aaaaadd8547 : cmp rax, -0xfff ; jae 0x105558 ; ret
0x00002aaaaadd8577 : cmp rax, -0xfff ; jae 0x105588 ; ret
0x00002aaaaadd85aa : cmp rax, -0xfff ; jae 0x1055bb ; ret
0x00002aaaaadd85d7 : cmp rax, -0xfff ; jae 0x1055e8 ; ret
0x00002aaaaadd860a : cmp rax, -0xfff ; jae 0x10561b ; ret
0x00002aaaaadd96f7 : cmp rax, -0xfff ; jae 0x106708 ; ret
0x00002aaaaadd9727 : cmp rax, -0xfff ; jae 0x106738 ; ret
0x00002aaaaadd9857 : cmp rax, -0xfff ; jae 0x106868 ; ret
0x00002aaaaadd9897 : cmp rax, -0xfff ; jae 0x1068a8 ; ret
0x00002aaaaadd98c7 : cmp rax, -0xfff ; jae 0x1068d8 ; ret
0x00002aaaaadd98f7 : cmp rax, -0xfff ; jae 0x106908 ; ret
0x00002aaaaadd9927 : cmp rax, -0xfff ; jae 0x106938 ; ret
0x00002aaaaadd9b4a : cmp rax, -0xfff ; jae 0x106b5b ; ret
0x00002aaaaadd9b77 : cmp rax, -0xfff ; jae 0x106b88 ; ret
0x00002aaaaadd9ba7 : cmp rax, -0xfff ; jae 0x106bb8 ; ret
0x00002aaaaadd9bd7 : cmp rax, -0xfff ; jae 0x106be8 ; ret
0x00002aaaaadd9c1a : cmp rax, -0xfff ; jae 0x106c2b ; ret
0x00002aaaaadd9c47 : cmp rax, -0xfff ; jae 0x106c58 ; ret
0x00002aaaaadd9c77 : cmp rax, -0xfff ; jae 0x106c88 ; ret
0x00002aaaaadd9ca7 : cmp rax, -0xfff ; jae 0x106cb8 ; ret
0x00002aaaaadd9cd7 : cmp rax, -0xfff ; jae 0x106ce8 ; ret
0x00002aaaaadd9d07 : cmp rax, -0xfff ; jae 0x106d18 ; ret
0x00002aaaaadd9d37 : cmp rax, -0xfff ; jae 0x106d48 ; ret
0x00002aaaaadd9d67 : cmp rax, -0xfff ; jae 0x106d78 ; ret
0x00002aaaaadd9d97 : cmp rax, -0xfff ; jae 0x106da8 ; ret
0x00002aaaaadd9dca : cmp rax, -0xfff ; jae 0x106ddb ; ret
0x00002aaaaadd9e03 : cmp rax, -0xfff ; jae 0x106e47 ; ret
0x00002aaaaadd9e57 : cmp rax, -0xfff ; jae 0x106e68 ; ret
0x00002aaaaadd9e8a : cmp rax, -0xfff ; jae 0x106e9b ; ret
0x00002aaaaadd9eb7 : cmp rax, -0xfff ; jae 0x106ec8 ; ret
0x00002aaaaadd9ee7 : cmp rax, -0xfff ; jae 0x106ef8 ; ret
0x00002aaaaadd9f17 : cmp rax, -0xfff ; jae 0x106f28 ; ret
0x00002aaaaadd9f47 : cmp rax, -0xfff ; jae 0x106f58 ; ret
0x00002aaaaadd9f77 : cmp rax, -0xfff ; jae 0x106f88 ; ret
0x00002aaaaadd9faa : cmp rax, -0xfff ; jae 0x106fbb ; ret
0x00002aaaaadd9fda : cmp rax, -0xfff ; jae 0x106feb ; ret
0x00002aaaaadda007 : cmp rax, -0xfff ; jae 0x107018 ; ret
0x00002aaaaadda037 : cmp rax, -0xfff ; jae 0x107048 ; ret
0x00002aaaaadda06a : cmp rax, -0xfff ; jae 0x10707b ; ret
0x00002aaaaadda09a : cmp rax, -0xfff ; jae 0x1070ab ; ret
0x00002aaaaadda0ca : cmp rax, -0xfff ; jae 0x1070db ; ret
0x00002aaaaadda103 : cmp rax, -0xfff ; jae 0x107147 ; ret
0x00002aaaaadda157 : cmp rax, -0xfff ; jae 0x107168 ; ret
0x00002aaaaadda193 : cmp rax, -0xfff ; jae 0x1071d7 ; ret
0x00002aaaaadda1e7 : cmp rax, -0xfff ; jae 0x1071f8 ; ret
0x00002aaaaadda217 : cmp rax, -0xfff ; jae 0x107228 ; ret
0x00002aaaaadda253 : cmp rax, -0xfff ; jae 0x107297 ; ret
0x00002aaaaadda2a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00002aaaaadda2da : cmp rax, -0xfff ; jae 0x1072eb ; ret
0x00002aaaaadda307 : cmp rax, -0xfff ; jae 0x107318 ; ret
0x00002aaaaadda337 : cmp rax, -0xfff ; jae 0x107348 ; ret
0x00002aaaaadda36a : cmp rax, -0xfff ; jae 0x10737b ; ret
0x00002aaaaadda3a0 : cmp rax, -0xfff ; jae 0x1073e1 ; ret
0x00002aaaaadda3f7 : cmp rax, -0xfff ; jae 0x107408 ; ret
0x00002aaaaadda42a : cmp rax, -0xfff ; jae 0x10743b ; ret
0x00002aaaaadda45a : cmp rax, -0xfff ; jae 0x10746b ; ret
0x00002aaaaadda4b0 : cmp rax, -0xfff ; jae 0x1074f1 ; ret
0x00002aaaaadda507 : cmp rax, -0xfff ; jae 0x107518 ; ret
0x00002aaaaadda540 : cmp rax, -0xfff ; jae 0x107581 ; ret
0x00002aaaaadda597 : cmp rax, -0xfff ; jae 0x1075a8 ; ret
0x00002aaaaadda5c7 : cmp rax, -0xfff ; jae 0x1075d8 ; ret
0x00002aaaaadda5fa : cmp rax, -0xfff ; jae 0x10760b ; ret
0x00002aaaaadda627 : cmp rax, -0xfff ; jae 0x107638 ; ret
0x00002aaaaadda723 : cmp rax, -0xfff ; jae 0x107767 ; ret
0x00002aaaaadda780 : cmp rax, -0xfff ; jae 0x1077c1 ; ret
0x00002aaaaadda8a0 : cmp rax, -0xfff ; jae 0x1078e1 ; ret
0x00002aaaaadda903 : cmp rax, -0xfff ; jae 0x107947 ; ret
0x00002aaaaadda95a : cmp rax, -0xfff ; jae 0x10796b ; ret
0x00002aaaaadda987 : cmp rax, -0xfff ; jae 0x107998 ; ret
0x00002aaaaadda9b7 : cmp rax, -0xfff ; jae 0x1079c8 ; ret
0x00002aaaaadda9ea : cmp rax, -0xfff ; jae 0x1079fb ; ret
0x00002aaaaaddaf43 : cmp rax, -0xfff ; jae 0x107f87 ; ret
0x00002aaaaaddafa3 : cmp rax, -0xfff ; jae 0x107fe7 ; ret
0x00002aaaaaddaff7 : cmp rax, -0xfff ; jae 0x108008 ; ret
0x00002aaaaaddb027 : cmp rax, -0xfff ; jae 0x108038 ; ret
0x00002aaaaaddb057 : cmp rax, -0xfff ; jae 0x108068 ; ret
0x00002aaaaaddb087 : cmp rax, -0xfff ; jae 0x108098 ; ret
0x00002aaaaaddb0ba : cmp rax, -0xfff ; jae 0x1080cb ; ret
0x00002aaaaaddb0ea : cmp rax, -0xfff ; jae 0x1080fb ; ret
0x00002aaaaaddb117 : cmp rax, -0xfff ; jae 0x108128 ; ret
0x00002aaaaaddb147 : cmp rax, -0xfff ; jae 0x108158 ; ret
0x00002aaaaaddb177 : cmp rax, -0xfff ; jae 0x108188 ; ret
0x00002aaaaaddb1a7 : cmp rax, -0xfff ; jae 0x1081b8 ; ret
0x00002aaaaae12aaa : cmp rax, -0xfff ; jae 0x13fabb ; ret
0x00002aaaaae12afa : cmp rax, -0xfff ; jae 0x13fb0b ; ret
0x00002aaaaad08767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x00002aaaaad08e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x00002aaaaad3e367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x00002aaaaad3e39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00002aaaaad8e967 : cmp rax, -0xfff ; jae 0xbb978 ; ret
0x00002aaaaad91a57 : cmp rax, -0xfff ; jae 0xbea68 ; ret
0x00002aaaaad91a87 : cmp rax, -0xfff ; jae 0xbea98 ; ret
0x00002aaaaad9e387 : cmp rax, -0xfff ; jae 0xcb398 ; ret
0x00002aaaaad9e57a : cmp rax, -0xfff ; jae 0xcb58b ; ret
0x00002aaaaad9e657 : cmp rax, -0xfff ; jae 0xcb668 ; ret
0x00002aaaaad9e6e0 : cmp rax, -0xfff ; jae 0xcb721 ; ret
0x00002aaaaad9e740 : cmp rax, -0xfff ; jae 0xcb781 ; ret
0x00002aaaaad9ebc7 : cmp rax, -0xfff ; jae 0xcbbd8 ; ret
0x00002aaaaad9f6d7 : cmp rax, -0xfff ; jae 0xcc6e8 ; ret
0x00002aaaaad9f877 : cmp rax, -0xfff ; jae 0xcc888 ; ret
0x00002aaaaad9f8a7 : cmp rax, -0xfff ; jae 0xcc8b8 ; ret
0x00002aaaaad9f907 : cmp rax, -0xfff ; jae 0xcc918 ; ret
0x00002aaaaad9f937 : cmp rax, -0xfff ; jae 0xcc948 ; ret
0x00002aaaaad9f967 : cmp rax, -0xfff ; jae 0xcc978 ; ret
0x00002aaaaad9f997 : cmp rax, -0xfff ; jae 0xcc9a8 ; ret
0x00002aaaaadbcb87 : cmp rax, -0xfff ; jae 0xe9b98 ; ret
0x00002aaaaadbcbb7 : cmp rax, -0xfff ; jae 0xe9bc8 ; ret
0x00002aaaaadbcbe7 : cmp rax, -0xfff ; jae 0xe9bf8 ; ret
0x00002aaaaadbcc17 : cmp rax, -0xfff ; jae 0xe9c28 ; ret
0x00002aaaaadbcc47 : cmp rax, -0xfff ; jae 0xe9c58 ; ret
0x00002aaaaadbcc77 : cmp rax, -0xfff ; jae 0xe9c88 ; ret
0x00002aaaaadbcca7 : cmp rax, -0xfff ; jae 0xe9cb8 ; ret
0x00002aaaaadbccd7 : cmp rax, -0xfff ; jae 0xe9ce8 ; ret
0x00002aaaaadc7e93 : cmp rax, -0xfff ; jae 0xf4ed7 ; ret
0x00002aaaaadc7ef3 : cmp rax, -0xfff ; jae 0xf4f37 ; ret
0x00002aaaaadc8f67 : cmp rax, -0xfff ; jae 0xf5f78 ; ret
0x00002aaaaadc9207 : cmp rax, -0xfff ; jae 0xf6218 ; ret
0x00002aaaaadc9237 : cmp rax, -0xfff ; jae 0xf6248 ; ret
0x00002aaaaadc9307 : cmp rax, -0xfff ; jae 0xf6318 ; ret
0x00002aaaaadc9337 : cmp rax, -0xfff ; jae 0xf6348 ; ret
0x00002aaaaadc93f7 : cmp rax, -0xfff ; jae 0xf6408 ; ret
0x00002aaaaadc9427 : cmp rax, -0xfff ; jae 0xf6438 ; ret
0x00002aaaaadc9460 : cmp rax, -0xfff ; jae 0xf64a1 ; ret
0x00002aaaaadc9680 : cmp rax, -0xfff ; jae 0xf66c1 ; ret
0x00002aaaaadc96e0 : cmp rax, -0xfff ; jae 0xf6721 ; ret
0x00002aaaaadc9737 : cmp rax, -0xfff ; jae 0xf6748 ; ret
0x00002aaaaadc9bc7 : cmp rax, -0xfff ; jae 0xf6bd8 ; ret
0x00002aaaaadc9d10 : cmp rax, -0xfff ; jae 0xf6d51 ; ret
0x00002aaaaadc9d67 : cmp rax, -0xfff ; jae 0xf6d78 ; ret
0x00002aaaaadc9d97 : cmp rax, -0xfff ; jae 0xf6da8 ; ret
0x00002aaaaadc9dc7 : cmp rax, -0xfff ; jae 0xf6dd8 ; ret
0x00002aaaaadc9df7 : cmp rax, -0xfff ; jae 0xf6e08 ; ret
0x00002aaaaadc9e27 : cmp rax, -0xfff ; jae 0xf6e38 ; ret
0x00002aaaaadc9e60 : cmp rax, -0xfff ; jae 0xf6ea1 ; ret
0x00002aaaaadc9eb7 : cmp rax, -0xfff ; jae 0xf6ec8 ; ret
0x00002aaaaadc9ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00002aaaaadca717 : cmp rax, -0xfff ; jae 0xf7728 ; ret
0x00002aaaaadca747 : cmp rax, -0xfff ; jae 0xf7758 ; ret
0x00002aaaaadca777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00002aaaaadca7aa : cmp rax, -0xfff ; jae 0xf77bb ; ret
0x00002aaaaadcad87 : cmp rax, -0xfff ; jae 0xf7d98 ; ret
0x00002aaaaadcadba : cmp rax, -0xfff ; jae 0xf7dcb ; ret
0x00002aaaaadcade7 : cmp rax, -0xfff ; jae 0xf7df8 ; ret
0x00002aaaaadcae17 : cmp rax, -0xfff ; jae 0xf7e28 ; ret
0x00002aaaaadcae47 : cmp rax, -0xfff ; jae 0xf7e58 ; ret
0x00002aaaaadcae7a : cmp rax, -0xfff ; jae 0xf7e8b ; ret
0x00002aaaaadcaea7 : cmp rax, -0xfff ; jae 0xf7eb8 ; ret
0x00002aaaaadcaed7 : cmp rax, -0xfff ; jae 0xf7ee8 ; ret
0x00002aaaaadcaf07 : cmp rax, -0xfff ; jae 0xf7f18 ; ret
0x00002aaaaadcdb40 : cmp rax, -0xfff ; jae 0xfab81 ; ret
0x00002aaaaadcdeaa : cmp rax, -0xfff ; jae 0xfaebb ; ret
0x00002aaaaadce623 : cmp rax, -0xfff ; jae 0xfb667 ; ret
0x00002aaaaadced77 : cmp rax, -0xfff ; jae 0xfbd88 ; ret
0x00002aaaaadceda7 : cmp rax, -0xfff ; jae 0xfbdb8 ; ret
0x00002aaaaadcedd7 : cmp rax, -0xfff ; jae 0xfbde8 ; ret
0x00002aaaaadcf177 : cmp rax, -0xfff ; jae 0xfc188 ; ret
0x00002aaaaadcf357 : cmp rax, -0xfff ; jae 0xfc368 ; ret
0x00002aaaaadcf390 : cmp rax, -0xfff ; jae 0xfc3d1 ; ret
0x00002aaaaadcf3f0 : cmp rax, -0xfff ; jae 0xfc431 ; ret
0x00002aaaaadcf8e7 : cmp rax, -0xfff ; jae 0xfc8f8 ; ret
0x00002aaaaadcf987 : cmp rax, -0xfff ; jae 0xfc998 ; ret
0x00002aaaaadcf9c3 : cmp rax, -0xfff ; jae 0xfca07 ; ret
0x00002aaaaadcfb17 : cmp rax, -0xfff ; jae 0xfcb28 ; ret
0x00002aaaaadcfb47 : cmp rax, -0xfff ; jae 0xfcb58 ; ret
0x00002aaaaadcfb80 : cmp rax, -0xfff ; jae 0xfcbc1 ; ret
0x00002aaaaadcfbd7 : cmp rax, -0xfff ; jae 0xfcbe8 ; ret
0x00002aaaaadcfc10 : cmp rax, -0xfff ; jae 0xfcc51 ; ret
0x00002aaaaadcfc67 : cmp rax, -0xfff ; jae 0xfcc78 ; ret
0x00002aaaaadcffd7 : cmp rax, -0xfff ; jae 0xfcfe8 ; ret
0x00002aaaaadd0007 : cmp rax, -0xfff ; jae 0xfd018 ; ret
0x00002aaaaadd0037 : cmp rax, -0xfff ; jae 0xfd048 ; ret
0x00002aaaaadd1587 : cmp rax, -0xfff ; jae 0xfe598 ; ret
0x00002aaaaadd15b7 : cmp rax, -0xfff ; jae 0xfe5c8 ; ret
0x00002aaaaae465cc : cmp rax, 0xfd ; ja 0x1735a0 ; call 0x1f8b0
0x00002aaaaad4c614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaadd31c3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfc3e9
0x00002aaaaad4fc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaade6dda : cmp rax, rdx ; jb 0x113dd7 ; xor eax, eax ; ret
0x00002aaaaade6dd9 : cmp rax, rdx ; jb 0x113dd8 ; xor eax, eax ; ret
0x00002aaaaae0a6f0 : cmp rax, rdx ; je 0x137709 ; add rsp, 8 ; ret
0x00002aaaaad1b084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x00002aaaaad5ab8c : cmp rax, rdx ; jne 0x87b48 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4e2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaae71bd8 : cmp rbp, rdx ; call qword ptr [rbx]
0x00002aaaaad51c14 : cmp rbx, rax ; je 0x7ec27 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae46789 : cmp rbx, rbp ; jae 0x17379e ; call qword ptr [rbx]
0x00002aaaaae46789 : cmp rbx, rbp ; jae 0x1737a2 ; call qword ptr [rbx]
0x00002aaaaae467b8 : cmp rbx, rbp ; jb 0x1737b4 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaad47f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaae41e1a : cmp rcx, rax ; jne 0x16ee4a ; xor eax, eax ; ret
0x00002aaaaae42c5a : cmp rcx, rax ; jne 0x16fc8a ; xor eax, eax ; ret
0x00002aaaaae469c7 : cmp rdi, 1 ; ja 0x1739d6 ; ret
0x00002aaaaad1d499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00002aaaaadcf240 : cmp rdi, rdx ; ja 0xfc276 ; ret
0x00002aaaaadc8e5f : cmp rdi, rsi ; ja 0xf5e56 ; ret
0x00002aaaaad563d9 : cmp rdx, r8 ; jne 0x833a6 ; ret
0x00002aaaaade77b1 : cmp rdx, rax ; jne 0x114796 ; ret
0x00002aaaaad7e5b6 : cmp rdx, rax ; jne 0xab5a8 ; xor eax, eax ; ret
0x00002aaaaadf58e5 : cmp rdx, rax ; sbb eax, eax ; ret
0x00002aaaaae0e1be : cmp rdx, rcx ; je 0x13b1d6 ; ret
0x00002aaaaad61737 : cmp rdx, rcx ; jne 0x8e726 ; ret
0x00002aaaaad61736 : cmp rdx, rcx ; jne 0x8e727 ; ret
0x00002aaaaad9fee6 : cmp rdx, rcx ; jne 0xccf15 ; ret
0x00002aaaaade6eb9 : cmp rdx, rdi ; setae al ; ret
0x00002aaaaad45d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaad4f009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaad1b21c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x00002aaaaade2fe2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaade300e : cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaae1e8d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1ebd7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad3f3f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaae1fad7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad55186 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00002aaaaad60845 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae1f7d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae41899 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00002aaaaae7dbe1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x00002aaaaacfe766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaae69721 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp 0x196725
0x00002aaaaae19f06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f4d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f1d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae67b90 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaae06536 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x00002aaaaae67435 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rsi
0x00002aaaaad3ec81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaad75720 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaae686d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaae68551 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00002aaaaae83f11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00002aaaaae805b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadfdff5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int 0x29
0x00002aaaaae6aaa1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaae5b065 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rax
0x00002aaaaacd68f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00002aaaaae673fd : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rcx]
0x00002aaaaaddba42 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaae686d0 : cmpsd dword ptr fs:[rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaacd68f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaae46769 : cmpxchg dword ptr [rip + 0x252108], edx ; je 0x17377c ; ret
0x00002aaaaad0d6a3 : cqo ; idiv rsi ; ret
0x00002aaaaae74cb8 : cwde ; adc ebp, ebp ; call rsi
0x00002aaaaad90e73 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaae079ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaacfca6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00002aaaaad09953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad87bc5 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaada779f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00002aaaaadad4fa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaad5773b : cwde ; add rax, rdx ; jmp rax
0x00002aaaaae84e98 : cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae7a438 : cwde ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00002aaaaadce5ff : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaae8e348 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaae8e468 : cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaae82a38 : cwde ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaacd6afd : cwde ; ret
0x00002aaaaad718d4 : cwde ; ret 0xfffe
0x00002aaaaad44384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x00002aaaaadf656e : cwde ; shr rax, 4 ; ret
0x00002aaaaae8d3a9 : cwde ; sti ; jmp qword ptr [rdx]
0x00002aaaaad76c69 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00002aaaaad74c51 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00002aaaaad76c6a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00002aaaaad74c52 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaad1cab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00002aaaaad5ab35 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x00002aaaaad59e87 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaad2c058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaad5db39 : dec byte ptr [rax - 0x77] ; ret
0x00002aaaaad11054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaada6c47 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00002aaaaad0c1aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x00002aaaaad31793 : dec dword ptr [r8 + 0x39] ; ret
0x00002aaaaad53adc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x00002aaaaad70dc7 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00002aaaaae6798f : dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaad47039 : dec dword ptr [rax + 0x29] ; ret
0x00002aaaaad76dea : dec dword ptr [rax + 0x29] ; ret 0x149
0x00002aaaaad74d92 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaad111ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad82c68 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00002aaaaada765c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00002aaaaad5218d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00002aaaaad199c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x00002aaaaad5611d : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00002aaaaad31794 : dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad2f58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00002aaaaad34b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaae5b92b : dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae59c4f : dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaae59c4b : dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaad36d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaad9858f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaad2f337 : dec dword ptr [rax + 0x63] ; ret
0x00002aaaaadc00f9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaad3f70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaad3fe8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00002aaaaad5fb29 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00002aaaaadfaff4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x00002aaaaad61c84 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00002aaaaad0da02 : dec dword ptr [rax + 0xf] ; ret
0x00002aaaaadc8e8b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00002aaaaad59d21 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00002aaaaad24d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaae14fa6 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x00002aaaaad00909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00002aaaaad31bf5 : dec dword ptr [rax + 1] ; ret
0x00002aaaaad090c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00002aaaaad1e686 : dec dword ptr [rax - 0x39] ; ret
0x00002aaaaada054c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaad9268c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaadce5fd : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaadd0a04 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad7ee36 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaadbe95d : dec dword ptr [rax - 0x73] ; mov word ptr [r8 - 0x77], cs ; ret
0x00002aaaaade42bd : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaade15ce : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x00002aaaaadd4edd : dec dword ptr [rax - 0x75] ; jge 0x101ee7 ; call rbx
0x00002aaaaadd5190 : dec dword ptr [rax - 0x75] ; jge 0x10219a ; call rbx
0x00002aaaaadd6d28 : dec dword ptr [rax - 0x75] ; jge 0x103d32 ; call rbx
0x00002aaaaadbe06e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x00002aaaaad1bda7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x00002aaaaad545cf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00002aaaaadb485d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaad4d8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00002aaaaad851d8 : dec dword ptr [rax - 0x77] ; call 0x4ccdb5f5
0x00002aaaaad61928 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00002aaaaadcf2da : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaae0e39c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00002aaaaae0cc79 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00002aaaaad8a403 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaae46544 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rbx ; ret
0x00002aaaaad2afd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00002aaaaad06edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x00002aaaaacf3fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x00002aaaaadc6654 : dec dword ptr [rax - 0x77] ; iretd ; call 0x1f8ae
0x00002aaaaae44f7a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaae065e0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x00002aaaaacf533e : dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadcf133 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00002aaaaadcf22e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00002aaaaadbcd81 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00002aaaaadc5943 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaad31beb : dec dword ptr [rax - 0x77] ; ret 0x348
0x00002aaaaad49f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00002aaaaad31d1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00002aaaaadb2e9e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x00002aaaaad09b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00002aaaaad099d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00002aaaaada05dc : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00002aaaaad02acb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x00002aaaaadefe8a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00002aaaaae124c3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaad0233f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaad085b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00002aaaaad2aaf2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad692d6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaad20915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaae07196 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaada2688 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00002aaaaad3df20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x00002aaaaad3ca42 : dec dword ptr [rax - 0x77] ; ret 0xb5e8
0x00002aaaaae152af : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00002aaaaad2c3ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00002aaaaad9be9c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00002aaaaad30ffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x00002aaaaae071d5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaad67ba5 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00002aaaaadaf460 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00002aaaaad59c8e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaad6f69c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x00002aaaaad02b34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x00002aaaaacf400a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x00002aaaaadd37be : dec dword ptr [rax - 0x77] ; ret 0xff31
0x00002aaaaae00c4a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaacf4002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00002aaaaadc65e6 : dec dword ptr [rax - 0x77] ; xlatb ; call 0x1f8ae
0x00002aaaaad53add : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00002aaaaad8e84d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00002aaaaade7eef : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00002aaaaad9879d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaadc6f84 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaadb2f45 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x00002aaaaade1fe0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00002aaaaad5bb10 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaadfd44f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaadd1380 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaad40cdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaad42617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaadd81e6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaaddb1ef : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00002aaaaad67e30 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaae126b6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae124bf : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00002aaaaae465cb : dec dword ptr [rax - 0x7d] ; clc ; std ; ja 0x1735a1 ; call 0x1f8b1
0x00002aaaaad042f1 : dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaad5213f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaacf8c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaadab811 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00002aaaaad227b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00002aaaaada8975 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00002aaaaad917a6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x00002aaaaad33ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00002aaaaada2741 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x00002aaaaad49a48 : dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaae2ccdc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00002aaaaae5a0fb : dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaae59f67 : dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x00002aaaaae5bf1b : dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaae5bf17 : dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00002aaaaadcb333 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaae0a4b0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x00002aaaaae5ab37 : dec dword ptr [rbp - 0x21000c84] ; test esi, ebx ; call qword ptr [rax]
0x00002aaaaae5af3b : dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x00002aaaaadd539e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaada6b00 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00002aaaaadc07ee : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x00002aaaaad6ae0f : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae0fb09 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00002aaaaadc7ff2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaadb0e8f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae15bdd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00002aaaaada7c38 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x00002aaaaae6d5fb : dec dword ptr [rbx + rdi + 0x3e840002] ; cli ; jmp rsp
0x00002aaaaadadcd9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00002aaaaad80415 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x00002aaaaae5ab9f : dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaad20c0e : dec dword ptr [rcx + 0x29] ; ret
0x00002aaaaada5539 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x00002aaaaad207dc : dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaad550a2 : dec dword ptr [rcx + 0x39] ; ret 0x4a74
0x00002aaaaad20f52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00002aaaaaddf2ab : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x00002aaaaad40362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00002aaaaadcdae1 : dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x00002aaaaad01bb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00002aaaaad441ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00002aaaaad263f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x00002aaaaae6ab7b : dec dword ptr [rcx + rbp + 0x43740001] ; call rsp
0x00002aaaaae6d853 : dec dword ptr [rcx + rcx*2 + 0x66340002] ; cli ; call rsp
0x00002aaaaad53d0d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00002aaaaad1e389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x00002aaaaae0e4c6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00002aaaaad3210d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x00002aaaaad2d6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaaddf394 : dec dword ptr [rcx - 0x5dc27c3e] ; ret
0x00002aaaaad2f60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00002aaaaadcba13 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaadd4d15 : dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd519e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaadd4da8 : dec dword ptr [rcx - 0x75] ; jge 0x101db2 ; call rbx
0x00002aaaaadd4ecf : dec dword ptr [rcx - 0x75] ; jge 0x101ed9 ; call rbx
0x00002aaaaadd5012 : dec dword ptr [rcx - 0x75] ; jge 0x10201c ; call rbx
0x00002aaaaadd5182 : dec dword ptr [rcx - 0x75] ; jge 0x10218c ; call rbx
0x00002aaaaadd69a0 : dec dword ptr [rcx - 0x75] ; jge 0x1039aa ; call rbx
0x00002aaaaadd6ac8 : dec dword ptr [rcx - 0x75] ; jge 0x103ad2 ; call rbx
0x00002aaaaadd6c0b : dec dword ptr [rcx - 0x75] ; jge 0x103c15 ; call rbx
0x00002aaaaadd6d0c : dec dword ptr [rcx - 0x75] ; jge 0x103d16 ; call rbx
0x00002aaaaae465e8 : dec dword ptr [rcx - 0x75] ; jge 0x173614 ; call 0x1f8af
0x00002aaaaadc60d5 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaade1983 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadc13ac : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae15184 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaad70dc8 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00002aaaaad1b8c5 : dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaadb628d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaacfec47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00002aaaaadb070f : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaad21a8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaacf5f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x00002aaaaae5b517 : dec dword ptr [rcx - 0x7c000c25] ; fdiv st(3) ; jmp rax
0x00002aaaaad392ef : dec dword ptr [rcx - 0x7d] ; ret
0x00002aaaaad392d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00002aaaaadaaca8 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00002aaaaae5b74b : dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b683 : dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaad1804c : dec dword ptr [rcx] ; ret
0x00002aaaaaddcaee : dec dword ptr [rcx] ; setbe al ; ret
0x00002aaaaae5b69f : dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaadd9962 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x00002aaaaadefbbd : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00002aaaaad4c942 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00002aaaaaddd33d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10a2ce ; loopne 0x10a34e ; ret
0x00002aaaaad00f46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x00002aaaaad19271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad70955 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x00002aaaaad70942 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x00002aaaaacf6b8b : dec dword ptr [rdi] ; ret 0x41c3
0x00002aaaaade7d85 : dec dword ptr [rdi] ; ret 0x8348
0x00002aaaaad87d3a : dec dword ptr [rdi] ; ret 0xd0f7
0x00002aaaaadf3735 : dec dword ptr [rdi] ; ret 0xfe9
0x00002aaaaad47151 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaad3b467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00002aaaaae10419 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaadabfb0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00002aaaaadf524e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaae0a81a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaad6fe28 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x00002aaaaad6f93b : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00002aaaaad6f947 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00002aaaaadf493c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00002aaaaae445b0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaada9ba1 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaadbcdfa : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaad4605b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00002aaaaadb4f13 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00002aaaaadb570a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00002aaaaad8e3b0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00002aaaaadb2fd0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x00002aaaaad48f7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaadb62ed : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaad253bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x00002aaaaadd82df : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaada043d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae5b5db : dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae59d27 : dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x00002aaaaad2f147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00002aaaaae5abbf : dec dword ptr [rsi + rdi*2 - 0x7ee8000d] ; call qword ptr [rsi]
0x00002aaaaae5cc77 : dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaae5b4c7 : dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaae5c047 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaae5b627 : dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6b32b : dec dword ptr [rsp + 0x21040001] ; cmc ; jmp rsp
0x00002aaaaae6b1bb : dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaae5ea0f : dec eax ; add ebx, edi ; call rax
0x00002aaaaae59bb7 : dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaae5b607 : dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaae5b2c7 : dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b2c3 : dec ecx ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b25b : dec ecx ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaad1ce3d : dec ecx ; ret
0x00002aaaaae58cb7 : dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaae58ca3 : dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaae67ccb : dec esi ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaae6dda3 : dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaae6a59b : dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaae6d553 : dec esp ; add al, byte ptr ss:[rax] ; adc al, 0x29 ; cli ; jmp rsp
0x00002aaaaae69203 : dec esp ; add byte ptr [rax], 0 ; xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaae6b3d3 : dec esp ; add dword ptr [eax], eax ; test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaae6a5e3 : dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaae6d74b : dec esp ; add r8b, byte ptr [rax] ; hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaae6aa9b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaae68d13 : dec esp ; imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00002aaaaae6c77b : dec esp ; iretd ; add dword ptr [rax], eax ; je 0x199799 ; clc ; jmp rsp
0x00002aaaaae6ba53 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaae6dadb : dec esp ; pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaae6c553 : dec esp ; ret
0x00002aaaaae69c0b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaae6971b : dec esp ; sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x19672b
0x00002aaaaae698b3 : dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaae696a3 : dec esp ; wait ; add byte ptr [rax], al ; jmp 0x1966b3
0x00002aaaaae6acc3 : dec esp ; xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaad76de9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00002aaaaad74d91 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00002aaaaad3f896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00002aaaaacf8c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaadaaca7 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00002aaaaae8c3d1 : div bh ; call qword ptr [rdx]
0x00002aaaaadae9fd : div byte ptr [rax - 0xa] ; ret
0x00002aaaaad68f3f : div byte ptr [rbp + 0xa] ; jmp 0x95f0a
0x00002aaaaad5dd12 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00002aaaaad71171 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaadcd0d7 : div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaad37124 : div dh ; ret
0x00002aaaaad26999 : div dh ; ret 0x4050
0x00002aaaaade4b13 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00002aaaaadc8e61 : div dword ptr [rdi - 0x14] ; ret
0x00002aaaaad66a44 : div dword ptr [rdx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaad41290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad4b18c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9c2f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad4b1cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9d2c : div ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaad234c5 : div ecx ; add eax, r8d ; ret
0x00002aaaaad7d12a : div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaae6bdb1 : div esi ; call rsp
0x00002aaaaad41796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad4128f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad4b18b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9c2e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad4b1ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9d2b : div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaae59bb8 : enter -0x11a2, -1 ; pop rsi ; out dx, al ; call rsp
0x00002aaaaae75a28 : enter -0x12bd, -1 ; and eax, 0x4000001 ; ret 0x18f
0x00002aaaaacf2977 : enter -0x1401, -0x3b ; ret
0x00002aaaaada3aa1 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x00002aaaaadc0f60 : enter -0x1d2d, -0x7b ; ret 0x850f
0x00002aaaaad18a23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x00002aaaaad7107e : enter -0x208c, -0xd ; ret
0x00002aaaaad736e1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00002aaaaadba244 : enter -0x2e89, 0x39 ; ret
0x00002aaaaacf2967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x00002aaaaae01d61 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00002aaaaad99646 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaae44724 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00002aaaaae5ea10 : enter -0x4ff, -1 ; rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00002aaaaad76c66 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00002aaaaad74c4e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaad76de6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00002aaaaad74d8e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00002aaaaad07b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaad1bdab : enter -0x74b8, 0x14 ; ret
0x00002aaaaad7f60d : enter -0x74b8, 5 ; ret
0x00002aaaaadd4df4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaae046a7 : enter 0, 0 ; call rax
0x00002aaaaae04669 : enter 0, 0 ; jmp rcx
0x00002aaaaadff376 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaadd6ed8 : enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad4fc4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00002aaaaad07cbc : enter 0x280f, -0x3f ; ret
0x00002aaaaad1d13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad5d57d : enter 0x31c3, -0x40 ; ret
0x00002aaaaad59eae : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaae07517 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00002aaaaae07474 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x00002aaaaae07544 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x00002aaaaae6ed0e : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaae07deb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00002aaaaae07ccb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00002aaaaad51808 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaacd4b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaad59f1b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaad2e775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaae57e9c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaad0d68d : enter 0x948, -0x30 ; ret
0x00002aaaaadbb5d9 : enter 0xf41, -0x62 ; ret 0x844
0x00002aaaaae41946 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad5bfa1 : enter 0xf66, -0x15 ; ret
0x00002aaaaae1caac : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaad07cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00002aaaaad7a4c4 : enter 5, 0 ; ret
0x00002aaaaae7b805 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; call qword ptr [rcx]
0x00002aaaaae7b785 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], bh ; int1 ; jmp qword ptr [rcx]
0x00002aaaaade8ff6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad4e237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaad4e703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaadd7380 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaad18cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaade7f75 : fadd dword ptr [rax] ; leave ; ret
0x00002aaaaad554bf : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaae0f87d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00002aaaaae85d28 : fadd dword ptr [rbx - 0xa] ; jmp rdi
0x00002aaaaad43980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae8b7bd : fadd dword ptr [rcx] ; add al, ah ; fdiv st(7) ; jmp rdi
0x00002aaaaae8e883 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00002aaaaad47d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00002aaaaad21d8b : fadd dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00002aaaaad9857e : fadd qword ptr [r9] ; ret
0x00002aaaaae82114 : fadd qword ptr [rcx + 1] ; add al, ch ; sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaad9857f : fadd qword ptr [rcx] ; ret
0x00002aaaaad8df17 : fadd st(1) ; call 0xffffffff89cdd842
0x00002aaaaad8e281 : fadd st(1) ; call 0xffffffff89cddbac
0x00002aaaaae6c504 : fadd st(2), st(0) ; add dword ptr [rax], eax ; je 0x1994f7 ; idiv edi ; hlt ; ret 1
0x00002aaaaae44d48 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00002aaaaae42c9e : fadd st(3) ; ret
0x00002aaaaadd8240 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaae41491 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae464fc : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad94bb7 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00002aaaaad8fb0d : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00002aaaaae574d8 : fcmovb st(0), st(3) ; ret
0x00002aaaaacff4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00002aaaaae5b610 : fcom qword ptr [rcx - 0xc] ; jmp rsi
0x00002aaaaadd4d99 : fcomi st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaae5b4cd : fcomi st(3) ; call qword ptr [rcx]
0x00002aaaaae7f2c9 : fcomi st(3) ; call qword ptr [rdi]
0x00002aaaaae5b4e9 : fcomi st(3) ; call rcx
0x00002aaaaae5b479 : fcomi st(3) ; call rsp
0x00002aaaaae5b4c5 : fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaae5b4e5 : fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaae5b339 : fcomi st(3) ; jmp qword ptr [rdi]
0x00002aaaaae80c11 : fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaae87da9 : fcomi st(6) ; jmp rsi
0x00002aaaaad06c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacfd837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaad40feb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad056ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaad56934 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae58259 : fcomp dword ptr [rdx + 0x21] ; ret
0x00002aaaaadd440b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00002aaaaae82978 : fcomp dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae564c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00002aaaaae7f128 : fcomp st(1) ; call qword ptr [rbx]
0x00002aaaaae7f168 : fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaadd4ecc : fcomp st(1) ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101edc ; call rbx
0x00002aaaaae7f1a8 : fcomp st(1) ; jmp qword ptr [rcx]
0x00002aaaaae5b2c9 : fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b2c5 : fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b25d : fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaad71080 : fcompi st(3) ; ret
0x00002aaaaae80e79 : fcompi st(4) ; call qword ptr [rbx]
0x00002aaaaae80e31 : fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaad3dc45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaae831b8 : fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae85014 : fdiv qword ptr [rax + 1] ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae79014 : fdiv qword ptr [rax - 0x4e780000] ; out dx, al ; call qword ptr [rax]
0x00002aaaaae7b079 : fdiv st(0) ; call qword ptr [rax]
0x00002aaaaadd5003 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd5010 : fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201e ; call rbx
0x00002aaaaae5b509 : fdiv st(3) ; jmp qword ptr [rdi]
0x00002aaaaae5b51d : fdiv st(3) ; jmp rax
0x00002aaaaad8d674 : fdiv st(3) ; ret
0x00002aaaaae6771d : fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaade251f : fdiv st(6) ; ret 0xf02
0x00002aaaaae8b7c1 : fdiv st(7) ; jmp rdi
0x00002aaaaae76848 : fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaae81914 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaae81d14 : fdivr qword ptr [rip + 0x1e380001] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6db99 : fdivr st(2) ; jmp rsp
0x00002aaaaada030f : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae67631 : fdivr st(3) ; jmp rax
0x00002aaaaae67611 : fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaae5b489 : fdivr st(3), st(0) ; call qword ptr [rcx]
0x00002aaaaae5b459 : fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaae5b455 : fdivr st(3), st(0) ; ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaae55815 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaae817a8 : fdivr st(5) ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7d514 : fdivr st(5), st(0) ; add byte ptr [rax], al ; sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae3f01d : fdivr st(7) ; ret
0x00002aaaaad77b1e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaae8b999 : fdivrp st(7) ; jmp rdi
0x00002aaaaadc9a92 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00002aaaaad454b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00002aaaaad6eddc : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00002aaaaade7d7f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00002aaaaae01189 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00002aaaaae8b9d5 : fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaae8b995 : fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaad9588e : fiadd word ptr [r9] ; ret
0x00002aaaaae7bd4d : fiadd word ptr [rax] ; add byte ptr [rax], al ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae7bd65 : fiadd word ptr [rax] ; add byte ptr [rax], bl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaadfef90 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00002aaaaae6c9e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaad9588f : fiadd word ptr [rcx] ; ret
0x00002aaaaadd5559 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaae580a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00002aaaaae46988 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00002aaaaadbc64b : fidiv dword ptr [rcx] ; shr al, 0x7d ; ret
0x00002aaaaae15905 : fidivr dword ptr [rax + 1] ; ret
0x00002aaaaadba29f : fidivr dword ptr [rcx] ; ret 0x3673
0x00002aaaaadd27ee : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaad1a278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00002aaaaade32b4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00002aaaaadbeaf5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00002aaaaad8f83d : fild dword ptr [rcx + 1] ; ret
0x00002aaaaae7be45 : fild word ptr [rax] ; add byte ptr [rax + 0x64], cl ; int1 ; call qword ptr [rdx]
0x00002aaaaada4f17 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00002aaaaadce7d6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaad234b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00002aaaaada58ce : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad10935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaae18186 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad47140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaad050c0 : fimul dword ptr [rax - 0x7d] ; ret
0x00002aaaaae09d82 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00002aaaaadf059b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00002aaaaad81e47 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00002aaaaad61952 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00002aaaaacf292a : fimul dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x00002aaaaae01816 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00002aaaaae3ddc2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cbce1
0x00002aaaaae3ee42 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39ccd61
0x00002aaaaadbb4d3 : fimul dword ptr [rdi] ; popfq ; ret
0x00002aaaaae0e39f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00002aaaaad4a5ee : fimul word ptr [rax - 0x77] ; ret
0x00002aaaaad821b4 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad567f1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00002aaaaad1b38e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483e8
0x00002aaaaad1cf6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49fc8
0x00002aaaaad11057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaad0a360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00002aaaaae0adee : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaae0cc7c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00002aaaaad11051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00002aaaaad8b5e1 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaadd6ac5 : fistp qword ptr [rbp - 0x74b6000f] ; jge 0x103ad5 ; call rbx
0x00002aaaaade7965 : fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x00002aaaaad4521f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaae0cd21 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00002aaaaae099e8 : fistp word ptr [rbx - 0x17] ; mov ecx, 0x90ffee8e ; pop rbx ; ret
0x00002aaaaad50882 : fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaad97e28 : fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaae46985 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00002aaaaad1c011 : fisttp dword ptr [rax - 0x77] ; ret
0x00002aaaaaddb96e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00002aaaaadb0eda : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaad1c02b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00002aaaaad34f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00002aaaaadc3324 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaad1a654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaad0993f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x00002aaaaad6f274 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaadd5a39 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaadccc91 : fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad11147 : fisttp qword ptr [rax + 0x29] ; ret
0x00002aaaaad56d6e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00002aaaaae1cb92 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x00002aaaaacf7ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaad81bb4 : fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaad8a275 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaad60b6a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x00002aaaaade0a42 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaade0a45 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00002aaaaad06c4a : fisttp word ptr [rax - 0x39] ; ret
0x00002aaaaad9af5c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaadfc921 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x00002aaaaade0ad8 : fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaad2c05b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00002aaaaad718f1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x00002aaaaae46689 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00002aaaaad31690 : fisttp word ptr [rax - 0x7d] ; ret
0x00002aaaaad1c0af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaae0b0a2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaadea187 : fisttp word ptr [rcx + rcx*4 - 0x1f] ; mov rsi, r12 ; call 0x73449
0x00002aaaaad5a557 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00002aaaaadfca23 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x00002aaaaae1d59d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00002aaaaadd437d : fisttp word ptr [rsi + 0x2c] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00002aaaaadbcdb8 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x00002aaaaae41861 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaade7a9e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaadb757c : fisub dword ptr [rsi - 0x7f] ; loop 0xe4587 ; add esi, esi ; ret
0x00002aaaaae41561 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae1fffc : fisubr word ptr [rcx] ; ret 0xfec5
0x00002aaaaae7b8fd : fld dword ptr [rax] ; add byte ptr [rax + 0x30], ah ; int1 ; jmp qword ptr [rcx]
0x00002aaaaad6b617 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x00002aaaaadc89d3 : fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae56501 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00002aaaaad07f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaad08058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00002aaaaad07f39 : fld xword ptr [rsp + 8] ; ret
0x00002aaaaad08029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00002aaaaad08007 : fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad081a9 : fldcw word ptr [rsp - 2] ; ret
0x00002aaaaae1cbd0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaad60ea9 : fldenv dword ptr [rsi + 0xf] ; je 0x8df06 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaad68b37 : fldenv dword ptr [rsi + 0xf] ; je 0x95b94 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaae418e1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad60da1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaae6a2b1 : fldz ; call rsp
0x00002aaaaad1b434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00002aaaaad5a00e : fmul dword ptr [rax + 0x21] ; ret
0x00002aaaaad51dff : fmul dword ptr [rax + 0x39] ; ret
0x00002aaaaad5ab2b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00002aaaaad8c264 : fmul dword ptr [rax + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x00002aaaaad6c046 : fmul dword ptr [rax + 0xf] ; ret
0x00002aaaaada18d2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaad154d7 : fmul dword ptr [rax - 0x39] ; ret
0x00002aaaaae02651 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c3e68
0x00002aaaaadc67b2 : fmul dword ptr [rax - 0x75] ; jl 0xf37e3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad47e11 : fmul dword ptr [rax - 0x77] ; ret
0x00002aaaaad90e79 : fmul dword ptr [rax - 0x7d] ; ret
0x00002aaaaad8a406 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad4a75e : fmul dword ptr [rcx + 0x21] ; ret
0x00002aaaaad26620 : fmul dword ptr [rcx + 0xf] ; ret
0x00002aaaaad29341 : fmul dword ptr [rdi] ; ret
0x00002aaaaad8baac : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaad1ad63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaadbd8f0 : fmul qword ptr [rax - 0x77] ; ret
0x00002aaaaad9aeab : fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaade0ad5 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaad106dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00002aaaaad5c339 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaad6227f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaae82f14 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], ch ; jo 0x1aff17 ; jmp qword ptr [rcx]
0x00002aaaaae72f14 : fmul qword ptr [rdi] ; add byte ptr [rax + 0x5f], cl ; jmp 0x19ff22
0x00002aaaaae76a14 : fmul qword ptr [rdx + 0x7fe80000] ; in eax, dx ; call qword ptr [rcx]
0x00002aaaaad153d2 : fmul st(0) ; ret
0x00002aaaaae5b484 : fmul st(3) ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaad15350 : fmulp st(1) ; ret
0x00002aaaaada3af3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00002aaaaacd5532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00002aaaaad08186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00002aaaaad1b062 : fnstsw dword ptr [rax + 1] ; ret
0x00002aaaaae7f129 : fpatan ; call qword ptr [rbx]
0x00002aaaaae7f169 : fpatan ; call qword ptr [rsi]
0x00002aaaaae7f1a9 : fpatan ; jmp qword ptr [rcx]
0x00002aaaaad06bd5 : fpatan ; ret
0x00002aaaaae6ccd1 : fprem ; call rsp
0x00002aaaaae79b89 : frndint ; call qword ptr [rax]
0x00002aaaaae41661 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad0805c : fscale ; fstp st(1) ; ret
0x00002aaaaae67615 : fsincos ; call rax
0x00002aaaaae676b5 : fsincos ; jmp qword ptr [rax]
0x00002aaaaae676d5 : fsincos ; jmp rax
0x00002aaaaae561e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00002aaaaad6928e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad08188 : fstp st(0) ; and eax, 0x200 ; ret
0x00002aaaaae56560 : fstp st(0) ; ret 0xde5d
0x00002aaaaad08130 : fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaad0805e : fstp st(1) ; ret
0x00002aaaaad07fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaad0802d : fstp xword ptr [rdi] ; ret
0x00002aaaaad08778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaad08458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00002aaaaad08189 : fsub dword ptr [rip + 0x200] ; ret
0x00002aaaaae41961 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaada88c9 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16840
0x00002aaaaad73ac4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaad9f672 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00002aaaaad7c8bb : fsub qword ptr [rsi + 0xf] ; jmp 0xa9887
0x00002aaaaae41761 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad5c0bc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00002aaaaae46bfb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae81148 : fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaadd4df2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaadd68fb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaadd6cfa : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd6368 : fsubp st(0) ; ret 0xffe8
0x00002aaaaadd6268 : fsubp st(0) ; ret 0xffe9
0x00002aaaaad07fa2 : fsubp st(1) ; ret
0x00002aaaaad99781 : fsubp st(1) ; ret 0xffec
0x00002aaaaaddbaeb : fsubr dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaae82df8 : fsubr dword ptr [rsi - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaad8c26b : fsubr qword ptr [rcx] ; ret
0x00002aaaaae69c41 : fsubr st(5) ; jmp rsp
0x00002aaaaad57c62 : fsubrp st(4) ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c79 ; ret
0x00002aaaaae58238 : fucom st(5) ; loop 0x185291 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaae59e0d : fucomi st(7) ; jmp rsi
0x00002aaaaad4e5df : fucomp st(0) ; ret
0x00002aaaaae79109 : fucomp st(6) ; jmp qword ptr [rsi]
0x00002aaaaae7a069 : fucomp st(7) ; jmp qword ptr [rbx]
0x00002aaaaae59e09 : fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaad4150e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00002aaaaad48bdd : fucompi st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x00002aaaaad4952d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x00002aaaaad9b56d : fucompi st(0) ; int 0xa3
0x00002aaaaad918fc : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00002aaaaae46547 : fucompi st(0) ; pop rbx ; ret
0x00002aaaaadc6593 : fucompi st(0) ; push rdi ; ret 0xfff2
0x00002aaaaadcb4c8 : fucompi st(0) ; rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaadc20f7 : fucompi st(0) ; ret
0x00002aaaaade19e0 : fucompi st(0) ; ret 0xf10e
0x00002aaaaad2afd8 : fucompi st(0) ; ret 0xfc78
0x00002aaaaad06ee0 : fucompi st(0) ; ret 0xfeb9
0x00002aaaaacf3fd8 : fucompi st(0) ; ret 0xffe8
0x00002aaaaadec168 : fucompi st(0) ; ret 6
0x00002aaaaad5a7c2 : fucompi st(0) ; sub byte ptr [rax - 0x76b70007], al ; ret
0x00002aaaaad5fb5d : fxch st(0), st(7) ; or eax, dword ptr [rax] ; ret
0x00002aaaaadd4edb : fyl2x ; dec dword ptr [rax - 0x75] ; jge 0x101ee9 ; call rbx
0x00002aaaaadd4ec0 : fyl2x ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd4ecd : fyl2x ; dec dword ptr [rcx - 0x75] ; jge 0x101edb ; call rbx
0x00002aaaaae11418 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaada0440 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae7d40d : hlt ; add byte ptr [rax], al ; shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae8272c : hlt ; add dword ptr [r8], r8d ; loopne 0x1af78c ; cmc ; call qword ptr [rdx]
0x00002aaaaae6cccd : hlt ; add dword ptr [rax], eax ; fprem ; call rsp
0x00002aaaaae80e2c : hlt ; add dword ptr cs:[rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae8162c : hlt ; add dword ptr ss:[rax], eax ; and ah, dh ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae82f2c : hlt ; add qword ptr [r8], r8 ; jo 0x1aff2f ; jmp qword ptr [rcx]
0x00002aaaaadd814b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaae5b96e : hlt ; call qword ptr [rax - 0x1f000bae]
0x00002aaaaae5b53e : hlt ; call qword ptr [rax - 0x1f000bb4]
0x00002aaaaae7fbf2 : hlt ; call qword ptr [rax]
0x00002aaaaae5b686 : hlt ; call qword ptr [rbx]
0x00002aaaaae5b5c6 : hlt ; call qword ptr [rcx]
0x00002aaaaae7fbaa : hlt ; call qword ptr [rsi]
0x00002aaaaae8054a : hlt ; call rax
0x00002aaaaae5bb8e : hlt ; call rdi
0x00002aaaaae5b60a : hlt ; call rdx
0x00002aaaaae81852 : hlt ; call rsi
0x00002aaaaae5b9c6 : hlt ; call rsp
0x00002aaaaae6d5a0 : hlt ; cli ; jmp rsp
0x00002aaaaae7d52c : hlt ; cmc ; add byte ptr [rax], al ; xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae5c04c : hlt ; cmc ; call rsp
0x00002aaaaae81d2c : hlt ; cmp eax, 0x1e500001 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad7102b : hlt ; cmp ecx, esi ; je 0x9e026 ; ret
0x00002aaaaae6ce40 : hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaae5b92a : hlt ; dec dword ptr [rax + 0x54fff451] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaadb070e : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaae5b74a : hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b682 : hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b69e : hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b5da : hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b626 : hlt ; dec dword ptr [rsi] ; push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6b1ba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20c40001] ; hlt ; call rsp
0x00002aaaaae5b606 : hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaae6a2b0 : hlt ; fldz ; call rsp
0x00002aaaaae81631 : hlt ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae5b5d6 : hlt ; inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b786 : hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b9ca : hlt ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaae5b69a : hlt ; inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b936 : hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b5c2 : hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b6e6 : hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaae6b182 : hlt ; inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x00002aaaaae5b562 : hlt ; inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaae5b566 : hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaae5b992 : hlt ; inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b996 : hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaae6a8e0 : hlt ; int1 ; call rsp
0x00002aaaaadc8e2d : hlt ; ja 0xf5dc7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae565e8 : hlt ; jmp 0x1835bd
0x00002aaaaae5b56e : hlt ; jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaae5b99e : hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaae8114a : hlt ; jmp qword ptr [rbx]
0x00002aaaaae5b842 : hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaae7fdaa : hlt ; jmp qword ptr [rcx]
0x00002aaaaae5b68e : hlt ; jmp qword ptr [rdi]
0x00002aaaaae5b572 : hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6f2 : hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaae5b9a2 : hlt ; jmp qword ptr [rsi]
0x00002aaaaae5b542 : hlt ; jmp rax
0x00002aaaaae7f452 : hlt ; jmp rcx
0x00002aaaaae8183a : hlt ; jmp rdi
0x00002aaaaae5b9a6 : hlt ; jmp rdx
0x00002aaaaae5b612 : hlt ; jmp rsi
0x00002aaaaae6b282 : hlt ; jmp rsp
0x00002aaaaae44c25 : hlt ; jne 0x171d47 ; ret
0x00002aaaaae44c24 : hlt ; jne 0x171d48 ; ret
0x00002aaaaae8502c : hlt ; jo 0x1b2037 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae5b62a : hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b5ca : hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6ee : hlt ; lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaae5b5f6 : hlt ; lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b802 : hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b662 : hlt ; ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b7de : hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b632 : hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae78c2c : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c28 ; jmp qword ptr [rcx]
0x00002aaaaae2d11a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2541e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaadb40b6 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaae44233 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaae5b982 : hlt ; push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b7ee : hlt ; push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b7e6 : hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b782 : hlt ; push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b546 : hlt ; push rax ; hlt ; jmp rax
0x00002aaaaae5b976 : hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b742 : hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6d750 : hlt ; push rdi ; cli ; jmp rsp
0x00002aaaaad7100b : hlt ; ret
0x00002aaaaae6ddd8 : hlt ; ret 0xfffd
0x00002aaaaadc6458 : hlt ; ret 0xffff
0x00002aaaaae6c50c : hlt ; ret 1
0x00002aaaaae67975 : hlt ; sti ; jmp rax
0x00002aaaaae56723 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaae44237 : hlt ; sub eax, edx ; ret
0x00002aaaaad718ce : hlt ; sub rsp, 8 ; call 0x8ab77
0x00002aaaaacd6cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaada971b : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66be ; pop rbx ; ret
0x00002aaaaad508a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaad8c43e : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd7575 : idiv bh ; add rsp, 0x408 ; ret
0x00002aaaaae5cd32 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x189d3a ; jmp qword ptr [rdx]
0x00002aaaaae5cd2a : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaae5ccca : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189cd2 ; jmp qword ptr [rdx]
0x00002aaaaae5cd66 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x189d6e ; jmp qword ptr [rdx]
0x00002aaaaae6bcd2 : idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaae5ccc2 : idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cca ; jmp qword ptr [rdx]
0x00002aaaaae5cc76 : idiv bh ; jle 0x189c76 ; jmp rdx
0x00002aaaaae5cd36 : idiv bh ; jns 0x189d36 ; jmp qword ptr [rdx]
0x00002aaaaae6ba02 : idiv bh ; lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaae5cc6a : idiv bh ; loop 0x189cf3 ; idiv bh ; pop rsp ; jle 0x189c72 ; jmp rdx
0x00002aaaaae5cc72 : idiv bh ; loop 0x189cfb ; idiv bh ; jle 0x189c7a ; jmp rdx
0x00002aaaaae5cd2e : idiv bh ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaae6b78a : idiv bh ; mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x00002aaaaae6b702 : idiv bh ; mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x00002aaaaae6b68a : idiv bh ; mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x00002aaaaae6bdaa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaad8c3fa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaae5cc6e : idiv bh ; pop rsp ; jle 0x189c6e ; jmp rdx
0x00002aaaaae5cda6 : idiv bh ; ret 0xf678
0x00002aaaaae5ccc6 : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc6 ; jmp qword ptr [rdx]
0x00002aaaaae5ccce : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cce ; jmp qword ptr [rdx]
0x00002aaaaae5cd6a : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189d6a ; jmp qword ptr [rdx]
0x00002aaaaae5c914 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00002aaaaadfae9e : idiv bh ; xor eax, eax ; ret
0x00002aaaaae6793d : idiv bl ; call qword ptr [rax]
0x00002aaaaacf6b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00002aaaaae6c562 : idiv edi ; cld ; ret
0x00002aaaaadf98b8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaae6c50a : idiv edi ; hlt ; ret 1
0x00002aaaaae6c532 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x00002aaaaae6c4f2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x00002aaaaae6bf42 : idiv edi ; mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00002aaaaae6c042 : idiv edi ; mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x00002aaaaae6c32a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaae6c52a : idiv edi ; push rsp ; ret
0x00002aaaaae6c542 : idiv edi ; pushfq ; ret
0x00002aaaaae6c4da : idiv edi ; ret 1
0x00002aaaaae6c4ea : idiv edi ; xchg eax, esp ; ret 1
0x00002aaaaad0d6a6 : idiv esi ; ret
0x00002aaaaad0d6a5 : idiv rsi ; ret
0x00002aaaaae685b0 : imul byte ptr [rdx - 0x55790004] ; cld ; call qword ptr [rsi]
0x00002aaaaad398fc : imul cl ; ret
0x00002aaaaad77318 : imul cl ; ret 8
0x00002aaaaae03246 : imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaadd0fd8 : imul eax ; ret 0xf6f7
0x00002aaaaadbd357 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x00002aaaaae68d15 : imul eax, dword ptr [rax], 0xe9710400 ; jmp rsp
0x00002aaaaae7488d : imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaad9a339 : imul eax, dword ptr [rbp + 0x1f0ffff5], 0 ; pop rbx ; ret
0x00002aaaaae42d91 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00002aaaaad28f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x00002aaaaad8f786 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaad8fa3f : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaada2607 : imul eax, dword ptr [rdx], 0x75c08500 ; ret 0x858b
0x00002aaaaade10f5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4a9c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd4e39 : imul ebx, edx, -0xf ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaade1095 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad5bb4a : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad862fc : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaade0fcf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae5c34c : imul edi, dword ptr [rbx - 0xb], -1 ; jnp 0x18934f ; call rsi
0x00002aaaaae5ccc4 : imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x189cc8 ; jmp qword ptr [rdx]
0x00002aaaaad7276b : imul edi, dword ptr [rdx], 0x394c0032 ; ret 0x830f
0x00002aaaaad49770 : imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaad9cad3 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadf3aa1 : imul edi, esi, 0x8348ffff ; ret
0x00002aaaaade10c5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0d733 : imul edx, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x386a
0x00002aaaaacd5b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x00002aaaaacd6aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaad8eb14 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00002aaaaae102a1 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad7805c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00002aaaaae8cf1c : in al, -0x11 ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaacd6794 : in al, -0x12 ; jne 0x3776 ; ret 0x975
0x00002aaaaae6db50 : in al, -0x2a ; cli ; call rsp
0x00002aaaaae7aa1c : in al, -0x36 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae6c55c : in al, -0x3d ; add dword ptr [rax], eax ; test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaae5aed4 : in al, -0x45 ; call qword ptr [rdx]
0x00002aaaaae79a1c : in al, -0x46 ; add byte ptr [rax], al ; sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaad6cd6d : in al, -0x7d ; ret 0x480f
0x00002aaaaae2d0fa : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaad6173b : in al, -0xd ; ret
0x00002aaaaae782b1 : in al, -4 ; call qword ptr [rdx]
0x00002aaaaae6c4f9 : in al, -9 ; inc esp ; ret 1
0x00002aaaaae6c519 : in al, -9 ; jmp qword ptr [rbx + rax*8]
0x00002aaaaae6c509 : in al, -9 ; push rsp ; ret 1
0x00002aaaaae44c58 : in al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaadd9c01 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00002aaaaae6a1a5 : in al, 0 ; add byte ptr [rdx + rsi*2], al ; out dx, al ; call rsp
0x00002aaaaad57c63 : in al, 0x33 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00002aaaaad7107b : in al, 0x41 ; cmp eax, ecx ; je 0x9e067 ; ret
0x00002aaaaae6aec8 : in al, 0x46 ; jmp rsp
0x00002aaaaae6da64 : in al, 0x57 ; add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaae6aa28 : in al, 0x74 ; int1 ; jmp rsp
0x00002aaaaad5bebc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00002aaaaad7cdae : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00002aaaaad1f5b4 : in al, 0xf ; lahf ; ret
0x00002aaaaad23300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00002aaaaadf7ada : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaae6ca85 : in al, 1 ; add byte ptr [rbp - 8], ah ; jmp rsp
0x00002aaaaad78b98 : in al, 6 ; add byte ptr [rax], al ; ret
0x00002aaaaae7f124 : in al, dx ; adc dword ptr [rcx], eax ; add al, bl ; fpatan ; call qword ptr [rbx]
0x00002aaaaadf06f2 : in al, dx ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaadc3711 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4b0be : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00002aaaaae092c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00002aaaaad901f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00002aaaaad52ef4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x945
0x00002aaaaadf66f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00002aaaaae7cbb5 : in al, dx ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaad37329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaad8fe40 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad56f08 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad1f5b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00002aaaaae17850 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaae82e24 : in al, dx ; add qword ptr [rax], r8 ; or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae73a3a : in al, dx ; call qword ptr [rax]
0x00002aaaaae73a82 : in al, dx ; call rsp
0x00002aaaaad1d219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaae81399 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae5a22d : in al, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a25d : in al, dx ; int1 ; call rax
0x00002aaaaae5a269 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a259 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaae5a231 : in al, dx ; int1 ; jmp qword ptr [rax]
0x00002aaaaae5a261 : in al, dx ; int1 ; jmp rax
0x00002aaaaae7343a : in al, dx ; jmp qword ptr [rcx]
0x00002aaaaae7376a : in al, dx ; jmp rax
0x00002aaaaae7388a : in al, dx ; jmp rbx
0x00002aaaaadd1733 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaadd6ab8 : in al, dx ; mov ebp, 0x8b49fff1 ; call rbx
0x00002aaaaae2541a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad71173 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaae0ceb4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaae2d4fa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaad718d1 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x00002aaaaad18b5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadfd4a1 : in al, dx ; or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadfe34a : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x00002aaaaad40cd6 : in al, dx ; or al, ch ; ret
0x00002aaaaad40dd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00002aaaaad554f7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaae18574 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae100ed : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00002aaaaadc9612 : in al, dx ; or dh, dh ; ret 0x7540
0x00002aaaaae84f24 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae76f24 : in al, dx ; pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaae83624 : in al, dx ; push rsi ; add dword ptr [rax], eax ; js 0x1b06ac ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad70f7b : in al, dx ; ret
0x00002aaaaae6fc24 : in al, dx ; sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaade9cd2 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62c
0x00002aaaaadc9291 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaacd55ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaae8dd24 : in al, dx ; std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaae6791d : in al, dx ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaae78b24 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae57c7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c11 ; ret 0x48f
0x00002aaaaae57c7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c12 ; ret 0x48f
0x00002aaaaae0f120 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae01c13 : in al, dx ; xor dh, dh ; ret 0xc707
0x00002aaaaae6f081 : in eax, -0x18 ; call qword ptr [rdx]
0x00002aaaaae58239 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaad25fc3 : in eax, -0x21 ; loopne 0x52f54 ; ret 0xe680
0x00002aaaaad27f3c : in eax, -0x21 ; loopne 0x54ecd ; ret 0xe680
0x00002aaaaadd4ebf : in eax, -0x27 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadab5f3 : in eax, -0x77 ; ret
0x00002aaaaae2d17a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaad6693a : in eax, -0xd ; ret
0x00002aaaaae7e1c1 : in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaae57701 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaae6762d : in eax, -5 ; jmp qword ptr [rax]
0x00002aaaaae6766d : in eax, -5 ; jmp rax
0x00002aaaaae7c505 : in eax, 0 ; add byte ptr [rax - 0x17], bl ; int1 ; jmp qword ptr [rdi]
0x00002aaaaae56383 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaadba8b4 : in eax, 0x2d ; add byte ptr [rax], al ; je 0xe78f8 ; xor eax, eax ; ret
0x00002aaaaadfca26 : in eax, 0x41 ; call rdi
0x00002aaaaad6187a : in eax, 0x48 ; mov eax, edi ; ret
0x00002aaaaad1d6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00002aaaaade7de5 : in eax, 0x5d ; ret
0x00002aaaaae55619 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00002aaaaae05af2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x00002aaaaacd6aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaad7e383 : in eax, 0xf ; je 0xab3a8 ; add rax, 2 ; ret
0x00002aaaaae6caad : in eax, 1 ; add byte ptr [rcx + rbp*2], dh ; clc ; call rsp
0x00002aaaaae0211e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaad4952f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00002aaaaad81bb0 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00002aaaaad842c0 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00002aaaaad206cf : in eax, dx ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaae5937a : in eax, dx ; call qword ptr [rax]
0x00002aaaaae76a1a : in eax, dx ; call qword ptr [rcx]
0x00002aaaaae7707a : in eax, dx ; call qword ptr [rdx]
0x00002aaaaae74892 : in eax, dx ; call qword ptr [rsi]
0x00002aaaaae58cbe : in eax, dx ; call rdx
0x00002aaaaae74cba : in eax, dx ; call rsi
0x00002aaaaae69a6a : in eax, dx ; call rsp
0x00002aaaaae58cb6 : in eax, dx ; dec edx ; push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaae58ca2 : in eax, dx ; dec edx ; push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaae69c0a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaae698b2 : in eax, dx ; dec esp ; test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaae59379 : in eax, dx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae59375 : in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae69a2a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x00002aaaaae59376 : in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae591c6 : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae591ca : in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae69c3a : in eax, dx ; inc esp ; ret 0
0x00002aaaaae5a26d : in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a28d : in eax, dx ; int1 ; call rax
0x00002aaaaae5a271 : in eax, dx ; int1 ; jmp qword ptr [rax]
0x00002aaaaae5a291 : in eax, dx ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae591ce : in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae76db2 : in eax, dx ; jmp qword ptr [rbx]
0x00002aaaaae7684a : in eax, dx ; jmp qword ptr [rcx]
0x00002aaaaae75b2a : in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaae58caa : in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaae7609a : in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae75cb2 : in eax, dx ; jmp rsi
0x00002aaaaae698ba : in eax, dx ; jmp rsp
0x00002aaaaade9cf9 : in eax, dx ; jne 0x116d11 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae4654f : in eax, dx ; jne 0x173531 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae69baa : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x00002aaaaae698da : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaad7c7d2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaad7c199 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaad7c1af : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad7c1d1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c1ef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaad7c20f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7c235 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad7c251 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaad7c271 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaad7c291 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad7c2b7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c2d9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c2f7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaad7c317 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaad7c333 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaad7c353 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaad7c373 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaad7c393 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad7c3b9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad7c409 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7c0df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c0fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaad7c11d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaad7c13f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaad7c15f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaad7c17f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaad7c015 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaad7c027 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaad7c03d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad7c055 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaad7c06b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c07d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaad7c09b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaad7c0a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaad7c0bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaad7c001 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00002aaaaae2522a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad81026 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xae03e
0x00002aaaaad83947 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb095e
0x00002aaaaad860fe : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb311e
0x00002aaaaae2d57a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaadabf64 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaae1c0e0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad1b76b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaae4698a : in eax, dx ; pop rbx ; ret
0x00002aaaaae69cf2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaae699c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaae6991a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaae69b22 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x00002aaaaae58cba : in eax, dx ; push rdi ; in eax, dx ; call rdx
0x00002aaaaad44c02 : in eax, dx ; ret
0x00002aaaaad2c86f : in eax, dx ; ret 0x12
0x00002aaaaae67921 : in eax, dx ; sti ; jmp rax
0x00002aaaaad7c922 : in eax, dx ; sub rax, 1 ; ret
0x00002aaaaad710ba : in eax, dx ; xor eax, eax ; ret
0x00002aaaaad7ca58 : inc bl ; cmp dl, 1 ; jb 0xa9a6a ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae1ff86 : inc bl ; jb 0x14cf96 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae20476 : inc bl ; jb 0x14d486 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae20816 : inc bl ; jb 0x14d826 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad61761 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaad19da3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x00002aaaaad4e522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x00002aaaaad19da4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x00002aaaaacfd696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x00002aaaaae5abbc : inc byte ptr [rdi + 0x7e8cfff3] ; call qword ptr [rdi]
0x00002aaaaad4a4f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x00002aaaaae6780b : inc dword ptr [rax + 0x10fffc0d] ; add ah, bh ; call rax
0x00002aaaaae67ae7 : inc dword ptr [rax + 0x18] ; cld ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaae67b3b : inc dword ptr [rax + 0x1f] ; cld ; call qword ptr [rax - 0x1f0003e0]
0x00002aaaaae6828b : inc dword ptr [rax + 0x20fffc81] ; ja 0x195297 ; jmp rax
0x00002aaaaae679af : inc dword ptr [rax + 0x28] ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaae672a7 : inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaae67a37 : inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaae67a9f : inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaae67a07 : inc dword ptr [rax + 0x33] ; cld ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaae67a0b : inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaae672c7 : inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaae672cf : inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676af : inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00002aaaaae5b5d7 : inc dword ptr [rax + 0x51] ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b787 : inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5948b : inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaae5948f : inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaae67b77 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaae59bbb : inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaae6848b : inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaae678c7 : inc dword ptr [rax + 0xa] ; cld ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae678cb : inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae6721f : inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaae6785b : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00002aaaaae6a6c3 : inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaae6d59b : inc dword ptr [rax + rdi + 0x2ef40002] ; cli ; jmp rsp
0x00002aaaaae6791b : inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaae6794f : inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae6767f : inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676b3 : inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676cf : inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaae674ff : inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaae6797f : inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaae6792b : inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00002aaaaae677a3 : inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaad1e9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x00002aaaaae5a3ef : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x00002aaaaad20c96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x00002aaaaae6855b : inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaae68773 : inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaada3d78 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x00002aaaaae68063 : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaae6827b : inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaae678a7 : inc dword ptr [rax - 0x7f0003f6] ; or al, 0xfc ; call qword ptr [rax]
0x00002aaaaae6796f : inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaae5a46f : inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaae677d3 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00002aaaaadcba88 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00002aaaaad1f985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad2def2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00002aaaaad34a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaad3384d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00002aaaaad8893b : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00002aaaaae44c3d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaae41e77 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00002aaaaad07efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x00002aaaaae5a4b3 : inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x00002aaaaae678f3 : inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x00002aaaaae6794b : inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae676d3 : inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaae5a26b : inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae689bf : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaae68763 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaae68053 : inc dword ptr [rax] ; mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaae5b9cb : inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaadeb830 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x00002aaaaae5a2df : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae67d7f : inc dword ptr [rax] ; pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae67f8f : inc dword ptr [rax] ; push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaadd16dc : inc dword ptr [rax] ; ret
0x00002aaaaae67793 : inc dword ptr [rax] ; ret 0xfffb
0x00002aaaaae6727f : inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaae672d7 : inc dword ptr [rax] ; sti ; call rax
0x00002aaaaae679b3 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaae67a57 : inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaae6826b : inc dword ptr [rax] ; test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaae67fcf : inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaadefb64 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00002aaaaadefd4a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00002aaaaae5b69b : inc dword ptr [rbp + 0x53] ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b937 : inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6caab : inc dword ptr [rbp + 0x69340001] ; clc ; call rsp
0x00002aaaaae69a2b : inc dword ptr [rbp + rsi*4 - 0x5f4c0000] ; in eax, dx ; jmp rsp
0x00002aaaaad0d6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00002aaaaadcdaec : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf6d09
0x00002aaaaad36df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00002aaaaad3b4e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x00002aaaaadf3e0f : inc dword ptr [rbp - 0x769b8740] ; ret
0x00002aaaaadf41e1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x00002aaaaad36ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x00002aaaaad3bac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x00002aaaaadefbba : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00002aaaaad330b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00002aaaaadd215f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00002aaaaadd21aa : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaae5434f : inc dword ptr [rbx + 0x25] ; jmp 0x18135b
0x00002aaaaad23eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x00002aaaaad26b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00002aaaaad97e22 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x00002aaaaada9ee5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x00002aaaaadc556f : inc dword ptr [rbx + rcx*4 + 5] ; mov ecx, 0x89002d61 ; ret
0x00002aaaaad2d2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x00002aaaaae59377 : inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaad0638e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaadf540f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00002aaaaad0dfba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00002aaaaadaa0c3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd70a9 ; jmp 0xd7099
0x00002aaaaad7d128 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad7d04f : inc dword ptr [rbx] ; pop rbx ; ret
0x00002aaaaad3888f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00002aaaaad2a6c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaadf7194 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x00002aaaaae683ff : inc dword ptr [rcx + rdi*2] ; cld ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaae5b4e7 : inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaad3a491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00002aaaaae67407 : inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaadc00f5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaad8a272 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaacfe76c : inc dword ptr [rcx - 0x77] ; ret
0x00002aaaaadae05d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00002aaaaadb63da : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaadf4f1a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaae469c9 : inc dword ptr [rcx] ; ja 0x1739d4 ; ret
0x00002aaaaae8e9e6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaae8e880 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaae591c7 : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae591cb : inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaadb1494 : inc dword ptr [rcx] ; ret
0x00002aaaaada9348 : inc dword ptr [rcx] ; ret 0x5589
0x00002aaaaadb109a : inc dword ptr [rcx] ; ret 0x8b49
0x00002aaaaae681d7 : inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaae67ceb : inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaad989d0 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x00002aaaaad6b3e3 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadb33c7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaae6758f : inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaae5b05f : inc dword ptr [rdi - 0x587b000d] ; jmp rax
0x00002aaaaadae506 : inc dword ptr [rdi] ; jbe 0xdb519 ; mov eax, 0xc ; ret
0x00002aaaaae5b5c3 : inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b6e7 : inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaae67c23 : inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaae6b183 : inc dword ptr [rdx + rdx*2 + 0x8040001] ; hlt ; call rsp
0x00002aaaaae6d263 : inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x00002aaaaae68647 : inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaae5ab7f : inc dword ptr [rdx - 0x76] ; jmp rdx
0x00002aaaaae68637 : inc dword ptr [rdx] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaae1dd7d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00002aaaaae67bbf : inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaae6d0cb : inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaae685a3 : inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaae67433 : inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaae680ab : inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaae67baf : inc dword ptr [rsi] ; pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaae68593 : inc dword ptr [rsi] ; scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaae6809b : inc dword ptr [rsi] ; xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaae5cc27 : inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x00002aaaaae6d3db : inc dword ptr [rsp + rbp + 0x3440002] ; cli ; call rsp
0x00002aaaaae5b43f : inc dword ptr [rsp + rbx*8 - 0x3bdb000d] ; jmp qword ptr [rdi]
0x00002aaaaae67b1b : inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae5a4a3 : inc eax ; add al, 0xf2 ; call rax
0x00002aaaaae5a487 : inc eax ; add al, 0xf2 ; jmp rax
0x00002aaaaae5a467 : inc eax ; add esi, edx ; jmp rax
0x00002aaaaae67b07 : inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaae5b563 : inc eax ; hlt ; inc eax ; hlt ; jmp rax
0x00002aaaaae5b567 : inc eax ; hlt ; jmp rax
0x00002aaaaae6793b : inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae5a25b : inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaae684c7 : inc eax ; ja 0x1954cf ; push qword ptr [rax] ; ja 0x1954d3 ; call rax
0x00002aaaaae5c3ff : inc eax ; mov dr0, ebp ; call rsi
0x00002aaaaae5a2cf : inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaae5a00b : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae5a3df : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaae5b993 : inc eax ; push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b997 : inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaae677c3 : inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaad07f19 : inc eax ; shr eax, 0x1f ; ret
0x00002aaaaae6732b : inc eax ; sti ; call qword ptr [rax]
0x00002aaaaae6857b : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaae5c919 : inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaae1308a : inc ebx ; mov eax, 0xffffffff ; ret
0x00002aaaaad098cc : inc ebx ; nop ; mov eax, edx ; ret
0x00002aaaaad47f5c : inc ebx ; nop ; xor eax, eax ; ret
0x00002aaaaae44729 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaad4c1c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00002aaaaad2fb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00002aaaaadd09c9 : inc esi ; jmp qword ptr [r8]
0x00002aaaaae6742f : inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaae6a55b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaae6919b : inc esp ; jle 0x1961a7 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaae6b653 : inc esp ; jne 0x198660 ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaae69c3b : inc esp ; ret 0
0x00002aaaaae6c4fb : inc esp ; ret 1
0x00002aaaaae6c8db : inc esp ; salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaada9347 : inc qword ptr [rcx] ; ret 0x5589
0x00002aaaaae7f1a4 : insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, bl ; fpatan ; jmp qword ptr [rcx]
0x00002aaaaae18cf4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae00280 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00002aaaaae8dc66 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaad07f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00002aaaaad0802a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00002aaaaad08008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00002aaaaad081aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00002aaaaad08059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x00002aaaaad07f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaad4ff64 : insb byte ptr [rdi], dx ; call qword ptr [rax]
0x00002aaaaae82b79 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00002aaaaae82ae9 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae817a4 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, bl ; std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae5823e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00002aaaaae769a4 : insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaadc5940 : insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaae047c2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00002aaaaacd6670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaadaa3a8 : insb byte ptr [rdi], dx ; mov edx, 0x840f002e ; ret 2
0x00002aaaaae8c5a4 : insb byte ptr [rdi], dx ; out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaae6c534 : insb byte ptr [rdi], dx ; ret
0x00002aaaaad38d60 : insb byte ptr [rdi], dx ; ret 0
0x00002aaaaae888a4 : insb byte ptr [rdi], dx ; test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaae811a4 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae1b960 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae74cb5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaad69d6f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaae1c860 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad3fe31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00002aaaaae6b019 : insd dword ptr [rdi], dx ; call rsp
0x00002aaaaae82c39 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00002aaaaae82bf1 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadd6ed7 : insd dword ptr [rdi], dx ; enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae5ab98 : insd dword ptr [rdi], dx ; jl 0x187b91 ; jmp rdx
0x00002aaaaae5abb0 : insd dword ptr [rdi], dx ; jl 0x187bad ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaae78a61 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00002aaaaae5823f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00002aaaaacd4bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00002aaaaae565ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00002aaaaae574ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaadfdff6 : int 0x29
0x00002aaaaadd0512 : int 0x31
0x00002aaaaad1b613 : int 0x48
0x00002aaaaacd5c33 : int 0x80
0x00002aaaaad9b56f : int 0xa3
0x00002aaaaacf28f2 : int 0xc1
0x00002aaaaae0543f : int 0xc2
0x00002aaaaae15aaf : int 0xed
0x00002aaaaacd68ab : int 3
0x00002aaaaad1e513 : int1 ; adc al, 0 ; call 0x777f6
0x00002aaaaae7d0dd : int1 ; add byte ptr [rax], al ; jo 0x1aa0fd ; jmp qword ptr [rcx]
0x00002aaaaae7d06d : int1 ; add byte ptr [rax], al ; loopne 0x1aa08c ; call qword ptr [rdx]
0x00002aaaaad234c6 : int1 ; add eax, r8d ; ret
0x00002aaaaad8c6ea : int1 ; call 0x8e807
0x00002aaaaad8c6e9 : int1 ; call 0x8e808
0x00002aaaaae5a1fe : int1 ; call qword ptr [rax - 0x4f000e16]
0x00002aaaaae5a1de : int1 ; call qword ptr [rax - 0x4f000e17]
0x00002aaaaae5a1be : int1 ; call qword ptr [rax - 0x4f000e18]
0x00002aaaaae5a1ce : int1 ; call qword ptr [rax]
0x00002aaaaae7c43a : int1 ; call qword ptr [rbx]
0x00002aaaaae7b80a : int1 ; call qword ptr [rcx]
0x00002aaaaae7be4a : int1 ; call qword ptr [rdx]
0x00002aaaaae7b5fa : int1 ; call qword ptr [rsi]
0x00002aaaaae5a206 : int1 ; call rax
0x00002aaaaacf485c : int1 ; call rbx
0x00002aaaaae7c632 : int1 ; call rdi
0x00002aaaaae7c98a : int1 ; call rsi
0x00002aaaaae6a8e2 : int1 ; call rsp
0x00002aaaaade2f68 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaadd4edc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x101ee8 ; call rbx
0x00002aaaaadd518f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219b ; call rbx
0x00002aaaaadd6d27 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d33 ; call rbx
0x00002aaaaadd4d9a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd519d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaadd4da7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101db3 ; call rbx
0x00002aaaaadd4ece : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x101eda ; call rbx
0x00002aaaaadd5011 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10201d ; call rbx
0x00002aaaaadd5181 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218d ; call rbx
0x00002aaaaadd699f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1039ab ; call rbx
0x00002aaaaadd6ac7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103ad3 ; call rbx
0x00002aaaaadd6c0a : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103c16 ; call rbx
0x00002aaaaadd6d0b : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x103d17 ; call rbx
0x00002aaaaae6aa9a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], dl ; jmp rsp
0x00002aaaaacd6a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaae5a26a : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a2de : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae5a25a : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaae5a2ce : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaae5a00a : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae5a3de : int1 ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaad7102d : int1 ; je 0x9e024 ; ret
0x00002aaaaad7c9db : int1 ; jl 0xa9a2c ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7c9fc : int1 ; jl 0xa9a4d ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7ca0f : int1 ; jl 0xa9a60 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7cae4 : int1 ; jl 0xa9b35 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7cb3c : int1 ; jl 0xa9b8d ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaad7cbd9 : int1 ; jl 0xa9c2a ; adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaad2f46b : int1 ; jmp 0x5c432
0x00002aaaaad2f46a : int1 ; jmp 0x5c433
0x00002aaaaae5a21a : int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaae5a232 : int1 ; jmp qword ptr [rax]
0x00002aaaaae7b4ea : int1 ; jmp qword ptr [rcx]
0x00002aaaaae7c40a : int1 ; jmp qword ptr [rdi]
0x00002aaaaae5a012 : int1 ; jmp rax
0x00002aaaaad7d0e5 : int1 ; jmp rcx
0x00002aaaaae7ba52 : int1 ; jmp rdi
0x00002aaaaae6aa2a : int1 ; jmp rsp
0x00002aaaaad59c8b : int1 ; mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaae67520 : int1 ; mov ch, 0xfd ; call rcx
0x00002aaaaae67540 : int1 ; mov dh, 0xfd ; call rcx
0x00002aaaaae2cf6b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae259ef : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae00bda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaadfc6be : int1 ; mov rdi, r13 ; call r12
0x00002aaaaae44203 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaae8e980 : int1 ; or byte ptr [rbx], al ; ret
0x00002aaaaad7d12b : int1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad6996e : int1 ; pop rbx ; pop rbp ; ret
0x00002aaaaae5a216 : int1 ; push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaae5a2ca : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x00002aaaaae5a256 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x00002aaaaae5a006 : int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae5a392 : int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaae5a266 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a292 : int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae5a2da : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae5a3e2 : int1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaae5a3b2 : int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaacd560b : int1 ; ret
0x00002aaaaadd9b83 : int1 ; ret 0x2b
0x00002aaaaae57c16 : int1 ; ret 0x5803
0x00002aaaaae6792d : int1 ; sti ; call rax
0x00002aaaaae883d9 : int1 ; sti ; call rcx
0x00002aaaaae44207 : int1 ; sub eax, edx ; ret
0x00002aaaaad1b1cd : int1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad6987e : int1 ; xor eax, eax ; ret
0x00002aaaaae69de5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaae6c77d : iretd ; add dword ptr [rax], eax ; je 0x199797 ; clc ; jmp rsp
0x00002aaaaadc6657 : iretd ; call 0x1f8ab
0x00002aaaaad5b6b9 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaadd7ad4 : ja 0x104ae3 ; ret
0x00002aaaaadd9794 : ja 0x1067a3 ; ret
0x00002aaaaadd99d6 : ja 0x1069e2 ; ret
0x00002aaaaadd9a88 : ja 0x106a93 ; ret
0x00002aaaaadd9ac2 : ja 0x106ad3 ; ret
0x00002aaaaadda673 : ja 0x107682 ; ret
0x00002aaaaadda7f3 : ja 0x107802 ; ret
0x00002aaaaaddac8d : ja 0x107c92 ; ret
0x00002aaaaaddad2f : ja 0x107d3a ; ret
0x00002aaaaaddaddf : ja 0x107dea ; ret
0x00002aaaaade7c40 : ja 0x114c4b ; ret
0x00002aaaaade7cc5 : ja 0x114c9c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaade7ced : ja 0x114d0d ; ret
0x00002aaaaade99b2 : ja 0x1169c3 ; ret
0x00002aaaaade9a62 : ja 0x116a73 ; ret
0x00002aaaaadeb4a7 : ja 0x1184ba ; mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaadf6023 : ja 0x123028 ; ret
0x00002aaaaadf6350 : ja 0x12333b ; mov eax, 0xffffffff ; ret
0x00002aaaaadf63f9 : ja 0x123410 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaadfdba1 : ja 0x12abf4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaae00bfd : ja 0x12dbee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaae0e1f7 : ja 0x13b213 ; ret
0x00002aaaaae0e36f : ja 0x13b392 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaae0e5f0 : ja 0x13b620 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaae465d0 : ja 0x17359c ; call 0x1f8ac
0x00002aaaaae469cb : ja 0x1739d2 ; ret
0x00002aaaaae57c84 : ja 0x184c0b ; ret 0x48f
0x00002aaaaae6735d : ja 0x19435c ; jmp qword ptr [rax]
0x00002aaaaae68291 : ja 0x195291 ; jmp rax
0x00002aaaaae682cd : ja 0x1952cd ; call qword ptr [rsi]
0x00002aaaaae6840d : ja 0x19540d ; jmp rsp
0x00002aaaaae6848d : ja 0x19548d ; call rax
0x00002aaaaae68489 : ja 0x19548d ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaae6848c : ja 0x19548e ; call rax
0x00002aaaaae684cd : ja 0x1954cd ; call rax
0x00002aaaaae684c9 : ja 0x1954cd ; push qword ptr [rax] ; ja 0x1954d1 ; call rax
0x00002aaaaae68fe5 : ja 0x195fed ; add byte ptr [rcx + rsi*8 - 0x17], al ; call rsp
0x00002aaaaae69921 : ja 0x196912 ; jmp rsp
0x00002aaaaae6dda9 : ja 0x19adaa ; call rsp
0x00002aaaaae6dda8 : ja 0x19adab ; call rsp
0x00002aaaaad00aad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaad0842e : ja 0x35453 ; ret
0x00002aaaaad08736 : ja 0x35743 ; ret
0x00002aaaaad087a2 : ja 0x357b3 ; ret
0x00002aaaaad087ec : ja 0x357f2 ; ret
0x00002aaaaacd68ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaad1ba8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad234b7 : ja 0x5049e ; mov eax, r8d ; ret
0x00002aaaaad3482c : ja 0x617b9 ; ret 0x348
0x00002aaaaad35b53 : ja 0x62ae0 ; ret 0x348
0x00002aaaaad3cc78 : ja 0x69c05 ; ret 0x348
0x00002aaaaad46026 : ja 0x73033 ; ret
0x00002aaaaad4ac88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad616c2 : ja 0x8e6d3 ; ret
0x00002aaaaad668c8 : ja 0x938c2 ; ret 0x7401
0x00002aaaaad6928d : ja 0x9626f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad71cac : ja 0x9ecc5 ; mov rax, rdi ; ret
0x00002aaaaad72433 : ja 0x9f437 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaad72b86 : ja 0x9fb8a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaad732d3 : ja 0xa02d7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaad781a7 : ja 0xa51ad ; ret
0x00002aaaaad781c3 : ja 0xa51cd ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad78204 : ja 0xa5213 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad78289 : ja 0xa529d ; ret
0x00002aaaaad782df : ja 0xa52f7 ; ret
0x00002aaaaad78361 : ja 0xa537d ; ret
0x00002aaaaad797a7 : ja 0xa67b1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad797c3 : ja 0xa67d1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad79814 : ja 0xa6827 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad798f9 : ja 0xa6911 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad7996f : ja 0xa698b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaad799f1 : ja 0xa6a11 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad7b287 : ja 0xa828d ; ret
0x00002aaaaad7b2a3 : ja 0xa82ad ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad7b2e4 : ja 0xa82f3 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7b369 : ja 0xa837d ; ret
0x00002aaaaad7b3bf : ja 0xa83d7 ; ret
0x00002aaaaad7b441 : ja 0xa845d ; ret
0x00002aaaaad7bd57 : ja 0xa8d5d ; ret
0x00002aaaaad7bd73 : ja 0xa8d7d ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad7bdb4 : ja 0xa8dc3 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7be39 : ja 0xa8e4d ; ret
0x00002aaaaad7be8f : ja 0xa8ea7 ; ret
0x00002aaaaad7bf11 : ja 0xa8f2d ; ret
0x00002aaaaad7d3d9 : ja 0xaa3f9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00002aaaaad7ec72 : ja 0xabc82 ; cmove rax, rcx ; ret
0x00002aaaaad7f06c : ja 0xac07c ; mov eax, edi ; ret
0x00002aaaaad8e88d : ja 0xbb89b ; ret
0x00002aaaaad9a82d : ja 0xc783b ; pop rbx ; ret
0x00002aaaaad9baa7 : ja 0xc8ab2 ; ret
0x00002aaaaad9e436 : ja 0xcb442 ; ret
0x00002aaaaad9e4d0 : ja 0xcb4da ; ret
0x00002aaaaad9e5c1 : ja 0xcb5ca ; ret
0x00002aaaaad9f719 : ja 0xcc722 ; ret
0x00002aaaaad9f789 : ja 0xcc792 ; ret
0x00002aaaaad9f9dd : ja 0xcc9e2 ; ret
0x00002aaaaad9fa5d : ja 0xcca62 ; ret
0x00002aaaaadab25e : ja 0xd8277 ; mov eax, 2 ; ret
0x00002aaaaadc8391 : ja 0xf539b ; xor eax, eax ; ret
0x00002aaaaadc8e2e : ja 0xf5dc6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc8e62 : ja 0xf5e53 ; ret
0x00002aaaaadc900b : ja 0xf6013 ; ret
0x00002aaaaadc905a : ja 0xf6063 ; ret
0x00002aaaaadc90ab : ja 0xf60b3 ; ret
0x00002aaaaadc9103 : ja 0xf6113 ; ret
0x00002aaaaadc9167 : ja 0xf6173 ; ret
0x00002aaaaadc91c0 : ja 0xf61cb ; ret
0x00002aaaaadc939f : ja 0xf63ab ; ret
0x00002aaaaadc9a69 : ja 0xf6aa3 ; ret
0x00002aaaaadc9b0d : ja 0xf6b57 ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaadcd9b3 : ja 0xfa9c8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00002aaaaadcdee8 : ja 0xfaef3 ; ret
0x00002aaaaadcdf3c : ja 0xfaf43 ; ret
0x00002aaaaadce690 : ja 0xfb69a ; ret
0x00002aaaaadce773 : ja 0xfb77f ; ret
0x00002aaaaadce7c9 : ja 0xfb7d5 ; ret
0x00002aaaaadcebb4 : ja 0xfbbc2 ; ret
0x00002aaaaadcf243 : ja 0xfc273 ; ret
0x00002aaaaadcf460 : ja 0xfc46a ; ret
0x00002aaaaadcf510 : ja 0xfc51a ; ret
0x00002aaaaadcf5bb : ja 0xfc5c2 ; ret
0x00002aaaaadcf62b : ja 0xfc632 ; ret
0x00002aaaaadcf6ac : ja 0xfc6b2 ; ret
0x00002aaaaadcf75c : ja 0xfc762 ; ret
0x00002aaaaadcfcac : ja 0xfccb3 ; ret
0x00002aaaaadd13cd : ja 0xfe3db ; ret
0x00002aaaaadd1461 : ja 0xfe46b ; ret
0x00002aaaaadd1501 : ja 0xfe50b ; ret
0x00002aaaaadd1555 : ja 0xfe563 ; ret
0x00002aaaaadd1639 : ja 0xfe645 ; ret
0x00002aaaaadd1862 : ja 0xfe898 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaacd52df : ja 0xffffffffd6104b6b ; ret
0x00002aaaaadd38ef : jae 0x1008f4 ; ret
0x00002aaaaadd3b5d : jae 0x100b62 ; ret
0x00002aaaaadd3b8d : jae 0x100b92 ; ret
0x00002aaaaadd3bc6 : jae 0x100bfb ; ret
0x00002aaaaadd3c1d : jae 0x100c22 ; ret
0x00002aaaaadd3c4d : jae 0x100c52 ; ret
0x00002aaaaadd3c80 : jae 0x100c85 ; ret
0x00002aaaaadd3cad : jae 0x100cb2 ; ret
0x00002aaaaadd3cdd : jae 0x100ce2 ; ret
0x00002aaaaadd3d0d : jae 0x100d12 ; ret
0x00002aaaaadd3d3d : jae 0x100d42 ; ret
0x00002aaaaadd8400 : jae 0x105405 ; ret
0x00002aaaaadd842d : jae 0x105432 ; ret
0x00002aaaaadd845d : jae 0x105462 ; ret
0x00002aaaaadd8490 : jae 0x105495 ; ret
0x00002aaaaadd84c0 : jae 0x1054c5 ; ret
0x00002aaaaadd84ed : jae 0x1054f2 ; ret
0x00002aaaaadd8520 : jae 0x105525 ; ret
0x00002aaaaadd854d : jae 0x105552 ; ret
0x00002aaaaadd857d : jae 0x105582 ; ret
0x00002aaaaadd85b0 : jae 0x1055b5 ; ret
0x00002aaaaadd85dd : jae 0x1055e2 ; ret
0x00002aaaaadd8610 : jae 0x105615 ; ret
0x00002aaaaadd96fd : jae 0x106702 ; ret
0x00002aaaaadd972d : jae 0x106732 ; ret
0x00002aaaaadd985d : jae 0x106862 ; ret
0x00002aaaaadd989d : jae 0x1068a2 ; ret
0x00002aaaaadd98cd : jae 0x1068d2 ; ret
0x00002aaaaadd98fd : jae 0x106902 ; ret
0x00002aaaaadd992d : jae 0x106932 ; ret
0x00002aaaaadd9b50 : jae 0x106b55 ; ret
0x00002aaaaadd9b50 : jae 0x106b5a ; ret
0x00002aaaaadd9b7d : jae 0x106b82 ; ret
0x00002aaaaadd9bad : jae 0x106bb2 ; ret
0x00002aaaaadd9bdd : jae 0x106be2 ; ret
0x00002aaaaadd9c20 : jae 0x106c25 ; ret
0x00002aaaaadd9c4d : jae 0x106c52 ; ret
0x00002aaaaadd9c7d : jae 0x106c82 ; ret
0x00002aaaaadd9cad : jae 0x106cb2 ; ret
0x00002aaaaadd9cdd : jae 0x106ce2 ; ret
0x00002aaaaadd9d0d : jae 0x106d12 ; ret
0x00002aaaaadd9d3d : jae 0x106d42 ; ret
0x00002aaaaadd9d6d : jae 0x106d72 ; ret
0x00002aaaaadd9d9d : jae 0x106da2 ; ret
0x00002aaaaadd9dd0 : jae 0x106dd5 ; ret
0x00002aaaaadd9e09 : jae 0x106e41 ; ret
0x00002aaaaadd9e5d : jae 0x106e62 ; ret
0x00002aaaaadd9e90 : jae 0x106e95 ; ret
0x00002aaaaadd9ebd : jae 0x106ec2 ; ret
0x00002aaaaadd9eed : jae 0x106ef2 ; ret
0x00002aaaaadd9f1d : jae 0x106f22 ; ret
0x00002aaaaadd9f4d : jae 0x106f52 ; ret
0x00002aaaaadd9f7d : jae 0x106f82 ; ret
0x00002aaaaadd9fb0 : jae 0x106fb5 ; ret
0x00002aaaaadd9fe0 : jae 0x106fe5 ; ret
0x00002aaaaadda00d : jae 0x107012 ; ret
0x00002aaaaadda03d : jae 0x107042 ; ret
0x00002aaaaadda070 : jae 0x107075 ; ret
0x00002aaaaadda0a0 : jae 0x1070a5 ; ret
0x00002aaaaadda0d0 : jae 0x1070d5 ; ret
0x00002aaaaadda109 : jae 0x107141 ; ret
0x00002aaaaadda15d : jae 0x107162 ; ret
0x00002aaaaadda199 : jae 0x1071d1 ; ret
0x00002aaaaadda1ed : jae 0x1071f2 ; ret
0x00002aaaaadda21d : jae 0x107222 ; ret
0x00002aaaaadda259 : jae 0x107291 ; ret
0x00002aaaaadda2ad : jae 0x1072b2 ; ret
0x00002aaaaadda2e0 : jae 0x1072e5 ; ret
0x00002aaaaadda30d : jae 0x107312 ; ret
0x00002aaaaadda33d : jae 0x107342 ; ret
0x00002aaaaadda370 : jae 0x107375 ; ret
0x00002aaaaadda3a6 : jae 0x1073db ; ret
0x00002aaaaadda3fd : jae 0x107402 ; ret
0x00002aaaaadda430 : jae 0x107435 ; ret
0x00002aaaaadda460 : jae 0x107465 ; ret
0x00002aaaaadda4b6 : jae 0x1074eb ; ret
0x00002aaaaadda50d : jae 0x107512 ; ret
0x00002aaaaadda546 : jae 0x10757b ; ret
0x00002aaaaadda59d : jae 0x1075a2 ; ret
0x00002aaaaadda5cd : jae 0x1075d2 ; ret
0x00002aaaaadda600 : jae 0x107605 ; ret
0x00002aaaaadda62d : jae 0x107632 ; ret
0x00002aaaaadda729 : jae 0x107761 ; ret
0x00002aaaaadda786 : jae 0x1077bb ; ret
0x00002aaaaadda8a6 : jae 0x1078db ; ret
0x00002aaaaadda909 : jae 0x107941 ; ret
0x00002aaaaadda960 : jae 0x107965 ; ret
0x00002aaaaadda98d : jae 0x107992 ; ret
0x00002aaaaadda9bd : jae 0x1079c2 ; ret
0x00002aaaaadda9f0 : jae 0x1079f5 ; ret
0x00002aaaaaddaf49 : jae 0x107f81 ; ret
0x00002aaaaaddafa9 : jae 0x107fe1 ; ret
0x00002aaaaaddaffd : jae 0x108002 ; ret
0x00002aaaaaddb02d : jae 0x108032 ; ret
0x00002aaaaaddb05d : jae 0x108062 ; ret
0x00002aaaaaddb08d : jae 0x108092 ; ret
0x00002aaaaaddb0c0 : jae 0x1080c5 ; ret
0x00002aaaaaddb0f0 : jae 0x1080f5 ; ret
0x00002aaaaaddb11d : jae 0x108122 ; ret
0x00002aaaaaddb14d : jae 0x108152 ; ret
0x00002aaaaaddb17d : jae 0x108182 ; ret
0x00002aaaaaddb1ad : jae 0x1081b2 ; ret
0x00002aaaaade187c : jae 0x10e8a7 ; cmp byte ptr [rax], dil ; je 0x10e8b1 ; mov rdx, rax ; jmp 0x10e89e
0x00002aaaaade1b87 : jae 0x10ebae ; cmp byte ptr [r8], r9b ; je 0x10ebb5 ; mov rdx, r8 ; jmp 0x10eba5
0x00002aaaaae0e2d5 : jae 0x13b2e4 ; xor eax, eax ; ret
0x00002aaaaae0e315 : jae 0x13b324 ; xor eax, eax ; ret
0x00002aaaaae12ab0 : jae 0x13fab5 ; ret
0x00002aaaaae12b00 : jae 0x13fb05 ; ret
0x00002aaaaae15904 : jae 0x1428e7 ; mov eax, 1 ; ret
0x00002aaaaae4678c : jae 0x17379b ; call qword ptr [rbx]
0x00002aaaaae4678c : jae 0x17379f ; call qword ptr [rbx]
0x00002aaaaae47547 : jae 0x174564 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00002aaaaae56242 : jae 0x183224 ; jo 0x1832c0 ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaae570de : jae 0x1840b9 ; push rsi ; pop rdx ; je 0x1840ae ; ret 0xacfc
0x00002aaaaae67351 : jae 0x194354 ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaae6b5bd : jae 0x1985c6 ; add byte ptr [rbp + rax - 0xa], dh ; call rsp
0x00002aaaaae6dcc9 : jae 0x19acc8 ; call rsp
0x00002aaaaae73869 : jae 0x1a0881 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaae741b5 : jae 0x1a11cd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaae74a77 : jae 0x1a1a85 ; ret
0x00002aaaaae78b29 : jae 0x1a5b1b ; jmp qword ptr [rdx]
0x00002aaaaae79991 : jae 0x1a6984 ; call rax
0x00002aaaaae83159 : jae 0x1b0152 ; call qword ptr [rsi]
0x00002aaaaae83189 : jae 0x1b0182 ; jmp qword ptr [rcx]
0x00002aaaaae831b9 : jae 0x1b01b2 ; jmp qword ptr [rcx]
0x00002aaaaae831d1 : jae 0x1b01ca ; jmp qword ptr [rcx]
0x00002aaaaacffb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaad0876d : jae 0x35772 ; ret
0x00002aaaaad08e2d : jae 0x35e32 ; ret
0x00002aaaaad1ab27 : jae 0x47b30 ; xor eax, eax ; ret
0x00002aaaaad3c84c : jae 0x697d9 ; ret 0x348
0x00002aaaaad3e36d : jae 0x6b372 ; ret
0x00002aaaaad3e3a0 : jae 0x6b3a5 ; ret
0x00002aaaaad4c618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaad4e2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaad4fc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaad5ba9e : jae 0x88aae ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad8e96d : jae 0xbb972 ; ret
0x00002aaaaad91a5d : jae 0xbea62 ; ret
0x00002aaaaad91a8d : jae 0xbea92 ; ret
0x00002aaaaad9e38d : jae 0xcb392 ; ret
0x00002aaaaad9e580 : jae 0xcb585 ; ret
0x00002aaaaad9e65d : jae 0xcb662 ; ret
0x00002aaaaad9e6e6 : jae 0xcb71b ; ret
0x00002aaaaad9e746 : jae 0xcb77b ; ret
0x00002aaaaad9eb47 : jae 0xcbb4c ; ret
0x00002aaaaad9ebcd : jae 0xcbbd2 ; ret
0x00002aaaaad9f6dd : jae 0xcc6e2 ; ret
0x00002aaaaad9f87d : jae 0xcc882 ; ret
0x00002aaaaad9f8ad : jae 0xcc8b2 ; ret
0x00002aaaaad9f90d : jae 0xcc912 ; ret
0x00002aaaaad9f93d : jae 0xcc942 ; ret
0x00002aaaaad9f96d : jae 0xcc972 ; ret
0x00002aaaaad9f99d : jae 0xcc9a2 ; ret
0x00002aaaaada2056 : jae 0xcf06e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaadb312a : jae 0xe0376 ; movdqa xmm0, xmm2 ; jmp 0xe011c
0x00002aaaaadbcb8d : jae 0xe9b92 ; ret
0x00002aaaaadbcbbd : jae 0xe9bc2 ; ret
0x00002aaaaadbcbed : jae 0xe9bf2 ; ret
0x00002aaaaadbcc1d : jae 0xe9c22 ; ret
0x00002aaaaadbcc4d : jae 0xe9c52 ; ret
0x00002aaaaadbcc7d : jae 0xe9c82 ; ret
0x00002aaaaadbccad : jae 0xe9cb2 ; ret
0x00002aaaaadbccdd : jae 0xe9ce2 ; ret
0x00002aaaaadc7e99 : jae 0xf4ed1 ; ret
0x00002aaaaadc7ef9 : jae 0xf4f31 ; ret
0x00002aaaaadc8f6d : jae 0xf5f72 ; ret
0x00002aaaaadc920d : jae 0xf6212 ; ret
0x00002aaaaadc923d : jae 0xf6242 ; ret
0x00002aaaaadc930d : jae 0xf6312 ; ret
0x00002aaaaadc933d : jae 0xf6342 ; ret
0x00002aaaaadc93fd : jae 0xf6402 ; ret
0x00002aaaaadc942d : jae 0xf6432 ; ret
0x00002aaaaadc9466 : jae 0xf649b ; ret
0x00002aaaaadc9686 : jae 0xf66bb ; ret
0x00002aaaaadc96e6 : jae 0xf671b ; ret
0x00002aaaaadc973d : jae 0xf6742 ; ret
0x00002aaaaadc9bcd : jae 0xf6bd2 ; ret
0x00002aaaaadc9d16 : jae 0xf6d4b ; ret
0x00002aaaaadc9d6d : jae 0xf6d72 ; ret
0x00002aaaaadc9d9d : jae 0xf6da2 ; ret
0x00002aaaaadc9dcd : jae 0xf6dd2 ; ret
0x00002aaaaadc9dfd : jae 0xf6e02 ; ret
0x00002aaaaadc9e2d : jae 0xf6e32 ; ret
0x00002aaaaadc9e66 : jae 0xf6e9b ; ret
0x00002aaaaadc9ebd : jae 0xf6ec2 ; ret
0x00002aaaaadc9eed : jae 0xf6ef2 ; ret
0x00002aaaaadca71d : jae 0xf7722 ; ret
0x00002aaaaadca74d : jae 0xf7752 ; ret
0x00002aaaaadca77d : jae 0xf7782 ; ret
0x00002aaaaadca7b0 : jae 0xf77b5 ; ret
0x00002aaaaadcad8d : jae 0xf7d92 ; ret
0x00002aaaaadcadc0 : jae 0xf7dc5 ; ret
0x00002aaaaadcaded : jae 0xf7df2 ; ret
0x00002aaaaadcae1d : jae 0xf7e22 ; ret
0x00002aaaaadcae4d : jae 0xf7e52 ; ret
0x00002aaaaadcae80 : jae 0xf7e85 ; ret
0x00002aaaaadcaead : jae 0xf7eb2 ; ret
0x00002aaaaadcaedd : jae 0xf7ee2 ; ret
0x00002aaaaadcaf0d : jae 0xf7f12 ; ret
0x00002aaaaadcdb46 : jae 0xfab7b ; ret
0x00002aaaaadcdbd4 : jae 0xfac27 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadcdeb0 : jae 0xfaeb5 ; ret
0x00002aaaaadce629 : jae 0xfb661 ; ret
0x00002aaaaadced7d : jae 0xfbd82 ; ret
0x00002aaaaadcedad : jae 0xfbdb2 ; ret
0x00002aaaaadceddd : jae 0xfbde2 ; ret
0x00002aaaaadcf17d : jae 0xfc182 ; ret
0x00002aaaaadcf35d : jae 0xfc362 ; ret
0x00002aaaaadcf396 : jae 0xfc3cb ; ret
0x00002aaaaadcf3f6 : jae 0xfc42b ; ret
0x00002aaaaadcf8ed : jae 0xfc8f2 ; ret
0x00002aaaaadcf98d : jae 0xfc992 ; ret
0x00002aaaaadcf9c9 : jae 0xfca01 ; ret
0x00002aaaaadcfb1d : jae 0xfcb22 ; ret
0x00002aaaaadcfb4d : jae 0xfcb52 ; ret
0x00002aaaaadcfb86 : jae 0xfcbbb ; ret
0x00002aaaaadcfbdd : jae 0xfcbe2 ; ret
0x00002aaaaadcfc16 : jae 0xfcc4b ; ret
0x00002aaaaadcfc6d : jae 0xfcc72 ; ret
0x00002aaaaadcffdd : jae 0xfcfe2 ; ret
0x00002aaaaadd000d : jae 0xfd012 ; ret
0x00002aaaaadd003d : jae 0xfd042 ; ret
0x00002aaaaadd158d : jae 0xfe592 ; ret
0x00002aaaaadd15bd : jae 0xfe5c2 ; ret
0x00002aaaaadf4a55 : jae 0xffffffff835a1c22 ; ret 0x3904
0x00002aaaaad0341d : jae 0xffffffff894b0462 ; ret
0x00002aaaaadd6a32 : jb 0x1039f9 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaade0ddb : jb 0x10ddef ; mov eax, 1 ; ret
0x00002aaaaade6ddd : jb 0x113dd4 ; xor eax, eax ; ret
0x00002aaaaadf62d8 : jb 0x1232cb ; mov eax, 0xffffffff ; ret
0x00002aaaaadf62d7 : jb 0x1232cc ; mov eax, 0xffffffff ; ret
0x00002aaaaae00c01 : jb 0x12dc25 ; ret
0x00002aaaaae00bfb : jb 0x12dc2d ; ja 0x12dbf0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaae0a62a : jb 0x13763d ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaae1fe81 : jb 0x14ce6a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae1fee4 : jb 0x14cecd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaae1ff88 : jb 0x14cf94 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae20371 : jb 0x14d35a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae203d4 : jb 0x14d3bd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaae20478 : jb 0x14d484 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae20714 : jb 0x14d6fd ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae20774 : jb 0x14d75d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaae20818 : jb 0x14d824 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae239fa : jb 0x150a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23b4a : jb 0x150b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23c9a : jb 0x150caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23dea : jb 0x150dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23f3a : jb 0x150f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2408a : jb 0x15109a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae241da : jb 0x1511ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2432a : jb 0x15133a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2447a : jb 0x15148a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae245ca : jb 0x1515da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2471a : jb 0x15172a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2486a : jb 0x15187a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae249ba : jb 0x1519ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24b0a : jb 0x151b1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24c5a : jb 0x151c6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae263ca : jb 0x1533da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2651a : jb 0x15352a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2666a : jb 0x15367a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae267ba : jb 0x1537ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2690a : jb 0x15391a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26a5a : jb 0x153a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26baa : jb 0x153bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26cfa : jb 0x153d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26e4a : jb 0x153e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26f9a : jb 0x153faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae270ea : jb 0x1540fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2723a : jb 0x15424a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2738a : jb 0x15439a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae274da : jb 0x1544ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2762a : jb 0x15463a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae28d9a : jb 0x155daa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae28eea : jb 0x155efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2903a : jb 0x15604a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2918a : jb 0x15619a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae292da : jb 0x1562ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2942a : jb 0x15643a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2957a : jb 0x15658a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae296ca : jb 0x1566da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2981a : jb 0x15682a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae2996a : jb 0x15697a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29aba : jb 0x156aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29c0a : jb 0x156c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29d5a : jb 0x156d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29eaa : jb 0x156eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29ffa : jb 0x15700a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae44e77 : jb 0x171e87 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaae44e83 : jb 0x171e99 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaae44e93 : jb 0x171e9b ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae467bb : jb 0x1737b1 ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaae47559 : jb 0x174558 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae47c8d : jb 0x174c80 ; call qword ptr [rax - 0x2f00148e]
0x00002aaaaae47c91 : jb 0x174c80 ; call rax
0x00002aaaaae47ca5 : jb 0x174c94 ; call rax
0x00002aaaaae5b488 : jb 0x188469 ; call qword ptr [rcx]
0x00002aaaaae6a1a9 : jb 0x19719b ; call rsp
0x00002aaaaae83081 : jb 0x1b007a ; jmp qword ptr [rcx]
0x00002aaaaae830b1 : jb 0x1b00aa ; jmp qword ptr [rcx]
0x00002aaaaae830c9 : jb 0x1b00c2 ; jmp qword ptr [rcx]
0x00002aaaaae83111 : jb 0x1b010a ; jmp qword ptr [rcx]
0x00002aaaaae88dc6 : jb 0x1b5dd4 ; ret
0x00002aaaaae88dc6 : jb 0x1b5dda ; ret
0x00002aaaaacd5b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaad00a7e : jb 0x2da8b ; ret
0x00002aaaaacd68ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaad44275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x00002aaaaad45d5c : jb 0x72d55 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaad7200e : jb 0x9f01a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad72761 : jb 0x9f76d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad72eae : jb 0x9feba ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad7a11a : jb 0xa7129 ; add byte ptr [rax], al ; ret
0x00002aaaaad7ca45 : jb 0xa9a54 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaad7ca50 : jb 0xa9a63 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaad7ca5d : jb 0xa9a65 ; mov byte ptr [rdi], cl ; ret
0x00002aaaaad9ffed : jb 0xccff6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00002aaaaada973d : jb 0xd66bd ; pop rbx ; ret
0x00002aaaaae001b3 : jbe 0x12d1c7 ; mov eax, 2 ; ret
0x00002aaaaae0e5ed : jbe 0x13b609 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaae673b0 : jbe 0x194355 ; std ; jmp qword ptr [rdx]
0x00002aaaaae67359 : jbe 0x19435c ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaae68090 : jbe 0x195016 ; cld ; jmp rsi
0x00002aaaaae68f95 : jbe 0x195f9d ; add byte ptr [rbp + rbp*8 - 0x17], dl ; call rsp
0x00002aaaaae6b68d : jbe 0x198696 ; add ah, ah ; or al, 0xf6 ; call rsp
0x00002aaaaae6ba59 : jbe 0x198a53 ; jmp rsp
0x00002aaaaae83321 : jbe 0x1b031a ; jmp qword ptr [rcx]
0x00002aaaaae83339 : jbe 0x1b0332 ; jmp qword ptr [rcx]
0x00002aaaaacfe767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x00002aaaaacd5c0f : jbe 0x2be3 ; clc ; ret
0x00002aaaaad1af4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x00002aaaaad1d49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00002aaaaad263bf : jbe 0x5334c ; ret 0x8166
0x00002aaaaad4528a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaad60fb6 : jbe 0x8dff5 ; add rax, rdi ; ret
0x00002aaaaad60fc6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad60fd6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad60fe6 : jbe 0x8dff7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad66933 : jbe 0x9394e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x93929 ; ret
0x00002aaaaad736f9 : jbe 0xa06f3 ; ret 0xf10
0x00002aaaaad75319 : jbe 0xa2313 ; ret 0xf10
0x00002aaaaad91502 : jbe 0xbe539 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadae508 : jbe 0xdb517 ; mov eax, 0xc ; ret
0x00002aaaaadc8cf8 : jbe 0xf5d03 ; ret
0x00002aaaaadd19cb : jbe 0xfea00 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaadd19ff : jbe 0xfea35 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaadd19fe : jbe 0xfea36 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00002aaaaadd38b8 : je 0x1008c9 ; mov dword ptr [rip + 0x2c2950], edi ; ret
0x00002aaaaadd4900 : je 0x10190b ; pop rbx ; ret
0x00002aaaaadd5e00 : je 0x102e12 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaadd782e : je 0x1048ce ; call rax
0x00002aaaaadd79a5 : je 0x104aa6 ; call rax
0x00002aaaaadd97f6 : je 0x1067fb ; ret
0x00002aaaaaddb9c4 : je 0x1089cb ; pop rbp ; ret
0x00002aaaaaddbdca : je 0x108dda ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00002aaaaaddc019 : je 0x109027 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaaddedab : je 0x10bdc0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaade1881 : je 0x10e8ac ; mov rdx, rax ; jmp 0x10e899
0x00002aaaaade1b8c : je 0x10ebb0 ; mov rdx, r8 ; jmp 0x10eba0
0x00002aaaaade4fa2 : je 0x111f82 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f76
0x00002aaaaade5713 : je 0x112727 ; mov eax, 7 ; ret
0x00002aaaaade5731 : je 0x112759 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaade5740 : je 0x1127a4 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaade6e5b : je 0x113e6b ; ret
0x00002aaaaade7509 : je 0x11450e ; ret
0x00002aaaaade756d : je 0x114572 ; ret
0x00002aaaaade798a : je 0x114992 ; ret
0x00002aaaaade7c82 : je 0x114cb2 ; call rax
0x00002aaaaade8102 : je 0x11511f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaade863d : je 0x115650 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x00002aaaaade867e : je 0x115690 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x00002aaaaade872d : je 0x115740 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x00002aaaaade876e : je 0x115780 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00002aaaaade87b7 : je 0x1157c9 ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x00002aaaaade8ca3 : je 0x115c9d ; dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaade915c : je 0x116170 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaade9aac : je 0x116abe ; add rsp, 8 ; ret
0x00002aaaaadea65c : je 0x117670 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaadf1eb7 : je 0x11eec3 ; mov rdi, rbx ; call rax
0x00002aaaaadf1eb7 : je 0x11eec7 ; mov rdi, rbx ; call rax
0x00002aaaaadf21af : je 0x11f1bb ; mov rdi, rbx ; call rax
0x00002aaaaadf22bf : je 0x11f2d3 ; lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaadf236a : je 0x11f397 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00002aaaaadf5413 : je 0x12240b ; pop rbx ; ret
0x00002aaaaadfa752 : je 0x12775a ; ret
0x00002aaaaadfa7b1 : je 0x1277ba ; ret
0x00002aaaaadfa7ab : je 0x1277bb ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1277c0 ; ret
0x00002aaaaadfd453 : je 0x12a43d ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadfdc93 : je 0x12ac9f ; mov rdi, rsp ; call rax
0x00002aaaaadfdd7e : je 0x12ad8a ; mov rdi, rsp ; call rax
0x00002aaaaadfe439 : je 0x12b466 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00002aaaaadfe634 : je 0x12b640 ; mov rdi, rbp ; call rax
0x00002aaaaadfe9b8 : je 0x12b9c2 ; ret
0x00002aaaaadff6c5 : je 0x12c6d1 ; mov rdi, r14 ; call rax
0x00002aaaaadffc43 : je 0x12cc54 ; xor eax, eax ; ret
0x00002aaaaae00252 : je 0x12d25e ; mov rdi, rbp ; call rdx
0x00002aaaaae00757 : je 0x12d854 ; mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaae046a2 : je 0x1316b6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00002aaaaae0505a : je 0x132066 ; mov rdi, r12 ; call rax
0x00002aaaaae0523b : je 0x132249 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae05bd4 : je 0x132be4 ; xor eax, eax ; ret
0x00002aaaaae065db : je 0x1334ff ; mov rdi, rbp ; call rax
0x00002aaaaae06515 : je 0x133521 ; mov rdi, r13 ; call rax
0x00002aaaaae06623 : je 0x133637 ; mov eax, 1 ; ret
0x00002aaaaae0665f : je 0x133672 ; call 0x1f8ac
0x00002aaaaae06708 : je 0x133714 ; mov rdi, rbp ; call rax
0x00002aaaaae06928 : je 0x133934 ; mov rdi, rbp ; call rax
0x00002aaaaae0741f : je 0x13442d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaae07acb : je 0x134ad7 ; mov rdi, r12 ; call rax
0x00002aaaaae07e3f : je 0x134e4d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaae0a6ca : je 0x137658 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaae0a64f : je 0x13765b ; pop rbx ; ret
0x00002aaaaae0a6f3 : je 0x137706 ; add rsp, 8 ; ret
0x00002aaaaae0ab01 : je 0x137b16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0b2db : je 0x1382e2 ; ret
0x00002aaaaae0b3bb : je 0x1383c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae0bad4 : je 0x138ae2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae0cf4d : je 0x139fa8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0d00d : je 0x13a068 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0d0cd : je 0x13a128 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0d18d : je 0x13a1e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0d9fb : je 0x13aa27 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaae0db3f : je 0x13ab6b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaae0dc8d : je 0x13acb8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaae0dd4d : je 0x13ad78 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaae0de0d : je 0x13ae38 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaae0decd : je 0x13aef8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaae0e1c1 : je 0x13b1d3 ; ret
0x00002aaaaae10188 : je 0x13d194 ; xor eax, eax ; ret
0x00002aaaaae14db1 : je 0x141dc6 ; add rsp, 8 ; ret
0x00002aaaaae17183 : je 0x14414d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae17e55 : je 0x144e5d ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae17f53 : je 0x144f1d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae18e3a : je 0x145e42 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae18f93 : je 0x145f5d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae1ab63 : je 0x147b2d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae1cb91 : je 0x149b78 ; movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaae1ce83 : je 0x149e4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae1e513 : je 0x14b4dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae41bd7 : je 0x16ebe1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae46276 : je 0x17327c ; call rdx
0x00002aaaaae4638e : je 0x173399 ; call rax
0x00002aaaaae46770 : je 0x173775 ; ret
0x00002aaaaae563a8 : je 0x183373 ; xor al, 0xd8 ; ret
0x00002aaaaae565e7 : je 0x1835e4 ; jmp 0x1835be
0x00002aaaaae570e2 : je 0x1840aa ; ret 0xacfc
0x00002aaaaae59974 : je 0x1869d6 ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaae5ab14 : je 0x187aa0 ; jmp rdx
0x00002aaaaae67355 : je 0x194354 ; jmp qword ptr [rax]
0x00002aaaaae67cd0 : je 0x194d30 ; cld ; jmp rsp
0x00002aaaaae68404 : je 0x195481 ; cld ; jmp rsp
0x00002aaaaae698e0 : je 0x196942 ; in eax, dx ; jmp rsp
0x00002aaaaae6aa29 : je 0x197a1e ; jmp rsp
0x00002aaaaae6ab80 : je 0x197bc8 ; call rsp
0x00002aaaaae6ba09 : je 0x198a03 ; jmp rsp
0x00002aaaaae6ba08 : je 0x198a04 ; jmp rsp
0x00002aaaaae6c508 : je 0x1994f3 ; idiv edi ; hlt ; ret 1
0x00002aaaaae6c780 : je 0x199794 ; clc ; jmp rsp
0x00002aaaaae6cfa0 : je 0x19a00a ; stc ; call rsp
0x00002aaaaae6d478 : je 0x19a496 ; cli ; jmp rsp
0x00002aaaaae6d474 : je 0x19a4ae ; add al, byte ptr [rax] ; je 0x19a49a ; cli ; jmp rsp
0x00002aaaaae6d930 : je 0x19a8d5 ; cli ; call rsp
0x00002aaaaae6da50 : je 0x19aa1c ; cli ; jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaae73862 : je 0x1a0870 ; ret
0x00002aaaaae782ac : je 0x1a5258 ; add byte ptr [rax], al ; nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaae78dac : je 0x1a5d63 ; add byte ptr [rax], al ; loopne 0x1a5d41 ; out dx, al ; jmp rbx
0x00002aaaaae7a1e0 : je 0x1a71e7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaae7aaac : je 0x1a7a80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae802ac : je 0x1ad2d8 ; add dword ptr [rax], eax ; loopne 0x1ad253 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813ac : je 0x1ae3e9 ; add dword ptr [rax], eax ; push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82dac : je 0x1afe03 ; add dword ptr [rax], eax ; nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae830ac : je 0x1b0106 ; add dword ptr [rax], eax ; push rax ; jb 0x1b00af ; jmp qword ptr [rcx]
0x00002aaaaae83201 : je 0x1b01fa ; jmp qword ptr [rcx]
0x00002aaaaae837ac : je 0x1b080d ; add dword ptr [rax], eax ; jo 0x1b073e ; cmc ; jmp rax
0x00002aaaaae8e521 : je 0x1bb51d ; call qword ptr [rdi]
0x00002aaaaacd4cba : je 0x1ce6 ; ret
0x00002aaaaacf2b05 : je 0x1faa6 ; jmp 0x1facf
0x00002aaaaacf4857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00002aaaaacf7ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaacf8b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaacf9864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaacfb044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaacfb2ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaacfbf14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaacfc183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaacfd698 : je 0x2a6a3 ; pop rbx ; ret
0x00002aaaaacfd693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x00002aaaaacfe025 : je 0x2b02b ; call rax
0x00002aaaaacfe396 : je 0x2b39c ; call rcx
0x00002aaaaacff37b : je 0x2c381 ; call rax
0x00002aaaaad061ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00002aaaaad064fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x00002aaaaad07c5d : je 0x34c4c ; ret
0x00002aaaaad07f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x00002aaaaad08046 : je 0x34fef ; ret
0x00002aaaaad0b380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00002aaaaad35913 : je 0x628a0 ; ret 0x348
0x00002aaaaad3dc46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e45a : je 0x6b463 ; ret
0x00002aaaaad4082e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad40b93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad40d97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaad40e67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaad410d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaad41e75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad42778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad42dc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad43107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad434f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad43833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad43a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaad43fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x00002aaaaad44190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad44327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad44cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x00002aaaaad44cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x00002aaaaad45aac : je 0x72ab2 ; ret
0x00002aaaaad45ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x00002aaaaad45b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x00002aaaaad45cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad45d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad46238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x00002aaaaad48b85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad48f8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad490ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad491f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00002aaaaad494d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad49e7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad4a4fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad4a81c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x00002aaaaad4ab9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x00002aaaaad4b086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad4b41b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad4b48f : je 0x7849b ; pop rbx ; ret
0x00002aaaaad4e2b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad4e403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad4e565 : je 0x7b572 ; ret
0x00002aaaaad4e597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4ef7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad509bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x00002aaaaad50f86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad51074 : je 0x7e07a ; call rax
0x00002aaaaad51c17 : je 0x7ec24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad56a32 : je 0x83a5b ; call rax
0x00002aaaaad57402 : je 0x8442e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00002aaaaad579bb : je 0x849c1 ; call rax
0x00002aaaaad59a59 : je 0x86a62 ; ret
0x00002aaaaad59cf2 : je 0x86d07 ; mov eax, 0x16 ; ret
0x00002aaaaad59e1e : je 0x86fa9 ; mov rsi, r14 ; call rax
0x00002aaaaad5b378 : je 0x88382 ; ret
0x00002aaaaad5bcfb : je 0x88d0d ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x00002aaaaad5bee8 : je 0x88efa ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaad5d5db : je 0x8a5ed ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x00002aaaaad5d6e8 : je 0x8a6fa ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00002aaaaad5d865 : je 0x8a88c ; movsx eax, dl ; ret
0x00002aaaaad5d865 : je 0x8a88d ; movsx eax, dl ; ret
0x00002aaaaad5d860 : je 0x8a8b9 ; cmp dl, 3 ; je 0x8a891 ; movsx eax, dl ; ret
0x00002aaaaad5d972 : je 0x8a986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad5dba4 : je 0x8abae ; bsf eax, edx ; ret
0x00002aaaaad5dba4 : je 0x8abaf ; bsf eax, edx ; ret
0x00002aaaaad5dc4d : je 0x8ac65 ; bsf rax, rdx ; ret
0x00002aaaaad5dc4d : je 0x8ac66 ; bsf rax, rdx ; ret
0x00002aaaaad5dbec : je 0x8ac79 ; bsf rax, rdx ; ret
0x00002aaaaad5de1c : je 0x8ae45 ; bsf rax, rdx ; ret
0x00002aaaaad5de1c : je 0x8ae46 ; bsf rax, rdx ; ret
0x00002aaaaad5ddac : je 0x8ae59 ; bsf rax, rdx ; ret
0x00002aaaaad5df5b : je 0x8af6d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x00002aaaaad5f83b : je 0x8c84d ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x00002aaaaad5fb58 : je 0x8cb6a ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaad5fee8 : je 0x8cefa ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaad60eac : je 0x8df03 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaad61025 : je 0x8e038 ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x00002aaaaad61637 : je 0x8e649 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x00002aaaaad6179d : je 0x8e7b0 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x00002aaaaad617de : je 0x8e7f0 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x00002aaaaad61ccb : je 0x8ecdd ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x00002aaaaad61deb : je 0x8edfd ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x00002aaaaad6685d : je 0x93870 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x00002aaaaad66878 : je 0x9387d ; ret
0x00002aaaaad668a0 : je 0x938b2 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00002aaaaad6814a : je 0x9515e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaad68b3a : je 0x95b91 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaad68bf1 : je 0x95c09 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaad690c4 : je 0x960d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad7100a : je 0x9e003 ; ret
0x00002aaaaad71009 : je 0x9e004 ; ret
0x00002aaaaad7102e : je 0x9e023 ; ret
0x00002aaaaad7102a : je 0x9e027 ; cmp ecx, esi ; je 0x9e027 ; ret
0x00002aaaaad7107f : je 0x9e063 ; ret
0x00002aaaaad715fc : je 0x9e5d8 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaad784a9 : je 0xa54fa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaad79b36 : je 0xa6b87 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaad7b84a : je 0xa889b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaad7d05d : je 0xaa026 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaad7d035 : je 0xaa028 ; movzx eax, cl ; pop rbx ; ret
0x00002aaaaad7d05d : je 0xaa028 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaad7d182 : je 0xaa194 ; xor eax, eax ; ret
0x00002aaaaad7d17d : je 0xaa1a1 ; cmp eax, 2 ; je 0xaa199 ; xor eax, eax ; ret
0x00002aaaaad7d1cd : je 0xaa1b3 ; ret
0x00002aaaaad7d215 : je 0xaa1f3 ; ret
0x00002aaaaad7e12f : je 0xab121 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad7e369 : je 0xab389 ; mov cl, dl ; and cl, 0xf ; je 0xab399 ; ret
0x00002aaaaad7e370 : je 0xab392 ; ret
0x00002aaaaad7e385 : je 0xab3a6 ; add rax, 2 ; ret
0x00002aaaaad7e9b6 : je 0xaba26 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad7ec6f : je 0xabc8c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00002aaaaad7ecc5 : je 0xabcd8 ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00002aaaaad7ee88 : je 0xabe3d ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad7f7fe : je 0xac82d ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00002aaaaad7fab6 : je 0xacae5 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00002aaaaad7fd66 : je 0xacd95 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00002aaaaad7ff18 : je 0xacf25 ; test edx, edx ; jne 0xacf17 ; ret
0x00002aaaaad7ff17 : je 0xacf26 ; test edx, edx ; jne 0xacf18 ; ret
0x00002aaaaad8e147 : je 0xbb174 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaad8e1fc : je 0xbb22b ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaad8e2c5 : je 0xbb2f0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00002aaaaad8e6b6 : je 0xbb6e5 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaad90897 : je 0xbd8c2 ; cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaad955e3 : je 0xc263a ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaad999e0 : je 0xc69fe ; mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaad9e7f1 : je 0xcb7f7 ; call rax
0x00002aaaaad9e942 : je 0xcb94b ; call rdx
0x00002aaaaad9e9d3 : je 0xcb9dc ; call rax
0x00002aaaaad9ff0d : je 0xccf5c ; mov eax, 0x20 ; ret
0x00002aaaaad9ffc9 : je 0xccff9 ; mov eax, 1 ; ret
0x00002aaaaada195c : je 0xce977 ; call 0x8ab74
0x00002aaaaada930f : je 0xd6339 ; or byte ptr [rcx], ch ; ret
0x00002aaaaada9720 : je 0xd66b9 ; pop rbx ; ret
0x00002aaaaada9752 : je 0xd66ed ; pop rbx ; ret
0x00002aaaaada974d : je 0xd6713 ; and ebx, 8 ; je 0xd66f2 ; pop rbx ; ret
0x00002aaaaadab692 : je 0xd86a1 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaadad381 : je 0xda395 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadae9f9 : je 0xdba27 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00002aaaaadb3413 : je 0xe044f ; mov rdx, rax ; jmp 0xe03b3
0x00002aaaaadba8b8 : je 0xe78f4 ; xor eax, eax ; ret
0x00002aaaaadba917 : je 0xe7927 ; mov eax, 2 ; ret
0x00002aaaaadbb5d7 : je 0xe8603 ; enter 0xf41, -0x62 ; ret 0x844
0x00002aaaaadc2105 : je 0xef0e3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc2c3e : je 0xefc69 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00002aaaaadc6634 : je 0xf365f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00002aaaaadc836a : je 0xf5373 ; ret
0x00002aaaaadcde70 : je 0xfae8d ; neg eax ; pop rbx ; ret
0x00002aaaaadcefdf : je 0xfc009 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaadcf098 : je 0xfc0c2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaadcf7ee : je 0xfc7f5 ; ret
0x00002aaaaadd1663 : je 0xfe66e ; mov qword ptr [rax], rdx ; ret
0x00002aaaaadd1732 : je 0xfe727 ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaadd1ce5 : je 0xfed1c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaadd6d25 : jg 0x103cea ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x103d35 ; call rbx
0x00002aaaaae05452 : jg 0x13249c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132468 ; ret
0x00002aaaaae0b5b2 : jg 0x1385fc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c8 ; ret
0x00002aaaaae1fe80 : jg 0x14cefc ; loopne 0x14ce51 ; jp 0x14cf0d ; jp 0x14ce80 ; ret
0x00002aaaaae1ff2c : jg 0x14cf3d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae20370 : jg 0x14d3ec ; loopne 0x14d341 ; jp 0x14d3fd ; jp 0x14d370 ; ret
0x00002aaaaae2041c : jg 0x14d42d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae20713 : jg 0x14d78f ; loopne 0x14d6e4 ; jp 0x14d7a0 ; jp 0x14d713 ; ret
0x00002aaaaae207bc : jg 0x14d7cd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaae255d9 : jg 0x15262c ; ret
0x00002aaaaae2565f : jg 0x1526aa ; ret
0x00002aaaaae257d9 : jg 0x15282c ; ret 0x894c
0x00002aaaaae2585f : jg 0x1528aa ; ret 0x894c
0x00002aaaaae27fa9 : jg 0x154ffc ; ret
0x00002aaaaae2802f : jg 0x15507a ; ret
0x00002aaaaae281a9 : jg 0x1551fc ; ret 0x894c
0x00002aaaaae2822f : jg 0x15527a ; ret 0x894c
0x00002aaaaae2a979 : jg 0x1579cc ; ret
0x00002aaaaae2a9ff : jg 0x157a4a ; ret
0x00002aaaaae2ab79 : jg 0x157bcc ; ret 0x894c
0x00002aaaaae2abff : jg 0x157c4a ; ret 0x894c
0x00002aaaaae2cf48 : jg 0x159f99 ; loope 0x159f47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2cfbf : jg 0x15a00a ; ret 0xff2
0x00002aaaaae2cfd8 : jg 0x15a029 ; loop 0x159fd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d04f : jg 0x15a09a ; ret
0x00002aaaaae2d068 : jg 0x15a0b9 ; jrcxz 0x15a067 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d0f8 : jg 0x15a149 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d178 : jg 0x15a1c9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d1f8 : jg 0x15a249 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d278 : jg 0x15a2c9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d2f8 : jg 0x15a349 ; call 0x4f94b2fa
0x00002aaaaae2d378 : jg 0x15a3c9 ; jmp 0x4f94b37a
0x00002aaaaae2d4f8 : jg 0x15a549 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d578 : jg 0x15a5c9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d608 : jg 0x15a659 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d688 : jg 0x15a6d9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d6fc : jg 0x15a707 ; ret
0x00002aaaaae2d756 : jg 0x15a769 ; ret
0x00002aaaaae2d751 : jg 0x15a7a1 ; psllq mm1, qword ptr [rdi] ; jg 0x15a76e ; ret
0x00002aaaaae2d7c6 : jg 0x15a7d9 ; ret
0x00002aaaaae2d836 : jg 0x15a849 ; ret
0x00002aaaaae2d831 : jg 0x15a881 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaae2d8a6 : jg 0x15a8b9 ; ret
0x00002aaaaae2d8a1 : jg 0x15a8f1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2d916 : jg 0x15a929 ; ret
0x00002aaaaae2d911 : jg 0x15a961 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2d986 : jg 0x15a999 ; ret
0x00002aaaaae2d981 : jg 0x15a9d1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2d9f6 : jg 0x15aa09 ; ret
0x00002aaaaae2d9f1 : jg 0x15aa41 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2da66 : jg 0x15aa79 ; ret
0x00002aaaaae2da61 : jg 0x15aab1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dad6 : jg 0x15aae9 ; ret
0x00002aaaaae2db46 : jg 0x15ab59 ; ret
0x00002aaaaae2dbb6 : jg 0x15abc9 ; ret
0x00002aaaaae2dbb1 : jg 0x15ac01 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaae2dc26 : jg 0x15ac39 ; ret
0x00002aaaaae2dc21 : jg 0x15ac71 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dc96 : jg 0x15aca9 ; ret
0x00002aaaaae2dc91 : jg 0x15ace1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dd06 : jg 0x15ad19 ; ret
0x00002aaaaae2dd01 : jg 0x15ad51 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2dd76 : jg 0x15ad89 ; ret
0x00002aaaaae2dd71 : jg 0x15adc1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2fa18 : jg 0x15ca69 ; loope 0x15ca17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fa8f : jg 0x15cada ; ret 0xff2
0x00002aaaaae2faa8 : jg 0x15caf9 ; loop 0x15caa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fb1f : jg 0x15cb6a ; ret
0x00002aaaaae2fb38 : jg 0x15cb89 ; jrcxz 0x15cb37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fbc8 : jg 0x15cc19 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fc48 : jg 0x15cc99 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fcc8 : jg 0x15cd19 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fd48 : jg 0x15cd99 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fdc8 : jg 0x15ce19 ; call 0x4f94ddca
0x00002aaaaae2fe48 : jg 0x15ce99 ; jmp 0x4f94de4a
0x00002aaaaae2ffc8 : jg 0x15d019 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae30048 : jg 0x15d099 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae300d8 : jg 0x15d129 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae30158 : jg 0x15d1a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae301cc : jg 0x15d1d7 ; ret
0x00002aaaaae30226 : jg 0x15d239 ; ret
0x00002aaaaae30221 : jg 0x15d271 ; psllq mm1, qword ptr [rdi] ; jg 0x15d23e ; ret
0x00002aaaaae30296 : jg 0x15d2a9 ; ret
0x00002aaaaae30306 : jg 0x15d319 ; ret
0x00002aaaaae30301 : jg 0x15d351 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaae30376 : jg 0x15d389 ; ret
0x00002aaaaae30371 : jg 0x15d3c1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae303e6 : jg 0x15d3f9 ; ret
0x00002aaaaae303e1 : jg 0x15d431 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae30456 : jg 0x15d469 ; ret
0x00002aaaaae30451 : jg 0x15d4a1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae304c6 : jg 0x15d4d9 ; ret
0x00002aaaaae304c1 : jg 0x15d511 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae30536 : jg 0x15d549 ; ret
0x00002aaaaae30531 : jg 0x15d581 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae305a6 : jg 0x15d5b9 ; ret
0x00002aaaaae30616 : jg 0x15d629 ; ret
0x00002aaaaae30686 : jg 0x15d699 ; ret
0x00002aaaaae30681 : jg 0x15d6d1 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaae306f6 : jg 0x15d709 ; ret
0x00002aaaaae306f1 : jg 0x15d741 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae30766 : jg 0x15d779 ; ret
0x00002aaaaae30761 : jg 0x15d7b1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae307d6 : jg 0x15d7e9 ; ret
0x00002aaaaae307d1 : jg 0x15d821 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae30846 : jg 0x15d859 ; ret
0x00002aaaaae30841 : jg 0x15d891 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae32538 : jg 0x15f589 ; loope 0x15f537 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae325af : jg 0x15f5fa ; ret 0xff2
0x00002aaaaae325c8 : jg 0x15f619 ; loop 0x15f5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae3263f : jg 0x15f68a ; ret
0x00002aaaaae32658 : jg 0x15f6a9 ; jrcxz 0x15f657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae326e8 : jg 0x15f739 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae32768 : jg 0x15f7b9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae327e8 : jg 0x15f839 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae32868 : jg 0x15f8b9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae328e8 : jg 0x15f939 ; call 0x4f9508ea
0x00002aaaaae32968 : jg 0x15f9b9 ; jmp 0x4f95096a
0x00002aaaaae32ae8 : jg 0x15fb39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae32b68 : jg 0x15fbb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae32bf8 : jg 0x15fc49 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae32c78 : jg 0x15fcc9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae32cec : jg 0x15fcf7 ; ret
0x00002aaaaae32d46 : jg 0x15fd59 ; ret
0x00002aaaaae32d41 : jg 0x15fd91 ; psllq mm1, qword ptr [rdi] ; jg 0x15fd5e ; ret
0x00002aaaaae32db6 : jg 0x15fdc9 ; ret
0x00002aaaaae32e26 : jg 0x15fe39 ; ret
0x00002aaaaae32e21 : jg 0x15fe71 ; or eax, 0xf7f0ff3 ; ret
0x00002aaaaae32e96 : jg 0x15fea9 ; ret
0x00002aaaaae32e91 : jg 0x15fee1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae32f06 : jg 0x15ff19 ; ret
0x00002aaaaae32f01 : jg 0x15ff51 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae32f76 : jg 0x15ff89 ; ret
0x00002aaaaae32f71 : jg 0x15ffc1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae32fe6 : jg 0x15fff9 ; ret
0x00002aaaaae32fe1 : jg 0x160031 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae33056 : jg 0x160069 ; ret
0x00002aaaaae33051 : jg 0x1600a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae330c6 : jg 0x1600d9 ; ret
0x00002aaaaae33136 : jg 0x160149 ; ret
0x00002aaaaae331a6 : jg 0x1601b9 ; ret
0x00002aaaaae331a1 : jg 0x1601f1 ; add eax, 0xf7f0ff3 ; ret
0x00002aaaaae33216 : jg 0x160229 ; ret
0x00002aaaaae33211 : jg 0x160261 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae33286 : jg 0x160299 ; ret
0x00002aaaaae33281 : jg 0x1602d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae332f6 : jg 0x160309 ; ret
0x00002aaaaae332f1 : jg 0x160341 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae33366 : jg 0x160379 ; ret
0x00002aaaaae33361 : jg 0x1603b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae44d45 : jg 0x171d54 ; neg eax ; ret
0x00002aaaaae44e52 : jg 0x171e62 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaae44ef3 : jg 0x171f44 ; loopne 0x171f48 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaae67371 : jg 0x194374 ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaae689d1 : jg 0x1959d1 ; call rax
0x00002aaaaae68d41 : jg 0x195d2e ; jmp rsp
0x00002aaaaae6d8a9 : jg 0x19a8a7 ; call rsp
0x00002aaaaae76a19 : jg 0x1a3a0a ; call qword ptr [rcx]
0x00002aaaaae79d51 : jg 0x1a6d44 ; call qword ptr [rdi]
0x00002aaaaacf9cff : jg 0x26c8c ; ret 0x5c77
0x00002aaaaad077bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x00002aaaaad07c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x00002aaaaad08042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x00002aaaaad0dcb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaad1abbb : jg 0x47c29 ; xor eax, eax ; ret
0x00002aaaaad1ad7e : jg 0x47c8f ; pop rbx ; ret
0x00002aaaaad1d1f4 : jg 0x4a201 ; ret 0x5488
0x00002aaaaad2b395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00002aaaaad36dfd : jg 0x63d8a ; ret
0x00002aaaaad4a4f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad5feed : jg 0x8cec0 ; or eax, dword ptr [rax] ; ret
0x00002aaaaad616d2 : jg 0x8e724 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaad61877 : jg 0x8e890 ; jne 0x8e867 ; mov rax, rdi ; ret
0x00002aaaaad66937 : jg 0x9394e ; jne 0x93925 ; ret
0x00002aaaaad67e08 : jg 0x94df3 ; ret
0x00002aaaaad71fb4 : jg 0x9efc5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaad71fc8 : jg 0x9efd9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad7243a : jg 0x9f436 ; ret
0x00002aaaaad72707 : jg 0x9f718 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaad7271b : jg 0x9f72c ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad72b8d : jg 0x9fb89 ; ret
0x00002aaaaad72e54 : jg 0x9fe65 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaad72e68 : jg 0x9fe79 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaad732da : jg 0xa02d6 ; ret
0x00002aaaaad78276 : jg 0xa5281 ; ret
0x00002aaaaad78286 : jg 0xa5294 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad7829a : jg 0xa52a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad782b9 : jg 0xa52c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad782c9 : jg 0xa52d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad782d9 : jg 0xa52ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad782fa : jg 0xa5309 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad7831a : jg 0xa5329 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7833a : jg 0xa5349 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad7835a : jg 0xa536c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad7839d : jg 0xa53af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad783bd : jg 0xa53cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad783db : jg 0xa53eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad783fb : jg 0xa540b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad7841b : jg 0xa542b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad7843b : jg 0xa544b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad789c8 : jg 0xa59d3 ; jne 0xa6288 ; ret
0x00002aaaaad789ec : jg 0xa59f8 ; jne 0xa6288 ; ret
0x00002aaaaad78a0f : jg 0xa5a1c ; jne 0xa6288 ; ret
0x00002aaaaad78a2a : jg 0xa5a38 ; jne 0xa6288 ; ret
0x00002aaaaad78a4d : jg 0xa5a5c ; jne 0xa6288 ; ret
0x00002aaaaad78a72 : jg 0xa5a82 ; jne 0xa6288 ; ret
0x00002aaaaad78a90 : jg 0xa5aa1 ; jne 0xa6288 ; ret
0x00002aaaaad78aac : jg 0xa5abe ; jne 0xa6288 ; ret
0x00002aaaaad78acf : jg 0xa5ae2 ; jne 0xa6288 ; ret
0x00002aaaaad78af4 : jg 0xa5b08 ; jne 0xa6288 ; ret
0x00002aaaaad78b12 : jg 0xa5b27 ; jne 0xa6288 ; ret
0x00002aaaaad78b32 : jg 0xa5b48 ; jne 0xa6288 ; ret
0x00002aaaaad78b54 : jg 0xa5b6b ; jne 0xa6288 ; ret
0x00002aaaaad78b74 : jg 0xa5b8c ; jne 0xa6288 ; ret
0x00002aaaaad78b94 : jg 0xa5bad ; jne 0xa6288 ; ret
0x00002aaaaad78bae : jg 0xa5bc8 ; jne 0xa6288 ; ret
0x00002aaaaad78bd1 : jg 0xa5bec ; jne 0xa6288 ; ret
0x00002aaaaad78bf6 : jg 0xa5c12 ; jne 0xa6288 ; ret
0x00002aaaaad78c14 : jg 0xa5c31 ; jne 0xa6288 ; ret
0x00002aaaaad78c34 : jg 0xa5c52 ; jne 0xa6288 ; ret
0x00002aaaaad78c57 : jg 0xa5c76 ; jne 0xa6288 ; ret
0x00002aaaaad78c76 : jg 0xa5c96 ; jne 0xa6288 ; ret
0x00002aaaaad78c96 : jg 0xa5cb7 ; jne 0xa6288 ; ret
0x00002aaaaad78cb6 : jg 0xa5cd8 ; jne 0xa6288 ; ret
0x00002aaaaad78cd9 : jg 0xa5cfc ; jne 0xa6288 ; ret
0x00002aaaaad78d0e : jg 0xa5d32 ; jne 0xa6288 ; ret
0x00002aaaaad78d3c : jg 0xa5d61 ; jne 0xa6288 ; ret
0x00002aaaaad78d6c : jg 0xa5d92 ; jne 0xa6288 ; ret
0x00002aaaaad78d98 : jg 0xa5dbf ; jne 0xa6288 ; ret
0x00002aaaaad78dc8 : jg 0xa5df0 ; jne 0xa6288 ; ret
0x00002aaaaad78df8 : jg 0xa5e21 ; jne 0xa6288 ; ret
0x00002aaaaad78e28 : jg 0xa5e52 ; jne 0xa6288 ; ret
0x00002aaaaad78f46 : jg 0xa5f51 ; ret
0x00002aaaaad78f59 : jg 0xa5f67 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad78f6a : jg 0xa5f79 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad78f89 : jg 0xa5f97 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78f99 : jg 0xa5fa7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad78fac : jg 0xa5fbd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaad78fca : jg 0xa5fd9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad78fea : jg 0xa5ff9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7900a : jg 0xa6019 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad7902d : jg 0xa603f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaad7906d : jg 0xa607f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad7908d : jg 0xa609f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad790ab : jg 0xa60bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad790cb : jg 0xa60db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad790eb : jg 0xa60fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad7910b : jg 0xa611b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad79242 : jg 0xa624d ; ret
0x00002aaaaad79376 : jg 0xa63aa ; ret
0x00002aaaaad798e6 : jg 0xa68f5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaad798f6 : jg 0xa6908 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad79929 : jg 0xa693b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaad79949 : jg 0xa695b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaad79a6f : jg 0xa6acf ; or eax, 0x1c478d48 ; ret
0x00002aaaaad7a06b : jg 0xa7076 ; jne 0xa7a98 ; ret
0x00002aaaaad7a090 : jg 0xa709c ; jne 0xa7a98 ; ret
0x00002aaaaad7a0b3 : jg 0xa70c0 ; jne 0xa7a98 ; ret
0x00002aaaaad7a0ce : jg 0xa70dc ; jne 0xa7a98 ; ret
0x00002aaaaad7a0f1 : jg 0xa7100 ; jne 0xa7a98 ; ret
0x00002aaaaad7a116 : jg 0xa7126 ; jne 0xa7a98 ; ret
0x00002aaaaad7a134 : jg 0xa7145 ; jne 0xa7a98 ; ret
0x00002aaaaad7a150 : jg 0xa7162 ; jne 0xa7a98 ; ret
0x00002aaaaad7a173 : jg 0xa7186 ; jne 0xa7a98 ; ret
0x00002aaaaad7a198 : jg 0xa71ac ; jne 0xa7a98 ; ret
0x00002aaaaad7a1c6 : jg 0xa71db ; jne 0xa7a98 ; ret
0x00002aaaaad7a1e6 : jg 0xa71fc ; jne 0xa7a98 ; ret
0x00002aaaaad7a208 : jg 0xa721f ; jne 0xa7a98 ; ret
0x00002aaaaad7a238 : jg 0xa7250 ; jne 0xa7a98 ; ret
0x00002aaaaad7a268 : jg 0xa7281 ; jne 0xa7a98 ; ret
0x00002aaaaad7a292 : jg 0xa72ac ; jne 0xa7a98 ; ret
0x00002aaaaad7a2b5 : jg 0xa72d0 ; jne 0xa7a98 ; ret
0x00002aaaaad7a2da : jg 0xa72f6 ; jne 0xa7a98 ; ret
0x00002aaaaad7a308 : jg 0xa7325 ; jne 0xa7a98 ; ret
0x00002aaaaad7a338 : jg 0xa7356 ; jne 0xa7a98 ; ret
0x00002aaaaad7a36b : jg 0xa738a ; jne 0xa7a98 ; ret
0x00002aaaaad7a39a : jg 0xa73ba ; jne 0xa7a98 ; ret
0x00002aaaaad7a3ca : jg 0xa73eb ; jne 0xa7a98 ; ret
0x00002aaaaad7a3fa : jg 0xa741c ; jne 0xa7a98 ; ret
0x00002aaaaad7a42d : jg 0xa7450 ; jne 0xa7a98 ; ret
0x00002aaaaad7a462 : jg 0xa7486 ; jne 0xa7a98 ; ret
0x00002aaaaad7a490 : jg 0xa74b5 ; jne 0xa7a98 ; ret
0x00002aaaaad7a4c0 : jg 0xa74e6 ; jne 0xa7a98 ; ret
0x00002aaaaad7a4ec : jg 0xa7513 ; jne 0xa7a98 ; ret
0x00002aaaaad7a51c : jg 0xa7544 ; jne 0xa7a98 ; ret
0x00002aaaaad7a54c : jg 0xa7575 ; jne 0xa7a98 ; ret
0x00002aaaaad7a57c : jg 0xa75a6 ; jne 0xa7a98 ; ret
0x00002aaaaad7a726 : jg 0xa7735 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad7a739 : jg 0xa774b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaad7a779 : jg 0xa778b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaad7a799 : jg 0xa77ab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaad7a8bf : jg 0xa791f ; or eax, 0x1d478d48 ; ret
0x00002aaaaad7aa52 : jg 0xa7a5d ; ret
0x00002aaaaad7ab86 : jg 0xa7bbe ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaad7ab85 : jg 0xa7c0d ; xor byte ptr [rax - 0x73], cl ; ret
0x00002aaaaad7b356 : jg 0xa8361 ; ret
0x00002aaaaad7b366 : jg 0xa8374 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad7b37a : jg 0xa8389 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad7b399 : jg 0xa83a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7b3a9 : jg 0xa83b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad7b3b9 : jg 0xa83ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad7b3da : jg 0xa83e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad7b3fa : jg 0xa8409 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7b41a : jg 0xa8429 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad7b43a : jg 0xa844c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad7b47d : jg 0xa848f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad7b49d : jg 0xa84af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad7b4bb : jg 0xa84cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad7b4db : jg 0xa84eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad7b4fb : jg 0xa850b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad7b51b : jg 0xa852b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad7be26 : jg 0xa8e31 ; ret
0x00002aaaaad7be36 : jg 0xa8e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad7be4a : jg 0xa8e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad7be69 : jg 0xa8e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7be79 : jg 0xa8e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad7be89 : jg 0xa8e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad7beaa : jg 0xa8eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad7beca : jg 0xa8ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7beea : jg 0xa8ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad7bf0a : jg 0xa8f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad7bf4d : jg 0xa8f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad7bf6d : jg 0xa8f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad7bf8b : jg 0xa8f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad7bfab : jg 0xa8fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad7bfcb : jg 0xa8fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad7bfeb : jg 0xa8ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad7c196 : jg 0xa91a6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaad7c36f : jg 0xa93d0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaad7c38f : jg 0xa93f0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad7c406 : jg 0xa943f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7c405 : jg 0xa948e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7ca27 : jg 0xa9a37 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaad7ca1d : jg 0xa9a3d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaad7cff0 : jg 0xaa02d ; ret 0x2b77
0x00002aaaaad7e0b5 : jg 0xab0bd ; neg eax ; ret
0x00002aaaaad99cd7 : jg 0xc6caa ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad9fdac : jg 0xccdb2 ; add byte ptr [rax], al ; ret
0x00002aaaaad9fdfb : jg 0xcce04 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaad9fdfb : jg 0xcce05 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00002aaaaadb4417 : jg 0xe142c ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaadd27ef : jg 0xff7f9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaadd4dab : jge 0x101daf ; call rbx
0x00002aaaaadd4ed2 : jge 0x101ed6 ; call rbx
0x00002aaaaadd4ee0 : jge 0x101ee4 ; call rbx
0x00002aaaaadd5015 : jge 0x102019 ; call rbx
0x00002aaaaadd5185 : jge 0x102189 ; call rbx
0x00002aaaaadd5193 : jge 0x102197 ; call rbx
0x00002aaaaadd55e6 : jge 0x1025b1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaadd69a3 : jge 0x1039a7 ; call rbx
0x00002aaaaadd6acb : jge 0x103acf ; call rbx
0x00002aaaaadd6c0e : jge 0x103c12 ; call rbx
0x00002aaaaadd6d0f : jge 0x103d13 ; call rbx
0x00002aaaaadd6d2b : jge 0x103d2f ; call rbx
0x00002aaaaae0523f : jge 0x132253 ; call rax
0x00002aaaaae0665a : jge 0x133685 ; test rdi, rdi ; je 0x133677 ; call 0x1f8b1
0x00002aaaaae0b3bf : jge 0x1383d3 ; call rax
0x00002aaaaae0bad8 : jge 0x138aec ; call rax
0x00002aaaaae44f80 : jge 0x171f95 ; call r12
0x00002aaaaae465fc : jge 0x173602 ; call 0x1f8ac
0x00002aaaaae465eb : jge 0x173611 ; call 0x1f8ac
0x00002aaaaae465e2 : jge 0x173658 ; call 0x1f8ac
0x00002aaaaae5ab05 : jge 0x187afc ; jmp rdx
0x00002aaaaae5c410 : jge 0x1893ab ; cmc ; jmp qword ptr [rbx]
0x00002aaaaae6736d : jge 0x19436c ; jmp qword ptr [rax]
0x00002aaaaae682a1 : jge 0x1952a1 ; call rax
0x00002aaaaae6831d : jge 0x19531d ; jmp qword ptr [rdx]
0x00002aaaaae68321 : jge 0x195325 ; jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaae6849d : jge 0x19549d ; jmp rax
0x00002aaaaae703c9 : jge 0x19d3b6 ; call qword ptr [rax]
0x00002aaaaae75cad : jge 0x1a2cb5 ; add al, dh ; in eax, dx ; jmp rsi
0x00002aaaaae769a9 : jge 0x1a399a ; call qword ptr [rsi]
0x00002aaaaad0bf6e : jge 0x38f73 ; call r14
0x00002aaaaad1a27a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaad5213d : jge 0x7f13f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaad714df : jge 0x9e4e7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad7ef56 : jge 0xabf5b ; call r12
0x00002aaaaad9f42f : jge 0xcc3e1 ; call 0x1f8b0
0x00002aaaaada9a9a : jge 0xd6a73 ; mov edx, eax ; jmp 0xd6a7c
0x00002aaaaadc9c62 : jge 0xf6cb4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd1e6f : jge 0xfeeeb ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaadd5240 : jl 0x10226e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaadd97f4 : jl 0x106839 ; je 0x1067fd ; ret
0x00002aaaaaddb9c0 : jl 0x108971 ; sub eax, dword ptr [rax] ; je 0x1089cf ; pop rbp ; ret
0x00002aaaaadeb79b : jl 0x1187ca ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaadfaa79 : jl 0x127aa4 ; and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae05b07 : jl 0x132b32 ; or byte ptr [rax + 0x63], cl ; ret
0x00002aaaaae0cbf0 : jl 0x139c54 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae42c9b : jl 0x16fca4 ; neg eax ; ret
0x00002aaaaae5ab48 : jl 0x187ad1 ; jmp rdx
0x00002aaaaae5ab99 : jl 0x187b90 ; jmp rdx
0x00002aaaaae5abb1 : jl 0x187bac ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaae5cc15 : jl 0x189c0f ; jmp rdx
0x00002aaaaae5cc19 : jl 0x189c13 ; jmp rdx
0x00002aaaaae5cc1d : jl 0x189c17 ; jmp rdx
0x00002aaaaae5cc21 : jl 0x189c1b ; jmp rdx
0x00002aaaaae5cc2d : jl 0x189c27 ; jmp rax
0x00002aaaaae5cc35 : jl 0x189c2f ; jmp rdx
0x00002aaaaae5cc39 : jl 0x189c33 ; jmp rdx
0x00002aaaaae5cc3d : jl 0x189c37 ; jmp rdx
0x00002aaaaae5cc41 : jl 0x189c3b ; jmp rdx
0x00002aaaaae5cc45 : jl 0x189c3f ; jmp rdx
0x00002aaaaae5cc49 : jl 0x189c43 ; jmp rdx
0x00002aaaaae5cc4d : jl 0x189c47 ; jmp rdx
0x00002aaaaae5cc51 : jl 0x189c4b ; jmp rdx
0x00002aaaaae5cc55 : jl 0x189c4f ; jmp rdx
0x00002aaaaae5cc59 : jl 0x189c53 ; jmp rdx
0x00002aaaaae5cc5d : jl 0x189c57 ; jmp rdx
0x00002aaaaae5cc61 : jl 0x189c5b ; jmp rdx
0x00002aaaaae5cc65 : jl 0x189c5f ; jmp rdx
0x00002aaaaae5cc69 : jl 0x189c63 ; jmp rdx
0x00002aaaaae5cc6d : jl 0x189c6b ; lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaae5cc75 : jl 0x189c73 ; dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaae5cc7d : jl 0x189c77 ; jmp rdx
0x00002aaaaae5cc81 : jl 0x189c7b ; jmp rdx
0x00002aaaaae5cc85 : jl 0x189c7f ; jmp rdx
0x00002aaaaae5cc89 : jl 0x189c83 ; jmp rdx
0x00002aaaaae5cc8d : jl 0x189c87 ; jmp rdx
0x00002aaaaae5cc91 : jl 0x189c8b ; jmp rdx
0x00002aaaaae5cc95 : jl 0x189c8f ; jmp rdx
0x00002aaaaae5cc99 : jl 0x189c93 ; jmp rdx
0x00002aaaaae5cc9d : jl 0x189c97 ; jmp rdx
0x00002aaaaae5cca1 : jl 0x189c9b ; jmp rdx
0x00002aaaaae5cca5 : jl 0x189c9f ; jmp rdx
0x00002aaaaae5ccb1 : jl 0x189cab ; jmp rdx
0x00002aaaaae5ccb5 : jl 0x189caf ; jmp rdx
0x00002aaaaae5ccb9 : jl 0x189cb3 ; jmp rdx
0x00002aaaaae5ccbd : jl 0x189cb7 ; jmp rdx
0x00002aaaaae5ccd5 : jl 0x189ccf ; jmp qword ptr [rdx]
0x00002aaaaae5ccd9 : jl 0x189cd3 ; jmp qword ptr [rdx]
0x00002aaaaae5ccdd : jl 0x189cd7 ; jmp qword ptr [rdx]
0x00002aaaaae5cce1 : jl 0x189cdb ; jmp qword ptr [rdx]
0x00002aaaaae5ccf5 : jl 0x189cef ; jmp qword ptr [rdx]
0x00002aaaaae5ccf9 : jl 0x189cf3 ; jmp qword ptr [rdx]
0x00002aaaaae5ccfd : jl 0x189cf7 ; jmp qword ptr [rdx]
0x00002aaaaae5cd01 : jl 0x189cfb ; jmp qword ptr [rdx]
0x00002aaaaae5cd05 : jl 0x189cff ; jmp qword ptr [rdx]
0x00002aaaaae5cd09 : jl 0x189d03 ; jmp qword ptr [rdx]
0x00002aaaaae5cd0d : jl 0x189d07 ; jmp qword ptr [rdx]
0x00002aaaaae5cd11 : jl 0x189d0b ; jmp qword ptr [rdx]
0x00002aaaaae5cd15 : jl 0x189d0f ; jmp qword ptr [rdx]
0x00002aaaaae5cd19 : jl 0x189d13 ; jmp qword ptr [rdx]
0x00002aaaaae5cd1d : jl 0x189d17 ; jmp qword ptr [rdx]
0x00002aaaaae5cd21 : jl 0x189d1b ; jmp qword ptr [rdx]
0x00002aaaaae5cd25 : jl 0x189d1f ; jmp qword ptr [rdx]
0x00002aaaaae5cd29 : jl 0x189d23 ; jmp qword ptr [rdx]
0x00002aaaaae5cd3d : jl 0x189d37 ; jmp qword ptr [rdx]
0x00002aaaaae5cd41 : jl 0x189d3b ; jmp qword ptr [rdx]
0x00002aaaaae5cd45 : jl 0x189d3f ; jmp qword ptr [rdx]
0x00002aaaaae5cd49 : jl 0x189d43 ; jmp qword ptr [rdx]
0x00002aaaaae5cd4d : jl 0x189d47 ; jmp qword ptr [rdx]
0x00002aaaaae5cd51 : jl 0x189d4b ; jmp qword ptr [rdx]
0x00002aaaaae5cd55 : jl 0x189d4f ; jmp qword ptr [rdx]
0x00002aaaaae5cd59 : jl 0x189d53 ; jmp qword ptr [rdx]
0x00002aaaaae5cd5d : jl 0x189d57 ; jmp qword ptr [rdx]
0x00002aaaaae5cd61 : jl 0x189d5b ; jmp qword ptr [rdx]
0x00002aaaaae5cd65 : jl 0x189d5f ; jmp qword ptr [rdx]
0x00002aaaaae5cd71 : jl 0x189d6b ; jmp qword ptr [rdx]
0x00002aaaaae5cd75 : jl 0x189d6f ; jmp qword ptr [rdx]
0x00002aaaaae5cd79 : jl 0x189d73 ; jmp qword ptr [rdx]
0x00002aaaaae5cd7d : jl 0x189d77 ; jmp qword ptr [rdx]
0x00002aaaaae67369 : jl 0x19436c ; jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaae682a9 : jl 0x1952a9 ; call rax
0x00002aaaaae68325 : jl 0x195325 ; jmp qword ptr [rdx]
0x00002aaaaae68329 : jl 0x19532d ; jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaae684a5 : jl 0x1954a5 ; jmp rax
0x00002aaaaae6a219 : jl 0x19720b ; jmp rsp
0x00002aaaaae6b27c : jl 0x1982e2 ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaae6cf9c : jl 0x199fb3 ; add al, byte ptr [rax] ; je 0x19a00e ; stc ; call rsp
0x00002aaaaae6dcc4 : jl 0x19acd2 ; add dword ptr [rax], eax ; xor al, 0x73 ; sti ; call rsp
0x00002aaaaae6ffb4 : jl 0x19cfdd ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaae70371 : jl 0x19d35e ; call qword ptr [rcx]
0x00002aaaaae710b4 : jl 0x19e0ec ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaae710b4 : jl 0x19e0ee ; add byte ptr [rax], al ; clc ; ret
0x00002aaaaae74cb4 : jl 0x1a1d2a ; add byte ptr [rax], al ; cwde ; adc ebp, ebp ; call rsi
0x00002aaaaae78fb4 : jl 0x1a5f6d ; add byte ptr [rax], al ; js 0x1a5fdb ; cli ; call qword ptr [rax]
0x00002aaaaae7a2d0 : jl 0x1a72d7 ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaae7cbb4 : jl 0x1a9ba9 ; add byte ptr [rax], al ; or byte ptr [rbx], al ; call rdi
0x00002aaaaae7ffb4 : jl 0x1acfdd ; add dword ptr [rax], eax ; js 0x1acf54 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae831b4 : jl 0x1b020f ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae84fb4 : jl 0x1b202d ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaacf7366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00002aaaaacf7d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaacf810f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaacd55e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x00002aaaaacf8f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00002aaaaacf9869 : jl 0x26892 ; call rbx
0x00002aaaaacf9ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaacfabfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaacfd278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00002aaaaacd3452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00002aaaaad247b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00002aaaaad45a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaad4d78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad50b99 : jl 0x7dbd4 ; add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x00002aaaaad59e20 : jl 0x86e2a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00002aaaaad5bd00 : jl 0x88d7d ; add dword ptr [rax], eax ; ret
0x00002aaaaad67575 : jl 0x945a0 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00002aaaaad7156a : jl 0x9e5d5 ; add rax, rdi ; ret
0x00002aaaaad7157a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad7159a : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad715ba : jl 0x9e5d7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad71f34 : jl 0x9ef83 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad71f70 : jl 0x9efbf ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaad7216e : jl 0x9f1bd ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad722d5 : jl 0x9f324 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaad72437 : jl 0x9f486 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaad72687 : jl 0x9f6d6 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad726c3 : jl 0x9f712 ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaad728c1 : jl 0x9f910 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad72a28 : jl 0x9fa77 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaad72b8a : jl 0x9fbd9 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaad72dd4 : jl 0x9fe23 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad72e10 : jl 0x9fe5f ; adc dword ptr [rcx - 1], ebx ; ret
0x00002aaaaad7300e : jl 0xa005d ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad73175 : jl 0xa01c4 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaad732d7 : jl 0xa0326 ; adc dword ptr [rdi - 8], edi ; ret
0x00002aaaaad7c9dc : jl 0xa9a2b ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7c9fd : jl 0xa9a4c ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7ca10 : jl 0xa9a5f ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7cae5 : jl 0xa9b34 ; adc dword ptr [rsi - 1], edx ; ret
0x00002aaaaad7cb3d : jl 0xa9b8c ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaad7cbda : jl 0xa9c29 ; adc dword ptr [rsi + 7], edx ; ret
0x00002aaaaad92650 : jl 0xbf6a7 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaad96a39 : jl 0xc3a64 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaad9b700 : jl 0xc872e ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00002aaaaadb40b9 : jl 0xe10e5 ; add rax, rdx ; jmp rax
0x00002aaaaadb55d0 : jl 0xe25fb ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00002aaaaadb62e7 : jl 0xe3316 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaadc65cd : jl 0xf35fb ; mov qword ptr [r14], rbx ; call 0x1f8b0
0x00002aaaaadc67b5 : jl 0xf37e0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadc9a94 : jl 0xf6ac0 ; test al, 2 ; cmove eax, edx ; ret
0x00002aaaaadc9a94 : jl 0xf6ac1 ; test al, 2 ; cmove eax, edx ; ret
0x00002aaaaadcd57f : jl 0xfa587 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00002aaaaaddf98c : jle 0x10c9be ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaae0a0d8 : jle 0x1370f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaae1cb26 : jle 0x149a41 ; movsxd rax, ecx ; ret
0x00002aaaaae1cd6a : jle 0x149cab ; ret
0x00002aaaaae4667c : jle 0x173678 ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8b0
0x00002aaaaae5abc1 : jle 0x187bb8 ; call qword ptr [rdi]
0x00002aaaaae5abc1 : jle 0x187bbc ; call qword ptr [rdi]
0x00002aaaaae5b5f0 : jle 0x188646 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5cc71 : jle 0x189c6b ; jmp rdx
0x00002aaaaae5cc79 : jle 0x189c73 ; jmp rdx
0x00002aaaaae5cc78 : jle 0x189c74 ; jmp rdx
0x00002aaaaae68299 : jle 0x195299 ; call rax
0x00002aaaaae68319 : jle 0x19531d ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaae6919d : jle 0x1961a5 ; add byte ptr [rdi + rax - 0x16], al ; jmp rsp
0x00002aaaaae70411 : jle 0x19d3fe ; jmp qword ptr [rsi]
0x00002aaaaae78c31 : jle 0x1a5c23 ; jmp qword ptr [rcx]
0x00002aaaaae7ee01 : jle 0x1abe0f ; ret
0x00002aaaaacfd6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaacd6180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaad2f4f6 : jle 0x5c567 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaad3b4ec : jle 0x68479 ; ret
0x00002aaaaad5dbee : jle 0x8abf7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaad5dbee : jle 0x8abf8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaad9f64d : jle 0xcc65b ; ret
0x00002aaaaad9fe59 : jle 0xcce5f ; add byte ptr [rax], al ; ret
0x00002aaaaadd4272 : jmp 0x101238
0x00002aaaaadd49a9 : jmp 0x10190a
0x00002aaaaadde56e : jmp 0x10b596
0x00002aaaaadded14 : jmp 0x10ba61
0x00002aaaaadded44 : jmp 0x10bc7c
0x00002aaaaade0447 : jmp 0x10d36e
0x00002aaaaade0b60 : jmp 0x10db26
0x00002aaaaade4fa9 : jmp 0x111f6f
0x00002aaaaadeaab1 : jmp 0x117a76
0x00002aaaaadec7e2 : jmp 0x1195a9
0x00002aaaaadecba2 : jmp 0x119979
0x00002aaaaadee084 : jmp 0x11b0ad
0x00002aaaaadee0dc : jmp 0x11b107
0x00002aaaaadf8e8c : jmp 0x125e51
0x00002aaaaae046cf : jmp 0x131695
0x00002aaaaae08e31 : jmp 0x135e01
0x00002aaaaae09586 : jmp 0x1365ae
0x00002aaaaae0a97e : jmp 0x137988
0x00002aaaaae0f6cc : jmp 0x13c23c
0x00002aaaaae149a0 : jmp 0x14168c
0x00002aaaaae47c92 : jmp 0x174c94
0x00002aaaaae47c96 : jmp 0x174c98
0x00002aaaaae47ca6 : jmp 0x174ca8
0x00002aaaaae47caa : jmp 0x174cac
0x00002aaaaae54286 : jmp 0x181288
0x00002aaaaae5428a : jmp 0x18128c
0x00002aaaaae54356 : jmp 0x181358
0x00002aaaaae5435a : jmp 0x18135c
0x00002aaaaae5435e : jmp 0x181360
0x00002aaaaae54362 : jmp 0x181364
0x00002aaaaae54366 : jmp 0x181368
0x00002aaaaae5436a : jmp 0x18136c
0x00002aaaaae5436e : jmp 0x181370
0x00002aaaaae54372 : jmp 0x181374
0x00002aaaaae54376 : jmp 0x181378
0x00002aaaaae5437a : jmp 0x18137c
0x00002aaaaae558aa : jmp 0x1828e9
0x00002aaaaae565e9 : jmp 0x1835bc
0x00002aaaaae575e0 : jmp 0x184574
0x00002aaaaae575df : jmp 0x184575
0x00002aaaaae695b2 : jmp 0x1965b4
0x00002aaaaae696aa : jmp 0x1966ac
0x00002aaaaae696a9 : jmp 0x1966ad
0x00002aaaaae696a8 : jmp 0x1966ae
0x00002aaaaae696fa : jmp 0x1966fc
0x00002aaaaae69722 : jmp 0x196724
0x00002aaaaae72ac2 : jmp 0x19fac4
0x00002aaaaae72b12 : jmp 0x19fb14
0x00002aaaaae72e62 : jmp 0x19fe64
0x00002aaaaae72f1a : jmp 0x19ff1c
0x00002aaaaae72f9a : jmp 0x19ff9c
0x00002aaaaae6fdda : jmp 0x1b90e0
0x00002aaaaae46610 : jmp 0x1f8aa
0x00002aaaaacf2b07 : jmp 0x1facd
0x00002aaaaacf3496 : jmp 0x2045b
0x00002aaaaacf966c : jmp 0x2627e
0x00002aaaaacf9a1b : jmp 0x2682e
0x00002aaaaacffdd1 : jmp 0x2ce43
0x00002aaaaad0468a : jmp 0x30ed6
0x00002aaaaad0ab81 : jmp 0x37b8b
0x00002aaaaacd68b3 : jmp 0x3879
0x00002aaaaad0df85 : jmp 0x39c63093
0x00002aaaaad6ca5f : jmp 0x440b5ce9
0x00002aaaaad1b392 : jmp 0x483e4
0x00002aaaaadba690 : jmp 0x48d0ffe0
0x00002aaaaae05fe2 : jmp 0x48d2f272
0x00002aaaaad431a2 : jmp 0x48f58af5
0x00002aaaaad1cf72 : jmp 0x49fc4
0x00002aaaaad22267 : jmp 0x4f243
0x00002aaaaae2d37a : jmp 0x4f94b378
0x00002aaaaae2d379 : jmp 0x4f94b379
0x00002aaaaae2fe4a : jmp 0x4f94de48
0x00002aaaaae2fe49 : jmp 0x4f94de49
0x00002aaaaae3296a : jmp 0x4f950968
0x00002aaaaae32969 : jmp 0x4f950969
0x00002aaaaad29a95 : jmp 0x56320
0x00002aaaaad2e042 : jmp 0x5a1a8
0x00002aaaaad32811 : jmp 0x5baf2
0x00002aaaaad2f46c : jmp 0x5c431
0x00002aaaaad33852 : jmp 0x5ca99
0x00002aaaaad32b8a : jmp 0x5fb4f
0x00002aaaaad3345e : jmp 0x60423
0x00002aaaaad35809 : jmp 0x627ce
0x00002aaaaad3a498 : jmp 0x636fe
0x00002aaaaad38b8b : jmp 0x63702
0x00002aaaaad3bdaa : jmp 0x64b91
0x00002aaaaad38aca : jmp 0x64bf7
0x00002aaaaad38ac9 : jmp 0x64bf8
0x00002aaaaad3897b : jmp 0x653d3
0x00002aaaaad3c613 : jmp 0x6585f
0x00002aaaaad3cf5b : jmp 0x661e6
0x00002aaaaad45feb : jmp 0x72fb1
0x00002aaaaad45fea : jmp 0x72fb2
0x00002aaaaade9b24 : jmp 0x76d3a474
0x00002aaaaade9cd7 : jmp 0x76d3a627
0x00002aaaaad4e5de : jmp 0x7b5c0
0x00002aaaaae68d3a : jmp 0x842a47
0x00002aaaaae68d7a : jmp 0x852a87
0x00002aaaaad58955 : jmp 0x8597d
0x00002aaaaad5ab32 : jmp 0x87af8
0x00002aaaaad5acaa : jmp 0x87c6f
0x00002aaaaae68eaa : jmp 0x88f3b7
0x00002aaaaad5bfa4 : jmp 0x88f6a
0x00002aaaaad5c0f8 : jmp 0x890bd
0x00002aaaaad6859b : jmp 0x953f1
0x00002aaaaad68c4c : jmp 0x95c12
0x00002aaaaad68d98 : jmp 0x95d5d
0x00002aaaaad68f42 : jmp 0x95f07
0x00002aaaaad6cd94 : jmp 0x99d9e
0x00002aaaaad6d270 : jmp 0x9a27a
0x00002aaaaad6fe12 : jmp 0x9c7ba
0x00002aaaaad7084c : jmp 0x9c842
0x00002aaaaad6f931 : jmp 0x9c85f
0x00002aaaaad7084d : jmp 0x9d843
0x00002aaaaad7c77e : jmp 0xa9744
0x00002aaaaad7c84f : jmp 0xa9815
0x00002aaaaad7c8be : jmp 0xa9884
0x00002aaaaad80424 : jmp 0xad207
0x00002aaaaad80833 : jmp 0xad667
0x00002aaaaad82ff2 : jmp 0xafadd
0x00002aaaaad89c64 : jmp 0xb6cb1
0x00002aaaaad91b65 : jmp 0xbad93
0x00002aaaaad9163b : jmp 0xbe600
0x00002aaaaad919f8 : jmp 0xbea0a
0x00002aaaaad9257c : jmp 0xbf36d
0x00002aaaaad9499e : jmp 0xc17f0
0x00002aaaaad9a910 : jmp 0xc78d6
0x00002aaaaad9cc07 : jmp 0xc9ad6
0x00002aaaaad9f665 : jmp 0xcee2b
0x00002aaaaada75f1 : jmp 0xd45eb
0x00002aaaaadaa0cb : jmp 0xd7091
0x00002aaaaadb3d2d : jmp 0xe0d28
0x00002aaaaadd9dc4 : jmp 0xf106dcd
0x00002aaaaad197dd : jmp 0xfc6fef4
0x00002aaaaadd1a71 : jmp 0xfea78
0x00002aaaaadd2be4 : jmp 0xffc0e
0x00002aaaaae09b8a : jmp 0xffffffff80d662a2
0x00002aaaaae09e11 : jmp 0xffffffff80d66529
0x00002aaaaacd6186 : jmp 0xffffffff88c2d331
0x00002aaaaad90928 : jmp 0xffffffffbece6278
0x00002aaaaadfce32 : jmp 0xffffffffc098723d
0x00002aaaaadaca42 : jmp 0xffffffffc296db53
0x00002aaaaae0bd76 : jmp 0xffffffffc29d8d7b
0x00002aaaaad7dfc3 : jmp 0xffffffffc30aafcc
0x00002aaaaad1ba91 : jmp 0xffffffffc31413e6
0x00002aaaaad6c193 : jmp 0xffffffffc332da9d
0x00002aaaaad08bae : jmp 0xffffffffc38c5bc4
0x00002aaaaae12d23 : jmp 0xffffffffff142572
0x00002aaaaad7fabb : jmp 0xfffffffffffa540c
0x00002aaaaadd09cb : jmp qword ptr [r8]
0x00002aaaaae682cb : jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaae67353 : jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaae6735b : jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaae67363 : jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaae6736b : jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaae67373 : jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaae6737b : jmp qword ptr [rax + 0x20fffb83]
0x00002aaaaae67383 : jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaae68013 : jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaae67fd7 : jmp qword ptr [rax + 0x20fffc36]
0x00002aaaaae6801b : jmp qword ptr [rax + 0x20fffc38]
0x00002aaaaae67fdf : jmp qword ptr [rax + 0x20fffc39]
0x00002aaaaae68023 : jmp qword ptr [rax + 0x20fffc3b]
0x00002aaaaae67fe7 : jmp qword ptr [rax + 0x20fffc3c]
0x00002aaaaae6802b : jmp qword ptr [rax + 0x20fffc3e]
0x00002aaaaae67fef : jmp qword ptr [rax + 0x20fffc3f]
0x00002aaaaae68033 : jmp qword ptr [rax + 0x20fffc41]
0x00002aaaaae67ff7 : jmp qword ptr [rax + 0x20fffc42]
0x00002aaaaae6803b : jmp qword ptr [rax + 0x20fffc44]
0x00002aaaaae67fff : jmp qword ptr [rax + 0x20fffc45]
0x00002aaaaae68043 : jmp qword ptr [rax + 0x20fffc47]
0x00002aaaaae68007 : jmp qword ptr [rax + 0x20fffc48]
0x00002aaaaae67f7b : jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaae67f73 : jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaae67f6b : jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaae67f63 : jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaae67f5b : jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaae67f93 : jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaae68953 : jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaae5b56f : jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaae59e2f : jmp qword ptr [rax + 0x24]
0x00002aaaaae5b99f : jmp qword ptr [rax + 0x26fff452]
0x00002aaaaae59e3f : jmp qword ptr [rax + 0x29]
0x00002aaaaae59e4f : jmp qword ptr [rax + 0x2e]
0x00002aaaaae59e5f : jmp qword ptr [rax + 0x33]
0x00002aaaaae672c3 : jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaae68ce3 : jmp qword ptr [rax + rbp*2 + 0x68f40000]
0x00002aaaaae59e63 : jmp qword ptr [rax - 0x1f000fcc]
0x00002aaaaae59e53 : jmp qword ptr [rax - 0x1f000fd1]
0x00002aaaaae59e43 : jmp qword ptr [rax - 0x1f000fd6]
0x00002aaaaae59e33 : jmp qword ptr [rax - 0x1f000fdb]
0x00002aaaaae675ff : jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaae675df : jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaae5a407 : jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaae5a21b : jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaae5e587 : jmp qword ptr [rax - 0x4700059e]
0x00002aaaaad1906e : jmp qword ptr [rax]
0x00002aaaaae6c51b : jmp qword ptr [rbx + rax*8]
0x00002aaaaad31c58 : jmp qword ptr [rbx + rcx*4 + 1]
0x00002aaaaacd5563 : jmp qword ptr [rbx]
0x00002aaaaae5b843 : jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaae67403 : jmp qword ptr [rcx + 0x41fffda8]
0x00002aaaaae5c40b : jmp qword ptr [rcx]
0x00002aaaaae6da53 : jmp qword ptr [rdi + rdx*2 + 2]
0x00002aaaaae6da5b : jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaadc6cb3 : jmp qword ptr [rdi]
0x00002aaaaae6833b : jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaae68333 : jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaae6832b : jmp qword ptr [rdx + 0x22fffc7b]
0x00002aaaaae68323 : jmp qword ptr [rdx + 0x22fffc7c]
0x00002aaaaae6831b : jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaae6c4db : jmp qword ptr [rdx + rax*8 + 1]
0x00002aaaaadc6c32 : jmp qword ptr [rdx]
0x00002aaaaae5b6f3 : jmp qword ptr [rip + 0x22fff454]
0x00002aaaaae67b8f : jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaad0cf01 : jmp qword ptr [rsi + 0xf]
0x00002aaaaadaeacd : jmp qword ptr [rsi - 0x70]
0x00002aaaaadef30c : jmp qword ptr [rsi]
0x00002aaaaae6c85b : jmp qword ptr [rsp + rdx*8 + 1]
0x00002aaaaacd4b62 : jmp r10
0x00002aaaaae233cd : jmp r9
0x00002aaaaad92506 : jmp rax
0x00002aaaaae7388b : jmp rbx
0x00002aaaaacfee4a : jmp rcx
0x00002aaaaad3faa4 : jmp rdi
0x00002aaaaacd4b63 : jmp rdx
0x00002aaaaad018f4 : jmp rsi
0x00002aaaaacd5a71 : jmp rsp
0x00002aaaaadd5558 : jne 0x102540 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaadd814a : jne 0x105148 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaadd81ba : jne 0x1051b8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00002aaaaadde56c : jne 0x10b57e ; jmp 0x10b598
0x00002aaaaade513e : jne 0x112177 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaade6e55 : jne 0x113e69 ; cmp qword ptr [rdi], 0 ; je 0x113e71 ; ret
0x00002aaaaade6ec8 : jne 0x113ed7 ; mov eax, 1 ; ret
0x00002aaaaade6ef8 : jne 0x113f04 ; xor eax, eax ; ret
0x00002aaaaade6f28 : jne 0x113f34 ; xor eax, eax ; ret
0x00002aaaaade6f58 : jne 0x113f64 ; xor eax, eax ; ret
0x00002aaaaade6f88 : jne 0x113f94 ; xor eax, eax ; ret
0x00002aaaaade6fb8 : jne 0x113fc4 ; xor eax, eax ; ret
0x00002aaaaade6fe8 : jne 0x113ff4 ; xor eax, eax ; ret
0x00002aaaaade7018 : jne 0x114024 ; xor eax, eax ; ret
0x00002aaaaade7048 : jne 0x114054 ; xor eax, eax ; ret
0x00002aaaaade7078 : jne 0x114084 ; xor eax, eax ; ret
0x00002aaaaade70a8 : jne 0x1140b4 ; xor eax, eax ; ret
0x00002aaaaade70d8 : jne 0x1140e4 ; xor eax, eax ; ret
0x00002aaaaade7108 : jne 0x114114 ; xor eax, eax ; ret
0x00002aaaaade7138 : jne 0x114144 ; xor eax, eax ; ret
0x00002aaaaade7168 : jne 0x114174 ; xor eax, eax ; ret
0x00002aaaaade7198 : jne 0x1141a4 ; xor eax, eax ; ret
0x00002aaaaade71c8 : jne 0x1141d4 ; xor eax, eax ; ret
0x00002aaaaade71f8 : jne 0x114204 ; xor eax, eax ; ret
0x00002aaaaade7228 : jne 0x114234 ; xor eax, eax ; ret
0x00002aaaaade7258 : jne 0x114264 ; xor eax, eax ; ret
0x00002aaaaade7288 : jne 0x114294 ; xor eax, eax ; ret
0x00002aaaaade72e8 : jne 0x1142f4 ; xor eax, eax ; ret
0x00002aaaaade7318 : jne 0x114324 ; xor eax, eax ; ret
0x00002aaaaade7348 : jne 0x114354 ; xor eax, eax ; ret
0x00002aaaaade7378 : jne 0x114384 ; xor eax, eax ; ret
0x00002aaaaade73a8 : jne 0x1143b4 ; xor eax, eax ; ret
0x00002aaaaade73d8 : jne 0x1143e4 ; xor eax, eax ; ret
0x00002aaaaade7408 : jne 0x114414 ; xor eax, eax ; ret
0x00002aaaaade7438 : jne 0x114444 ; xor eax, eax ; ret
0x00002aaaaade7468 : jne 0x114474 ; xor eax, eax ; ret
0x00002aaaaade74b2 : jne 0x1144a9 ; pop rdx ; pop r10 ; ret
0x00002aaaaade75a5 : jne 0x1145b3 ; ret
0x00002aaaaade77b4 : jne 0x114793 ; ret
0x00002aaaaade77ef : jne 0x1147e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaade7947 : jne 0x1148e7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaade7f54 : jne 0x114f3f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaade7f83 : jne 0x114f7c ; xor eax, eax ; leave ; ret
0x00002aaaaade8984 : jne 0x11592e ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaade9cfa : jne 0x116d10 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaade9fc6 : jne 0x116f7a ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaadee082 : jne 0x11b095 ; jmp 0x11b0af
0x00002aaaaadee0da : jne 0x11b0ef ; jmp 0x11b109
0x00002aaaaadf2193 : jne 0x11f183 ; pop rbx ; ret
0x00002aaaaadf59cc : jne 0x1229a7 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaadf61f4 : jne 0x123244 ; mov eax, r8d ; ret
0x00002aaaaadf8a9d : jne 0x1259ea ; ret
0x00002aaaaadfab8c : jne 0x127b92 ; ret
0x00002aaaaadfabcc : jne 0x127bc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadffcfd : jne 0x12cd48 ; mov dword ptr [rsi], 0 ; ret
0x00002aaaaae005b5 : jne 0x12d5c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaae006bd : jne 0x12d657 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae05458 : jne 0x132462 ; ret
0x00002aaaaae09584 : jne 0x136596 ; jmp 0x1365b0
0x00002aaaaae0b337 : jne 0x138323 ; pop rbx ; ret
0x00002aaaaae0b5b8 : jne 0x1385c2 ; ret
0x00002aaaaae0ceb3 : jne 0x139eaa ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaae0e892 : jne 0x13b8a7 ; mov eax, 1 ; ret
0x00002aaaaae0e8d2 : jne 0x13b8e7 ; mov eax, 1 ; ret
0x00002aaaaae132bc : jne 0x1402cd ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae15a9b : jne 0x142a7e ; add rsp, 0x48 ; ret
0x00002aaaaae15a7d : jne 0x142ab0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaae15b45 : jne 0x142b58 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaae15bb8 : jne 0x142bd6 ; add rsp, 0x38 ; ret
0x00002aaaaae167c8 : jne 0x1437d4 ; xor eax, eax ; ret
0x00002aaaaae167f8 : jne 0x143804 ; xor eax, eax ; ret
0x00002aaaaae16828 : jne 0x143834 ; xor eax, eax ; ret
0x00002aaaaae16858 : jne 0x143864 ; xor eax, eax ; ret
0x00002aaaaae16888 : jne 0x143894 ; xor eax, eax ; ret
0x00002aaaaae168b8 : jne 0x1438c4 ; xor eax, eax ; ret
0x00002aaaaae3ac81 : jne 0x168236 ; ret
0x00002aaaaae41e1d : jne 0x16ee47 ; xor eax, eax ; ret
0x00002aaaaae41411 : jne 0x16ee4b ; xor eax, eax ; ret
0x00002aaaaae41439 : jne 0x16ee57 ; xor eax, eax ; ret
0x00002aaaaae42c5d : jne 0x16fc87 ; xor eax, eax ; ret
0x00002aaaaae42a41 : jne 0x16fc8b ; xor eax, eax ; ret
0x00002aaaaae42c91 : jne 0x16fc9a ; xor eax, eax ; ret
0x00002aaaaae42a67 : jne 0x16fc9e ; xor eax, eax ; ret
0x00002aaaaae42da5 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaae42d77 : jne 0x16fd36 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaae42d76 : jne 0x16fd37 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaae44504 : jne 0x171718 ; xor eax, eax ; ret
0x00002aaaaae44709 : jne 0x171729 ; xor eax, eax ; ret
0x00002aaaaae445b1 : jne 0x17172d ; xor eax, eax ; ret
0x00002aaaaae44721 : jne 0x17172e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaae44d36 : jne 0x171d44 ; xor eax, eax ; ret
0x00002aaaaae44c0d : jne 0x171d46 ; ret
0x00002aaaaae464fd : jne 0x1734ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae46550 : jne 0x173530 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae465f8 : jne 0x173620 ; mov rdi, qword ptr [r13] ; call 0x1f8b0
0x00002aaaaae4668d : jne 0x17367d ; pop rbx ; ret
0x00002aaaaae46735 : jne 0x17371b ; pop rbx ; ret
0x00002aaaaae468a8 : jne 0x1738b3 ; ret
0x00002aaaaae46989 : jne 0x17397c ; pop rbx ; ret
0x00002aaaaae6b655 : jne 0x19865e ; add byte ptr [rdx + rcx - 0xa], ah ; jmp rsp
0x00002aaaaae79a21 : jne 0x1a6a14 ; jmp qword ptr [rax]
0x00002aaaaad06bd4 : jne 0x33bb2 ; ret
0x00002aaaaad07ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x00002aaaaad07e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x00002aaaaad08308 : jne 0x35313 ; ret
0x00002aaaaacd6796 : jne 0x3774 ; ret 0x975
0x00002aaaaad0d61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0d6cb : jne 0x3a6d3 ; pop rbx ; ret
0x00002aaaaad1a058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad1b061 : jne 0x48047 ; mov eax, 1 ; ret
0x00002aaaaad1b087 : jne 0x4807c ; xor eax, eax ; ret
0x00002aaaaad1b1f9 : jne 0x481df ; mov eax, 1 ; ret
0x00002aaaaad1b21f : jne 0x48214 ; xor eax, eax ; ret
0x00002aaaaad1b4c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x00002aaaaad1bb7f : jne 0x48b76 ; mov rax, rdx ; ret
0x00002aaaaad1d6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x00002aaaaad1d775 : jne 0x4a755 ; mov rax, rsi ; ret
0x00002aaaaad3dcc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad44c01 : jne 0x71bf3 ; ret
0x00002aaaaad4769c : jne 0x746a3 ; pop rbx ; ret
0x00002aaaaad4b160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4d395 : jne 0x7a3a2 ; ret
0x00002aaaaad4df41 : jne 0x7af33 ; ret
0x00002aaaaad4ec61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4efd2 : jne 0x7bfbd ; pop rbx ; ret
0x00002aaaaad4f00c : jne 0x7c005 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaad4f846 : jne 0x7c83b ; ret
0x00002aaaaad508bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00002aaaaad508d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaad563dc : jne 0x833a3 ; ret
0x00002aaaaad58953 : jne 0x85965 ; jmp 0x8597f
0x00002aaaaad5ab8f : jne 0x87b45 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad5ba21 : jne 0x88a13 ; ret
0x00002aaaaad5bacb : jne 0x88ac3 ; ret
0x00002aaaaad5c14b : jne 0x8915d ; lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaad5dd13 : jne 0x8ad1e ; xor rax, rax ; ret
0x00002aaaaad5dfa7 : jne 0x8afb9 ; lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaad5fc5e : jne 0x8cc24 ; add rsp, 8 ; ret
0x00002aaaaad5fc81 : jne 0x8cc96 ; add rsp, 8 ; ret
0x00002aaaaad60f69 : jne 0x8dfc5 ; xor rax, rax ; ret
0x00002aaaaad60f29 : jne 0x8dfe9 ; xor rax, rax ; ret
0x00002aaaaad61011 : jne 0x8e024 ; lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaad6173a : jne 0x8e723 ; ret
0x00002aaaaad61923 : jne 0x8e80f ; mov rax, rdi ; ret
0x00002aaaaad61879 : jne 0x8e865 ; mov rax, rdi ; ret
0x00002aaaaad61e37 : jne 0x8ee49 ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaad61e9a : jne 0x8eeac ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaad64127 : jne 0x91139 ; lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaad6418a : jne 0x9119c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaad6688c : jne 0x9389f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaad669f8 : jne 0x938d0 ; ret
0x00002aaaaad66939 : jne 0x93923 ; ret
0x00002aaaaad68e96 : jne 0x95e81 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad68f40 : jne 0x95f4f ; jmp 0x95f09
0x00002aaaaad697d5 : jne 0x967cd ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad697a7 : jne 0x967dd ; mov rax, rdi ; pop rbx ; ret
0x00002aaaaad6987d : jne 0x96874 ; xor eax, eax ; ret
0x00002aaaaad6996d : jne 0x96964 ; pop rbx ; pop rbp ; ret
0x00002aaaaad6fe10 : jne 0x9ce09 ; jmp 0x9c7bc
0x00002aaaaad7084a : jne 0x9d843 ; jmp 0x9c844
0x00002aaaaad70f36 : jne 0x9df2b ; ret
0x00002aaaaad70f7a : jne 0x9df6b ; ret
0x00002aaaaad70fd4 : jne 0x9dfb3 ; ret
0x00002aaaaad7107a : jne 0x9e068 ; cmp r8d, ecx ; je 0x9e068 ; ret
0x00002aaaaad710b9 : jne 0x9e0ac ; xor eax, eax ; ret
0x00002aaaaad71112 : jne 0x9e0f4 ; xor eax, eax ; ret
0x00002aaaaad71172 : jne 0x9e165 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaad7122b : jne 0x9e220 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad712a9 : jne 0x9e291 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad714dd : jne 0x9e568 ; xor eax, eax ; ret
0x00002aaaaad7151a : jne 0x9e594 ; xor eax, eax ; ret
0x00002aaaaad71c5c : jne 0x9ec46 ; xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaad789ca : jne 0xa6286 ; ret
0x00002aaaaad7a06d : jne 0xa7a96 ; ret
0x00002aaaaad7c5b1 : jne 0xa95a2 ; ret
0x00002aaaaad7c661 : jne 0xa9652 ; ret
0x00002aaaaad7c7d1 : jne 0xa97c6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaad7c921 : jne 0xa9916 ; sub rax, 1 ; ret
0x00002aaaaad7d267 : jne 0xaa25b ; ret
0x00002aaaaad7e036 : jne 0xab0b2 ; ret
0x00002aaaaad7df5f : jne 0xab0b6 ; ret
0x00002aaaaad7df3e : jne 0xab0b8 ; xor eax, eax ; ret
0x00002aaaaad7e0e1 : jne 0xab0f4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaad7e4a3 : jne 0xab46b ; ret
0x00002aaaaad7e4e6 : jne 0xab4d9 ; mov dword ptr [rsi + 4], 0 ; ret
0x00002aaaaad7e5b9 : jne 0xab5a5 ; xor eax, eax ; ret
0x00002aaaaad7e99b : jne 0xab9f6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad7ea73 : jne 0xaba43 ; ret
0x00002aaaaad7ea5d : jne 0xaba53 ; ret
0x00002aaaaad7eb2c : jne 0xabb24 ; xor eax, eax ; ret
0x00002aaaaad7eb88 : jne 0xabb66 ; mov rax, rdi ; ret
0x00002aaaaad7ecb1 : jne 0xabcc4 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaad7ed65 : jne 0xabd72 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaad7eda3 : jne 0xabd9b ; ret
0x00002aaaaad7fedb : jne 0xace96 ; mov rax, rdx ; ret
0x00002aaaaad7ff1c : jne 0xacf13 ; ret
0x00002aaaaad8d673 : jne 0xba650 ; ret
0x00002aaaaad8d6a4 : jne 0xba69b ; ret
0x00002aaaaad92269 : jne 0xbf281 ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaad9fde1 : jne 0xccdae ; ret
0x00002aaaaad9fe27 : jne 0xccdb2 ; mov eax, 0x7d00 ; ret
0x00002aaaaad9fee9 : jne 0xccf12 ; ret
0x00002aaaaad9ff53 : jne 0xccf16 ; mov eax, 0x40 ; ret
0x00002aaaaad9fff0 : jne 0xccfcf ; xor eax, eax ; ret
0x00002aaaaad9ffec : jne 0xcd068 ; add byte ptr [rax], al ; jne 0xccfd3 ; xor eax, eax ; ret
0x00002aaaaada3a20 : jne 0xd0a04 ; ret
0x00002aaaaada3a58 : jne 0xd0a1d ; mov eax, 1 ; ret
0x00002aaaaada3a68 : jne 0xd0a33 ; mov eax, 1 ; ret
0x00002aaaaada3b2e : jne 0xd0aef ; mov eax, 1 ; ret
0x00002aaaaada3b46 : jne 0xd0b0c ; mov eax, 1 ; ret
0x00002aaaaada3cbe : jne 0xd0cb0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaada976d : jne 0xd66bd ; pop rbx ; ret
0x00002aaaaada976c : jne 0xd66be ; pop rbx ; ret
0x00002aaaaada971a : jne 0xd6719 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bf ; pop rbx ; ret
0x00002aaaaadaa0c9 : jne 0xd70a3 ; jmp 0xd7093
0x00002aaaaadc1d3b : jne 0xeed29 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadc9c61 : jne 0xf6ce9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadcdaef : jne 0xfaa96 ; mov edi, ebp ; call 0xf6d06
0x00002aaaaadd0511 : jne 0xfd4e5 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd06d2 : jne 0xfd6a5 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd2be2 : jne 0xffbf6 ; jmp 0xffc10
0x00002aaaaadfddcb : jno 0x12ada1 ; sub dword ptr [rax], eax ; pop rbx ; ret
0x00002aaaaae416ce : jno 0x16e6dd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae47c95 : jno 0x174c84 ; jmp rax
0x00002aaaaae47ca9 : jno 0x174c98 ; call rax
0x00002aaaaae67530 : jno 0x1944eb ; std ; call rcx
0x00002aaaaae68d19 : jno 0x195d06 ; jmp rsp
0x00002aaaaae6f0d1 : jno 0x19c0d2 ; jmp qword ptr [rdi]
0x00002aaaaae732e6 : jno 0x1a02f4 ; ret
0x00002aaaaae732e6 : jno 0x1a02fa ; ret
0x00002aaaaae7508d : jno 0x1a2095 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaae83009 : jno 0x1b0002 ; jmp qword ptr [rcx]
0x00002aaaaae83008 : jno 0x1b0003 ; jmp qword ptr [rcx]
0x00002aaaaae83039 : jno 0x1b0032 ; jmp qword ptr [rcx]
0x00002aaaaae83051 : jno 0x1b004a ; jmp qword ptr [rcx]
0x00002aaaaae85045 : jno 0x1b204e ; add byte ptr [rax], ch ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaacd51d7 : jno 0x2224 ; ret 0x1dd4
0x00002aaaaacd6957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaad1b984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad44271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaad615e9 : jno 0x8e5fd ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaad615e8 : jno 0x8e5fe ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaad615e9 : jno 0x8e5ff ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaad615e8 : jno 0x8e600 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00002aaaaad71f30 : jno 0x9ef39 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaad7216a : jno 0x9f173 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaad722d1 : jno 0x9f2e2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaad72436 : jno 0x9f4ba ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaad72683 : jno 0x9f68c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaad728bd : jno 0x9f8c6 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaad72a24 : jno 0x9fa35 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaad72b89 : jno 0x9fc0d ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaad72dd0 : jno 0x9fdd9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaad7300a : jno 0xa0013 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaad73171 : jno 0xa0182 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaad732d6 : jno 0xa035a ; adc qword ptr [rdi - 8], rdi ; ret
0x00002aaaaad7ed63 : jno 0xabd72 ; jne 0xabd74 ; mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaad7ed69 : jno 0xabd76 ; ret
0x00002aaaaad924ff : jno 0xbf48d ; or al, 0 ; add rax, rdi ; jmp rax
0x00002aaaaad939d5 : jno 0xc0962 ; ret 0xe283
0x00002aaaaad93a62 : jno 0xc09ef ; ret 0xe283
0x00002aaaaad93b2a : jno 0xc0ab7 ; ret 0xe283
0x00002aaaaad93b9a : jno 0xc0b27 ; ret 0xe283
0x00002aaaaad93ed3 : jno 0xc0e60 ; ret 0xe283
0x00002aaaaad93f4a : jno 0xc0ed7 ; ret 0xe283
0x00002aaaaad9419a : jno 0xc1127 ; ret 0xe283
0x00002aaaaad9422a : jno 0xc11b7 ; ret 0xe283
0x00002aaaaad94aa5 : jno 0xc1a9f ; ret
0x00002aaaaad95019 : jno 0xc2013 ; ret
0x00002aaaaad95068 : jno 0xc2062 ; ret
0x00002aaaaad95153 : jno 0xc20e0 ; ret 0xe283
0x00002aaaaad952eb : jno 0xc2278 ; ret 0xe283
0x00002aaaaad9537e : jno 0xc230b ; ret 0xe283
0x00002aaaaadb5428 : jno 0xe242e ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadf218e : jnp 0x11f1e0 ; test rdi, rdi ; jne 0x11f188 ; pop rbx ; ret
0x00002aaaaae07423 : jnp 0x13448f ; call rax
0x00002aaaaae07e43 : jnp 0x134e9f ; call rax
0x00002aaaaae54284 : jnp 0x1812ab ; jmp 0x18128a
0x00002aaaaae560c5 : jnp 0x183082 ; ret
0x00002aaaaae5c351 : jnp 0x18934a ; call rsi
0x00002aaaaae5c350 : jnp 0x18934b ; call rsi
0x00002aaaaae5cded : jnp 0x189de7 ; jmp qword ptr [rbx]
0x00002aaaaae682b1 : jnp 0x1952b1 ; call rax
0x00002aaaaae6832d : jnp 0x19532d ; jmp qword ptr [rdx]
0x00002aaaaae68331 : jnp 0x195335 ; jmp qword ptr [rdx + 0x22fffc7a]
0x00002aaaaae684ad : jnp 0x1954ad ; jmp rax
0x00002aaaaae6b78d : jnp 0x198796 ; add byte ptr [rsp - 0xa], dl ; call rsp
0x00002aaaaae6e601 : jnp 0x19b602 ; jmp qword ptr [rdx]
0x00002aaaaae835e1 : jnp 0x1b05da ; jmp qword ptr [rcx]
0x00002aaaaae835f9 : jnp 0x1b05f2 ; jmp qword ptr [rcx]
0x00002aaaaae835f8 : jnp 0x1b05f3 ; jmp qword ptr [rcx]
0x00002aaaaae83611 : jnp 0x1b060a ; jmp qword ptr [rcx]
0x00002aaaaae83629 : jnp 0x1b0622 ; jmp qword ptr [rcx]
0x00002aaaaad1a055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadceb58 : jnp 0x481bdfab ; add esp, 0x18 ; ret
0x00002aaaaad56561 : jnp 0x83563 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaad90fb0 : jnp 0xbdfeb ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc9
0x00002aaaaadc6f81 : jnp 0xf3fdb ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaadfa45d : jns 0x12746a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00002aaaaae551ce : jns 0x182164 ; ret 0xf869
0x00002aaaaae551cd : jns 0x182165 ; ret 0xf869
0x00002aaaaae575de : jns 0x184635 ; jmp 0x184576
0x00002aaaaae5aa79 : jns 0x187a70 ; jmp rdx
0x00002aaaaae5aa7d : jns 0x187a74 ; jmp rdx
0x00002aaaaae5aa81 : jns 0x187a78 ; jmp rdx
0x00002aaaaae5aa85 : jns 0x187a7c ; jmp rdx
0x00002aaaaae5aa89 : jns 0x187a80 ; jmp rdx
0x00002aaaaae5aa8d : jns 0x187a84 ; jmp rdx
0x00002aaaaae5aa91 : jns 0x187a88 ; jmp rdx
0x00002aaaaae5aa95 : jns 0x187a8c ; jmp rdx
0x00002aaaaae5aa99 : jns 0x187a90 ; jmp rdx
0x00002aaaaae5aa9d : jns 0x187a94 ; jmp rdx
0x00002aaaaae5aaa1 : jns 0x187a98 ; jmp rdx
0x00002aaaaae5aaa5 : jns 0x187a9c ; jmp rdx
0x00002aaaaae5aaa9 : jns 0x187aa0 ; jmp rdx
0x00002aaaaae5aaad : jns 0x187aa4 ; jmp rdx
0x00002aaaaae5aab1 : jns 0x187aa8 ; jmp rdx
0x00002aaaaae5aab5 : jns 0x187aac ; jmp rdx
0x00002aaaaae5aab9 : jns 0x187ab0 ; jmp rdx
0x00002aaaaae5aabd : jns 0x187ab4 ; jmp rdx
0x00002aaaaae5aac1 : jns 0x187ab8 ; jmp rdx
0x00002aaaaae5aac5 : jns 0x187abc ; jmp rdx
0x00002aaaaae5aac9 : jns 0x187ac0 ; jmp rdx
0x00002aaaaae5aacd : jns 0x187ac4 ; jmp rdx
0x00002aaaaae5aad1 : jns 0x187ac8 ; jmp rdx
0x00002aaaaae5aad5 : jns 0x187acc ; jmp rdx
0x00002aaaaae5aad9 : jns 0x187ad0 ; jmp rdx
0x00002aaaaae5aadd : jns 0x187ad4 ; jmp rdx
0x00002aaaaae5ab09 : jns 0x187b00 ; jmp rdx
0x00002aaaaae5ab0d : jns 0x187b04 ; jmp rdx
0x00002aaaaae5ab11 : jns 0x187b0c ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaae5ab21 : jns 0x187b18 ; jmp rdx
0x00002aaaaae5ab4d : jns 0x187b44 ; jmp rdx
0x00002aaaaae5ab51 : jns 0x187b48 ; jmp rdx
0x00002aaaaae5ab55 : jns 0x187b4c ; jmp rdx
0x00002aaaaae5ab59 : jns 0x187b50 ; jmp rdx
0x00002aaaaae5ab5d : jns 0x187b54 ; jmp rdx
0x00002aaaaae5ab9d : jns 0x187b98 ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaae5af34 : jns 0x187ee3 ; jmp qword ptr [rdi]
0x00002aaaaae5b770 : jns 0x1887c7 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5ccc9 : jns 0x189cc3 ; jmp qword ptr [rdx]
0x00002aaaaae5ccd1 : jns 0x189ccb ; jmp qword ptr [rdx]
0x00002aaaaae5cd39 : jns 0x189d33 ; jmp qword ptr [rdx]
0x00002aaaaae5cd38 : jns 0x189d34 ; jmp qword ptr [rdx]
0x00002aaaaae5cd6d : jns 0x189d67 ; jmp qword ptr [rdx]
0x00002aaaaae67361 : jns 0x194364 ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaae6833d : jns 0x19533d ; jmp qword ptr [rdx]
0x00002aaaaae68401 : jns 0x195405 ; push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaae684bd : jns 0x1954bd ; jmp rax
0x00002aaaaae70211 : jns 0x19d1fe ; jmp qword ptr [rcx]
0x00002aaaaae70210 : jns 0x19d1ff ; jmp qword ptr [rcx]
0x00002aaaaae70241 : jns 0x19d22e ; call qword ptr [rdx]
0x00002aaaaae70259 : jns 0x19d246 ; call qword ptr [rdx]
0x00002aaaaae76849 : jns 0x1a383a ; jmp qword ptr [rcx]
0x00002aaaaacd4b2d : jns 0x1b38 ; ret
0x00002aaaaacf3490 : jns 0x20380 ; jmp 0x20461
0x00002aaaaacfcae4 : jns 0x29d4cceb ; ret
0x00002aaaaacd5be3 : jns 0x2bb1 ; clc ; ret
0x00002aaaaacd6267 : jns 0x3242 ; ret 0x5a51
0x00002aaaaacd68ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaad5b9db : jns 0x8898a ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaad71f37 : jns 0x9ef3a ; ret
0x00002aaaaad72171 : jns 0x9f174 ; ret
0x00002aaaaad722d8 : jns 0x9f2e3 ; ret
0x00002aaaaad7268a : jns 0x9f68d ; ret
0x00002aaaaad728c4 : jns 0x9f8c7 ; ret
0x00002aaaaad72a2b : jns 0x9fa36 ; ret
0x00002aaaaad72dd7 : jns 0x9fdda ; ret
0x00002aaaaad73011 : jns 0xa0014 ; ret
0x00002aaaaad73178 : jns 0xa0183 ; ret
0x00002aaaaadaa0c6 : jns 0xd70d6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7096
0x00002aaaaadd0074 : jns 0xfd082 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadd1746 : jns 0xfe77c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaae0a170 : jns 0xffffffffc496ba57 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad7c096 : jns 0xffffffffed3a93fc ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaad7c0f8 : jns 0xffffffffed3a985e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaad7c118 : jns 0xffffffffed3a997e ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaae05763 : jo 0x1327c9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaae09272 : jo 0x1362d1 ; ret
0x00002aaaaae465bb : jo 0x17360b ; mov edi, dword ptr [rbx] ; call 0x1f8ae
0x00002aaaaae56244 : jo 0x1832be ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaae5a218 : jo 0x18720c ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaae5a404 : jo 0x18740e ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaae6721c : jo 0x194227 ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaae67328 : jo 0x194395 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaae677c0 : jo 0x194799 ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaae67938 : jo 0x194936 ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae6798c : jo 0x194991 ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaae67b04 : jo 0x194b2e ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaae67b18 : jo 0x194b34 ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae687c0 : jo 0x195764 ; cld ; jmp rax
0x00002aaaaae689c4 : jo 0x195967 ; cld ; jmp rax
0x00002aaaaae74f0b : jo 0x1a1f16 ; mov ebp, 0x41380e0a ; ret
0x00002aaaaae78a79 : jo 0x1a5a6b ; jmp qword ptr [rdx]
0x00002aaaaae79990 : jo 0x1a6a08 ; out dx, eax ; call rax
0x00002aaaaae7d0e0 : jo 0x1aa0fa ; jmp qword ptr [rcx]
0x00002aaaaae7e4f8 : jo 0x1ab506 ; ret
0x00002aaaaae80e60 : jo 0x1ade44 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82f01 : jo 0x1afefa ; jmp qword ptr [rcx]
0x00002aaaaae82f19 : jo 0x1aff12 ; jmp qword ptr [rcx]
0x00002aaaaae82f31 : jo 0x1aff2a ; jmp qword ptr [rcx]
0x00002aaaaae82f30 : jo 0x1aff2b ; jmp qword ptr [rcx]
0x00002aaaaae82f79 : jo 0x1aff72 ; jmp qword ptr [rcx]
0x00002aaaaae82f91 : jo 0x1aff8a ; jmp qword ptr [rcx]
0x00002aaaaae837b0 : jo 0x1b073a ; cmc ; jmp rax
0x00002aaaaae84f55 : jo 0x1b1f5e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84f85 : jo 0x1b1f8e ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84f84 : jo 0x1b1f8f ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84fb5 : jo 0x1b1fbe ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84ffd : jo 0x1b2006 ; add al, ah ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae85015 : jo 0x1b201e ; add al, bh ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae8502d : jo 0x1b2036 ; add byte ptr [rax], dl ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaacfc2a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad010b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad010b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad14923 : jo 0x418b7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x00002aaaaad18096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad33dbc : jo 0x60d49 ; ret
0x00002aaaaad44c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad48ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaad48ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaad4c834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7f6e4 : jo 0xac732 ; mov edi, ebp ; call rbx
0x00002aaaaad7fc6e : jo 0xaccc0 ; mov edi, esp ; call rbx
0x00002aaaaad8c9cc : jo 0xb99e0 ; xchg eax, ebp ; ret 0x8b4c
0x00002aaaaad9257a : jo 0xbf583 ; jmp 0xbf36f
0x00002aaaaadb5425 : jo 0xe2417 ; push rbp ; jno 0xe2431 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadb6288 : jo 0xe327a ; loop 0xe330c ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaade5735 : jp 0x11278c ; mov rsi, rdx ; call rax
0x00002aaaaae00bdd : jp 0x12dc3d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaae04742 : jp 0x13174e ; ret
0x00002aaaaae074b2 : jp 0x1344be ; ret
0x00002aaaaae074ca : jp 0x1344d6 ; ret
0x00002aaaaae07d02 : jp 0x134d0e ; ret
0x00002aaaaae07d1a : jp 0x134d26 ; ret
0x00002aaaaae07d4a : jp 0x134d56 ; ret
0x00002aaaaae1fe86 : jp 0x14ce7a ; ret
0x00002aaaaae1fee9 : jp 0x14cedd ; ret
0x00002aaaaae1fe7f : jp 0x14cf09 ; jb 0x14ce6c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae1fe84 : jp 0x14cf09 ; jp 0x14ce7c ; ret
0x00002aaaaae20376 : jp 0x14d36a ; ret
0x00002aaaaae203d9 : jp 0x14d3cd ; ret
0x00002aaaaae2036f : jp 0x14d3f9 ; jb 0x14d35c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae20374 : jp 0x14d3f9 ; jp 0x14d36c ; ret
0x00002aaaaae20719 : jp 0x14d70d ; ret
0x00002aaaaae20779 : jp 0x14d76d ; ret
0x00002aaaaae20712 : jp 0x14d79c ; jb 0x14d6ff ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae20717 : jp 0x14d79c ; jp 0x14d70f ; ret
0x00002aaaaae5cc09 : jp 0x189c03 ; jmp rdx
0x00002aaaaae5cc11 : jp 0x189c0b ; jmp rdx
0x00002aaaaae5ccad : jp 0x189ca7 ; jmp rdx
0x00002aaaaae5ccf1 : jp 0x189ceb ; jmp qword ptr [rdx]
0x00002aaaaae5cd31 : jp 0x189d2b ; jmp qword ptr [rdx]
0x00002aaaaae67365 : jp 0x194364 ; jmp qword ptr [rax]
0x00002aaaaae682b9 : jp 0x1952b9 ; call rax
0x00002aaaaae68335 : jp 0x195335 ; jmp qword ptr [rdx]
0x00002aaaaae68339 : jp 0x19533d ; jmp qword ptr [rdx + 0x22fffc79]
0x00002aaaaae684b5 : jp 0x1954b5 ; jmp rax
0x00002aaaaae83551 : jp 0x1b054a ; jmp qword ptr [rcx]
0x00002aaaaae83569 : jp 0x1b0562 ; jmp qword ptr [rcx]
0x00002aaaaae83581 : jp 0x1b057a ; jmp qword ptr [rcx]
0x00002aaaaae83599 : jp 0x1b0592 ; jmp qword ptr [rcx]
0x00002aaaaae8e771 : jp 0x1bb76d ; call qword ptr [rcx]
0x00002aaaaacf6653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x00002aaaaacd5561 : jp 0x2545 ; jmp qword ptr [rbx]
0x00002aaaaacd5560 : jp 0x2546 ; jmp qword ptr [rbx]
0x00002aaaaacffb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaacd6956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaad45fe9 : jp 0x7302e ; jmp 0x72fb3
0x00002aaaaad61805 : jp 0x8e7ff ; ret 0x7401
0x00002aaaaad8da91 : jp 0xbaaa6 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaade7503 : jrcxz 0x1144c8 ; cmp r11d, 0xa ; je 0x114514 ; ret
0x00002aaaaae0cb9f : jrcxz 0x139be4 ; call rsi
0x00002aaaaae2d06a : jrcxz 0x15a065 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d069 : jrcxz 0x15a066 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fb3a : jrcxz 0x15cb35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fb39 : jrcxz 0x15cb36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae3265a : jrcxz 0x15f655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae32659 : jrcxz 0x15f656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae55025 : jrcxz 0x18207f ; ret
0x00002aaaaae67629 : jrcxz 0x19462c ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaae67689 : jrcxz 0x194688 ; jmp qword ptr [rax]
0x00002aaaaae6c4d9 : jrcxz 0x1994d6 ; jmp qword ptr [rdx + rax*8 + 1]
0x00002aaaaae7a081 : jrcxz 0x1a7074 ; call rsp
0x00002aaaaae80ff1 : jrcxz 0x1adfe9 ; call qword ptr [rsi]
0x00002aaaaae80ff0 : jrcxz 0x1adfea ; call qword ptr [rsi]
0x00002aaaaae81009 : jrcxz 0x1ae001 ; jmp qword ptr [rcx]
0x00002aaaaae81008 : jrcxz 0x1ae002 ; jmp qword ptr [rcx]
0x00002aaaaae87f01 : jrcxz 0x1b4efb ; jmp qword ptr [rdi]
0x00002aaaaad00cbe : jrcxz 0x2dcda ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad23ebc : jrcxz 0x50f35 ; ret 0x8945
0x00002aaaaad26b2e : jrcxz 0x53ba7 ; ret
0x00002aaaaad297c8 : jrcxz 0x567c2 ; ret 0xf40
0x00002aaaaad96c1f : jrcxz 0xc3c38 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00002aaaaada309e : jrcxz 0xd008b ; ret 0xfffb
0x00002aaaaada9750 : jrcxz 0xd675f ; je 0xd66ef ; pop rbx ; ret
0x00002aaaaadc1d3c : jrcxz 0xeed8e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadd814f : js 0x1051af ; pop rbp ; ret
0x00002aaaaadd81bf : js 0x10521f ; pop rbp ; ret
0x00002aaaaaddc8a8 : js 0x109834 ; loopne 0x1098bb ; movzx eax, ax ; ret
0x00002aaaaaddc9d8 : js 0x109961 ; loopne 0x1099e1 ; ret
0x00002aaaaaddca68 : js 0x1099f4 ; loopne 0x109a75 ; movzx eax, ax ; ret
0x00002aaaaaddcd68 : js 0x109cf4 ; loopne 0x109d77 ; movzx eax, ax ; ret
0x00002aaaaaddd241 : js 0x10a1cd ; loopne 0x10a254 ; movzx eax, ax ; ret
0x00002aaaaaddd341 : js 0x10a2ca ; loopne 0x10a34a ; ret
0x00002aaaaaddd3c1 : js 0x10a34d ; loopne 0x10a3ce ; movzx eax, ax ; ret
0x00002aaaaaddd641 : js 0x10a5cd ; loopne 0x10a650 ; movzx eax, ax ; ret
0x00002aaaaadeb7c4 : js 0x1187d9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00002aaaaadeb844 : js 0x118857 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaae130b3 : js 0x1400c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae5ab04 : js 0x187b86 ; jmp rdx
0x00002aaaaae682c9 : js 0x1952cd ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaae68405 : js 0x195405 ; jmp rsp
0x00002aaaaae68485 : js 0x195485 ; call rax
0x00002aaaaae6a1f9 : js 0x1971eb ; call rsp
0x00002aaaaae6fdd8 : js 0x19ce34 ; jmp 0x1b90e2
0x00002aaaaae78fb8 : js 0x1a5fd7 ; cli ; call qword ptr [rax]
0x00002aaaaae7b788 : js 0x1a87b2 ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae7b808 : js 0x1a8832 ; int1 ; call qword ptr [rcx]
0x00002aaaaae7c988 : js 0x1a9986 ; int1 ; call rsi
0x00002aaaaae7ffb8 : js 0x1acf50 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae80658 : js 0x1ad605 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae83188 : js 0x1b0200 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83338 : js 0x1b03b3 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae833e9 : js 0x1b03e2 ; jmp qword ptr [rbx]
0x00002aaaaae83628 : js 0x1b06a8 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaacf8b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00002aaaaad00d11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x00002aaaaad00d51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x00002aaaaad00df1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x00002aaaaad00ed1 : js 0x2de5a ; loopne 0x2deda ; ret
0x00002aaaaad00f4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x00002aaaaad00f5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x00002aaaaad00f9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x00002aaaaad0103a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x00002aaaaad010c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad010c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaacd5f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaad076be : js 0x346f0 ; call 0x1f8b0
0x00002aaaaad48add : js 0x75aeb ; ret
0x00002aaaaad57c68 : js 0x84c73 ; ret
0x00002aaaaada0047 : js 0xcd053 ; ret
0x00002aaaaadb3e96 : js 0xe0ea9 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00002aaaaadb628b : js 0xe328c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaadb7558 : js 0xe456b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaadc833c : js 0xf538e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaadc8cd9 : js 0xf5d2b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaadcf30b : js 0xfc2dd ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd1632 : js 0xfe645 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaad7c038 : js 0xffffffffed3a929e ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad7c066 : js 0xffffffffed3a94cc ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c0b8 : js 0xffffffffed3a991e ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaacf7c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaae87efd : lahf ; add dword ptr [rax], eax ; and bl, 0xf6 ; jmp qword ptr [rdi]
0x00002aaaaadd21a8 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaae6897d : lahf ; cld ; call qword ptr [rax]
0x00002aaaaae687c1 : lahf ; cld ; jmp rax
0x00002aaaaae687bd : lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaae689c1 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaae57703 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaadcdaf0 : lahf ; mov edi, ebp ; call 0xf6d05
0x00002aaaaade8985 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaae1dadd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad1f5b6 : lahf ; ret
0x00002aaaaad4671e : lahf ; ret 0x3841
0x00002aaaaadd52be : lahf ; ret 0x3845
0x00002aaaaada7fba : lahf ; ret 0x82eb
0x00002aaaaae54f5d : lahf ; ret 0x871e
0x00002aaaaadefbbf : lahf ; ret 0xc2e9
0x00002aaaaad32c5c : lahf ; ret 0xd129
0x00002aaaaad34f72 : lahf ; ret 0xd329
0x00002aaaaad32ebc : lahf ; ret 0xd629
0x00002aaaaadd3f83 : lahf ; ret 0xe883
0x00002aaaaad7cfe9 : lahf ; ret 0xea81
0x00002aaaaae07112 : lahf ; scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x00002aaaaae1e16d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaadd4407 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaae59e07 : lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaae5bddb : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00002aaaaae5bde7 : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x00002aaaaae5be5f : lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x00002aaaaae5b62b : lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaadf5615 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaadef535 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00002aaaaad43b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00002aaaaae5aaff : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b02 ; jmp rdx
0x00002aaaaae5aafe : lcall ptr [rbp + 0x78fff37a] ; jge 0x187b03 ; jmp rdx
0x00002aaaaae696f3 : lcall ptr [rbp + rbx*4 + 0x50240000] ; jmp 0x196703
0x00002aaaaae6880b : lcall ptr [rbp + rbx*4 - 0x62d30004] ; cld ; call rdx
0x00002aaaaae674cf : lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaacf2b73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaad46651 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacfce13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00002aaaaad88a21 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x00002aaaaad0ccf2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad43450 : lcall ptr [rbx + 0x5d] ; ret
0x00002aaaaae59e0b : lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaae6c32b : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaad58a2f : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00002aaaaae5b5cb : lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6ef : lcall ptr [rbx] ; push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaae5b5f7 : lcall ptr [rcx + 0x22fff451] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b803 : lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6a0eb : lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x00002aaaaae5a717 : lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaae59977 : lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaade3c5a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x00002aaaaae69bab : lcall ptr [rdi + rdi*4 - 0x38bc0000] ; in eax, dx ; call rsp
0x00002aaaaae5ab7b : lcall ptr [rdx + 0x42fff383] ; mov dh, bl ; jmp rdx
0x00002aaaaae6d6db : lcall ptr [rdx + rax*2 + 0x53440002] ; cli ; call rsp
0x00002aaaaae698db : lcall ptr [rdx + rbp*4 + 0x5d740000] ; in eax, dx ; jmp rsp
0x00002aaaaae5abb3 : lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaae5cc6f : lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x00002aaaaae6da3b : lcall ptr [rsi + rdx*2 - 0x40abfffe] ; cli ; jmp rsp
0x00002aaaaae6754f : lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaae5b127 : lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaae5a713 : lcall ptr [rsi] ; sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaae6a613 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaae6abdb : lcall ptr [rsp + rbp + 0x52140001] ; call rsp
0x00002aaaaae6d2a3 : lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaae2d6f6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaad4c944 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00002aaaaad45d6f : lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaadf611c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaad8d638 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaad60f94 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaad60fa4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaad71554 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaad60f74 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaad99dd2 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad45d70 : lea eax, dword ptr [rax - 1] ; ret
0x00002aaaaadf62a0 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00002aaaaae0069b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00002aaaaad7ee38 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00002aaaaae84a5c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaadf611d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x00002aaaaad5fa3d : lea eax, dword ptr [rcx + rsi] ; ret
0x00002aaaaad7c7d4 : lea eax, dword ptr [rcx - 1] ; ret
0x00002aaaaad798fc : lea eax, dword ptr [rdi + 0x10] ; ret
0x00002aaaaad79911 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00002aaaaad7992f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00002aaaaad7994f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00002aaaaad79972 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00002aaaaad79991 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaad799b1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00002aaaaad799d1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00002aaaaad799f4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaad79a19 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00002aaaaad79a37 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00002aaaaad79a57 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00002aaaaad79a73 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00002aaaaad79a93 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00002aaaaad79ab3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00002aaaaad79ad3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7a923 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaad7ab89 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00002aaaaad7984d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00002aaaaad7986d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00002aaaaad7988f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00002aaaaad798af : lea eax, dword ptr [rdi + 0xd] ; ret
0x00002aaaaad798cf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00002aaaaad798e9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00002aaaaad70eb4 : lea eax, dword ptr [rdi + 1] ; ret
0x00002aaaaad70ec8 : lea eax, dword ptr [rdi + 2] ; ret
0x00002aaaaad70ed3 : lea eax, dword ptr [rdi + 3] ; ret
0x00002aaaaad70ee7 : lea eax, dword ptr [rdi + 4] ; ret
0x00002aaaaad70ef7 : lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaad70f07 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad797fb : lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaad70ea7 : lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaad7981a : lea eax, dword ptr [rdi + 8] ; ret
0x00002aaaaadf5430 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00002aaaaad7982f : lea eax, dword ptr [rdi + 9] ; ret
0x00002aaaaad60fc9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad60fd9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad60ec3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad68bf7 : lea eax, dword ptr [rdi + rax] ; ret
0x00002aaaaae1ca7a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaadf65a0 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00002aaaaad00a65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaad5f939 : lea eax, dword ptr [rdi + rsi] ; ret
0x00002aaaaad7e88e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaad7e9f1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00002aaaaad7ea11 : lea eax, dword ptr [rdi - 4] ; ret
0x00002aaaaad7ea01 : lea eax, dword ptr [rdi - 8] ; ret
0x00002aaaaad79783 : lea eax, dword ptr [rdi] ; ret
0x00002aaaaae8eb16 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaae3d4dd : lea eax, dword ptr [rdx + 0xa] ; ret
0x00002aaaaae3d4fd : lea eax, dword ptr [rdx + 0xb] ; ret
0x00002aaaaae3d51f : lea eax, dword ptr [rdx + 0xc] ; ret
0x00002aaaaae3d53f : lea eax, dword ptr [rdx + 0xd] ; ret
0x00002aaaaae3d55f : lea eax, dword ptr [rdx + 0xe] ; ret
0x00002aaaaae3d3ef : lea eax, dword ptr [rdx + 0xf] ; ret
0x00002aaaaae3d417 : lea eax, dword ptr [rdx + 1] ; ret
0x00002aaaaae3d42d : lea eax, dword ptr [rdx + 2] ; ret
0x00002aaaaae3d445 : lea eax, dword ptr [rdx + 3] ; ret
0x00002aaaaae3d45b : lea eax, dword ptr [rdx + 4] ; ret
0x00002aaaaae3d46d : lea eax, dword ptr [rdx + 5] ; ret
0x00002aaaaae3d48b : lea eax, dword ptr [rdx + 6] ; ret
0x00002aaaaae3d397 : lea eax, dword ptr [rdx + 7] ; ret
0x00002aaaaae3d49d : lea eax, dword ptr [rdx + 8] ; ret
0x00002aaaaae3d4bd : lea eax, dword ptr [rdx + 9] ; ret
0x00002aaaaad45d5e : lea eax, dword ptr [rdx + rdi] ; ret
0x00002aaaaad7d0bc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaae3d405 : lea eax, dword ptr [rdx] ; ret
0x00002aaaaad5dfaa : lea eax, dword ptr [rip + 0x10] ; ret
0x00002aaaaad617a0 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x00002aaaaacffb39 : lea eax, dword ptr [rip + 0x15f406] ; ret
0x00002aaaaacf3931 : lea eax, dword ptr [rip + 0x16b154] ; ret
0x00002aaaaacf3941 : lea eax, dword ptr [rip + 0x16d066] ; ret
0x00002aaaaad5df5e : lea eax, dword ptr [rip + 0x1713c] ; ret
0x00002aaaaad5bcfe : lea eax, dword ptr [rip + 0x1777c] ; ret
0x00002aaaaad6163a : lea eax, dword ptr [rip + 0x1b330] ; ret
0x00002aaaaad60a96 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x00002aaaaad61014 : lea eax, dword ptr [rip + 0x26] ; ret
0x00002aaaaadfddc9 : lea eax, dword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x00002aaaaadfdd91 : lea eax, dword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x00002aaaaadfdcd2 : lea eax, dword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00002aaaaadd437b : lea eax, dword ptr [rip + 0x2c4edf] ; pop rbp ; pop r12 ; ret
0x00002aaaaadd073e : lea eax, dword ptr [rip + 0x2c8854] ; ret
0x00002aaaaadd057e : lea eax, dword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaad3dc84 : lea eax, dword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x00002aaaaade8681 : lea eax, dword ptr [rip + 0x37c19] ; ret
0x00002aaaaade8771 : lea eax, dword ptr [rip + 0x37ec9] ; ret
0x00002aaaaadfd501 : lea eax, dword ptr [rip + 0x61a3e] ; ret
0x00002aaaaad61e3a : lea eax, dword ptr [rip + 0x80] ; ret
0x00002aaaaad6688f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x00002aaaaad66860 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x00002aaaaad668a3 : lea eax, dword ptr [rip + 0xbcb07] ; ret
0x00002aaaaad5feeb : lea eax, dword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaad5fb5b : lea eax, dword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaad617e1 : lea eax, dword ptr [rip + 0xbee69] ; ret
0x00002aaaaad5d6eb : lea eax, dword ptr [rip + 0xbf30f] ; ret
0x00002aaaaad7e0ec : lea eax, dword ptr [rip + 0xc20ce] ; ret
0x00002aaaaad7ecc8 : lea eax, dword ptr [rip + 0xc31b2] ; ret
0x00002aaaaad7ecd0 : lea eax, dword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaad5c14e : lea eax, dword ptr [rip + 0xc] ; ret
0x00002aaaaad5f83e : lea eax, dword ptr [rip + 0xd999c] ; ret
0x00002aaaaad61e9d : lea eax, dword ptr [rip + 0xd] ; ret
0x00002aaaaad61cce : lea eax, dword ptr [rip + 0xda08c] ; ret
0x00002aaaaad5d5de : lea eax, dword ptr [rip + 0xda44c] ; ret
0x00002aaaaad61dee : lea eax, dword ptr [rip + 0xdb77c] ; ret
0x00002aaaaad61028 : lea eax, dword ptr [rip + 0xdf812] ; ret
0x00002aaaaad61030 : lea eax, dword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaad5beeb : lea eax, dword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaad7ecb4 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00002aaaaad7e0e4 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00002aaaaad299f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00002aaaaadc8e86 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00002aaaaade87ba : lea eax, dword ptr [rip - 0x6be60] ; ret
0x00002aaaaade8730 : lea eax, dword ptr [rip - 0x76156] ; ret
0x00002aaaaade8640 : lea eax, dword ptr [rip - 0x767b6] ; ret
0x00002aaaaadf63fe : lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaae793b5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00002aaaaae8da1a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00002aaaaad4e5d8 : lea ebp, dword ptr [rdi + 0x83] ; jmp 0x7b5c6
0x00002aaaaad18b5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad1a071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad2c8fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00002aaaaae55811 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaad7f003 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00002aaaaad7f12e : lea ecx, dword ptr [rax + 4] ; call rbx
0x00002aaaaad7f56e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad90fb4 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbdfc5
0x00002aaaaae8eabe : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaae23430 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00002aaaaad7803e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00002aaaaae3ace6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168239 ; ret
0x00002aaaaae3afe4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168239 ; ret
0x00002aaaaae3b004 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168239 ; ret
0x00002aaaaae3b024 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168239 ; ret
0x00002aaaaae3b046 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168239 ; ret
0x00002aaaaae3b066 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168239 ; ret
0x00002aaaaae3b086 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168239 ; ret
0x00002aaaaae3aedc : lea ecx, dword ptr [rdx + 1] ; jne 0x168239 ; ret
0x00002aaaaae3aefe : lea ecx, dword ptr [rdx + 2] ; jne 0x168239 ; ret
0x00002aaaaae3af24 : lea ecx, dword ptr [rdx + 3] ; jne 0x168239 ; ret
0x00002aaaaae3af3c : lea ecx, dword ptr [rdx + 4] ; jne 0x168239 ; ret
0x00002aaaaad45161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaad435c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaae3af62 : lea ecx, dword ptr [rdx + 5] ; jne 0x168239 ; ret
0x00002aaaaae3af84 : lea ecx, dword ptr [rdx + 6] ; jne 0x168239 ; ret
0x00002aaaaae3afa2 : lea ecx, dword ptr [rdx + 7] ; jne 0x168239 ; ret
0x00002aaaaae3ac7e : lea ecx, dword ptr [rdx + 8] ; jne 0x168239 ; ret
0x00002aaaaae3afc4 : lea ecx, dword ptr [rdx + 9] ; jne 0x168239 ; ret
0x00002aaaaad1b390 : lea ecx, dword ptr [rdx] ; jmp 0x483e6
0x00002aaaaad1cf70 : lea ecx, dword ptr [rdx] ; jmp 0x49fc6
0x00002aaaaad2c878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x00002aaaaaddd1b7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaae09309 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaad47fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaadfeed8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaad480c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00002aaaaae0911a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaadfede6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaad7f4c9 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad7f129 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaad7effe : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaae0a4b2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaadfec0c : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaadff37b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaad8d46c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaad7f9aa : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaae0a273 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaad7fc6b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaad7f6e1 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaae0523e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00002aaaaae07e42 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x00002aaaaae07422 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x00002aaaaae046a5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x00002aaaaad0bfec : lea edi, dword ptr [rbx + rsi] ; call rax
0x00002aaaaadd6d17 : lea edi, dword ptr [rbx - 0x74b6000f] ; cmp al, 0x24 ; call rbx
0x00002aaaaad61876 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8e868 ; mov rax, rdi ; ret
0x00002aaaaad66936 : lea edi, dword ptr [rdi + 0x10] ; jne 0x93926 ; ret
0x00002aaaaad78bad : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6289 ; ret
0x00002aaaaad7a291 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7a99 ; ret
0x00002aaaaad78bd0 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6289 ; ret
0x00002aaaaad7a2b4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7a99 ; ret
0x00002aaaaad78bf5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6289 ; ret
0x00002aaaaad7a2d9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7a99 ; ret
0x00002aaaaad78c13 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6289 ; ret
0x00002aaaaad7a307 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7a99 ; ret
0x00002aaaaad78c33 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6289 ; ret
0x00002aaaaad7a337 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7a99 ; ret
0x00002aaaaad78c56 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6289 ; ret
0x00002aaaaad7a36a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7a99 ; ret
0x00002aaaaad78c75 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6289 ; ret
0x00002aaaaad7a399 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7a99 ; ret
0x00002aaaaad78c95 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6289 ; ret
0x00002aaaaad7a3c9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7a99 ; ret
0x00002aaaaad78cb5 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6289 ; ret
0x00002aaaaad7a3f9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7a99 ; ret
0x00002aaaaad78cd8 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6289 ; ret
0x00002aaaaad7a42c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7a99 ; ret
0x00002aaaaad78d0d : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6289 ; ret
0x00002aaaaad7a461 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7a99 ; ret
0x00002aaaaad78d3b : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6289 ; ret
0x00002aaaaad7a48f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7a99 ; ret
0x00002aaaaad78d6b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6289 ; ret
0x00002aaaaad7a4bf : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7a99 ; ret
0x00002aaaaad78d97 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6289 ; ret
0x00002aaaaad7a4eb : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7a99 ; ret
0x00002aaaaad78dc7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6289 ; ret
0x00002aaaaad7a51b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7a99 ; ret
0x00002aaaaad78df7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6289 ; ret
0x00002aaaaad7a54b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7a99 ; ret
0x00002aaaaad78e27 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6289 ; ret
0x00002aaaaad7a57b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7a99 ; ret
0x00002aaaaad78af3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6289 ; ret
0x00002aaaaad7a197 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7a99 ; ret
0x00002aaaaad78b11 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6289 ; ret
0x00002aaaaad7a1c5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7a99 ; ret
0x00002aaaaad78b31 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6289 ; ret
0x00002aaaaad7a1e5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7a99 ; ret
0x00002aaaaad78b53 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6289 ; ret
0x00002aaaaad7a207 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7a99 ; ret
0x00002aaaaad78b73 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6289 ; ret
0x00002aaaaad7a237 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7a99 ; ret
0x00002aaaaad78b93 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6289 ; ret
0x00002aaaaad7a267 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7a99 ; ret
0x00002aaaaad789c7 : lea edi, dword ptr [rdi + 1] ; jne 0xa6289 ; ret
0x00002aaaaad7a06a : lea edi, dword ptr [rdi + 1] ; jne 0xa7a99 ; ret
0x00002aaaaad789eb : lea edi, dword ptr [rdi + 2] ; jne 0xa6289 ; ret
0x00002aaaaad7a08f : lea edi, dword ptr [rdi + 2] ; jne 0xa7a99 ; ret
0x00002aaaaad78a0e : lea edi, dword ptr [rdi + 3] ; jne 0xa6289 ; ret
0x00002aaaaad7a0b2 : lea edi, dword ptr [rdi + 3] ; jne 0xa7a99 ; ret
0x00002aaaaad78a29 : lea edi, dword ptr [rdi + 4] ; jne 0xa6289 ; ret
0x00002aaaaad7a0cd : lea edi, dword ptr [rdi + 4] ; jne 0xa7a99 ; ret
0x00002aaaaad78a4c : lea edi, dword ptr [rdi + 5] ; jne 0xa6289 ; ret
0x00002aaaaad7a0f0 : lea edi, dword ptr [rdi + 5] ; jne 0xa7a99 ; ret
0x00002aaaaad78a71 : lea edi, dword ptr [rdi + 6] ; jne 0xa6289 ; ret
0x00002aaaaad7a115 : lea edi, dword ptr [rdi + 6] ; jne 0xa7a99 ; ret
0x00002aaaaad78a8f : lea edi, dword ptr [rdi + 7] ; jne 0xa6289 ; ret
0x00002aaaaad7a133 : lea edi, dword ptr [rdi + 7] ; jne 0xa7a99 ; ret
0x00002aaaaad78aab : lea edi, dword ptr [rdi + 8] ; jne 0xa6289 ; ret
0x00002aaaaad7a14f : lea edi, dword ptr [rdi + 8] ; jne 0xa7a99 ; ret
0x00002aaaaad78ace : lea edi, dword ptr [rdi + 9] ; jne 0xa6289 ; ret
0x00002aaaaad7a172 : lea edi, dword ptr [rdi + 9] ; jne 0xa7a99 ; ret
0x00002aaaaacf6652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x00002aaaaad1e511 : lea edi, dword ptr [rip + 0x1445f1] ; call 0x777f8
0x00002aaaaadf2b21 : lea edi, dword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaadf22c2 : lea edi, dword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaad924fd : lea edi, dword ptr [rip + 0xc8571] ; add rax, rdi ; jmp rax
0x00002aaaaad90499 : lea edi, dword ptr [rip + 0xd00ef] ; call 0x39778
0x00002aaaaade7f57 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00002aaaaadc8ef5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x00002aaaaad4f84b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaad098a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38c7d6], edx ; ret
0x00002aaaaae23504 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00002aaaaad71238 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad45eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaad5c1e6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00002aaaaaddcf93 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaae238f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00002aaaaae001c1 : lea edx, dword ptr [rip + 0x2959b9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaae09791 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaade86fb : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x00002aaaaad615e6 : lea edx, dword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00002aaaaad450a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaad35053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadb08c1 : lea esi, dword ptr [rbx + rbp] ; call 0x938c9
0x00002aaaaad44270 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaacd5eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x00002aaaaad21617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00002aaaaad180df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x00002aaaaad4221a : lea esi, dword ptr [rip + 0x30] ; call rax
0x00002aaaaad4ef0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x00002aaaaad4f2fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x00002aaaaad4f74a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x00002aaaaad42513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x00002aaaaad4dc3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x00002aaaaad4deaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x00002aaaaae0d64d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae00ab5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaae0d9fa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaae0cfbd : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad0c8c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaad40121 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaad5c1e5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaad0bfeb : lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaae2342f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaad1b38f : lea r9, qword ptr [rdx] ; jmp 0x483e7
0x00002aaaaad1cf6f : lea r9, qword ptr [rdx] ; jmp 0x49fc7
0x00002aaaaae09308 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaad47fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaadfeed7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaad480bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00002aaaaae09119 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaadfede5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaad7f4c8 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad7f128 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaad7effd : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaae0a4b1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaadfec0b : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaadff37a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00002aaaaad8d46b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00002aaaaad7f9a9 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaae0a272 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaad7fc6a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00002aaaaad7f6e0 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaada0009 : lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaad60f93 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaad60fa3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00002aaaaad71553 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00002aaaaad60f73 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaad99dd1 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae0069a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00002aaaaad7ee37 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x00002aaaaad5fa3c : lea rax, qword ptr [rcx + rsi] ; ret
0x00002aaaaad7c7d3 : lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaad798fb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad79910 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaad7992e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaad7994e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaad79971 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaad79990 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaad799b0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaad799d0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaad799f3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad79a18 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaad79a36 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaad79a56 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaad79a72 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaad79a92 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaad79ab2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaad79ad2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7a922 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad7ab88 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaad7984c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaad7986c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaad7988e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad798ae : lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaad798ce : lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaad798e8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaad70eb3 : lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad70ec7 : lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad70ed2 : lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad70ee6 : lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad70ef6 : lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaad70f06 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad797fa : lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaad70ea6 : lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad79819 : lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad7982e : lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad60fc8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad60fd8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad60ec2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaad68bf6 : lea rax, qword ptr [rdi + rax] ; ret
0x00002aaaaae1ca79 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaadf659f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaad00a64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaad5f938 : lea rax, qword ptr [rdi + rsi] ; ret
0x00002aaaaad7e88d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad7e9f0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00002aaaaad7ea10 : lea rax, qword ptr [rdi - 4] ; ret
0x00002aaaaad7ea00 : lea rax, qword ptr [rdi - 8] ; ret
0x00002aaaaad79782 : lea rax, qword ptr [rdi] ; ret
0x00002aaaaae3d4dc : lea rax, qword ptr [rdx + 0xa] ; ret
0x00002aaaaae3d4fc : lea rax, qword ptr [rdx + 0xb] ; ret
0x00002aaaaae3d51e : lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaae3d53e : lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaae3d55e : lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaae3d3ee : lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaae3d416 : lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaae3d42c : lea rax, qword ptr [rdx + 2] ; ret
0x00002aaaaae3d444 : lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaae3d45a : lea rax, qword ptr [rdx + 4] ; ret
0x00002aaaaae3d46c : lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaae3d48a : lea rax, qword ptr [rdx + 6] ; ret
0x00002aaaaae3d396 : lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaae3d49c : lea rax, qword ptr [rdx + 8] ; ret
0x00002aaaaae3d4bc : lea rax, qword ptr [rdx + 9] ; ret
0x00002aaaaae3d404 : lea rax, qword ptr [rdx] ; ret
0x00002aaaaad5dfa9 : lea rax, qword ptr [rip + 0x10] ; ret
0x00002aaaaad6179f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x00002aaaaacffb38 : lea rax, qword ptr [rip + 0x15f406] ; ret
0x00002aaaaacf3930 : lea rax, qword ptr [rip + 0x16b154] ; ret
0x00002aaaaacf3940 : lea rax, qword ptr [rip + 0x16d066] ; ret
0x00002aaaaad5df5d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x00002aaaaad5bcfd : lea rax, qword ptr [rip + 0x1777c] ; ret
0x00002aaaaad61639 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x00002aaaaad61013 : lea rax, qword ptr [rip + 0x26] ; ret
0x00002aaaaadfddc8 : lea rax, qword ptr [rip + 0x29cf71] ; pop rbx ; ret
0x00002aaaaadfdd90 : lea rax, qword ptr [rip + 0x29cfa9] ; pop rbx ; ret
0x00002aaaaadfdcd1 : lea rax, qword ptr [rip + 0x29d068] ; pop rbx ; ret
0x00002aaaaadd073d : lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00002aaaaadd057d : lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaad3dc83 : lea rax, qword ptr [rip + 0x35aa76] ; pop rbx ; pop rbp ; ret
0x00002aaaaade8680 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x00002aaaaade8770 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00002aaaaadfd500 : lea rax, qword ptr [rip + 0x61a3e] ; ret
0x00002aaaaad61e39 : lea rax, qword ptr [rip + 0x80] ; ret
0x00002aaaaad6688e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x00002aaaaad6685f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x00002aaaaad668a2 : lea rax, qword ptr [rip + 0xbcb07] ; ret
0x00002aaaaad5feea : lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x00002aaaaad5fb5a : lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x00002aaaaad617e0 : lea rax, qword ptr [rip + 0xbee69] ; ret
0x00002aaaaad5d6ea : lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00002aaaaad7e0eb : lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00002aaaaad7ecc7 : lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00002aaaaad7eccf : lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x00002aaaaad5c14d : lea rax, qword ptr [rip + 0xc] ; ret
0x00002aaaaad5f83d : lea rax, qword ptr [rip + 0xd999c] ; ret
0x00002aaaaad61e9c : lea rax, qword ptr [rip + 0xd] ; ret
0x00002aaaaad61ccd : lea rax, qword ptr [rip + 0xda08c] ; ret
0x00002aaaaad5d5dd : lea rax, qword ptr [rip + 0xda44c] ; ret
0x00002aaaaad61ded : lea rax, qword ptr [rip + 0xdb77c] ; ret
0x00002aaaaad61027 : lea rax, qword ptr [rip + 0xdf812] ; ret
0x00002aaaaad6102f : lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00002aaaaad5beea : lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00002aaaaad7ecb3 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00002aaaaad7e0e3 : lea rax, qword ptr [rip + 0xf596] ; ret
0x00002aaaaade87b9 : lea rax, qword ptr [rip - 0x6be60] ; ret
0x00002aaaaade872f : lea rax, qword ptr [rip - 0x76156] ; ret
0x00002aaaaade863f : lea rax, qword ptr [rip - 0x767b6] ; ret
0x00002aaaaad7e9c9 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x00002aaaaad1a070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad7803d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaad7f002 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00002aaaaad7f12d : lea rcx, qword ptr [rax + 4] ; call rbx
0x00002aaaaad7f56d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad90fb3 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc6
0x00002aaaaad435c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaaddd1b6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaae0523d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae07e41 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaae07421 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaae046a4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00002aaaaad61875 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8e869 ; mov rax, rdi ; ret
0x00002aaaaad66935 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x93927 ; ret
0x00002aaaaad1e510 : lea rdi, qword ptr [rip + 0x1445f1] ; call 0x777f9
0x00002aaaaadf2b20 : lea rdi, qword ptr [rip + 0x2a7bd5] ; call rax
0x00002aaaaadf22c1 : lea rdi, qword ptr [rip + 0x2a83d8] ; call rax
0x00002aaaaad90498 : lea rdi, qword ptr [rip + 0xd00ef] ; call 0x39779
0x00002aaaaade7f56 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00002aaaaadc8ef4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaae23503 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaaddcf92 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00002aaaaae238f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00002aaaaad180de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00002aaaaad42219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x00002aaaaad4ef09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x00002aaaaad4f2f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x00002aaaaad4f749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x00002aaaaad42512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x00002aaaaad4dc39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x00002aaaaad4dea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x00002aaaaae0d64c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae00ab4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaae0d9f9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaae0cfbc : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad0c8c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaae69cf5 : leave ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaadae9eb : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaacfca74 : leave ; call r15
0x00002aaaaacd5bec : leave ; clc ; ret
0x00002aaaaae6dae1 : leave ; cli ; jmp rsp
0x00002aaaaad5fc06 : leave ; cmove rax, rdx ; ret
0x00002aaaaae1cab1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaae5b2c8 : leave ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b2c4 : leave ; fcompi st(3) ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae5b25c : leave ; fcompi st(3) ; ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaacfe395 : leave ; je 0x2b39d ; call rcx
0x00002aaaaad3e459 : leave ; je 0x6b464 ; ret
0x00002aaaaadf8a9c : leave ; jne 0x1259eb ; ret
0x00002aaaaad70f79 : leave ; jne 0x9df6c ; ret
0x00002aaaaad710b8 : leave ; jne 0x9e0ad ; xor eax, eax ; ret
0x00002aaaaad7c5b0 : leave ; jne 0xa95a3 ; ret
0x00002aaaaad7c660 : leave ; jne 0xa9653 ; ret
0x00002aaaaad7c920 : leave ; jne 0xa9917 ; sub rax, 1 ; ret
0x00002aaaaad7ea5c : leave ; jne 0xaba54 ; ret
0x00002aaaaad7feda : leave ; jne 0xace97 ; mov rax, rdx ; ret
0x00002aaaaae1ca78 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaad77b21 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaad07a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad7d264 : leave ; mov dword ptr [rdx], ecx ; jne 0xaa25e ; ret
0x00002aaaaadf8e86 : leave ; mov eax, 0x200000 ; jmp 0x125e57
0x00002aaaaad70e7f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaad70ddf : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaacf48e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaad15351 : leave ; ret
0x00002aaaaadc9bab : leave ; ret 0x2c
0x00002aaaaadb65d3 : leave ; ret 0xfff3
0x00002aaaaae6d269 : leave ; stc ; call rsp
0x00002aaaaad7f4c5 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad4234c : les eax, ptr [rip - 0x763f7b00] ; ret 0x8389
0x00002aaaaad4d851 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00002aaaaae5ccef : ljmp ptr [rax + 0x22fff67a] ; jl 0x189cf5 ; jmp qword ptr [rdx]
0x00002aaaaae6b403 : ljmp ptr [rax + rbp*2 + 0x44940001] ; cmc ; jmp rsp
0x00002aaaaae5ab1b : ljmp ptr [rax + rcx*4 + 0x79e2fff3] ; jmp rdx
0x00002aaaaae6760f : ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaae5ab97 : ljmp ptr [rbp + 0x7c] ; jmp rdx
0x00002aaaaae5abaf : ljmp ptr [rbp + 0x7c] ; lcall ptr [rsi + rcx*4 - 0xd] ; jmp rdx
0x00002aaaaae5b663 : ljmp ptr [rbx + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5ccc3 : ljmp ptr [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x189cc9 ; jmp qword ptr [rdx]
0x00002aaaaae6d70b : ljmp ptr [rbx + rax*2 + 0x56240002] ; cli ; jmp rsp
0x00002aaaaae5aecf : ljmp ptr [rbx] ; mov dl, 0xf3 ; jmp rsp
0x00002aaaaae6aec3 : ljmp ptr [rcx + rax*2 + 0x46e40001] ; jmp rsp
0x00002aaaaae67e0b : ljmp ptr [rcx + rdx*2 + 0x513cfffc] ; cld ; jmp rdx
0x00002aaaaae5c915 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00002aaaaae5b0a4 : ljmp ptr [rcx - 0x43d2000d] ; call qword ptr [rax]
0x00002aaaaae6a213 : ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaae6d0e3 : ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaae5b4c3 : ljmp ptr [rdi] ; fcomi st(3) ; dec dword ptr [rsi - 0x24] ; jmp qword ptr [rdi]
0x00002aaaaae5b7df : ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b633 : ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b25f : ljmp ptr [rdx - 0x2d] ; call qword ptr [rcx]
0x00002aaaaae5b457 : ljmp ptr [rdx] ; fdivr st(3), st(0) ; jmp qword ptr [rdi]
0x00002aaaaae5cccf : ljmp ptr [rsi + 0x22fff679] ; jl 0x189cd5 ; jmp qword ptr [rdx]
0x00002aaaaae5cd6b : ljmp ptr [rsi + 0x22fff679] ; jl 0x189d71 ; jmp qword ptr [rdx]
0x00002aaaaae6d8a3 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, dl ; jg 0x19a8ad ; call rsp
0x00002aaaaad40713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaae40c1e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaade025e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00002aaaaad58a94 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaadce5e4 : lock and byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae59f66 : lock dec dword ptr [rax] ; sal eax, -1 ; pop rax ; ret
0x00002aaaaadf493f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00002aaaaae6d70c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; and al, 0x56 ; cli ; jmp rsp
0x00002aaaaae17b90 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae6991d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaae441b0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00002aaaaae78c2d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; jle 0x1a5c27 ; jmp qword ptr [rcx]
0x00002aaaaae6aec4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; in al, 0x46 ; jmp rsp
0x00002aaaaae82ee4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae15e3c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaad11a8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad88061 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaad88c12 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadb2b4a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaae0ec5a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaacfe0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00002aaaaae68765 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcab]
0x00002aaaaae685a5 : lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaae685a1 : lodsb al, byte ptr [rsi] ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaacfcc94 : lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00002aaaaad8c3f8 : lodsb al, byte ptr [rsi] ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaae78fe4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaae5ab1c : lodsb al, byte ptr [rsi] ; mov bl, dh ; jmp rdx
0x00002aaaaae6ba04 : lodsb al, byte ptr [rsi] ; mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaad4e2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaae181b4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae57e9d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaae6a214 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jl 0x197210 ; jmp rsp
0x00002aaaaae6b404 : lodsb al, byte ptr [rsi] ; push 0x44940001 ; cmc ; jmp rsp
0x00002aaaaae833e4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e7 ; jmp qword ptr [rbx]
0x00002aaaaae69c34 : lodsb al, byte ptr [rsi] ; ret 0
0x00002aaaaae6c4f4 : lodsb al, byte ptr [rsi] ; ret 1
0x00002aaaaad1917c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad808b6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad50777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaae68619 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx]
0x00002aaaaae6855d : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaae68559 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaae68599 : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x00002aaaaae68759 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x00002aaaaae5b129 : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x00002aaaaae5b125 : lodsd eax, dword ptr [rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaad7ee89 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaae1bd20 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad1baf2 : lodsd eax, dword ptr [rsi] ; ret
0x00002aaaaadea18f : lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00002aaaaad8dc30 : lodsd eax, dword ptr [rsi] ; xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae5b124 : lodsd eax, dword ptr ds:[rsi] ; lcall ptr [rsi - 0x53] ; jmp qword ptr [rdx]
0x00002aaaaad808b5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae0274c : loop 0x12f7d6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaae09a36 : loop 0x1369c8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaae09bc9 : loop 0x136b5b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaae2cfda : loop 0x159fd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2cfd9 : loop 0x159fd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2faaa : loop 0x15caa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2faa9 : loop 0x15caa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae325ca : loop 0x15f5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae325c9 : loop 0x15f5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae5823a : loop 0x18528f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00002aaaaae5aa78 : loop 0x187af6 ; jmp rdx
0x00002aaaaae5aa7c : loop 0x187afa ; jmp rdx
0x00002aaaaae5aa80 : loop 0x187afe ; jmp rdx
0x00002aaaaae5aa84 : loop 0x187b02 ; jmp rdx
0x00002aaaaae5aa88 : loop 0x187b06 ; jmp rdx
0x00002aaaaae5aa8c : loop 0x187b0a ; jmp rdx
0x00002aaaaae5aa90 : loop 0x187b0e ; jmp rdx
0x00002aaaaae5aa94 : loop 0x187b12 ; jmp rdx
0x00002aaaaae5aa98 : loop 0x187b16 ; jmp rdx
0x00002aaaaae5aa9c : loop 0x187b1a ; jmp rdx
0x00002aaaaae5aaa0 : loop 0x187b1e ; jmp rdx
0x00002aaaaae5aaa4 : loop 0x187b22 ; jmp rdx
0x00002aaaaae5aaa8 : loop 0x187b26 ; jmp rdx
0x00002aaaaae5aaac : loop 0x187b2a ; jmp rdx
0x00002aaaaae5aab0 : loop 0x187b2e ; jmp rdx
0x00002aaaaae5aab4 : loop 0x187b32 ; jmp rdx
0x00002aaaaae5aab8 : loop 0x187b36 ; jmp rdx
0x00002aaaaae5aabc : loop 0x187b3a ; jmp rdx
0x00002aaaaae5aac0 : loop 0x187b3e ; jmp rdx
0x00002aaaaae5aac4 : loop 0x187b42 ; jmp rdx
0x00002aaaaae5aac8 : loop 0x187b46 ; jmp rdx
0x00002aaaaae5aacc : loop 0x187b4a ; jmp rdx
0x00002aaaaae5aad0 : loop 0x187b4e ; jmp rdx
0x00002aaaaae5aad4 : loop 0x187b52 ; jmp rdx
0x00002aaaaae5aad8 : loop 0x187b56 ; jmp rdx
0x00002aaaaae5aadc : loop 0x187b5a ; jmp rdx
0x00002aaaaae5ab08 : loop 0x187b86 ; jmp rdx
0x00002aaaaae5ab0c : loop 0x187b8a ; jmp rdx
0x00002aaaaae5ab10 : loop 0x187b92 ; push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaae5ab20 : loop 0x187b9e ; jmp rdx
0x00002aaaaae5ab4c : loop 0x187bca ; jmp rdx
0x00002aaaaae5ab50 : loop 0x187bce ; jmp rdx
0x00002aaaaae5ab54 : loop 0x187bd2 ; jmp rdx
0x00002aaaaae5ab58 : loop 0x187bd6 ; jmp rdx
0x00002aaaaae5ab5c : loop 0x187bda ; jmp rdx
0x00002aaaaae5ab9c : loop 0x187c1e ; dec dword ptr [rbx - 0x7e] ; jmp rdx
0x00002aaaaae5b9a8 : loop 0x188936 ; hlt ; jmp rdx
0x00002aaaaae5b9ac : loop 0x18893a ; hlt ; jmp rdx
0x00002aaaaae5b9b0 : loop 0x18893e ; hlt ; jmp rdx
0x00002aaaaae5b9b4 : loop 0x188942 ; hlt ; jmp rdx
0x00002aaaaae5b9b8 : loop 0x188946 ; hlt ; jmp rdx
0x00002aaaaae5b9bc : loop 0x18894a ; hlt ; jmp rdx
0x00002aaaaae5b9c0 : loop 0x18894e ; hlt ; jmp rdx
0x00002aaaaae5b9c4 : loop 0x188952 ; hlt ; call rsp
0x00002aaaaae5b9d0 : loop 0x18895e ; hlt ; jmp rdx
0x00002aaaaae5b9d4 : loop 0x188962 ; hlt ; jmp rdx
0x00002aaaaae5b9d8 : loop 0x188966 ; hlt ; jmp rdx
0x00002aaaaae5b9dc : loop 0x18896a ; hlt ; jmp rdx
0x00002aaaaae5b9e0 : loop 0x18896e ; hlt ; jmp rdx
0x00002aaaaae5b9e4 : loop 0x188972 ; hlt ; jmp rdx
0x00002aaaaae5b9e8 : loop 0x188976 ; hlt ; jmp rdx
0x00002aaaaae5b9ec : loop 0x18897a ; hlt ; jmp rdx
0x00002aaaaae5b9f0 : loop 0x18897e ; hlt ; jmp rdx
0x00002aaaaae5b9f4 : loop 0x188982 ; hlt ; jmp rdx
0x00002aaaaae5b9f8 : loop 0x188986 ; hlt ; jmp rdx
0x00002aaaaae5b9fc : loop 0x18898a ; hlt ; jmp rdx
0x00002aaaaae5ba00 : loop 0x18898e ; hlt ; jmp rdx
0x00002aaaaae5ba04 : loop 0x188992 ; hlt ; jmp rdx
0x00002aaaaae5ba08 : loop 0x188996 ; hlt ; jmp rdx
0x00002aaaaae5ba0c : loop 0x18899a ; hlt ; jmp rdx
0x00002aaaaae5ba10 : loop 0x18899e ; hlt ; jmp rdx
0x00002aaaaae5ba14 : loop 0x1889a2 ; hlt ; jmp rdx
0x00002aaaaae5cc6c : loop 0x189cf1 ; idiv bh ; pop rsp ; jle 0x189c70 ; jmp rdx
0x00002aaaaae5cc74 : loop 0x189cf9 ; idiv bh ; jle 0x189c78 ; jmp rdx
0x00002aaaaae6a11d : loop 0x197125 ; add byte ptr [rsi + rbp*2], ah ; out dx, al ; call rsp
0x00002aaaaae80f39 : loop 0x1adf31 ; jmp qword ptr [rcx]
0x00002aaaaae87ee9 : loop 0x1b4ee3 ; call rcx
0x00002aaaaae888a9 : loop 0x1b58a8 ; call rsi
0x00002aaaaacf2a38 : loop 0x1fa24 ; ret 0xf58
0x00002aaaaacd55e5 : loop 0x25bf ; ret 0x23cb
0x00002aaaaad0d689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaad28d0d : loop 0x55c9a ; ret
0x00002aaaaad3210b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x00002aaaaad38891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaad3ecc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaad489b4 : loop 0x759bb ; mov eax, edx ; ret
0x00002aaaaad48aa4 : loop 0x75aab ; mov eax, edx ; ret
0x00002aaaaad5a044 : loop 0x87096 ; mov edi, edi ; call rax
0x00002aaaaad71c5d : loop 0x9ec95 ; shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaad78c9a : loop 0xa5ca5 ; add byte ptr [rax], al ; ret
0x00002aaaaad7d0a5 : loop 0xaa0bf ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaad7f6df : loop 0xac736 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00002aaaaad7f9a8 : loop 0xac9ff ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00002aaaaad9413f : loop 0xc1145 ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaadb628a : loop 0xe330a ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00002aaaaadb742c : loop 0xe4438 ; xor esi, esi ; call 0x8e698
0x00002aaaaadb757f : loop 0xe4584 ; add esi, esi ; ret
0x00002aaaaadc0f62 : loop 0xedeeb ; ret 0x850f
0x00002aaaaade3526 : loope 0x110534 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaadea18a : loope 0x1171de ; mov esi, esp ; call 0x73446
0x00002aaaaadfae03 : loope 0x127dbe ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaae0466e : loope 0x131603 ; ret
0x00002aaaaae2cf4a : loope 0x159f45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2cf49 : loope 0x159f46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fa1a : loope 0x15ca15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2fa19 : loope 0x15ca16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae3253a : loope 0x15f535 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae32539 : loope 0x15f536 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae3b04b : loope 0x168052 ; add byte ptr [rax], al ; ret
0x00002aaaaae42edb : loope 0x16fee5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaae46736 : loope 0x173795 ; ret
0x00002aaaaae58519 : loope 0x18551c ; jmp qword ptr [rdi]
0x00002aaaaae58599 : loope 0x18559c ; jmp qword ptr [rdi]
0x00002aaaaae58619 : loope 0x18561c ; jmp qword ptr [rdi]
0x00002aaaaae58699 : loope 0x18569c ; jmp qword ptr [rdi]
0x00002aaaaae58719 : loope 0x18571c ; jmp qword ptr [rdi]
0x00002aaaaae58799 : loope 0x18579c ; jmp qword ptr [rdi]
0x00002aaaaae5cfe9 : loope 0x189ff3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00002aaaaae673d8 : loope 0x19437e ; std ; jmp rcx
0x00002aaaaae673d8 : loope 0x194382 ; std ; jmp rcx
0x00002aaaaae673dc : loope 0x194383 ; std ; jmp rcx
0x00002aaaaae67685 : loope 0x194684 ; jmp qword ptr [rax]
0x00002aaaaae6a0ed : loope 0x1970f5 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaad08d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00002aaaaad1b987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad1b9b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x00002aaaaad1ba2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00002aaaaad488c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad55147 : loope 0x8215e ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad58950 : loope 0x8598e ; add byte ptr [rbp + 0xa], dh ; jmp 0x85982
0x00002aaaaad66d3b : loope 0x93d4d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaad66ee2 : loope 0x93f39 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaad66fab : loope 0x93fbd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaad7c4a9 : loope 0xa9518 ; nop dword ptr [rax + rax] ; ret
0x00002aaaaad7d0e7 : loope 0xaa0a8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad7d1ce : loope 0xaa1c5 ; ret
0x00002aaaaad7e36e : loope 0xab383 ; je 0xab394 ; ret
0x00002aaaaad9ae0d : loope 0xc7d9a ; ret 0xf631
0x00002aaaaada96d9 : loope 0xd66de ; add esi, esi ; ret
0x00002aaaaadd4270 : loopne 0x101276 ; jmp 0x10123a
0x00002aaaaadd837e : loopne 0x1053e4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaaddc88e : loopne 0x109894 ; ret
0x00002aaaaaddc8aa : loopne 0x1098b9 ; movzx eax, ax ; ret
0x00002aaaaaddc91e : loopne 0x109924 ; ret
0x00002aaaaaddc9be : loopne 0x1099c4 ; ret
0x00002aaaaaddc9da : loopne 0x1099df ; ret
0x00002aaaaaddca4e : loopne 0x109a54 ; ret
0x00002aaaaaddca6a : loopne 0x109a73 ; movzx eax, ax ; ret
0x00002aaaaaddcade : loopne 0x109ae4 ; ret
0x00002aaaaaddcb6e : loopne 0x109b74 ; ret
0x00002aaaaaddcc0e : loopne 0x109c14 ; ret
0x00002aaaaaddccae : loopne 0x109cb4 ; ret
0x00002aaaaaddcd4e : loopne 0x109d54 ; ret
0x00002aaaaaddcd6a : loopne 0x109d75 ; movzx eax, ax ; ret
0x00002aaaaaddcdde : loopne 0x109de4 ; ret
0x00002aaaaaddce79 : loopne 0x109e7f ; ret
0x00002aaaaaddcf0e : loopne 0x109f14 ; ret
0x00002aaaaaddd0ea : loopne 0x10a0f0 ; ret
0x00002aaaaaddd230 : loopne 0x10a236 ; ret
0x00002aaaaaddd243 : loopne 0x10a252 ; movzx eax, ax ; ret
0x00002aaaaaddd2b0 : loopne 0x10a2b6 ; ret
0x00002aaaaaddd330 : loopne 0x10a336 ; ret
0x00002aaaaaddd343 : loopne 0x10a348 ; ret
0x00002aaaaaddd3b0 : loopne 0x10a3b6 ; ret
0x00002aaaaaddd3c3 : loopne 0x10a3cc ; movzx eax, ax ; ret
0x00002aaaaaddd430 : loopne 0x10a436 ; ret
0x00002aaaaaddd4b0 : loopne 0x10a4b6 ; ret
0x00002aaaaaddd530 : loopne 0x10a536 ; ret
0x00002aaaaaddd5b0 : loopne 0x10a5b6 ; ret
0x00002aaaaaddd630 : loopne 0x10a636 ; ret
0x00002aaaaaddd643 : loopne 0x10a64e ; movzx eax, ax ; ret
0x00002aaaaaddd6b0 : loopne 0x10a6b6 ; ret
0x00002aaaaaddd72d : loopne 0x10a733 ; ret
0x00002aaaaaddd7b0 : loopne 0x10a7b6 ; ret
0x00002aaaaaddd95a : loopne 0x10a960 ; ret
0x00002aaaaade6e3b : loopne 0x113e40 ; ret
0x00002aaaaade7568 : loopne 0x11457d ; cmp eax, 4 ; je 0x114577 ; ret
0x00002aaaaade7739 : loopne 0x11474c ; pop rbp ; pop r12 ; ret
0x00002aaaaade7f55 : loopne 0x114fa7 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x00002aaaaadf5434 : loopne 0x122433 ; add eax, 0x10 ; ret
0x00002aaaaadf656b : loopne 0x123578 ; cdqe ; shr rax, 4 ; ret
0x00002aaaaae0a7b7 : loopne 0x1377c0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae0eb11 : loopne 0x13bb81 ; nop dword ptr [rax + rax] ; ret
0x00002aaaaae1fe82 : loopne 0x14ce4f ; jp 0x14cf0b ; jp 0x14ce7e ; ret
0x00002aaaaae20372 : loopne 0x14d33f ; jp 0x14d3fb ; jp 0x14d36e ; ret
0x00002aaaaae20715 : loopne 0x14d6e2 ; jp 0x14d79e ; jp 0x14d711 ; ret
0x00002aaaaae23951 : loopne 0x150968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23950 : loopne 0x150969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23aa1 : loopne 0x150ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23aa0 : loopne 0x150ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23bf1 : loopne 0x150c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23bf0 : loopne 0x150c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23d41 : loopne 0x150d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23d40 : loopne 0x150d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23e91 : loopne 0x150ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23e90 : loopne 0x150ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23fe1 : loopne 0x150ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae23fe0 : loopne 0x150ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24131 : loopne 0x151148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24130 : loopne 0x151149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae2427f : loopne 0x151296 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae2427e : loopne 0x151297 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae243d1 : loopne 0x1513e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae243d0 : loopne 0x1513e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24521 : loopne 0x151538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24520 : loopne 0x151539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24671 : loopne 0x151688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24670 : loopne 0x151689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae247c1 : loopne 0x1517d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae247c0 : loopne 0x1517d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24911 : loopne 0x151928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24910 : loopne 0x151929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24a61 : loopne 0x151a78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24a60 : loopne 0x151a79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24bb1 : loopne 0x151bc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae24bb0 : loopne 0x151bc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26321 : loopne 0x153338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26320 : loopne 0x153339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26471 : loopne 0x153488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26470 : loopne 0x153489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae265c1 : loopne 0x1535d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae265c0 : loopne 0x1535d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26711 : loopne 0x153728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26710 : loopne 0x153729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26861 : loopne 0x153878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26860 : loopne 0x153879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae269b1 : loopne 0x1539c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae269b0 : loopne 0x1539c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26b01 : loopne 0x153b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26b00 : loopne 0x153b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26c4f : loopne 0x153c66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26c4e : loopne 0x153c67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26da1 : loopne 0x153db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26da0 : loopne 0x153db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26ef1 : loopne 0x153f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae26ef0 : loopne 0x153f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27041 : loopne 0x154058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27040 : loopne 0x154059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27191 : loopne 0x1541a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27190 : loopne 0x1541a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae272e1 : loopne 0x1542f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae272e0 : loopne 0x1542f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27431 : loopne 0x154448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27430 : loopne 0x154449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27581 : loopne 0x154598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae27580 : loopne 0x154599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28cf1 : loopne 0x155d08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28cf0 : loopne 0x155d09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28e41 : loopne 0x155e58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28e40 : loopne 0x155e59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28f91 : loopne 0x155fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae28f90 : loopne 0x155fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae290e1 : loopne 0x1560f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae290e0 : loopne 0x1560f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29231 : loopne 0x156248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29230 : loopne 0x156249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29381 : loopne 0x156398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29380 : loopne 0x156399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae294d1 : loopne 0x1564e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae294d0 : loopne 0x1564e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae2961f : loopne 0x156636 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae2961e : loopne 0x156637 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29771 : loopne 0x156788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29770 : loopne 0x156789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae298c1 : loopne 0x1568d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae298c0 : loopne 0x1568d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29a11 : loopne 0x156a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29a10 : loopne 0x156a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29b61 : loopne 0x156b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29b60 : loopne 0x156b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29cb1 : loopne 0x156cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29cb0 : loopne 0x156cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29e01 : loopne 0x156e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29e00 : loopne 0x156e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29f51 : loopne 0x156f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae29f50 : loopne 0x156f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae44ef5 : loopne 0x171f46 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaae44ef4 : loopne 0x171f47 ; sub eax, edx ; vzeroupper ; ret
0x00002aaaaae54358 : loopne 0x181382 ; jmp 0x18135e
0x00002aaaaae5435c : loopne 0x181386 ; jmp 0x181362
0x00002aaaaae54360 : loopne 0x18138a ; jmp 0x181366
0x00002aaaaae54364 : loopne 0x18138e ; jmp 0x18136a
0x00002aaaaae54368 : loopne 0x181392 ; jmp 0x18136e
0x00002aaaaae5436c : loopne 0x181396 ; jmp 0x181372
0x00002aaaaae54370 : loopne 0x18139a ; jmp 0x181376
0x00002aaaaae54374 : loopne 0x18139e ; jmp 0x18137a
0x00002aaaaae54378 : loopne 0x1813a2 ; jmp 0x18137e
0x00002aaaaae55814 : loopne 0x1827f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaae5a3f8 : loopne 0x1873fd ; call qword ptr [rax]
0x00002aaaaae5a424 : loopne 0x18742e ; push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaae5a46c : loopne 0x187478 ; inc dword ptr [rax] ; add al, 0xf2 ; jmp qword ptr [rax]
0x00002aaaaae5b544 : loopne 0x188599 ; hlt ; push rax ; hlt ; jmp rax
0x00002aaaaae5b54c : loopne 0x18859d ; hlt ; jmp rax
0x00002aaaaae5b558 : loopne 0x1885a9 ; hlt ; jmp rax
0x00002aaaaae5b56c : loopne 0x1885c1 ; hlt ; jmp qword ptr [rax + 0x22fff44c]
0x00002aaaaae5b974 : loopne 0x1889cf ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b97c : loopne 0x1889d3 ; hlt ; jmp rax
0x00002aaaaae5b988 : loopne 0x1889df ; hlt ; jmp rax
0x00002aaaaae5b99c : loopne 0x1889f7 ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaae5d4bc : loopne 0x18a4e9 ; cli ; call rax
0x00002aaaaae67288 : loopne 0x1942a7 ; sti ; call qword ptr [rax]
0x00002aaaaae6773c : loopne 0x19471c ; sti ; call rax
0x00002aaaaae6808c : loopne 0x195016 ; cld ; push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaae6a0c5 : loopne 0x1970cd ; add ah, dl ; out dx, al ; call rsp
0x00002aaaaae776d9 : loopne 0x1a46e5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00002aaaaae78d80 : loopne 0x1a5d0d ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae78db0 : loopne 0x1a5d3d ; out dx, al ; jmp rbx
0x00002aaaaae797d0 : loopne 0x1a67d6 ; out dx, eax ; jmp rsi
0x00002aaaaae7d070 : loopne 0x1aa089 ; call qword ptr [rdx]
0x00002aaaaae7fc10 : loopne 0x1acc7b ; stc ; call qword ptr [rax]
0x00002aaaaae7fdc0 : loopne 0x1acd55 ; hlt ; call qword ptr [rcx]
0x00002aaaaae802b0 : loopne 0x1ad24f ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae82730 : loopne 0x1af788 ; cmc ; call qword ptr [rdx]
0x00002aaaaae82ed0 : loopne 0x1aff44 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83110 : loopne 0x1b0187 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8eaca : loopne 0x1bbad9 ; ret 0xb
0x00002aaaaae8eb22 : loopne 0x1bbb30 ; ret 0xa
0x00002aaaaad00d13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x00002aaaaad00d53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x00002aaaaad00df3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x00002aaaaad00ed3 : loopne 0x2ded8 ; ret
0x00002aaaaad00f4c : loopne 0x2df51 ; ret
0x00002aaaaad00f5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x00002aaaaad00f9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x00002aaaaad00f23 : loopne 0x2dfa6 ; ret
0x00002aaaaad0103c : loopne 0x2e047 ; movzx eax, ax ; ret
0x00002aaaaad07e75 : loopne 0x34e81 ; ret
0x00002aaaaad08187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x00002aaaaad09084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaad18a25 : loopne 0x45a4a ; or eax, edx ; ret
0x00002aaaaad19072 : loopne 0x4608c ; test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaad1b46d : loopne 0x48476 ; sub eax, 1 ; ret
0x00002aaaaad25fc5 : loopne 0x52f52 ; ret 0xe680
0x00002aaaaad27f3e : loopne 0x54ecb ; ret 0xe680
0x00002aaaaacd8ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00002aaaaad3f47b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x00002aaaaad3f4a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x00002aaaaad3fb8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x00002aaaaad3fc0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x00002aaaaad40d9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaad40dd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x00002aaaaad40e2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x00002aaaaad40e6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaad40e71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaad4506e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00002aaaaad4a9c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x00002aaaaad4af06 : loopne 0x77f0b ; ret
0x00002aaaaad4af16 : loopne 0x77f1b ; ret
0x00002aaaaad4bfb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad4c067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad564f8 : loopne 0x83525 ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad570b2 : loopne 0x840b8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00002aaaaad614ed : loopne 0x8e551 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad61582 : loopne 0x8e5e6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad671ad : loopne 0x94205 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad68e97 : loopne 0x95eed ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad68e9a : loopne 0x95efc ; pop rbp ; pop r12 ; ret
0x00002aaaaad78d9c : loopne 0xa5da6 ; add byte ptr [rax], al ; ret
0x00002aaaaad7d0dd : loopne 0xaa0f7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaad9fb00 : loopne 0xccb66 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaada3bc2 : loopne 0xd0c24 ; pop rbp ; pop r12 ; ret
0x00002aaaaada3cc2 : loopne 0xd0d24 ; pop rbp ; pop r12 ; ret
0x00002aaaaada8988 : loopne 0xd598d ; ret
0x00002aaaaada9609 : loopne 0xd6612 ; add eax, 8 ; ret
0x00002aaaaada9655 : loopne 0xd665b ; ret
0x00002aaaaada9709 : loopne 0xd670f ; pop rbx ; ret
0x00002aaaaadab6c3 : loopne 0xd86d7 ; ret
0x00002aaaaadabf6d : loopne 0xd8fde ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaadb69f7 : loopne 0xe39bf ; call 0x66d0c30b
0x00002aaaaae6ce3c : mov ah, 0 ; add al, byte ptr [rax] ; hlt ; cmp edi, ecx ; jmp rsp
0x00002aaaaae04707 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaae7f1ec : mov ah, 0x12 ; add dword ptr [rax], eax ; and dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae5522a : mov ah, 0x13 ; ret
0x00002aaaaae6f8ec : mov ah, 0x19 ; add byte ptr [rax], al ; adc byte ptr [rdi], 0xe9 ; call qword ptr [rbx]
0x00002aaaaae7fbec : mov ah, 0x1c ; add dword ptr [rax], eax ; mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaad87bc3 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00002aaaaadad4f8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00002aaaaad8e659 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00002aaaaae70fec : mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaae80fec : mov ah, 0x30 ; add dword ptr [rax], eax ; jrcxz 0x1adfee ; call qword ptr [rsi]
0x00002aaaaae6ae70 : mov ah, 0x32 ; jmp rsp
0x00002aaaaae6ae1c : mov ah, 0x3a ; add dword ptr [rax], eax ; push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaae71dec : mov ah, 0x3e ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x00002aaaaae829ec : mov ah, 0x4a ; add dword ptr [rax], eax ; push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae72bec : mov ah, 0x4c ; add byte ptr [rax], al ; adc byte ptr [rax - 0x15], dl ; call rdi
0x00002aaaaae82bec : mov ah, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae67ce8 : mov ah, 0x5f ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaae6b2d4 : mov ah, 0x61 ; add dword ptr [rax], eax ; xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaae681d4 : mov ah, 0x87 ; cld ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaae6cf0c : mov ah, 0xa ; add al, byte ptr [rax] ; and al, 0x52 ; stc ; call rsp
0x00002aaaaae69a30 : mov ah, 0xa0 ; in eax, dx ; jmp rsp
0x00002aaaaae556d0 : mov ah, 0xa5 ; ret
0x00002aaaaae6991c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x77 ; in eax, dx ; jmp rsp
0x00002aaaaae699c4 : mov ah, 0xb1 ; add byte ptr [rax], al ; mov ebp, gs ; jmp rsp
0x00002aaaaae6bcd0 : mov ah, 0xc1 ; idiv bh ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaae69cf4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xfc ; in eax, dx ; call rsp
0x00002aaaaae69bd0 : mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaae6ca84 : mov ah, 0xe4 ; add dword ptr [rax], eax ; clc ; jmp rsp
0x00002aaaaad8a06b : mov ah, 0xe9 ; ret
0x00002aaaaae6a2ac : mov ah, 0xee ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaae87879 : mov ah, 0xf6 ; call rsi
0x00002aaaaad59c8c : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00002aaaaae68055 : mov ah, bh ; call qword ptr [rax + 0x20fffc87]
0x00002aaaaae689e9 : mov ah, bh ; call rax
0x00002aaaaae55024 : mov ah, bl ; push rsi ; ret
0x00002aaaaae5b9cd : mov ah, dh ; jmp rdx
0x00002aaaaae78fb5 : mov al, 0 ; add byte ptr [rax + 0x1a], bh ; cli ; call qword ptr [rax]
0x00002aaaaae78f55 : mov al, 0 ; add byte ptr [rax - 0x71], bl ; out dx, al ; call qword ptr [rax]
0x00002aaaaae78f6d : mov al, 0 ; add byte ptr [rax - 0x71], dl ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaadbe37e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae78fe5 : mov al, 0 ; add byte ptr [rax], bl ; push rsp ; cli ; call qword ptr [rax]
0x00002aaaaae5a3f4 : mov al, 0 ; jmp rax
0x00002aaaaae81d60 : mov al, 0x1e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae0054c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00002aaaaae00504 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaae5d4b8 : mov al, 0x28 ; cli ; jmp rax
0x00002aaaaadde569 : mov al, 0x2b ; add byte ptr [rbp + 0xa], dh ; jmp 0x10b59b
0x00002aaaaae07cb9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00002aaaaada012e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaad97725 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaae0eb08 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaadf8b5d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaae5b984 : mov al, 0x53 ; hlt ; jmp rax
0x00002aaaaae67b74 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaae7fc50 : mov al, 0x66 ; stc ; call qword ptr [rax]
0x00002aaaaae5a008 : mov al, 0x6e ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae82ea0 : mov al, 0x6f ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae689d0 : mov al, 0x7f ; cld ; call rax
0x00002aaaaae5ab94 : mov al, 0x81 ; ljmp ptr [rbp + 0x7c] ; jmp rdx
0x00002aaaaae68278 : mov al, 0x83 ; cld ; inc dword ptr [rax - 0x7d] ; cld ; call rax
0x00002aaaaae68060 : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaae7fbf0 : mov al, 0x87 ; hlt ; call qword ptr [rax]
0x00002aaaaae7bee0 : mov al, 0x95 ; int1 ; call qword ptr [rax]
0x00002aaaaae8eac5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaae68770 : mov al, 0xaa ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaae68558 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00002aaaaae7c450 : mov al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaae5a1c4 : mov al, 0xe8 ; int1 ; call rax
0x00002aaaaae5a1e4 : mov al, 0xe9 ; int1 ; call rax
0x00002aaaaae5a204 : mov al, 0xea ; int1 ; call rax
0x00002aaaaae5a258 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00002aaaaae5a28c : mov al, 0xed ; int1 ; call rax
0x00002aaaaae574d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00002aaaaae5a2ac : mov al, 0xee ; int1 ; call rax
0x00002aaaaae5a2cc : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaae77a60 : mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaadd0263 : mov al, 0xf3 ; ret
0x00002aaaaae5a3ac : mov al, 0xfd ; int1 ; call rax
0x00002aaaaae763e5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00002aaaaae7c205 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00002aaaaae774a1 : mov al, 1 ; add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x00002aaaaae5a41c : mov al, 1 ; call rax
0x00002aaaaae5a444 : mov al, 2 ; call rax
0x00002aaaaad78dcc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00002aaaaae5a4a0 : mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00002aaaaad789cc : mov al, 8 ; add byte ptr [rax], al ; ret
0x00002aaaaae8eb1d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaae76a15 : mov al, byte ptr [rax] ; add al, ch ; jg 0x1a3a0e ; call qword ptr [rcx]
0x00002aaaaae769a5 : mov al, byte ptr [rax] ; add byte ptr [rax + 0x7d], ch ; in eax, dx ; call qword ptr [rsi]
0x00002aaaaad74efb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00002aaaaad74f29 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00002aaaaad74fad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00002aaaaae3d400 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaad74ed5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaae81288 : mov al, ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad74ee5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaae69a65 : mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaae2dd11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00002aaaaacfd21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00002aaaaacfcd92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00002aaaaad3faa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x00002aaaaad06411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00002aaaaae42d78 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00002aaaaad00a67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x00002aaaaacd5be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00002aaaaae56504 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00002aaaaad00d16 : mov bh, 0xc0 ; ret
0x00002aaaaadeb81c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaae6d1d9 : mov bh, 0xf9 ; call rsp
0x00002aaaaacd6790 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x377a ; ret 0x975
0x00002aaaaae674dd : mov bh, 0xfd ; call qword ptr [rcx - 0x2e00024b]
0x00002aaaaae674d5 : mov bh, 0xfd ; call rcx
0x00002aaaaae6755d : mov bh, 0xfd ; call rsi
0x00002aaaaae6758d : mov bh, 0xfd ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaae675fd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaae675dd : mov bh, 0xfd ; jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaae675ed : mov bh, 0xfd ; jmp qword ptr [rax]
0x00002aaaaae6754d : mov bh, 0xfd ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaae675cd : mov bh, 0xfd ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaae6752d : mov bh, 0xfd ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaae6751d : mov bh, 0xfd ; push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaae6753d : mov bh, 0xfd ; push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaaddae83 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaae6c39d : mov bh, 1 ; add byte ptr [rbp + rbp*2 - 9], al ; call rsp
0x00002aaaaaddc8a6 : mov bh, 4 ; js 0x109836 ; loopne 0x1098bd ; movzx eax, ax ; ret
0x00002aaaaaddc9d6 : mov bh, 4 ; js 0x109963 ; loopne 0x1099e3 ; ret
0x00002aaaaaddca66 : mov bh, 4 ; js 0x1099f6 ; loopne 0x109a77 ; movzx eax, ax ; ret
0x00002aaaaaddcd66 : mov bh, 4 ; js 0x109cf6 ; loopne 0x109d79 ; movzx eax, ax ; ret
0x00002aaaaaddd23f : mov bh, 4 ; js 0x10a1cf ; loopne 0x10a256 ; movzx eax, ax ; ret
0x00002aaaaaddd33f : mov bh, 4 ; js 0x10a2cc ; loopne 0x10a34c ; ret
0x00002aaaaaddd3bf : mov bh, 4 ; js 0x10a34f ; loopne 0x10a3d0 ; movzx eax, ax ; ret
0x00002aaaaaddd63f : mov bh, 4 ; js 0x10a5cf ; loopne 0x10a652 ; movzx eax, ax ; ret
0x00002aaaaad00d0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x00002aaaaad00d4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x00002aaaaad00def : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x00002aaaaad00ecf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x00002aaaaad00f48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x00002aaaaad00f58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x00002aaaaad00f98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x00002aaaaad01038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00002aaaaae57c13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaadc8351 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaae68a2d : mov bh, ah ; call rax
0x00002aaaaae811f8 : mov bh, ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad49f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00002aaaaae78ef8 : mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaae80e78 : mov bh, bl ; hlt ; call qword ptr [rbx]
0x00002aaaaae6d0e9 : mov bh, cl ; call rsp
0x00002aaaaae4466e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad900d1 : mov bl, 0x30 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00002aaaaad7fedc : mov bl, 0x48 ; mov eax, edx ; ret
0x00002aaaaadb755c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00002aaaaae575e3 : mov bl, 0x8e ; ret 0xdcd9
0x00002aaaaae735b1 : mov bl, 0xec ; jmp qword ptr [rcx]
0x00002aaaaacd4b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaae6bc61 : mov bl, 0xf6 ; jmp rsp
0x00002aaaaacd6af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaadc5941 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaae6c32d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaae67389 : mov bl, bh ; call rax
0x00002aaaaad2357d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x00002aaaaad53f42 : mov bl, byte ptr [rsi] ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaae5aaf9 : mov bl, dh ; call rdx
0x00002aaaaae5aa75 : mov bl, dh ; jmp rdx
0x00002aaaaadf8b61 : mov byte ptr [r11], 0 ; ret
0x00002aaaaad554c0 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaad4a63c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaadd16d9 : mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaad02a5c : mov byte ptr [rax + 0x39], dl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaae0fb0c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaadd0741 : mov byte ptr [rax + rax], ch ; ret
0x00002aaaaad554c1 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaacf7208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaad18af9 : mov byte ptr [rax + rdx], 0 ; ret
0x00002aaaaad4a63d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaae82f78 : mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaadd16da : mov byte ptr [rax - 1], 0 ; ret
0x00002aaaaadf39c6 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaade0b5d : mov byte ptr [rax], 0x20 ; jmp 0x10db29
0x00002aaaaadd703e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0896d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaad088d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaad77b22 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaae5a0f4 : mov byte ptr [rbp - 0x40370003], bh ; std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaadfd4a4 : mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadd0076 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadf8b62 : mov byte ptr [rbx], 0 ; ret
0x00002aaaaacd5f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaad69bf4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x00002aaaaae3b0c3 : mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaae3b0e2 : mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaae3b123 : mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaad70e83 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x00002aaaaacfee46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x00002aaaaad7123b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad71180 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaad712ba : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad1b21a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x00002aaaaad0050c : mov byte ptr [rcx], 0x83 ; ret
0x00002aaaaadb6a11 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaae6ba05 : mov byte ptr [rcx], al ; add byte ptr [rsp + rsi*2 - 0xa], al ; jmp rsp
0x00002aaaaae78e10 : mov byte ptr [rcx], al ; ret
0x00002aaaaae3b0a0 : mov byte ptr [rcx], dl ; ret
0x00002aaaaad7c19a : mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaad7a73b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaad78f5b : mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad7c1ab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad798f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad78288 : mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad7c1b0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad7c1d2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c1f0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaad7c210 : mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7996e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaad782de : mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad7a7c1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaad78fb1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaad7c231 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad7c236 : mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad7c252 : mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaad7c272 : mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaad7c292 : mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad7a843 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaad79033 : mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaad7c2b3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad799f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad78360 : mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad7c2b8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c2da : mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c2f8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaad7c318 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaad7c334 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaad7c354 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaad7c374 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaad7c394 : mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad79135 : mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaad7c3b5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad7c3ba : mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad7c40a : mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7c0e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c0fe : mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaad7c11e : mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaad7c140 : mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaad7c160 : mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaad7c180 : mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaad7c016 : mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaadf6022 : mov byte ptr [rdi + 1], dh ; ret
0x00002aaaaadf6021 : mov byte ptr [rdi + 1], sil ; ret
0x00002aaaaadf61f0 : mov byte ptr [rdi + 2], 0 ; jne 0x123248 ; mov eax, r8d ; ret
0x00002aaaaad70ec3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad70e33 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00002aaaaad7c028 : mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaad797a6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad781a6 : mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaad7a5c9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad78e79 : mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaad7c039 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad7c03e : mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad70ee2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad70e52 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaad7c056 : mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaad797c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad781c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad7a5f7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaad78e97 : mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad7c067 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c06c : mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad70e69 : mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad7c07e : mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaae02752 : mov byte ptr [rdi + 7], al ; ret
0x00002aaaaad7c09c : mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaada7d60 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00002aaaaada7d21 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00002aaaaada7d90 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00002aaaaada7db7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00002aaaaada7e00 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00002aaaaada7ded : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00002aaaaada7d50 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00002aaaaada7d30 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaad7c0a8 : mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaad78203 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7a649 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad78ed9 : mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad7c0b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaad7c0be : mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaadf6206 : mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaad70dc6 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00002aaaaae24f7b : mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaad70e10 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00002aaaaada7d80 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00002aaaaada7dd9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaad7c002 : mov byte ptr [rdi], ch ; ret
0x00002aaaaad72012 : mov byte ptr [rdi], cl ; ret
0x00002aaaaad70d61 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00002aaaaad79780 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaad78180 : mov byte ptr [rdi], dh ; ret
0x00002aaaaad7a5a2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad78e52 : mov byte ptr [rdi], dl ; ret
0x00002aaaaad7c012 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaad77caa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00002aaaaae3d429 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00002aaaaad74efe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00002aaaaae3d457 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00002aaaaad74f2c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00002aaaaad77c40 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaad74fb0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00002aaaaae5cd30 : mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x00002aaaaadef4e8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadd8241 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaad8b4fd : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x00002aaaaae3d402 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00002aaaaad74ed7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00002aaaaad443fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x00002aaaaad4af3a : mov byte ptr [rdx], bh ; ret
0x00002aaaaadd5a14 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaad443f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x00002aaaaad4af39 : mov byte ptr [rdx], dil ; ret
0x00002aaaaacffae8 : mov byte ptr [rip + 0x397faf], dl ; ret
0x00002aaaaacd5478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00002aaaaadf654b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x00002aaaaadf654a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00002aaaaad67e04 : mov byte ptr [rsi + rdx + 1], al ; jg 0x94df7 ; ret
0x00002aaaaae78848 : mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaad1d773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x00002aaaaad1d6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x00002aaaaad4850f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad41537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaae55022 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00002aaaaae56363 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaae5b7f0 : mov ch, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae576ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaadd21a7 : mov ch, 0x9f ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00002aaaaae580aa : mov ch, 0xab ; ret
0x00002aaaaacd678f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377b ; ret 0x975
0x00002aaaaae84259 : mov ch, 0xf5 ; call rdi
0x00002aaaaae79fa9 : mov ch, 0xfb ; call qword ptr [rax]
0x00002aaaaae674d1 : mov ch, 0xfd ; call rcx
0x00002aaaaae41796 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaadd0581 : mov ch, byte ptr [rax + rax] ; ret
0x00002aaaaadf1b43 : mov ch, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaae79105 : mov cl, 0 ; add byte ptr [rax - 0x23], ch ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaad60f2b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaae699c5 : mov cl, 0 ; add byte ptr [rsp + rcx*4 - 0x13], ah ; jmp rsp
0x00002aaaaaddb9be : mov cl, 0x15 ; jl 0x108973 ; sub eax, dword ptr [rax] ; je 0x1089d1 ; pop rbp ; ret
0x00002aaaaacd6bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00002aaaaadd2be7 : mov cl, 0x35 ; ret
0x00002aaaaad8fdf8 : mov cl, 0x35 ; ret 0x308c
0x00002aaaaacd5be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00002aaaaad99cfe : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaadbcab3 : mov cl, 0x94 ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaade7963 : mov cl, 0xd ; fistp qword ptr [rip + 0x3948002b] ; ret 0x840f
0x00002aaaaae153f0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaae79019 : mov cl, 0xee ; call qword ptr [rax]
0x00002aaaaada8909 : mov cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaacff852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00002aaaaad640c5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00002aaaaad70de3 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x00002aaaaad5c1e4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00002aaaaae574d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00002aaaaae468a2 : mov cl, byte ptr [rsi + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaad72010 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00002aaaaae70969 : mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaae70999 : mov cl, ch ; jmp rsp
0x00002aaaaad7e36b : mov cl, dl ; and cl, 0xf ; je 0xab397 ; ret
0x00002aaaaae5778c : mov cs, edi ; ret 0x8b36
0x00002aaaaae1d5ee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00002aaaaad781a0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaae8fb84 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00002aaaaad4d60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4e2d6 : mov dh, 0 ; pop rbx ; ret
0x00002aaaaad4af63 : mov dh, 0 ; ret
0x00002aaaaae2dd81 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00002aaaaad61114 : mov dh, 0x16 ; sub eax, edx ; ret
0x00002aaaaad06bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x00002aaaaadec14c : mov dh, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaadb5eba : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00002aaaaacf8944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00002aaaaad3f206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaae00292 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaada9a96 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd6a77 ; mov edx, eax ; jmp 0xd6a80
0x00002aaaaada16b5 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaada0fd9 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00002aaaaad3f853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaad19273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad6bfd1 : mov dh, 0x45 ; ret
0x00002aaaaad6ff09 : mov dh, 0x45 ; ret 0x8348
0x00002aaaaad6bfc2 : mov dh, 0x45 ; ret 0x8349
0x00002aaaaad1ec83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x00002aaaaae44241 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaae44231 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaae44201 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaae44221 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaae44211 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaadb33ca : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaacf8c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaada3d41 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaae564c2 : mov dh, 0x4e ; ret 0x474c
0x00002aaaaade0273 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaadf630d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaad3fe29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00002aaaaada6a1b : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaad6b9b7 : mov dh, 0x55 ; ret
0x00002aaaaad6dfc5 : mov dh, 0x55 ; ret 0x8348
0x00002aaaaad6b9a9 : mov dh, 0x55 ; ret 0x8349
0x00002aaaaae44245 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00002aaaaae44235 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00002aaaaae44205 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00002aaaaad29807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x00002aaaaad2978a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00002aaaaae44215 : mov dh, 0x56 ; sub eax, edx ; ret
0x00002aaaaae67bbc : mov dh, 0x5d ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaad3159e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadbe531 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00002aaaaae680a8 : mov dh, 0x85 ; cld ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaae685a0 : mov dh, 0xac ; cld ; inc dword ptr [rsi - 0x54] ; cld ; call rsi
0x00002aaaaad5b7d5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00002aaaaae00aa8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae0dc5c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0062d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadbcdff : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00002aaaaad8d636 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaada0007 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaad0822d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaada63ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaad9333b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaad3f1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaad3f2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaade1011 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3e34d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00002aaaaad3e31a : mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaae05dd6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00002aaaaae019fb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaad99a0c : mov dh, 0xc0 ; pop rbx ; ret
0x00002aaaaad08f2a : mov dh, 0xc0 ; ret
0x00002aaaaad7d038 : mov dh, 0xc1 ; pop rbx ; ret
0x00002aaaaad7d060 : mov dh, 0xc2 ; pop rbx ; ret
0x00002aaaaad4d78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadeb80e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaad4af33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaad956a6 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaad443fe : mov dh, 0xc7 ; ret
0x00002aaaaae57704 : mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaad9562b : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad6113a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00002aaaaadb36b0 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaad5d591 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaae40874 : mov dh, 0xe ; sub eax, ecx ; ret
0x00002aaaaad2f1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaad2f418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaae72f99 : mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaadabf63 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaad7ef52 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaad0640c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaae67531 : mov dh, 0xfd ; call rcx
0x00002aaaaad4d621 : mov dh, 2 ; ret
0x00002aaaaadb7b52 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaada962c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaae40871 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaad61111 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaad5d594 : mov dh, 7 ; sub eax, ecx ; ret
0x00002aaaaae5ab81 : mov dh, bl ; jmp rdx
0x00002aaaaad40cb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaad5fda5 : mov dh, byte ptr [rbx] ; add al, ch ; ret
0x00002aaaaad7d1cc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00002aaaaae78d81 : mov dh, ch ; call qword ptr [rsi]
0x00002aaaaae78db1 : mov dh, ch ; jmp rbx
0x00002aaaaae6d1d8 : mov dil, 0xf9 ; call rsp
0x00002aaaaacd6aa4 : mov dl, 0x1e ; ret
0x00002aaaaad7ecca : mov dl, 0x31 ; or al, 0 ; ret
0x00002aaaaad976b3 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00002aaaaae67c20 : mov dl, 0x60 ; cld ; inc dword ptr [rdx + 0x60] ; cld ; call rdx
0x00002aaaaae46bfd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae68844 : mov dl, 0x9e ; cld ; jmp qword ptr [rdx]
0x00002aaaaae68644 : mov dl, 0xa8 ; cld ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaad38d59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x00002aaaaae5aed1 : mov dl, 0xf3 ; jmp rsp
0x00002aaaaaddcf95 : mov dl, 3 ; add al, 0xa ; ret
0x00002aaaaad78e73 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaad78e92 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad78ed3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaae25000 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaad7a5a0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad78e50 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaad7c010 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaadc9fd0 : mov dl, dh ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae5c401 : mov dr0, ebp ; call rsi
0x00002aaaaae5abb5 : mov dr0, ebx ; jmp rdx
0x00002aaaaae689f9 : mov dr1, esp ; call rax
0x00002aaaaaddbb26 : mov ds, eax ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaadd9822 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00002aaaaad9f674 : mov dword ptr [0x2d0], eax ; ret
0x00002aaaaad8da8f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaad51c46 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaad91633 : mov dword ptr [r12], 1 ; jmp 0xbe608
0x00002aaaaadffcfe : mov dword ptr [r14], 0 ; ret
0x00002aaaaad38ac7 : mov dword ptr [r14], r13d ; jmp 0x64bfa
0x00002aaaaadf63b0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaad0dcb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaadf6314 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaade7c20 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00002aaaaad7ed67 : mov dword ptr [r9 + 8], esi ; ret
0x00002aaaaad72006 : mov dword ptr [r9 - 2], ecx ; ret
0x00002aaaaad71ff1 : mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaad44c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad44c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad45bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4a469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00002aaaaad9fdeb : mov dword ptr [rax + 0x2f], esp ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaad44c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x00002aaaaad45c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00002aaaaacf6acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaacf6acf : mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaad3e46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x00002aaaaad4eb1a : mov dword ptr [rax + 8], 0 ; ret
0x00002aaaaad6175e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x00002aaaaad2ed92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00002aaaaae0e95d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00002aaaaadcf718 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00002aaaaadd49f8 : mov dword ptr [rax], 0x16 ; ret
0x00002aaaaad8db90 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaad06ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00002aaaaad54b3a : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x00002aaaaad55338 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00002aaaaae7a645 : mov dword ptr [rax], 0xf0473800 ; jmp qword ptr [rdi]
0x00002aaaaadcf264 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00002aaaaad9a528 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00002aaaaacf4228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00002aaaaae76845 : mov dword ptr [rax], eax ; add al, bl ; jns 0x1a383e ; jmp qword ptr [rcx]
0x00002aaaaad7e023 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaadbcd64 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaad45165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaad435ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad32b88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x00002aaaaad35807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00002aaaaadd1611 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00002aaaaadf63b1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaad56566 : mov dword ptr [rax], edi ; ret
0x00002aaaaadd96e3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7eda1 : mov dword ptr [rax], edx ; jne 0xabd9d ; ret
0x00002aaaaadf611a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaad0dcb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00002aaaaadbcdba : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00002aaaaad450a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaadf6315 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00002aaaaad009d3 : mov dword ptr [rax], edx ; ret
0x00002aaaaad45ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00002aaaaadbcd63 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00002aaaaadc8071 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaada5534 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd255b
0x00002aaaaad21a76 : mov dword ptr [rbp - 0x4e0], ebx ; call 0x8ad18
0x00002aaaaad2064e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00002aaaaad3cf55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x00002aaaaacf6656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x00002aaaaade61dd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaade6b13 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x00002aaaaade6d6c : mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaade61e3 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaade678a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaade6c50 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaade6724 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaade62b3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaad2524f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x00002aaaaae1438d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad17c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaadeb6c5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0d5fa : mov dword ptr [rbp], edx ; call rax
0x00002aaaaad43982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad43981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacfd6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00002aaaaad4b457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad9a908 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc78de
0x00002aaaaae15a06 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaad4b9b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaade10c4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0e5d5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00002aaaaae159be : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaade10f4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad49ba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4e1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae0e629 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadba7db : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00002aaaaad4a495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00002aaaaad5b609 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00002aaaaad5b608 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaad0822f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadce601 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00002aaaaad5b6be : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x00002aaaaad4e20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00002aaaaad45dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4c832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad44cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaad45ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4b327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x00002aaaaacfd6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaade1094 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad08e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00002aaaaad4e42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaad5ba9d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd49e2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00002aaaaada4621 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x00002aaaaae0e7f3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad4e52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaae15c31 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaae0a67f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00002aaaaadd4982 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaae09360 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaad40f3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad45bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad5b606 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaad1ad7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x00002aaaaad5bb23 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4e1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad5b6bb : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaae04724 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00002aaaaae07518 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00002aaaaae07475 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x00002aaaaae07545 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x00002aaaaacd344d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00002aaaaacf357d : mov dword ptr [rcx + 0x968], eax ; ret
0x00002aaaaae3b102 : mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaad7e4a0 : mov dword ptr [rcx + 4], eax ; jne 0xab46e ; ret
0x00002aaaaae3b0f3 : mov dword ptr [rcx + 4], edx ; ret
0x00002aaaaad7e49f : mov dword ptr [rcx + 4], r8d ; jne 0xab46f ; ret
0x00002aaaaae3b164 : mov dword ptr [rcx + 5], edx ; ret
0x00002aaaaae3b174 : mov dword ptr [rcx + 6], edx ; ret
0x00002aaaaae3b143 : mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaae3b134 : mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaad7ed68 : mov dword ptr [rcx + 8], esi ; ret
0x00002aaaaad70d96 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00002aaaaad1b1cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaaddb47f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00002aaaaad72007 : mov dword ptr [rcx - 2], ecx ; ret
0x00002aaaaad71ff2 : mov dword ptr [rcx - 4], ecx ; ret
0x00002aaaaad71fe1 : mov dword ptr [rcx - 8], ecx ; ret
0x00002aaaaada3a1c : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00002aaaaae6ba55 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], dh ; jmp rsp
0x00002aaaaada9102 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaad3345c : mov dword ptr [rcx], eax ; jmp 0x60425
0x00002aaaaad0877a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaad44277 : mov dword ptr [rcx], eax ; ret
0x00002aaaaad48664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf63b4 : mov dword ptr [rcx], ecx ; ret
0x00002aaaaad440d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaadf6388 : mov dword ptr [rcx], edi ; ret
0x00002aaaaad60c87 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00002aaaaae3b0c1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaae3b0e0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00002aaaaae3b121 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaae3b100 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00002aaaaae3b141 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaae3b151 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaae3b161 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaae3b171 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaae3b181 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaae3b191 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaad50722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaae3b0f0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00002aaaaae3b131 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaadf6318 : mov dword ptr [rcx], edx ; ret
0x00002aaaaadc8cdb : mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaadc8d12 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00002aaaaad7990d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaad7a75d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaad7994b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaad7a79b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00002aaaaad799cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaad7a81d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad782db : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad78fae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaad7835d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad1bb3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad7c1cd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c20b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7c28d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad79030 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaad783a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad783c0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad78381 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaadc8d00 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00002aaaaad79a33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaad7a883 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaad783a3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad7c2f3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaae0e230 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x00002aaaaad4e133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad4a837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaad79a15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaad7a865 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaad79a53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00002aaaaad7a8a3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaad78385 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad7c2d5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c313 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaae0e2c2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x00002aaaaae0e1f6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00002aaaaad91b5e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbad9a
0x00002aaaaade0b5a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2c
0x00002aaaaae07d2c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00002aaaaae0e371 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaada8fea : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaada8fe9 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaada8fee : mov dword ptr [rdi + 0x30], eax ; ret
0x00002aaaaada8fed : mov dword ptr [rdi + 0x30], r8d ; ret
0x00002aaaaad67121 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00002aaaaae07ce4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00002aaaaacf38ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x00002aaaaad4e163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad5180b : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaad09049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00002aaaaadc833e : mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaad7e6a2 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaadf545f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00002aaaaad7998d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaad7a7dd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaad782fd : mov dword ptr [rdi + 0xe], ecx ; ret
0x00002aaaaad7c24d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaad7992b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaad7a77b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00002aaaaad799ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaad7a7fd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaad782bb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7c1eb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaad7c26d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaae2dbc5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2da08 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2dca8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00002aaaaae2db55 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2d998 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad0e373 : mov dword ptr [rdi + 2], edx ; ret
0x00002aaaaad797f7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaad7a627 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaae2dae5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2d928 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad781e7 : mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaad7c097 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaad70ea3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad70e03 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x00002aaaaad5180e : mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaad0e36d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00002aaaaad70ef3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaad7a609 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaae2d8b8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad70df3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00002aaaaad781d9 : mov dword ptr [rdi + 4], edx ; ret
0x00002aaaaad7c079 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaadc8390 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00002aaaaad70ea2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad70e02 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00002aaaaad7988b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad7a6cb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaae2d848 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7824b : mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaad7c13b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaad798ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaad7a6eb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaae2d7d8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7825b : mov dword ptr [rdi + 6], edx ; ret
0x00002aaaaad7c15b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaad79849 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaad7a689 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaad798cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaad7a70b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaae2d768 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad78229 : mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad7c0f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaad7c17b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaadd1648 : mov dword ptr [rdi + 8], 0 ; ret
0x00002aaaaad7ee85 : mov dword ptr [rdi + 8], eax ; je 0xabe40 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad4e137 : mov dword ptr [rdi + 8], eax ; ret
0x00002aaaaad1bac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00002aaaaad7a66b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaad79869 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaad7a6a9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad7982b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad1b2f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaad0dc94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad4af5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaad0dc85 : mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad7c0db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c119 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaadce772 : mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaad09472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf6498 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x00002aaaaadf6493 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00002aaaaae1ff83 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00002aaaaad61765 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaad6176e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00002aaaaae24cc5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae24d03 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad1ba2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00002aaaaae2504c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d218 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2522c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d198 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2541c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d118 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae255ed : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2d089 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae257ed : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cff9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae259ed : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cf69 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaad79170 : mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaae253cd : mov dword ptr [rdi - 2], ecx ; ret
0x00002aaaaae251e5 : mov dword ptr [rdi - 2], edx ; ret
0x00002aaaaae253c9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaad70d4f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00002aaaaae257a9 : mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae24e7f : mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad70dab : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x00002aaaaae257a6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad70d35 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00002aaaaae259a6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad70dc9 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00002aaaaae25ba6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad1b9ba : mov dword ptr [rdi - 8], ecx ; ret
0x00002aaaaae24d07 : mov dword ptr [rdi - 8], edx ; ret
0x00002aaaaae24e7c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24f78 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae24ec4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d298 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad0d7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad927dc : mov dword ptr [rdi], eax ; jmp 0xbf36f
0x00002aaaaadd1635 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaad1d60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00002aaaaadc658f : mov dword ptr [rdi], eax ; mov rdi, rbx ; call 0x1f7f7
0x00002aaaaad1b9b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaad1babe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaad0955b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaad27d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad70d72 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00002aaaaad70ed0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad797c5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad79817 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad797a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad781a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaad7a5c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad78e77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaad70e50 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaad7a5f5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaad78e95 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad7a647 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad78ed7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad797f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaad7a625 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad781e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaad70e00 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00002aaaaad79847 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaad7a687 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaad78227 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad79867 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00002aaaaad7a6a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad78237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad61763 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaad7ca47 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaad78248 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad78258 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad78268 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaad6176b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaad70e40 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00002aaaaad70df0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00002aaaaad781d6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaad78218 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaad7ca53 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaad66ee7 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x00002aaaaacf29c3 : mov dword ptr [rdi], ecx ; ret
0x00002aaaaad79794 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad7a5b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad797b2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad7a5e2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad79804 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad7a634 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad79190 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00002aaaaad791d1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad791f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad79201 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad79211 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad79221 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad791a0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaad791e1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaad07dd6 : mov dword ptr [rdi], edx ; ret
0x00002aaaaad7c024 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaad7c052 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaad7c0a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaad080c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad70eb1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad70e31 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00002aaaaad71fef : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaae1ff6b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaad1d07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaad71fde : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaae1ff4e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaad70e21 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00002aaaaad72003 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00002aaaaae1ff80 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaad1d0a3 : mov dword ptr [rdi], esi ; ret
0x00002aaaaadc8371 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00002aaaaae07dec : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x00002aaaaad40cb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00002aaaaad4b4b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x00002aaaaad671af : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad440ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaad44274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaae00c00 : mov dword ptr [rdx + 0x20], esi ; ret
0x00002aaaaae00bdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaae00be0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00002aaaaae047c0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00002aaaaae07ccc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00002aaaaad8da90 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaae3d487 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00002aaaaad74f6c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00002aaaaae3d469 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaad74f4e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00002aaaaae3d51b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaae3d499 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00002aaaaae39149 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00002aaaaae3d53b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaae3d4b9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00002aaaaae39159 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00002aaaaae3d4d9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00002aaaaae3d55b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaad74ff0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaad3e414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaae3d4f9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00002aaaaae3d3eb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaad74fd2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaae04741 : mov dword ptr [rdx + 8], edi ; ret
0x00002aaaaad41574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00002aaaaadceb2f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaae3d414 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaae3d442 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaae3d394 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaad4b961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad0845a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaad1d07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaad9c3cd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaad4c1c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00002aaaaad74ee9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaad9bbb2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaad0119d : mov dword ptr [rdx], eax ; ret
0x00002aaaaad492df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf1c2f : mov dword ptr [rdx], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00002aaaaad7d265 : mov dword ptr [rdx], ecx ; jne 0xaa25d ; ret
0x00002aaaaad44f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaadbcab7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaad71175 : mov dword ptr [rdx], ecx ; ret
0x00002aaaaacf292b : mov dword ptr [rdx], edi ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00002aaaaadb9f1b : mov dword ptr [rdx], edi ; ret
0x00002aaaaad9c223 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaad9c2ed : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00002aaaaae0473e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaad673d7 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad9c3cc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaae4672f : mov dword ptr [rip + 0x25200b], ebx ; jne 0x173721 ; pop rbx ; ret
0x00002aaaaade7ef8 : mov dword ptr [rip + 0x2b2222], eax ; pop rbp ; ret
0x00002aaaaaddb970 : mov dword ptr [rip + 0x2ba8ca], ebx ; pop rbx ; ret
0x00002aaaaadd38ba : mov dword ptr [rip + 0x2c2950], edi ; ret
0x00002aaaaadd0905 : mov dword ptr [rip + 0x2c6e95], eax ; mov rdx, rax ; jmp 0xfd8a7
0x00002aaaaad098bb : mov dword ptr [rip + 0x38c7cb], eax ; mov eax, edx ; ret
0x00002aaaaad098ac : mov dword ptr [rip + 0x38c7d6], edx ; ret
0x00002aaaaacf2928 : mov dword ptr [rip + 0x3a89da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaadbacc4 : mov dword ptr [rsi + 0x10], eax ; ret
0x00002aaaaad0e296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00002aaaaad0dc00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00002aaaaad0dc04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00002aaaaad4af36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaadce5e7 : mov dword ptr [rsi + 0x48], eax ; ret
0x00002aaaaadcd9b6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00002aaaaadc82af : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x00002aaaaad0e2e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x00002aaaaad0e327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00002aaaaad7e4e8 : mov dword ptr [rsi + 4], 0 ; ret
0x00002aaaaadbaca7 : mov dword ptr [rsi + 8], 0 ; ret
0x00002aaaaadffce1 : mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaadbacc0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaad1b034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad8d6a1 : mov dword ptr [rsi + rcx], edx ; jne 0xba69e ; ret
0x00002aaaaad7ca56 : mov dword ptr [rsi - 2], ecx ; ret
0x00002aaaaad7ca49 : mov dword ptr [rsi - 4], ecx ; ret
0x00002aaaaadffcff : mov dword ptr [rsi], 0 ; ret
0x00002aaaaad70d33 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x00002aaaaadffd90 : mov dword ptr [rsi], 0xa ; ret
0x00002aaaaadffd80 : mov dword ptr [rsi], 0xb ; ret
0x00002aaaaadffdb0 : mov dword ptr [rsi], 0xc ; ret
0x00002aaaaadffda0 : mov dword ptr [rsi], 8 ; ret
0x00002aaaaad918f8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8ab77
0x00002aaaaad4a83b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaad38ac8 : mov dword ptr [rsi], ebp ; jmp 0x64bf9
0x00002aaaaadc65d1 : mov dword ptr [rsi], ebx ; call 0x1f8ac
0x00002aaaaadf59cf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x00002aaaaadf5463 : mov dword ptr [rsi], edi ; ret
0x00002aaaaadeb771 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x00002aaaaad0dcb6 : mov dword ptr [rsi], edx ; ret
0x00002aaaaad54148 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x00002aaaaad07f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00002aaaaad54031 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad51c47 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x00002aaaaad54143 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaadb65ce : mov dword ptr [rsp + 0x18], edx ; call 0x1f8a6
0x00002aaaaadfec07 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaad53d0f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00002aaaaad5408b : mov dword ptr [rsp + 0x20], edx ; call rax
0x00002aaaaad54086 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaadfe3bd : mov dword ptr [rsp + 0x28], ecx ; call 0x137646
0x00002aaaaad065d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00002aaaaadc650b : mov dword ptr [rsp + 0x40], eax ; call 0x1f7f6
0x00002aaaaadb40b8 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00002aaaaad8e658 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x00002aaaaad3da53 : mov dword ptr [rsp + 0xc], edx ; call 0xf6d06
0x00002aaaaad5b670 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x00002aaaaadd5156 : mov dword ptr [rsp + 8], eax ; call rbx
0x00002aaaaae0d8bd : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae0e6fc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00002aaaaad08003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad1d216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad081a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaad91634 : mov dword ptr [rsp], 1 ; jmp 0xbe607
0x00002aaaaad5b9e0 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x00002aaaaadfc923 : mov dword ptr [rsp], ecx ; call r12
0x00002aaaaad9f673 : mov dword ptr fs:[0x2d0], eax ; ret
0x00002aaaaadcf717 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00002aaaaadd49f7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00002aaaaad8db8f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00002aaaaad55337 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00002aaaaad9a527 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00002aaaaacf4227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00002aaaaad32b87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x00002aaaaad35806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00002aaaaadd1610 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00002aaaaadbcdb9 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00002aaaaadbcd62 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00002aaaaadf4280 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3345b : mov dword ptr fs:[rcx], eax ; jmp 0x60426
0x00002aaaaad08779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaad41573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00002aaaaad4b960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad08459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00002aaaaad9c222 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00002aaaaad9c2ec : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00002aaaaae1ff6a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaae251e0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaad78190 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaadcdc96 : mov eax, 0 ; cmova eax, edx ; ret
0x00002aaaaaddaec6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00002aaaaada905c : mov eax, 0 ; cmove eax, esi ; ret
0x00002aaaaad698d5 : mov eax, 0 ; cmovne rax, rdi ; ret
0x00002aaaaadfe384 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7d112 : mov eax, 0x10 ; pop rbx ; ret
0x00002aaaaadf5d30 : mov eax, 0x100 ; ret
0x00002aaaaadf5d2a : mov eax, 0x101 ; ret
0x00002aaaaadf5d36 : mov eax, 0x102 ; ret
0x00002aaaaadf5d22 : mov eax, 0x104 ; ret
0x00002aaaaadcf13d : mov eax, 0x14 ; sub eax, edx ; ret
0x00002aaaaadc8cf3 : mov eax, 0x16 ; jbe 0xf5d08 ; ret
0x00002aaaaad59a54 : mov eax, 0x16 ; je 0x86a67 ; ret
0x00002aaaaadc8365 : mov eax, 0x16 ; je 0xf5378 ; ret
0x00002aaaaad59bf0 : mov eax, 0x16 ; ret
0x00002aaaaadc8d28 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00002aaaaae797cd : mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaad9ff2a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00002aaaaad7d10b : mov eax, 0x20 ; pop rbx ; ret
0x00002aaaaad9ff0f : mov eax, 0x20 ; ret
0x00002aaaaad00ef7 : mov eax, 0x200 ; ret
0x00002aaaaadf8e87 : mov eax, 0x200000 ; jmp 0x125e56
0x00002aaaaad7d104 : mov eax, 0x30 ; pop rbx ; ret
0x00002aaaaad7d0fd : mov eax, 0x40 ; pop rbx ; ret
0x00002aaaaad9ff55 : mov eax, 0x40 ; ret
0x00002aaaaad8e65b : mov eax, 0x41000000 ; call rsp
0x00002aaaaae5561b : mov eax, 0x45155e93 ; ret 0x591c
0x00002aaaaad61c4a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00002aaaaadc92f0 : mov eax, 0x5f ; syscall ; ret
0x00002aaaaad7d0f6 : mov eax, 0x60 ; pop rbx ; ret
0x00002aaaaad9f690 : mov eax, 0x66 ; syscall ; ret
0x00002aaaaad9f6b0 : mov eax, 0x68 ; syscall ; ret
0x00002aaaaad9f6a0 : mov eax, 0x6b ; syscall ; ret
0x00002aaaaad9f6c0 : mov eax, 0x6c ; syscall ; ret
0x00002aaaaad9f680 : mov eax, 0x6e ; syscall ; ret
0x00002aaaaad9f8d0 : mov eax, 0x6f ; syscall ; ret
0x00002aaaaad9fe29 : mov eax, 0x7d00 ; ret
0x00002aaaaad9fe58 : mov eax, 0x7e ; ret
0x00002aaaaad9fdfa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00002aaaaad9fdab : mov eax, 0x7f ; ret
0x00002aaaaad7d0ef : mov eax, 0x80 ; pop rbx ; ret
0x00002aaaaad2fd94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaadddce4 : mov eax, 0x8948002b ; ret 0x8d48
0x00002aaaaadc8084 : mov eax, 0x89fffffe ; ret 0xcb8
0x00002aaaaad479b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaae59f64 : mov eax, 0x8fff0be ; sal eax, -1 ; pop rax ; ret
0x00002aaaaacd6184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaae0484f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaadae540 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadae50a : mov eax, 0xc ; ret
0x00002aaaaae5ea0c : mov eax, 0xc8fffb01 ; add ebx, edi ; call rax
0x00002aaaaad8e7c0 : mov eax, 0xc9 ; syscall ; ret
0x00002aaaaadeb760 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00002aaaaadeb6f9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00002aaaaade74d2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaae0a7b6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadd9c00 : mov eax, 0xe4 ; syscall ; ret
0x00002aaaaad3c60f : mov eax, 0xe9fffffb ; ret 0xffff
0x00002aaaaad9fe4f : mov eax, 0xfa ; ret
0x00002aaaaad9fe70 : mov eax, 0xfc17 ; ret
0x00002aaaaad9fddc : mov eax, 0xfde8 ; jne 0xccdb3 ; ret
0x00002aaaaad9fe60 : mov eax, 0xfffa ; ret
0x00002aaaaad9e3fc : mov eax, 0xfffffff2 ; ret
0x00002aaaaad58a32 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00002aaaaadc8f2a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x00002aaaaad5d8a2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x00002aaaaad46021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x00002aaaaad43b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaad0ccee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4344c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00002aaaaad06f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad083e7 : mov eax, 0xffffffff ; ret
0x00002aaaaadd02af : mov eax, 1 ; add rsp, 8 ; ret
0x00002aaaaae44d40 : mov eax, 1 ; jg 0x171d59 ; neg eax ; ret
0x00002aaaaad7e0b0 : mov eax, 1 ; jg 0xab0c2 ; neg eax ; ret
0x00002aaaaae42c96 : mov eax, 1 ; jl 0x16fca9 ; neg eax ; ret
0x00002aaaaada0042 : mov eax, 1 ; js 0xcd058 ; ret
0x00002aaaaad1d09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00002aaaaadabc26 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c41
0x00002aaaaad43b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaad4ea62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade0e70 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00002aaaaadfd460 : mov eax, 1 ; pop rbx ; ret
0x00002aaaaad1b063 : mov eax, 1 ; ret
0x00002aaaaad7e3d1 : mov eax, 2 ; ret
0x00002aaaaade7c16 : mov eax, 3 ; cmovne eax, edx ; ret
0x00002aaaaad7e3e1 : mov eax, 3 ; ret
0x00002aaaaadcff32 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00002aaaaadf45a3 : mov eax, 3 ; syscall ; ret
0x00002aaaaad7e3f1 : mov eax, 4 ; ret
0x00002aaaaadc20dc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00002aaaaadd87ef : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7e401 : mov eax, 5 ; ret
0x00002aaaaad7e411 : mov eax, 6 ; ret
0x00002aaaaade53bc : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7e421 : mov eax, 7 ; ret
0x00002aaaaad7d0e8 : mov eax, 8 ; pop rbx ; ret
0x00002aaaaadc8187 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade6d68 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaad06e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaadd8689 : mov eax, dword ptr [rax + 0x108] ; ret
0x00002aaaaae1592f : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00002aaaaaddc030 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaad44fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaaddbde0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00002aaaaad4e23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x00002aaaaadfab87 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b97 ; ret
0x00002aaaaadcf7e8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfc7fb ; ret
0x00002aaaaad45222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad4506a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00002aaaaade6de9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00002aaaaaddc757 : mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaadd83dc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00002aaaaad4e708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00002aaaaae073c4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad428c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaad42b71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00002aaaaad47f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaae07c64 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad0d726 : mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaacffb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaae0cec5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00002aaaaadd8679 : mov eax, dword ptr [rax + 8] ; ret
0x00002aaaaad5ba1b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x88a19 ; ret
0x00002aaaaad00ef5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaad010b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad00a1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaad00a68 : mov eax, dword ptr [rax + rdx] ; ret
0x00002aaaaaddd0e4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaacfe01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x00002aaaaae6943d : mov eax, dword ptr [rax] ; add byte ptr [rcx + rbx*2 - 0x16], ah ; call rsp
0x00002aaaaae0ceba : mov eax, dword ptr [rax] ; jmp rax
0x00002aaaaacffb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaad00ecc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaad0d723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaadfae09 : mov eax, dword ptr [rax] ; ret
0x00002aaaaad5106f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x00002aaaaad579b6 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x849c6 ; call rax
0x00002aaaaad3c60d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x00002aaaaadd55ec : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00002aaaaacf52c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x00002aaaaad4a491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaade61e0 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaacf2c03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae00b81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaae0a64a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x137660 ; pop rbx ; ret
0x00002aaaaad74f69 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00002aaaaae39146 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00002aaaaae39156 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00002aaaaad74fed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00002aaaaad7500d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00002aaaaae190fa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaae1a9d2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaad06e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaae3d440 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00002aaaaae047d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaad74f15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00002aaaaae3d391 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaae39061 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaae3d411 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaad74ee6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaad45e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00002aaaaad4f860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaad4f888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaade75a0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1145b8 ; ret
0x00002aaaaad9e9cd : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e2 ; call rax
0x00002aaaaae0e5f3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaae0e191 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaadffcde : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00002aaaaad9aca1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaae46388 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x17339f ; call rax
0x00002aaaaad7e030 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xab0b8 ; ret
0x00002aaaaad7e045 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xab0b8 ; ret
0x00002aaaaadffd37 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaae0e570 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00002aaaaad4a4d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad7e050 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b8 ; ret
0x00002aaaaad7e06b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xab0b8 ; ret
0x00002aaaaad7e080 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xab0b8 ; ret
0x00002aaaaad7e095 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xab0b8 ; ret
0x00002aaaaad7e0a0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b8 ; ret
0x00002aaaaadffd6f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad4a3c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaad47f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaada9660 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaad4fb31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00002aaaaad48ad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00002aaaaadc8380 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaadce720 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaae0d649 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae00ab1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaae0df59 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaae0df69 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae0cec1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaae0ceb6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaae0ade9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaae0cfa1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaadfe8b7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaad7ea6d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xaba49 ; ret
0x00002aaaaad4a430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00002aaaaad4a400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00002aaaaae07d50 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaad4f84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaade75b5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaad9adb0 : mov eax, dword ptr [rdi] ; ret
0x00002aaaaad4af00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaad4af10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00002aaaaae05454 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132466 ; ret
0x00002aaaaae05453 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132467 ; ret
0x00002aaaaae0b5b4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c6 ; ret
0x00002aaaaae0b5b3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c7 ; ret
0x00002aaaaad7eb28 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xabb28 ; xor eax, eax ; ret
0x00002aaaaad00e83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaad7d1c7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b9 ; ret
0x00002aaaaad640c6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaae001c8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaacffb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaad47630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaadb9f18 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaad45167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaad435cc : mov eax, dword ptr [rdx] ; ret
0x00002aaaaad4f841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x00002aaaaae13334 : mov eax, dword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaae12d21 : mov eax, dword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaadf33e1 : mov eax, dword ptr [rip + 0x2a4491] ; ret
0x00002aaaaaddc751 : mov eax, dword ptr [rip + 0x2b9719] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaad5655f : mov eax, dword ptr [rip + 0x33f97b] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaad54165 : mov eax, dword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad53f40 : mov eax, dword ptr [rip + 0x341e8a] ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaad4fb11 : mov eax, dword ptr [rip + 0x347a09] ; ret
0x00002aaaaad09880 : mov eax, dword ptr [rip + 0x38c802] ; ret
0x00002aaaaad09870 : mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaad009cc : mov eax, dword ptr [rip + 0x39541e] ; mov qword ptr [rax], rdx ; ret
0x00002aaaaacfcc91 : mov eax, dword ptr [rip + 0x39ac59] ; ret
0x00002aaaaacf4a51 : mov eax, dword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaacf4a41 : mov eax, dword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaade6d69 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaad010b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad010c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaacffb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00002aaaaade050b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad450a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaad9af5e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00002aaaaacf382a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00002aaaaadc2457 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef499
0x00002aaaaacf736a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x00002aaaaacf7d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x00002aaaaad0bfe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaade4fa5 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x111f73
0x00002aaaaad08839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaadc8f08 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaae15bde : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00002aaaaad8c454 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad0e039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaad9e7ea : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcb7fe ; call rax
0x00002aaaaadd0260 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00002aaaaad9e6c0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaaddc7b3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00002aaaaaddc814 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00002aaaaad5563d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadf6204 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaacf40b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaadce8ed : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad25c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaadce9a8 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad1d807 : mov eax, eax ; pop rbx ; ret
0x00002aaaaad234ba : mov eax, eax ; ret
0x00002aaaaad4c12a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadfc6ba : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaad417db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad41ff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad412b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad40363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad230e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00002aaaaad1b433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00002aaaaad4ca9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad672c7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9b574 : mov eax, ebx ; call rax
0x00002aaaaad68599 : mov eax, ebx ; jmp 0x953f3
0x00002aaaaadd823f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaacfd836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad40fea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad056ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00002aaaaad0daaf : mov eax, ebx ; pop rbx ; ret
0x00002aaaaadd440a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaad1b2f7 : mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaad0d68c : mov eax, ecx ; or rax, rdx ; ret
0x00002aaaaad59ead : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad2e774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad06ea7 : mov eax, ecx ; ret
0x00002aaaaad18a22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaade8881 : mov eax, edi ; add rsp, 8 ; ret
0x00002aaaaad00f20 : mov eax, edi ; and eax, 0x7f ; ret
0x00002aaaaadeb7c6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00002aaaaadeb7a0 : mov eax, edi ; bswap eax ; ret
0x00002aaaaad0d6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00002aaaaadd16d7 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaad70e67 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaacf421b : mov eax, edi ; neg eax ; ret
0x00002aaaaad71965 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad697aa : mov eax, edi ; pop rbx ; ret
0x00002aaaaacf422e : mov eax, edi ; ret
0x00002aaaaadeb7b0 : mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaad0d632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaadeb4aa : mov eax, edi ; sar rax, 6 ; ret
0x00002aaaaadeb846 : mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaad8dcd8 : mov eax, edx ; add rsp, 0x18 ; ret
0x00002aaaaadd0167 : mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaad5663d : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad50725 : mov eax, edx ; add rsp, 8 ; ret
0x00002aaaaae5b29c : mov eax, edx ; call qword ptr [rcx]
0x00002aaaaade2f6c : mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaad69db6 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaad9f64b : mov eax, edx ; jle 0xcc65d ; ret
0x00002aaaaad9c02f : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad1aa12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaad27b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad56ff7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad18c47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaad1c0b5 : mov eax, edx ; pop rbx ; ret
0x00002aaaaacf48a5 : mov eax, edx ; ret
0x00002aaaaad07f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaada9703 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00002aaaaad9c3cf : mov eax, esi ; add rsp, 0x48 ; ret
0x00002aaaaae00c71 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9bbb5 : mov eax, esi ; add rsp, 8 ; ret
0x00002aaaaad1d5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00002aaaaad082e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaad42c84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaad9a953 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad42a18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0d1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e633 : mov eax, esi ; pop rbx ; ret
0x00002aaaaad1d6f4 : mov eax, esi ; ret
0x00002aaaaae44f0b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaad614ec : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad3f47a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad447cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad4f43c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadf6203 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaadce8ec : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad25c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaadce9a7 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad43fef : mov eax, r8d ; pop rbx ; ret
0x00002aaaaad234b9 : mov eax, r8d ; ret
0x00002aaaaae12987 : mov eax, r9d ; ret
0x00002aaaaae74f0d : mov ebp, 0x41380e0a ; ret
0x00002aaaaadd0979 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00002aaaaad71541 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaad71551 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaad71531 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaad2b1ff : mov ebp, 0x830012d1 ; ret
0x00002aaaaae0e943 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadd6ab9 : mov ebp, 0x8b49fff1 ; call rbx
0x00002aaaaadd6ad4 : mov ebp, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x00002aaaaadd6ac6 : mov ebp, 0x8b49fff1 ; jge 0x103ad4 ; call rbx
0x00002aaaaae5a0f5 : mov ebp, 0xbfc8fffd ; std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaae4f824 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00002aaaaae67751 : mov ebp, 0xc190fffb ; sti ; jmp rax
0x00002aaaaae5415d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00002aaaaad715b1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaad71591 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaad71571 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaad71662 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x00002aaaaad5f8a8 : mov ebp, 0xf80148c0 ; ret
0x00002aaaaad5fb2c : mov ebp, 0xf80148c6 ; ret
0x00002aaaaae56246 : mov ebp, 0xfb67d10d ; ret
0x00002aaaaad20c26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad211b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaad294af : mov ebp, 0xfffffb58 ; call rax
0x00002aaaaad1f389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaada1756 : mov ebp, 0xfffffcf8 ; call r12
0x00002aaaaadbe304 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00002aaaaadbeb16 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00002aaaaae06c41 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00002aaaaadbe071 : mov ebp, 0xffffff78 ; call rbx
0x00002aaaaadaea2e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00002aaaaae00c48 : mov ebp, dr1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaadd03ae : mov ebp, dword ptr [rax + rax] ; add rsp, 8 ; ret
0x00002aaaaacd4bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaae0543c : mov ebp, eax ; call 0x12e714
0x00002aaaaad58eff : mov ebp, eax ; call 0x82184
0x00002aaaaadd4c47 : mov ebp, eax ; call rax
0x00002aaaaad38979 : mov ebp, eax ; jmp 0x653d5
0x00002aaaaae0a979 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13798d
0x00002aaaaae76db1 : mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaadd55e9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaae68eb1 : mov ebp, ecx ; jmp rsp
0x00002aaaaad082ed : mov ebp, ecx ; nop ; jmp rdx
0x00002aaaaae6a5a1 : mov ebp, edi ; jmp rsp
0x00002aaaaad81028 : mov ebp, edi ; setne dl ; jmp 0xae03c
0x00002aaaaad83949 : mov ebp, edi ; setne dl ; jmp 0xb095c
0x00002aaaaad86100 : mov ebp, edi ; setne dl ; jmp 0xb311c
0x00002aaaaadd59ef : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaad508ad : mov ebp, edx ; call qword ptr [r15]
0x00002aaaaadfca25 : mov ebp, esp ; call r15
0x00002aaaaade7de4 : mov ebp, esp ; pop rbp ; ret
0x00002aaaaae76f29 : mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaae699c9 : mov ebp, gs ; jmp rsp
0x00002aaaaae46caa : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaadd6d42 : mov ebx, 0x1f0ffff1 ; add bl, dh ; ret
0x00002aaaaacd5d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x00002aaaaad50269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaadf2aa1 : mov ebx, 0x48002a4d ; add esp, 8 ; ret
0x00002aaaaad2b398 : mov ebx, 0x83ffffe5 ; ret
0x00002aaaaad9bc34 : mov ebx, 0x8948002f ; ret 0x8d48
0x00002aaaaadebca9 : mov ebx, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaadd6d26 : mov ebx, 0x8b48fff1 ; jge 0x103d34 ; call rbx
0x00002aaaaadd6d18 : mov ebx, 0x8b49fff1 ; cmp al, 0x24 ; call rbx
0x00002aaaaadd6d0a : mov ebx, 0x8b49fff1 ; jge 0x103d18 ; call rbx
0x00002aaaaacd6671 : mov ebx, 0x952a6c41 ; ret
0x00002aaaaada7fb3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00002aaaaade7504 : mov ebx, 0xafb8341 ; je 0x114513 ; ret
0x00002aaaaae5415b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00002aaaaae046a6 : mov ebx, 0xc8 ; call rax
0x00002aaaaae675a0 : mov ebx, 0xd1fffdb5 ; mov bh, 0xfd ; call rcx
0x00002aaaaae675c0 : mov ebx, 0xd1fffdb6 ; mov bh, 0xfd ; call rcx
0x00002aaaaad3280c : mov ebx, 2 ; jmp 0x5baf7
0x00002aaaaade77f2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00002aaaaae4667f : mov ebx, dword ptr [rdi + 0x10] ; call 0x1f8ad
0x00002aaaaadd59f6 : mov ebx, eax ; call rax
0x00002aaaaae5b508 : mov ebx, eax ; jmp qword ptr [rdi]
0x00002aaaaae006bb : mov ebx, eax ; jne 0x12d659 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf8b5f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaadceea7 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad0a307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x00002aaaaacff376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x00002aaaaade0445 : mov ebx, edx ; jmp 0x10d370
0x00002aaaaad9cc05 : mov ebx, edx ; jmp 0xc9ad8
0x00002aaaaae5ab71 : mov ebx, esi ; call qword ptr [rsi]
0x00002aaaaae5ab75 : mov ebx, esi ; jmp rdx
0x00002aaaaadfe346 : mov ebx, esi ; sub rsp, 8 ; call 0x137648
0x00002aaaaae001c3 : mov ecx, 0x48002959 ; mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaadabfb3 : mov ecx, 0x83000005 ; ret 0x3902
0x00002aaaaadc5573 : mov ecx, 0x89002d61 ; ret
0x00002aaaaadfa482 : mov ecx, 0x89480029 ; ret 0x1be
0x00002aaaaad9bda4 : mov ecx, 0x8948002f ; ret 0x8d48
0x00002aaaaad06edb : mov ecx, 0x8948fffe ; fucompi st(0) ; ret 0xfeb9
0x00002aaaaae099eb : mov ecx, 0x90ffee8e ; pop rbx ; ret
0x00002aaaaae5b114 : mov ecx, 0x94fff3ab ; test al, 0xf3 ; call rdi
0x00002aaaaae54159 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00002aaaaad06ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x00002aaaaacfe390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x00002aaaaadfdba7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad1ac94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x00002aaaaad71fec : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00002aaaaae0e2d0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b2e9 ; xor eax, eax ; ret
0x00002aaaaae0e310 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13b329 ; xor eax, eax ; ret
0x00002aaaaad1abb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaae2342e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00002aaaaad47f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00002aaaaad640c3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaad7ea59 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xaba57 ; ret
0x00002aaaaad1af46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaae257a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae259a3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae25ba3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad781c0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad78201 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2dbc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2db53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2dae3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae2da05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d995 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d925 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d8b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d845 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d7d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d765 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2dca5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00002aaaaad781a1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaae07fcd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x00002aaaaae04b95 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00002aaaaae0a26e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00002aaaaae0499d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x00002aaaaadff92d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00002aaaaadabc24 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd8c43
0x00002aaaaad71184 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaadffd4c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaad71196 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaadfce31 : mov ecx, ebp ; call rbx
0x00002aaaaad48291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaad7faba : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x00002aaaaacfee41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x00002aaaaad70e7e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaad7fd6d : mov ecx, edi ; call rbx
0x00002aaaaaddc889 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaae20081 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaae20084 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaad4ea07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaacf485b : mov ecx, esi ; call rbx
0x00002aaaaadfc6bd : mov ecx, esi ; mov rdi, r13 ; call r12
0x00002aaaaadea189 : mov ecx, esp ; mov rsi, r12 ; call 0x73447
0x00002aaaaade12f4 : mov edi, 0x2000004 ; call rax
0x00002aaaaadd80b0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad062f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae774a4 : mov edi, 0x380e0a01 ; ret
0x00002aaaaadd827b : mov edi, 0x48000888 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaadd68fd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaad1a64f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaad3a898 : mov edi, 0x89000000 ; ret 0x348
0x00002aaaaadd690b : mov edi, 0x8b49fff1 ; call rbx
0x00002aaaaadd699e : mov edi, 0x8b49fff1 ; jge 0x1039ac ; call rbx
0x00002aaaaae67791 : mov edi, 0xc200fffb ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaae69bad : mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x00002aaaaad40dd7 : mov edi, 0xe0 ; call rax
0x00002aaaaad40d9b : mov edi, 0xe0 ; jmp rax
0x00002aaaaad6fe2b : mov edi, 0xf700000b ; ret 0
0x00002aaaaad076bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x00002aaaaadf08d7 : mov edi, dword ptr [rax] ; call 0xf6d08
0x00002aaaaad8d471 : mov edi, dword ptr [rax] ; call r14
0x00002aaaaadd5153 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaae465ea : mov edi, dword ptr [rbp + 0x20] ; call 0x1f8ad
0x00002aaaaae465e1 : mov edi, dword ptr [rbp + 0x70] ; call 0x1f8ad
0x00002aaaaada1755 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00002aaaaad294ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaad9f42e : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00002aaaaadbe070 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00002aaaaae465fb : mov edi, dword ptr [rbp] ; call 0x1f8ad
0x00002aaaaad7ef55 : mov edi, dword ptr [rbp] ; call r12
0x00002aaaaad0bf6d : mov edi, dword ptr [rbp] ; call r14
0x00002aaaaadd4daa : mov edi, dword ptr [rbp] ; call rbx
0x00002aaaaadf218d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11f189 ; pop rbx ; ret
0x00002aaaaae465bd : mov edi, dword ptr [rbx] ; call 0x1f8ac
0x00002aaaaae05451 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x132469 ; ret
0x00002aaaaae0b5b1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1385c9 ; ret
0x00002aaaaad1abba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaad40dd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x00002aaaaad40d9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaadd4d58 : mov edi, dword ptr [rdi] ; call rbx
0x00002aaaaad45fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x00002aaaaade5734 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaae56506 : mov edi, dword ptr [rdx] ; ret
0x00002aaaaadd4d17 : mov edi, dword ptr [rsi] ; call rbx
0x00002aaaaadd523f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaacf7071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00002aaaaad9b6ff : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaacf7365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaacf7d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaacfbaba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x00002aaaaacf6e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00002aaaaacf810e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaacf7805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x00002aaaaacf8590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00002aaaaacf8350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00002aaaaacf78b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00002aaaaacfb2af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00002aaaaacf8b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00002aaaaacfb048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x00002aaaaacf8f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaacf9868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00002aaaaacf9ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaadc65cc : mov edi, dword ptr [rsp + 0x48] ; mov qword ptr [r14], rbx ; call 0x1f8b1
0x00002aaaaadff949 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00002aaaaad8e200 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00002aaaaadd51a0 : mov edi, dword ptr [rsp] ; call rbx
0x00002aaaaae09214 : mov edi, eax ; call qword ptr [r10]
0x00002aaaaadbf27a : mov edi, eax ; call rbx
0x00002aaaaad59bfa : mov edi, eax ; call rcx
0x00002aaaaae09306 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaae09117 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaad1d6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x00002aaaaad58efc : mov edi, eax ; mov rbp, rax ; call 0x82187
0x00002aaaaadfdba4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad58f88 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaae0cb9b : mov edi, ebp ; add rbx, r12 ; call r14
0x00002aaaaae44f7c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaadc6455 : mov edi, ebp ; call 0xef754
0x00002aaaaadcdaf1 : mov edi, ebp ; call 0xf6d04
0x00002aaaaae0075e : mov edi, ebp ; call qword ptr [rbx]
0x00002aaaaadf236e : mov edi, ebp ; call r12
0x00002aaaaad0c1ac : mov edi, ebp ; call r14
0x00002aaaaad0a347 : mov edi, ebp ; call r15
0x00002aaaaadef305 : mov edi, ebp ; call rax
0x00002aaaaad7f6e6 : mov edi, ebp ; call rbx
0x00002aaaaae0e3a1 : mov edi, ebp ; call rcx
0x00002aaaaae00255 : mov edi, ebp ; call rdx
0x00002aaaaadfeed5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae0d8e4 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaae07fca : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaae04b92 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaae0499a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaadfce2e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00002aaaaad0a8b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x00002aaaaad57e13 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaadffb5d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaadc6592 : mov edi, ebx ; call 0x1f7f4
0x00002aaaaadc20f6 : mov edi, ebx ; call 0x3b3c4
0x00002aaaaad8fe7b : mov edi, ebx ; call 0x89164
0x00002aaaaad918fb : mov edi, ebx ; call 0x8ab74
0x00002aaaaada0f15 : mov edi, ebx ; call qword ptr [r15]
0x00002aaaaae00b88 : mov edi, ebx ; call qword ptr [rax]
0x00002aaaaacfcc47 : mov edi, ebx ; call r12
0x00002aaaaacf4be0 : mov edi, ebx ; call r14
0x00002aaaaad3fb49 : mov edi, ebx ; call r8
0x00002aaaaadf1eba : mov edi, ebx ; call rax
0x00002aaaaae464fb : mov edi, ebx ; jne 0x1734f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadfc920 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaadfca22 : mov edi, ebx ; mov r13, rsp ; call r15
0x00002aaaaacf52be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaad9af5b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaad5a556 : mov edi, ebx ; mov rdx, r15 ; call rax
0x00002aaaaad508c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x00002aaaaad4521e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaae0cd20 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaae46688 : mov edi, ebx ; test rdi, rdi ; jne 0x173682 ; pop rbx ; ret
0x00002aaaaadc6656 : mov edi, ecx ; call 0x1f8ac
0x00002aaaaad5b6b8 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaad38d5d : mov edi, edi ; call 0x71fd4
0x00002aaaaad3210f : mov edi, edi ; call 0x7b3a4
0x00002aaaaae0adf0 : mov edi, edi ; call qword ptr [rax]
0x00002aaaaae0cc7e : mov edi, edi ; call r14
0x00002aaaaad47015 : mov edi, edi ; call rax
0x00002aaaaadd5a84 : mov edi, edi ; call rbx
0x00002aaaaadd215d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00002aaaaae0a4af : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaad53d0c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaaddd33c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaad48294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00002aaaaadc65e8 : mov edi, edx ; call 0x1f8ac
0x00002aaaaade75b8 : mov edi, edx ; jmp rax
0x00002aaaaad1d771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00002aaaaad53f47 : mov edi, esi ; call qword ptr [rax]
0x00002aaaaadff6c8 : mov edi, esi ; call rax
0x00002aaaaadd5a64 : mov edi, esi ; call rbx
0x00002aaaaadfede3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaadff92a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaae06533 : mov edi, esp ; call 0x1f7e4
0x00002aaaaae0d9ff : mov edi, esp ; call qword ptr [rax]
0x00002aaaaad0a30a : mov edi, esp ; call r15
0x00002aaaaadfdc96 : mov edi, esp ; call rax
0x00002aaaaad47fe9 : mov edi, esp ; call rbx
0x00002aaaaae0cd91 : mov edi, esp ; call rdx
0x00002aaaaad3da51 : mov edi, esp ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d08
0x00002aaaaad7fd6a : mov edi, esp ; mov r9, r15 ; call rbx
0x00002aaaaad5b2a6 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaadfc5ee : mov edi, esp ; mov rsi, r14 ; call 0x558b7
0x00002aaaaad3da50 : mov edi, r12d ; mov dword ptr [rsp + 0xc], edx ; call 0xf6d09
0x00002aaaaad9e3c9 : mov edx, 0 ; cmove rax, rdx ; ret
0x00002aaaaadf5d17 : mov edx, 0x102 ; cmove eax, edx ; ret
0x00002aaaaadf5cda : mov edx, 0x104 ; cmove eax, edx ; ret
0x00002aaaaadf5cbc : mov edx, 0x107 ; cmove eax, edx ; ret
0x00002aaaaad4b4b6 : mov edx, 0x130 ; pop rbx ; ret
0x00002aaaaae149ba : mov edx, 0x190 ; call 0x2dc47
0x00002aaaaacf4972 : mov edx, 0x2c ; call 0x2dc47
0x00002aaaaadf179f : mov edx, 0x448b0006 ; ret 0x4804
0x00002aaaaadeac62 : mov edx, 0x48fff949 ; add esp, 0x28 ; ret
0x00002aaaaacf4953 : mov edx, 0x4a ; call 0x2dc47
0x00002aaaaae67d4c : mov edx, 0x60fffc5b ; pop rbx ; cld ; call rax
0x00002aaaaae7998d : mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaae79a1d : mov edx, 0x75d00000 ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaadaa3a9 : mov edx, 0x840f002e ; ret 2
0x00002aaaaae559be : mov edx, 0xcac982a4 ; call 0xffffffffaedac83e
0x00002aaaaad96c22 : mov edx, 0xe9ffffea ; ret 0xfff3
0x00002aaaaad60a99 : mov edx, 0xf480001 ; ret 0x66c3
0x00002aaaaacf6b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaad42f7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaaddf3d8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00002aaaaad0d6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00002aaaaae0d89c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaae0d8e6 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaae053ac : mov edx, 5 ; call 0x2e627
0x00002aaaaacf48a0 : mov edx, 8 ; mov eax, edx ; ret
0x00002aaaaae7d1c4 : mov edx, dr0 ; add byte ptr [rax], al ; clc ; sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaad4a465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaad9e93c : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb951 ; call rdx
0x00002aaaaad44f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaacf3827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaade6721 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00002aaaaade6633 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaade62b0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaade6787 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00002aaaaad4b770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaade6c4d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00002aaaaadeaaaf : mov edx, dword ptr [rbx] ; jmp 0x117a78
0x00002aaaaae1a9cf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaae190fd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00002aaaaad4700e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaad484c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00002aaaaade75b1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaad09266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaad5bac5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x88ac9 ; ret
0x00002aaaaae46270 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173282 ; call rdx
0x00002aaaaade693b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00002aaaaad781e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00002aaaaad781d3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00002aaaaad78223 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad8d66d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xba656 ; ret
0x00002aaaaad78233 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaae251e1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaae255a0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24e31 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad797b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad7a5e0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad781b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad7c050 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaad79801 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad7a631 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad781f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad79791 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad7a5b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad78191 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaade12f0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00002aaaaade11ec : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaad56d39 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00002aaaaad43105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaade1884 : mov edx, eax ; jmp 0x10e896
0x00002aaaaade1b8f : mov edx, eax ; jmp 0x10eb9d
0x00002aaaaae071d7 : mov edx, eax ; jmp 0x13419b
0x00002aaaaad441f7 : mov edx, eax ; jmp 0x7118b
0x00002aaaaad44388 : mov edx, eax ; jmp 0x71322
0x00002aaaaad48be3 : mov edx, eax ; jmp 0x75b80
0x00002aaaaad49533 : mov edx, eax ; jmp 0x764d0
0x00002aaaaad49cd0 : mov edx, eax ; jmp 0x76c57
0x00002aaaaad4b0eb : mov edx, eax ; jmp 0x78081
0x00002aaaaad509c4 : mov edx, eax ; jmp 0x7d9e1
0x00002aaaaad59c90 : mov edx, eax ; jmp 0x86c5b
0x00002aaaaad90fb8 : mov edx, eax ; jmp 0xbdfc1
0x00002aaaaada2892 : mov edx, eax ; jmp 0xcf831
0x00002aaaaada75b9 : mov edx, eax ; jmp 0xd45d8
0x00002aaaaada9a9c : mov edx, eax ; jmp 0xd6a7a
0x00002aaaaadabc2c : mov edx, eax ; jmp 0xd8c3b
0x00002aaaaadb3416 : mov edx, eax ; jmp 0xe03b0
0x00002aaaaadc245c : mov edx, eax ; jmp 0xef494
0x00002aaaaadd090c : mov edx, eax ; jmp 0xfd8a0
0x00002aaaaad48513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00002aaaaae15eee : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00002aaaaad0a8b7 : mov edx, ebp ; call r15
0x00002aaaaade6b17 : mov edx, ebp ; call rax
0x00002aaaaad7f802 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x00002aaaaad0a341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaae01923 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaad5ad87 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaad5b2a9 : mov edx, ebp ; mov rsi, rbp ; call rax
0x00002aaaaad0a35c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00002aaaaade62b7 : mov edx, ebx ; call rax
0x00002aaaaae46987 : mov edx, ebx ; jne 0x17397e ; pop rbx ; ret
0x00002aaaaae01815 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaad5aca8 : mov edx, ecx ; jmp 0x87c71
0x00002aaaaad5a559 : mov edx, edi ; call rax
0x00002aaaaad36b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaadef2ff : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaade6728 : mov edx, esi ; call rax
0x00002aaaaade678e : mov edx, esp ; call rax
0x00002aaaaad5a043 : mov edx, esp ; mov rdi, r15 ; call rax
0x00002aaaaae76dad : mov es, word ptr [rax] ; add al, dl ; mov ebp, ebp ; jmp qword ptr [rbx]
0x00002aaaaaddd1b9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00002aaaaae84a5e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x00002aaaaad34cfc : mov es, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00002aaaaadd5f66 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00002aaaaad7a3fe : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00002aaaaad71066 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00002aaaaad5ab33 : mov esi, 0x3948feda ; ret 0x3574
0x00002aaaaad7e92e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaacf6ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaadf9b3b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00002aaaaae686cc : mov esi, 0x64fffca7 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call rsp
0x00002aaaaad71091 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x00002aaaaad70f51 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaad710b5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00002aaaaae79d4d : mov esi, 0x7f200000 ; out dx, eax ; call qword ptr [rdi]
0x00002aaaaadfaff7 : mov esi, 0x83480153 ; ret
0x00002aaaaad70fce : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00002aaaaadc4152 : mov esi, 0x89010544 ; ret
0x00002aaaaad59e85 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00002aaaaadd6a33 : mov esi, 0x8b49fff1 ; call rbx
0x00002aaaaad5fc5f : mov esi, 0x8c48348 ; ret
0x00002aaaaad106df : mov esi, 0xbe0f2414 ; ret 0x8349
0x00002aaaaad7110d : mov esi, 0xc0844507 ; jne 0x9e0f9 ; xor eax, eax ; ret
0x00002aaaaae5415e : mov esi, 0xc2c1c0bf ; ret
0x00002aaaaade1040 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae5b604 : mov esi, 0xc8fff451 ; push rcx ; hlt ; call rdx
0x00002aaaaad70f75 : mov esi, 0xc984070c ; jne 0x9df70 ; ret
0x00002aaaaad70f31 : mov esi, 0xd2840714 ; jne 0x9df30 ; ret
0x00002aaaaad7cfe4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00002aaaaadd1d76 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00002aaaaad71005 : mov esi, 0xf2390714 ; je 0x9e008 ; ret
0x00002aaaaacd5bf1 : mov esi, 0xf8cbeb8f ; ret
0x00002aaaaadef3f6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x00002aaaaadd5aa6 : mov esi, 1 ; call rbx
0x00002aaaaae05437 : mov esi, 1 ; mov ebp, eax ; call 0x12e719
0x00002aaaaadd5c93 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00002aaaaadd5b5f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00002aaaaadd5ad7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00002aaaaadd5f1d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00002aaaaad3fb43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00002aaaaad3f430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00002aaaaadd4c91 : mov esi, 2 ; jmp rax
0x00002aaaaadd5f11 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00002aaaaadd5c84 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00002aaaaadd5b50 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00002aaaaadd5ac8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00002aaaaadd4cab : mov esi, 3 ; jmp rax
0x00002aaaaadd648c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00002aaaaadd64e3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00002aaaaadd6563 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00002aaaaadd6663 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00002aaaaad4fc18 : mov esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad8fe5e : mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad0bf6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaad36b67 : mov esi, dword ptr [rip + 0x35f403] ; call rax
0x00002aaaaad2ee59 : mov esi, dword ptr [rip + 0x367111] ; call rax
0x00002aaaaad2e803 : mov esi, dword ptr [rip + 0x367767] ; call rax
0x00002aaaaad2304b : mov esi, dword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaad203cf : mov esi, dword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaad1af4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaada9a94 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd6a79 ; mov edx, eax ; jmp 0xd6a82
0x00002aaaaae1ff69 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00002aaaaadfe438 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00002aaaaacf4856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaad0b37f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x00002aaaaad57401 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaacf78b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaacfb043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaad56a31 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00002aaaaacf9863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaade11f1 : mov esi, dword ptr [rsp + 8] ; call rax
0x00002aaaaadf2369 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00002aaaaad68f3a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x95f55 ; jmp 0x95f0f
0x00002aaaaad40712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3549
0x00002aaaaae153ef : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaad49a42 : mov esi, ebp ; call 0x4d179
0x00002aaaaad5b2ac : mov esi, ebp ; call rax
0x00002aaaaadc20f3 : mov esi, ebp ; mov rdi, rbx ; call 0x3b3c7
0x00002aaaaad8fe78 : mov esi, ebp ; mov rdi, rbx ; call 0x89167
0x00002aaaaad580ce : mov esi, ebp ; mov rdi, rbx ; call rax
0x00002aaaaad9a90c : mov esi, ebp ; xor edx, edx ; jmp 0xc78da
0x00002aaaaad0a35f : mov esi, ebx ; mov rdi, r12 ; call r15
0x00002aaaaae0aded : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaae0cc7b : mov esi, ebx ; mov rdi, r15 ; call r14
0x00002aaaaad59bf7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x00002aaaaae0e39e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00002aaaaad0c1a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00002aaaaad999e3 : mov esi, edi ; xor edi, edi ; call rax
0x00002aaaaae051da : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaade5738 : mov esi, edx ; call rax
0x00002aaaaacd4bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaad97720 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaadfc5f1 : mov esi, esi ; call 0x558b4
0x00002aaaaacf32f4 : mov esi, esi ; call 0xa9eb8
0x00002aaaaad59e25 : mov esi, esi ; call rax
0x00002aaaaad294ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaad8cb42 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaad8c9b2 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaad1e38b : mov esi, esi ; mov rdi, r13 ; call rax
0x00002aaaaad0a8b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaae0e4c8 : mov esi, esi ; mov rdi, rbp ; call r12
0x00002aaaaae07cb4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00002aaaaada0129 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00002aaaaae046f4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaad976ae : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaadea18c : mov esi, esp ; call 0x73444
0x00002aaaaae0cfa5 : mov esi, esp ; call qword ptr [rax]
0x00002aaaaad0a31b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaad58f85 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaadc6452 : mov esi, esp ; mov rdi, rbp ; call 0xef757
0x00002aaaaad0a344 : mov esi, esp ; mov rdi, rbp ; call r15
0x00002aaaaad5b151 : mov esi, esp ; mov rdi, rbp ; call rax
0x00002aaaaadfce2b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaae00b85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad5a2b3 : mov esi, esp ; mov rdi, rbx ; call rax
0x00002aaaaadfca1f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaad58c8a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad584ad : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaacf32f3 : mov esi, r14d ; call 0xa9eb9
0x00002aaaaae695ac : mov esp, 0x14000096 ; and bl, ch ; call rsp
0x00002aaaaae6bf44 : mov esp, 0x140001a3 ; adc esi, edi ; call rsp
0x00002aaaaae805f4 : mov esp, 0x18000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae46c4a : mov esp, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaae6a11c : mov esp, 0x240000e2 ; outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x00002aaaaae6d4f4 : mov esp, 0x24000234 ; and bh, dl ; call rsp
0x00002aaaaae6fbf4 : mov esp, 0x2800001c ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaae7c6f4 : mov esp, 0x280000e7 ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaae802f4 : mov esp, 0x28000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6ddd1 : mov esp, 0x2ba4fffd ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00002aaaaae6a1a4 : mov esp, 0x40000e4 ; jb 0x1971a0 ; call rsp
0x00002aaaaae6a1f4 : mov esp, 0x40000e6 ; js 0x1971f0 ; call rsp
0x00002aaaaae6c044 : mov esp, 0x40001a6 ; sbb dh, bh ; call rsp
0x00002aaaaae6cccc : mov esp, 0x440001f4 ; fprem ; call rsp
0x00002aaaaad61c87 : mov esp, 0x440f48c7 ; ret 0xc083
0x00002aaaaae0b0a1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x00002aaaaad60f71 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00002aaaaad60fa1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaad60f91 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaae835f4 : mov esp, 0x48000156 ; jnp 0x1b05f7 ; jmp qword ptr [rcx]
0x00002aaaaae6b78c : mov esp, 0x5400017b ; and al, 0xf6 ; call rsp
0x00002aaaaadf9be7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00002aaaaae6b014 : mov esp, 0x64000149 ; insd dword ptr [rdi], dx ; call rsp
0x00002aaaaae761f4 : mov esp, 0x68000082 ; pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaada974e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00002aaaaae811f4 : mov esp, 0x88000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaad893ba : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaadb04d4 : mov esp, 0x89000000 ; ret 0xd139
0x00002aaaaadd6bfc : mov esp, 0x8b49fff1 ; call rbx
0x00002aaaaadd6c09 : mov esp, 0x8b49fff1 ; jge 0x103c17 ; call rbx
0x00002aaaaae69e0c : mov esp, 0x940000d0 ; sbb esi, ebp ; call rsp
0x00002aaaaae6b704 : mov esp, 0x94000178 ; adc al, 0xf6 ; call rsp
0x00002aaaaae6c7ec : mov esp, 0xa40001d1 ; adc edi, eax ; call rsp
0x00002aaaaadad7bb : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaae5aecd : mov esp, 0xb22bfff3 ; jmp rsp
0x00002aaaaae69b25 : mov esp, 0xbb940000 ; in eax, dx ; call rsp
0x00002aaaaad61c76 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00002aaaaae6dc94 : mov esp, 0xc4000116 ; sti ; call rsp
0x00002aaaaadb2b38 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00002aaaaad5dd03 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00002aaaaae69d6c : mov esp, 0xd40000cc ; or esi, ebp ; call rsp
0x00002aaaaae6a0c4 : mov esp, 0xd40000e0 ; out dx, al ; call rsp
0x00002aaaaae6d7fc : mov esp, 0xd4000247 ; pop rbp ; cli ; call rsp
0x00002aaaaae82df4 : mov esp, 0xd800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae87af4 : mov esp, 0xd800019b ; ret
0x00002aaaaae79b85 : mov esp, 0xd9e80000 ; cld ; call qword ptr [rax]
0x00002aaaaae6b68c : mov esp, 0xe4000176 ; or al, 0xf6 ; call rsp
0x00002aaaaae6db4c : mov esp, 0xe400025c ; salc ; cli ; call rsp
0x00002aaaaae84ef4 : mov esp, 0xf800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaad689fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00002aaaaad60f81 : mov esp, 0xf80148c0 ; ret
0x00002aaaaad3a493 : mov esp, 2 ; jmp 0x63703
0x00002aaaaae0a97c : mov esp, dword ptr [rax] ; jmp 0x13798a
0x00002aaaaacf33f8 : mov esp, eax ; call 0xa9fd8
0x00002aaaaad082ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaada195a : mov esp, edi ; je 0xce979 ; call 0x8ab76
0x00002aaaaad3280a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00002aaaaada75b4 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45dd
0x00002aaaaadd4c44 : mov esp, edx ; mov rbp, rax ; call rax
0x00002aaaaae5b9c5 : mov esp, esi ; call rsp
0x00002aaaaae5b9a5 : mov esp, esi ; jmp rdx
0x00002aaaaad718cd : mov esp, esi ; sub rsp, 8 ; call 0x8ab78
0x00002aaaaad508a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaae78e69 : mov gs, esi ; call qword ptr [rcx]
0x00002aaaaad671ae : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad918f7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8ab78
0x00002aaaaadc65d0 : mov qword ptr [r14], rbx ; call 0x1f8ad
0x00002aaaaadc65cf : mov qword ptr [r14], rbx ; call 0x1f8ae
0x00002aaaaad71fe0 : mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaadf6317 : mov qword ptr [r9], r10 ; ret
0x00002aaaaadf63b3 : mov qword ptr [r9], rcx ; ret
0x00002aaaaadf6387 : mov qword ptr [r9], rdi ; ret
0x00002aaaaad44c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad44c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad45bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4a468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaad44c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x00002aaaaad45c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00002aaaaad4eb19 : mov qword ptr [rax + 8], 0 ; ret
0x00002aaaaadcf263 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00002aaaaadf6119 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00002aaaaad45164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00002aaaaad435c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad56565 : mov qword ptr [rax], rdi ; ret
0x00002aaaaad450a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaad009d2 : mov qword ptr [rax], rdx ; ret
0x00002aaaaad45ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00002aaaaada5533 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd255c
0x00002aaaaad21a75 : mov qword ptr [rbp - 0x4e0], r11 ; call 0x8ad19
0x00002aaaaad2064d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00002aaaaacf6655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x00002aaaaade6b12 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00002aaaaad0d5f9 : mov qword ptr [rbp], rdx ; call rax
0x00002aaaaacfd6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00002aaaaad4b456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaae15a05 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaad4b9b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae159bd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaad49ba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0e628 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4e1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadba7da : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00002aaaaad4a494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaad5b6bd : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaadce600 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00002aaaaad4e20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00002aaaaad4b326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00002aaaaad4e429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaad5ba9c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd49e1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00002aaaaae15c30 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaae0a67e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00002aaaaad5b605 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00002aaaaad5bb22 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad5b6ba : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00002aaaaae04723 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x00002aaaaacf357c : mov qword ptr [rcx + 0x968], rax ; ret
0x00002aaaaae3b163 : mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaae3b173 : mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaae3b183 : mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaae3b193 : mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaad1b1ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaada9101 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaad48663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae3b120 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00002aaaaae3b140 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00002aaaaae3b150 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00002aaaaae3b160 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00002aaaaae3b170 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00002aaaaae3b180 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00002aaaaae3b190 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00002aaaaae3b130 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00002aaaaae3b110 : mov qword ptr [rcx], rdx ; ret
0x00002aaaaadc8cda : mov qword ptr [rdi + 0x100], rdx ; ret
0x00002aaaaad1bb3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaad799cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaad7a81c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad7835c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00002aaaaad7833c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad7c28c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad7902f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00002aaaaad7839f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00002aaaaad783bf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00002aaaaad78380 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaad4e132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad4a836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaae0e1f5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00002aaaaade0b59 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10db2d
0x00002aaaaae07d2b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x00002aaaaad67120 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00002aaaaae07ce3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00002aaaaad4e162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad5180a : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaad09048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00002aaaaadc833d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00002aaaaad7998c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00002aaaaad7a7dc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaad782fc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad7c24c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaad799ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00002aaaaad7a7fc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00002aaaaad7831c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7c26c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaae2da07 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d997 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d927 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae2d8b7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7988a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad7a6ca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaae2d847 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7824a : mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad7c13a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaad798aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00002aaaaad7a6ea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaae2d7d7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7825a : mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad7c15a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaad798ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00002aaaaad7a70a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaae2d767 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad7826a : mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaad7c17a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaadd1647 : mov qword ptr [rdi + 8], 0 ; ret
0x00002aaaaad1b2f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00002aaaaad1bac3 : mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaad4e136 : mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaad0dc93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad4af5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00002aaaaad0dc84 : mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaadd1637 : mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaad09471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadf6497 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00002aaaaad6176d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaae24cc4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae24d02 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad1ba2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaae2504b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d217 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2522b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d197 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2541b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d117 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae255ec : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2d088 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae257ec : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cff8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae259ec : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae2cf68 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaad791b0 : mov qword ptr [rdi - 1], rdx ; ret
0x00002aaaaad1b9b9 : mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaae24cc8 : mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaae24d06 : mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae24e7b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24f77 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae24ec3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae2d297 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaad27d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad66ee6 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaad1b988 : mov qword ptr [rdi], r9 ; ret
0x00002aaaaadd1634 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00002aaaaad1d60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaadc658e : mov qword ptr [rdi], rax ; mov rdi, rbx ; call 0x1f7f8
0x00002aaaaad0955a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad79816 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad78ed6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad78226 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad78236 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad78247 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad78257 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad78267 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00002aaaaad6176a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaad78217 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaacf29c2 : mov qword ptr [rdi], rcx ; ret
0x00002aaaaad79803 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaad7a633 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad791d0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00002aaaaad791f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00002aaaaad79200 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00002aaaaad79210 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00002aaaaad79220 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00002aaaaad791e0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00002aaaaad7122f : mov qword ptr [rdi], rdx ; ret
0x00002aaaaad7c0a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaad71fdd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00002aaaaae1ff4d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaad1d0a2 : mov qword ptr [rdi], rsi ; ret
0x00002aaaaad40cb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00002aaaaad4b4b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00002aaaaad440cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00002aaaaad44273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00002aaaaae00bff : mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaae00bdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaae00bdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaae3d51a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00002aaaaae3918a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00002aaaaae3d53a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00002aaaaae391aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00002aaaaae3d55a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00002aaaaae391ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00002aaaaad3e413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x00002aaaaae3d3ea : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00002aaaaae390ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00002aaaaae04740 : mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaae3d393 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00002aaaaae0480a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00002aaaaae39063 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaad0119c : mov qword ptr [rdx], rax ; ret
0x00002aaaaad492de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad44f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad71174 : mov qword ptr [rdx], rcx ; ret
0x00002aaaaadb9f1a : mov qword ptr [rdx], rdi ; ret
0x00002aaaaae0473d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00002aaaaade7ef7 : mov qword ptr [rip + 0x2b2222], rax ; pop rbp ; ret
0x00002aaaaaddb96f : mov qword ptr [rip + 0x2ba8ca], rbx ; pop rbx ; ret
0x00002aaaaadd0904 : mov qword ptr [rip + 0x2c6e95], rax ; mov rdx, rax ; jmp 0xfd8a8
0x00002aaaaadbacc3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaadffd1e : mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad0e295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00002aaaaad0dc03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00002aaaaad4af35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00002aaaaadce5e6 : mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaadc82ae : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00002aaaaadbaca6 : mov qword ptr [rsi + 8], 0 ; ret
0x00002aaaaadffcee : mov qword ptr [rsi + 8], rax ; ret
0x00002aaaaadbacbf : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00002aaaaad1b033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4a83a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00002aaaaadf59ce : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaadf5462 : mov qword ptr [rsi], rdi ; ret
0x00002aaaaadeb770 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00002aaaaad54147 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00002aaaaad54030 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaadb65cd : mov qword ptr [rsp + 0x18], rdx ; call 0x1f8a7
0x00002aaaaad53d0e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaad5408a : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00002aaaaadfe3bc : mov qword ptr [rsp + 0x28], r9 ; call 0x137647
0x00002aaaaad065d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00002aaaaadc650a : mov qword ptr [rsp + 0x40], rax ; call 0x1f7f7
0x00002aaaaadb40b7 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00002aaaaad8e657 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00002aaaaad5b66f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaadd5155 : mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaae0e6fb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00002aaaaad5b9df : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaadfc922 : mov qword ptr [rsp], rcx ; call r12
0x00002aaaaae0a62e : mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaad0d5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaae0a67d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaad0119b : mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaae1ff4c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00002aaaaae559bd : mov r10d, 0xcac982a4 ; call 0xffffffffaedac83f
0x00002aaaaadf8b5e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00002aaaaacf33f7 : mov r12, rax ; call 0xa9fd9
0x00002aaaaada1959 : mov r12, rdi ; je 0xce97a ; call 0x8ab77
0x00002aaaaada75b3 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd45de
0x00002aaaaad718cc : mov r12, rsi ; sub rsp, 8 ; call 0x8ab79
0x00002aaaaad508a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaad3a492 : mov r12d, 2 ; jmp 0x63704
0x00002aaaaae0a97b : mov r12d, dword ptr [rax] ; jmp 0x13798b
0x00002aaaaadd4c43 : mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaad81027 : mov r13, r15 ; setne dl ; jmp 0xae03d
0x00002aaaaad83948 : mov r13, r15 ; setne dl ; jmp 0xb095d
0x00002aaaaad860ff : mov r13, r15 ; setne dl ; jmp 0xb311d
0x00002aaaaad508ac : mov r13, rdx ; call qword ptr [r15]
0x00002aaaaadfca24 : mov r13, rsp ; call r15
0x00002aaaaad38978 : mov r13d, eax ; jmp 0x653d6
0x00002aaaaadd55e8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaae67590 : mov r15b, 0xfd ; call rcx
0x00002aaaaadd16d6 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaadbe37d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaacf485a : mov r9, r14 ; call rbx
0x00002aaaaad7fd6c : mov r9, r15 ; call rbx
0x00002aaaaad9e3fb : mov rax, -0xe ; ret
0x00002aaaaad4b330 : mov rax, -1 ; pop rbx ; ret
0x00002aaaaad083e6 : mov rax, -1 ; ret
0x00002aaaaad7e3c0 : mov rax, 1 ; ret
0x00002aaaaad7e3d0 : mov rax, 2 ; ret
0x00002aaaaad7e3e0 : mov rax, 3 ; ret
0x00002aaaaad7e3f0 : mov rax, 4 ; ret
0x00002aaaaad7e400 : mov rax, 5 ; ret
0x00002aaaaad7e410 : mov rax, 6 ; ret
0x00002aaaaad7e420 : mov rax, 7 ; ret
0x00002aaaaade4fa4 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f74
0x00002aaaaadd8688 : mov rax, qword ptr [rax + 0x108] ; ret
0x00002aaaaae1592e : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00002aaaaaddc02f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaaddbddf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00002aaaaad4e23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00002aaaaad45221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaade6de8 : mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaad4e707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaae073c3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad428c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00002aaaaad42b70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaad47f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x00002aaaaae07c63 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaadd8680 : mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaae0cec4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaadd8678 : mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaacfe01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x00002aaaaad00f14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaad00a1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00002aaaaae0ceb9 : mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaacffb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00002aaaaad0d722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaadfae08 : mov rax, qword ptr [rax] ; ret
0x00002aaaaad5106e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x00002aaaaad579b5 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x849c7 ; call rax
0x00002aaaaad3c60c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x00002aaaaadd55eb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaacf52c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaad4a490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00002aaaaae0a649 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x137661 ; pop rbx ; ret
0x00002aaaaae39060 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00002aaaaad9e9cc : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcb9e3 ; call rax
0x00002aaaaae0e5f2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaae0e190 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad9aca0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaae46387 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1733a0 ; call rax
0x00002aaaaadffd36 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad4a4d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaadffd6e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad4a3c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaad47f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00002aaaaad4fb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00002aaaaae0d648 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae00ab0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00002aaaaae0df58 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00002aaaaae0df68 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae0cec0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaae0ceb5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00002aaaaae0cfa0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaadfe8b6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaad4f84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00002aaaaade75b4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00002aaaaad00eb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaae001c7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaacffb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00002aaaaadb9f17 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaad4f840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x00002aaaaae13333 : mov rax, qword ptr [rip + 0x2840d6] ; call qword ptr [rax]
0x00002aaaaae12d20 : mov rax, qword ptr [rip + 0x2846e9] ; call qword ptr [rax]
0x00002aaaaadf33e0 : mov rax, qword ptr [rip + 0x2a4491] ; ret
0x00002aaaaad54164 : mov rax, qword ptr [rip + 0x341c65] ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad4fb10 : mov rax, qword ptr [rip + 0x347a09] ; ret
0x00002aaaaacfcc90 : mov rax, qword ptr [rip + 0x39ac59] ; ret
0x00002aaaaacf4a50 : mov rax, qword ptr [rip + 0x3a68b9] ; ret
0x00002aaaaacf4a40 : mov rax, qword ptr [rip + 0x3a68d9] ; ret
0x00002aaaaacffb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00002aaaaad9af5d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaacf3829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaadc2456 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49a
0x00002aaaaacf7369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x00002aaaaacf7d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x00002aaaaad0bfe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00002aaaaad0e038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaadd025f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00002aaaaaddc7b2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00002aaaaaddc813 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00002aaaaadfae07 : mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaad673d9 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad614eb : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad3f479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad412b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad5563c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad1d806 : mov rax, r8 ; pop rbx ; ret
0x00002aaaaad50f36 : mov rax, r8 ; ret
0x00002aaaaad4c129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad41ff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad41fcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad40b95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad711d0 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00002aaaaad4ca9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad672c6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad9b573 : mov rax, rbx ; call rax
0x00002aaaaadd823e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00002aaaaacfd835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad40fe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad056aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaad0daae : mov rax, rbx ; pop rbx ; ret
0x00002aaaaadd4409 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00002aaaaad0d68b : mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaad06ea6 : mov rax, rcx ; ret
0x00002aaaaade8880 : mov rax, rdi ; add rsp, 8 ; ret
0x00002aaaaad0d6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00002aaaaad70e66 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad71964 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad697a9 : mov rax, rdi ; pop rbx ; ret
0x00002aaaaad1d60d : mov rax, rdi ; ret
0x00002aaaaadeb4a9 : mov rax, rdi ; sar rax, 6 ; ret
0x00002aaaaad8dcd7 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00002aaaaad5663c : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad50724 : mov rax, rdx ; add rsp, 8 ; ret
0x00002aaaaad69db5 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaade0f7b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad56ff6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad50b2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaad1c0b4 : mov rax, rdx ; pop rbx ; ret
0x00002aaaaad1b4c9 : mov rax, rdx ; ret
0x00002aaaaad9bbb4 : mov rax, rsi ; add rsp, 8 ; ret
0x00002aaaaad1d5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x00002aaaaad42c83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaad9a952 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad42a17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0d1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00002aaaaadef251 : mov rax, rsi ; pop rbx ; ret
0x00002aaaaad1d6f3 : mov rax, rsi ; ret
0x00002aaaaae44f0a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00002aaaaad082ec : mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaad58efe : mov rbp, rax ; call 0x82185
0x00002aaaaadd4c46 : mov rbp, rax ; call rax
0x00002aaaaade7de3 : mov rbp, rsp ; pop rbp ; ret
0x00002aaaaade77f1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaae4667e : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8ae
0x00002aaaaae4667d : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f8af
0x00002aaaaadd59f5 : mov rbx, rax ; call rax
0x00002aaaaae006ba : mov rbx, rax ; jne 0x12d65a ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadceea6 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad0a306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x00002aaaaacff375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x00002aaaaadfe345 : mov rbx, rsi ; sub rsp, 8 ; call 0x137649
0x00002aaaaacfe38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x00002aaaaadfdba6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad78200 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaae07fcc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaae04b94 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaae0499c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaadff92c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaadea188 : mov rcx, r12 ; mov rsi, r12 ; call 0x73448
0x00002aaaaadfce30 : mov rcx, r13 ; call rbx
0x00002aaaaad48290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaad7fab9 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaadfc6bc : mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaad71183 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaad71195 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaae20080 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaae20083 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaadd519f : mov rdi, qword ptr [r12] ; call rbx
0x00002aaaaae465e9 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f8ae
0x00002aaaaae465e0 : mov rdi, qword ptr [r13 + 0x70] ; call 0x1f8ae
0x00002aaaaae465fa : mov rdi, qword ptr [r13] ; call 0x1f8ae
0x00002aaaaad0bf6c : mov rdi, qword ptr [r13] ; call r14
0x00002aaaaadd4da9 : mov rdi, qword ptr [r13] ; call rbx
0x00002aaaaadd4d16 : mov rdi, qword ptr [r14] ; call rbx
0x00002aaaaadd4d57 : mov rdi, qword ptr [r15] ; call rbx
0x00002aaaaad8d470 : mov rdi, qword ptr [rax] ; call r14
0x00002aaaaadd5152 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00002aaaaada1754 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00002aaaaad294ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00002aaaaadbe06f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00002aaaaad7ef54 : mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaadd4ede : mov rdi, qword ptr [rbp] ; call rbx
0x00002aaaaae465bc : mov rdi, qword ptr [rbx] ; call 0x1f8ad
0x00002aaaaad1abb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00002aaaaad40dd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00002aaaaad40d99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00002aaaaad45fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x00002aaaaade5733 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00002aaaaacf7070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00002aaaaacfbab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00002aaaaacf6e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaacf7804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x00002aaaaacf858f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00002aaaaacf834f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00002aaaaacf78b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00002aaaaacfb2ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00002aaaaacf8b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00002aaaaacfb047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00002aaaaacf9867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00002aaaaadff948 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00002aaaaad8e1ff : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00002aaaaae0d9fe : mov rdi, r12 ; call qword ptr [rax]
0x00002aaaaad0a309 : mov rdi, r12 ; call r15
0x00002aaaaae0505c : mov rdi, r12 ; call rax
0x00002aaaaad47fe8 : mov rdi, r12 ; call rbx
0x00002aaaaad7fd69 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaad5b2a5 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaadf236d : mov rdi, r13 ; call r12
0x00002aaaaad0c1ab : mov rdi, r13 ; call r14
0x00002aaaaadef304 : mov rdi, r13 ; call rax
0x00002aaaaadd5a3f : mov rdi, r13 ; call rbx
0x00002aaaaad0a8b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x00002aaaaad53f46 : mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaadff6c7 : mov rdi, r14 ; call rax
0x00002aaaaadd5a63 : mov rdi, r14 ; call rbx
0x00002aaaaadfede2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00002aaaaadff929 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00002aaaaad38d5c : mov rdi, r15 ; call 0x71fd5
0x00002aaaaad3210e : mov rdi, r15 ; call 0x7b3a5
0x00002aaaaae0adef : mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaae0cc7d : mov rdi, r15 ; call r14
0x00002aaaaad47014 : mov rdi, r15 ; call rax
0x00002aaaaadd5a83 : mov rdi, r15 ; call rbx
0x00002aaaaae0a4ae : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00002aaaaad53d0b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaad48293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00002aaaaae09213 : mov rdi, rax ; call qword ptr [r10]
0x00002aaaaadbf279 : mov rdi, rax ; call rbx
0x00002aaaaad59bf9 : mov rdi, rax ; call rcx
0x00002aaaaae09305 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00002aaaaae09116 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00002aaaaad58efb : mov rdi, rax ; mov rbp, rax ; call 0x82188
0x00002aaaaadfdba3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00002aaaaad58f87 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaae0cb9a : mov rdi, rbp ; add rbx, r12 ; call r14
0x00002aaaaae44f7b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaadc6454 : mov rdi, rbp ; call 0xef755
0x00002aaaaae0075d : mov rdi, rbp ; call qword ptr [rbx]
0x00002aaaaae0e4ca : mov rdi, rbp ; call r12
0x00002aaaaadfe43c : mov rdi, rbp ; call r14
0x00002aaaaad0a346 : mov rdi, rbp ; call r15
0x00002aaaaad57405 : mov rdi, rbp ; call rax
0x00002aaaaad7f6e5 : mov rdi, rbp ; call rbx
0x00002aaaaae0e3a0 : mov rdi, rbp ; call rcx
0x00002aaaaae00254 : mov rdi, rbp ; call rdx
0x00002aaaaadfeed4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae07fc9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaae04b91 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaae04999 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaadfce2d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaad57e12 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaadffb5c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaadc6591 : mov rdi, rbx ; call 0x1f7f5
0x00002aaaaadc20f5 : mov rdi, rbx ; call 0x3b3c5
0x00002aaaaad8fe7a : mov rdi, rbx ; call 0x89165
0x00002aaaaad918fa : mov rdi, rbx ; call 0x8ab75
0x00002aaaaada0f14 : mov rdi, rbx ; call qword ptr [r15]
0x00002aaaaae00b87 : mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaacfcc46 : mov rdi, rbx ; call r12
0x00002aaaaacf4bdf : mov rdi, rbx ; call r14
0x00002aaaaad3fb48 : mov rdi, rbx ; call r8
0x00002aaaaadf1eb9 : mov rdi, rbx ; call rax
0x00002aaaaae464fa : mov rdi, rbx ; jne 0x1734f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadfc91f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaadfca21 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00002aaaaacf52bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00002aaaaad9af5a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00002aaaaad5a555 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x00002aaaaad508c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x00002aaaaad4521d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaae0cd1f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaadc6655 : mov rdi, rcx ; call 0x1f8ad
0x00002aaaaadc65e7 : mov rdi, rdx ; call 0x1f8ad
0x00002aaaaade75b7 : mov rdi, rdx ; jmp rax
0x00002aaaaae06532 : mov rdi, rsp ; call 0x1f7e5
0x00002aaaaadfdc95 : mov rdi, rsp ; call rax
0x00002aaaaae0cd90 : mov rdi, rsp ; call rdx
0x00002aaaaadfc5ed : mov rdi, rsp ; mov rsi, r14 ; call 0x558b8
0x00002aaaaad4a464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00002aaaaad9e93b : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcb952 ; call rdx
0x00002aaaaacf3826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00002aaaaae4626f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173283 ; call rdx
0x00002aaaaae24e30 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaad781f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad56d38 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00002aaaaade678d : mov rdx, r12 ; call rax
0x00002aaaaad5a042 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00002aaaaade6b16 : mov rdx, r13 ; call rax
0x00002aaaaad7f801 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00002aaaaae01922 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaad5b2a8 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x00002aaaaade6727 : mov rdx, r14 ; call rax
0x00002aaaaad5a558 : mov rdx, r15 ; call rax
0x00002aaaaadef2fe : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaade1b8e : mov rdx, r8 ; jmp 0x10eb9e
0x00002aaaaada75b8 : mov rdx, r8 ; jmp 0xd45d9
0x00002aaaaadabc2b : mov rdx, r8 ; jmp 0xd8c3c
0x00002aaaaade1883 : mov rdx, rax ; jmp 0x10e897
0x00002aaaaae071d6 : mov rdx, rax ; jmp 0x13419c
0x00002aaaaad509c3 : mov rdx, rax ; jmp 0x7d9e2
0x00002aaaaad59c8f : mov rdx, rax ; jmp 0x86c5c
0x00002aaaaad90fb7 : mov rdx, rax ; jmp 0xbdfc2
0x00002aaaaada2891 : mov rdx, rax ; jmp 0xcf832
0x00002aaaaadb3415 : mov rdx, rax ; jmp 0xe03b1
0x00002aaaaadb3414 : mov rdx, rax ; jmp 0xe03b2
0x00002aaaaadc245b : mov rdx, rax ; jmp 0xef495
0x00002aaaaadd090b : mov rdx, rax ; jmp 0xfd8a1
0x00002aaaaad0a8b6 : mov rdx, rbp ; call r15
0x00002aaaaad5ad86 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaade62b6 : mov rdx, rbx ; call rax
0x00002aaaaae46986 : mov rdx, rbx ; jne 0x17397f ; pop rbx ; ret
0x00002aaaaae01814 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaad5aca7 : mov rdx, rcx ; jmp 0x87c72
0x00002aaaaad0bf69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x00002aaaaad4fc17 : mov rsi, qword ptr [r8 + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad36b66 : mov rsi, qword ptr [rip + 0x35f403] ; call rax
0x00002aaaaad2ee58 : mov rsi, qword ptr [rip + 0x367111] ; call rax
0x00002aaaaad2e802 : mov rsi, qword ptr [rip + 0x367767] ; call rax
0x00002aaaaad2304a : mov rsi, qword ptr [rip + 0x372f1f] ; call rax
0x00002aaaaad203ce : mov rsi, qword ptr [rip + 0x375b9b] ; call rax
0x00002aaaaad1af49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00002aaaaadfe437 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00002aaaaacf4855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00002aaaaad0b37e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x00002aaaaad57400 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaad56a30 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00002aaaaade11f0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaadf2368 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00002aaaaadea18b : mov rsi, r12 ; call 0x73445
0x00002aaaaad0a31a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00002aaaaadc6451 : mov rsi, r12 ; mov rdi, rbp ; call 0xef758
0x00002aaaaad0a343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x00002aaaaad5b150 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00002aaaaadfce2a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00002aaaaad5a2b2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00002aaaaad58c89 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad584ac : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad580cd : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaadfc5f0 : mov rsi, r14 ; call 0x558b5
0x00002aaaaad59e24 : mov rsi, r14 ; call rax
0x00002aaaaad8cb41 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaad8c9b1 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00002aaaaad1e38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x00002aaaaae0e4c7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00002aaaaad0c1a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00002aaaaae153ee : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaad5b2ab : mov rsi, rbp ; call rax
0x00002aaaaadc20f2 : mov rsi, rbp ; mov rdi, rbx ; call 0x3b3c8
0x00002aaaaad8fe77 : mov rsi, rbp ; mov rdi, rbx ; call 0x89168
0x00002aaaaad5afc6 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00002aaaaad9a90b : mov rsi, rbp ; xor edx, edx ; jmp 0xc78db
0x00002aaaaad0a35e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00002aaaaae0adec : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00002aaaaae0cc7a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00002aaaaad59bf6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x00002aaaaae0e39d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00002aaaaad999e2 : mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaae051d9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaade5737 : mov rsi, rdx ; call rax
0x00002aaaaae0cfa4 : mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaae00b84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad082e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00002aaaaae5ab80 : mov sil, bl ; jmp rdx
0x00002aaaaadbe960 : mov word ptr [r8 - 0x77], cs ; ret
0x00002aaaaad72005 : mov word ptr [r9 - 2], cx ; ret
0x00002aaaaae6f3c4 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], ch ; std ; call qword ptr [rcx]
0x00002aaaaad6175d : mov word ptr [rax + rdx - 2], cx ; ret
0x00002aaaaae0f2d5 : mov word ptr [rax - 0x39], cs ; ret
0x00002aaaaadbe961 : mov word ptr [rax - 0x77], cs ; ret
0x00002aaaaad789f0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00002aaaaae6d5fc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaae7f2c4 : mov word ptr [rbx], ss ; add dword ptr [rax], eax ; or bl, bl ; call qword ptr [rdi]
0x00002aaaaae830c4 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], ch ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6d854 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], dh ; cli ; call rsp
0x00002aaaaae3b0f2 : mov word ptr [rcx + 4], dx ; ret
0x00002aaaaae3b133 : mov word ptr [rcx + 8], dx ; ret
0x00002aaaaae813c4 : mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae6b32c : mov word ptr [rcx + rax], fs ; add al, 0x21 ; cmc ; jmp rsp
0x00002aaaaae3b0c0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00002aaaaae3b0b0 : mov word ptr [rcx], dx ; ret
0x00002aaaaae6ab7c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; je 0x197bcc ; call rsp
0x00002aaaaad7990c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00002aaaaad7a75c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00002aaaaad7829c : mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad7c1cc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad79a14 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00002aaaaad7a864 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00002aaaaad78384 : mov word ptr [rdi + 0x18], cx ; ret
0x00002aaaaad7c2d4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaae2dca7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00002aaaaae84ec4 : mov word ptr [rdi + 1], gs ; add al, bh ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaad0e372 : mov word ptr [rdi + 2], dx ; ret
0x00002aaaaad70ef2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00002aaaaad7a608 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00002aaaaad70df2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00002aaaaad781d8 : mov word ptr [rdi + 4], dx ; ret
0x00002aaaaad7c078 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaad7a66a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00002aaaaad7982a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00002aaaaad7821a : mov word ptr [rdi + 8], dx ; ret
0x00002aaaaad7c0da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaae1ff82 : mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaae253cc : mov word ptr [rdi - 2], cx ; ret
0x00002aaaaae251e4 : mov word ptr [rdi - 2], dx ; ret
0x00002aaaaae253c8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaad781a3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00002aaaaad78e76 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00002aaaaad7ca52 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00002aaaaae2dcab : mov word ptr [rdi], cx ; ret
0x00002aaaaad79793 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad7a5b3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00002aaaaad78193 : mov word ptr [rdi], dx ; ret
0x00002aaaaad7c023 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaad70eb0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00002aaaaad70e20 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00002aaaaad72002 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00002aaaaae1ff7f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaadc8370 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00002aaaaae047bf : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x00002aaaaae3d468 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00002aaaaad74f4d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00002aaaaad74fd1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00002aaaaae59d00 : mov word ptr [rdx - 0x12], fs ; call rsp
0x00002aaaaae59d2c : mov word ptr [rdx - 0x12], fs ; jmp rsp
0x00002aaaaae3d413 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00002aaaaad74ee8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00002aaaaaddbdcf : mov word ptr [rdx], ax ; ret
0x00002aaaaae8dc7a : mov word ptr [rdx], cs ; ret
0x00002aaaaae795f3 : mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaae790c2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00002aaaaadcd9b5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00002aaaaad0e2df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00002aaaaad0e326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00002aaaaae5abc0 : mov word ptr [rsi - 0xd], dr1 ; call qword ptr [rdi]
0x00002aaaaad7ca55 : mov word ptr [rsi - 2], cx ; ret
0x00002aaaaadc8353 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaae7d350 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00002aaaaae8dc60 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00002aaaaae80778 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaae82490 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x00002aaaaad08002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00002aaaaad081a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00002aaaaae1ff7e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00002aaaaad10ed9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00002aaaaae852aa : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00002aaaaadad652 : movabs al, byte ptr [0x834801538d000000] ; ret
0x00002aaaaada2e2d : movabs al, byte ptr [0x8348e18948000000] ; ret 0x480f
0x00002aaaaad3668d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00002aaaaad353f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x00002aaaaad45fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00002aaaaadb5d89 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00002aaaaada973b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00002aaaaacd387f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00002aaaaade2a0b : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x00002aaaaadf1e0d : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x00002aaaaad1eb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x00002aaaaad07b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaad0792f : movapd xmm0, xmm1 ; ret
0x00002aaaaad07b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00002aaaaad07acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x00002aaaaad07e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x00002aaaaad07930 : movaps xmm0, xmm1 ; ret
0x00002aaaaae23952 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaae2394e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaae239fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaad07dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad07856 : movd mm0, eax ; ret
0x00002aaaaad07855 : movd mm0, rax ; ret
0x00002aaaaad0792c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x00002aaaaad07cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaad078bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaad07c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaad0792b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00002aaaaad078be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaad07dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad07c0c : movd xmm0, eax ; ret
0x00002aaaaad07cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaad07c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaadb3130 : movdqa xmm0, xmm2 ; jmp 0xe0116
0x00002aaaaad78270 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaad79acd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7a91d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad79130 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaad7843d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad7ab83 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaad79373 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00002aaaaae2d97f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d90f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d89f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d82f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79a6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaad7a8bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaad783dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaae2d7bf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79a8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaad7a8dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaad783fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaae2d74f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79aad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaad7a8fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7841d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaae2dd6f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dcff : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dc8f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dc1f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dbaf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2db3f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dacf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2da5f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d9ef : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad616bc : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8e6d9 ; ret
0x00002aaaaad616d5 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00002aaaaae2cedb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00002aaaaae2cf4b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaad79230 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00002aaaaad7a724 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad798e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaad78f57 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad78284 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad782c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad782b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78338 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad782f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad78318 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad78298 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad78439 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad783d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad783f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad78419 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad78274 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaad7c194 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaae2d754 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad75032 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad75052 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad75072 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad74ebc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad74e66 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaad75033 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad75053 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad75073 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad74ebd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00002aaaaad74e67 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00002aaaaadd426b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x10123f
0x00002aaaaadd426c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x10123e
0x00002aaaaadb3131 : movq mm0, mm2 ; jmp 0xe0115
0x00002aaaaad78271 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaad79ace : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7a91e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad79131 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00002aaaaad7843e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00002aaaaad7c38e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad7ab84 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00002aaaaad79374 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00002aaaaad7c404 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaae2d980 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d910 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d8a0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d830 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79a6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00002aaaaad7a8be : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaad783de : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00002aaaaad7c32e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaae2d7c0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79a8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00002aaaaad7a8de : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaad783fe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00002aaaaad7c34e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaae2d750 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad79aae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00002aaaaad7a8fe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00002aaaaad7841e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00002aaaaad7c36e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaae2dd70 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dd00 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dc90 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dc20 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dbb0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2db40 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2dad0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2da60 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaae2d9f0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad616bd : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8e6d8 ; ret
0x00002aaaaad616d6 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00002aaaaae2cedc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00002aaaaae2cf4c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae2d687 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d607 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d577 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d4f7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d477 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d3f7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d377 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d2f7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d277 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d1f7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d177 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d0f7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2d067 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2cfd7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae2cf47 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaad79231 : movq qword ptr [rdi - 1], mm0 ; ret
0x00002aaaaad7a725 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00002aaaaad798e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00002aaaaad78f58 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00002aaaaad78285 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00002aaaaad782d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00002aaaaad78fab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00002aaaaad782c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00002aaaaad782b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78339 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00002aaaaad782f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00002aaaaad78319 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad78299 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00002aaaaad7843a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00002aaaaad783da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00002aaaaad783fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00002aaaaad7841a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00002aaaaad78275 : movq qword ptr [rdi], mm0 ; ret
0x00002aaaaad7c195 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaae2d755 : movq qword ptr [rdi], mm1 ; ret
0x00002aaaaad07854 : movq xmm0, rax ; ret
0x00002aaaaad0792a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00002aaaaad078bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaae69de8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaacdf429 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaae6c7f0 : movsb byte ptr [rdi], byte ptr [rsi] ; adc edi, eax ; call rsp
0x00002aaaaad3b46a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaada7fb4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4f47
0x00002aaaaadb2b4c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaae883d5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaae6adf8 : movsb byte ptr [rdi], byte ptr [rsi] ; and dh, bl ; jmp rsp
0x00002aaaaae802dc : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], dl ; wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae68959 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffca3]
0x00002aaaaae68995 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00002aaaaae68955 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00002aaaaae56382 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaae7d0dc : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add byte ptr [rax], al ; jo 0x1aa0fe ; jmp qword ptr [rcx]
0x00002aaaaae69de4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0xee ; jmp rsp
0x00002aaaaae575dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x184636 ; jmp 0x184577
0x00002aaaaae68eb0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaae7cddc : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaae07194 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaae071d3 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaae6a950 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; int1 ; call rsp
0x00002aaaaae6bdac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaae6da5c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaae835dc : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaad08047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaad3da58 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00002aaaaae7aadc : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae69bcc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaae674a5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda4]
0x00002aaaaae674a9 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaae673e5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; jmp rcx
0x00002aaaaae6ddd4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x00002aaaaae11724 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad4873f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaade1aba : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00002aaaaae8e8b2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaae80549 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00002aaaaae57c15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaae574d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00002aaaaad71194 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaad1b9e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00002aaaaae465ff : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffea
0x00002aaaaae674ad : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax + 0x10fffda5]
0x00002aaaaae674b1 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaae67431 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaae673ed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp rcx
0x00002aaaaad5b9dc : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaad078c2 : movsd qword ptr [rdi], xmm1 ; ret
0x00002aaaaad0788b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00002aaaaad8dd48 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaad1d1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaae80548 : movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaae153f5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaad07c39 : movss dword ptr [rdi], xmm1 ; ret
0x00002aaaaad07c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00002aaaaad1d18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaade103f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad5d867 : movsx eax, dl ; ret
0x00002aaaaad70f74 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9df71 ; ret
0x00002aaaaad710b4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9e0b1 ; xor eax, eax ; ret
0x00002aaaaad71004 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9e009 ; ret
0x00002aaaaad70f30 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9df31 ; ret
0x00002aaaaad956a8 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaad5c1e1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae2b35b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00002aaaaae2342b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaad70e80 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00002aaaaad70de0 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00002aaaaad70d17 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x00002aaaaad57994 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaad01bb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00002aaaaad1e602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaad36884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00002aaaaada6401 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00002aaaaacf40b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaad3f1d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaad3f301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00002aaaaad018ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00002aaaaad7d017 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x00002aaaaad0db4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00002aaaaae1cb94 : movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaae1ca58 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00002aaaaae1ccad : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00002aaaaae1cb2d : movsxd rax, ecx ; ret
0x00002aaaaae1cbd4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaad788aa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaad1ac91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaae4085d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00002aaaaad78039 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaacfee43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x00002aaaaad2f1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00002aaaaad66d3d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00002aaaaae07cb6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00002aaaaad06297 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00002aaaaadc527c : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaae1ca49 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00002aaaaae1cab0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00002aaaaae1ca77 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00002aaaaadb3e98 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00002aaaaad010b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad00f45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaae234ff : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaad2f148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00002aaaaada3ffe : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00002aaaaadabf65 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00002aaaaad57738 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad01c95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad2ef52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaada012b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00002aaaaad36e45 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00002aaaaadb36b2 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaadf6382 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00002aaaaadf6201 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaad7d0a7 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00002aaaaad97722 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaad7d0df : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00002aaaaad3fa9d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x00002aaaaad0640e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00002aaaaad976b0 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00002aaaaae5c205 : movsxd rsi, ebp ; call qword ptr [rbx]
0x00002aaaaae5c2d9 : movsxd rsi, ebp ; call rsi
0x00002aaaaae5c2e9 : movsxd rsi, ebp ; push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaae6c369 : movsxd rsi, edi ; jmp rsp
0x00002aaaaae441cc : movsxd rsi, esi ; ret 0x7520
0x00002aaaaadce73a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x00002aaaaad0dfe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00002aaaaad8dd49 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00002aaaaad1d18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x00002aaaaad1d1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00002aaaaad6cb47 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaad6cb46 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaad0e171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad078c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x00002aaaaad0788c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00002aaaaad07c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00002aaaaae00aa7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae0dc5b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0062c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadbcdfe : movzx eax, al ; cmova eax, edx ; ret
0x00002aaaaad8d635 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00002aaaaada0006 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00002aaaaad0822c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad9333a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaade1010 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3e34c : movzx eax, al ; neg eax ; pop rbx ; ret
0x00002aaaaad3e319 : movzx eax, al ; neg eax ; ret
0x00002aaaaae05dd5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaae019fa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00002aaaaad99a0b : movzx eax, al ; pop rbx ; ret
0x00002aaaaad08f29 : movzx eax, al ; ret
0x00002aaaaad00d15 : movzx eax, ax ; ret
0x00002aaaaad956a5 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00002aaaaad443fd : movzx eax, bh ; ret
0x00002aaaaad4d78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0274e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00002aaaaad4efb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00002aaaaad4d60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4e2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaad4af62 : movzx eax, byte ptr [rax] ; ret
0x00002aaaaad5d578 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00002aaaaae40870 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaad61110 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaad5d593 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaad4d620 : movzx eax, byte ptr [rdx] ; ret
0x00002aaaaad4d78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad7d037 : movzx eax, cl ; pop rbx ; ret
0x00002aaaaadeb80d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00002aaaaad443fc : movzx eax, dil ; ret
0x00002aaaaad7d05f : movzx eax, dl ; pop rbx ; ret
0x00002aaaaadeb81b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaadeb80c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x00002aaaaad00ece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00002aaaaadc8350 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaad7c5aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa95a9 ; ret
0x00002aaaaad7c65a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9659 ; ret
0x00002aaaaae41714 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00002aaaaad5d590 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00002aaaaae40873 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00002aaaaaddae82 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad06bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x00002aaaaad71b71 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00002aaaaae1720f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00002aaaaad71a03 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00002aaaaae441f4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00002aaaaae44254 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00002aaaaae44244 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00002aaaaae44234 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00002aaaaae44224 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00002aaaaae44214 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00002aaaaae44204 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00002aaaaae2d6a0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae414c7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00002aaaaae441db : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00002aaaaae2dd80 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00002aaaaad61113 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00002aaaaad61139 : movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaae2d620 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaae2dd10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00002aaaaad7ef51 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00002aaaaadcad74 : movzx rax, al ; ret
0x00002aaaaae67440 : mul byte ptr [rdi - 0x57790003] ; std ; jmp qword ptr [rsi]
0x00002aaaaad5f977 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaae58cbc : mul dword ptr [rbp - 0x13] ; call rdx
0x00002aaaaaddba41 : mul dword ptr [rdi + 0x2002b] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaad07951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaad07cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaad07950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00002aaaaad07cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00002aaaaad41797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaae0916f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae097ba : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaad08777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00002aaaaade1013 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3e34f : neg eax ; pop rbx ; ret
0x00002aaaaacf421d : neg eax ; ret
0x00002aaaaad5a951 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad508c5 : neg edi ; call qword ptr [r15]
0x00002aaaaadc9a91 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00002aaaaad508c4 : neg rdi ; call qword ptr [r15]
0x00002aaaaadb6378 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00002aaaaad46ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00002aaaaad4d3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00002aaaaae2cdd7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaad08a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae40b7c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaacf6ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaadcf95d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad94682 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaae7385d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a0875 ; ret
0x00002aaaaae7386b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaae77cc0 : nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaad1e605 : nop ; add rax, rdi ; jmp rax
0x00002aaaaad2ef55 : nop ; add rax, rdx ; jmp rax
0x00002aaaaad7d0aa : nop ; add rax, rsi ; jmp rax
0x00002aaaaad8c45f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad3dc4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaacf4a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4ad4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaae67b40 : nop ; and ah, bh ; jmp rax
0x00002aaaaad488bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaae84d90 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaadb070c : nop ; and esp, esi ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00002aaaaad60f6f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00002aaaaad7151f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaad716af : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00002aaaaae80230 : nop ; cdq ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae68a3d : nop ; cld ; call rax
0x00002aaaaad0812f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00002aaaaae7fdc1 : nop ; hlt ; call qword ptr [rcx]
0x00002aaaaae7fda9 : nop ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae815a0 : nop ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae5b540 : nop ; hlt ; jmp rax
0x00002aaaaae67974 : nop ; hlt ; sti ; jmp rax
0x00002aaaaae782b0 : nop ; in al, -4 ; call qword ptr [rdx]
0x00002aaaaae6762c : nop ; in eax, -5 ; jmp qword ptr [rax]
0x00002aaaaae770b1 : nop ; in eax, dx ; call qword ptr [rdx]
0x00002aaaaae75c60 : nop ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae67920 : nop ; in eax, dx ; sti ; jmp rax
0x00002aaaaae47c90 : nop ; jb 0x174c81 ; call rax
0x00002aaaaad082ef : nop ; jmp rdx
0x00002aaaaae6acc9 : nop ; jmp rsp
0x00002aaaaae67628 : nop ; jrcxz 0x19462d ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaae6897c : nop ; lahf ; cld ; call qword ptr [rax]
0x00002aaaaadabf6f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00002aaaaae24fff : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaade7c1f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00002aaaaae251df : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00002aaaaadc92ef : nop ; mov eax, 0x5f ; syscall ; ret
0x00002aaaaad9fe5f : nop ; mov eax, 0xfffa ; ret
0x00002aaaaad4506f : nop ; mov eax, 0xffffffff ; ret
0x00002aaaaad7f1bf : nop ; mov eax, 1 ; ret
0x00002aaaaade6d67 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00002aaaaade61df : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaad7e04f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xab0b9 ; ret
0x00002aaaaad7e09f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xab0b9 ; ret
0x00002aaaaadce71f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00002aaaaad4aeff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaad0986f : nop ; mov eax, dword ptr [rip + 0x38c816] ; ret
0x00002aaaaaddd1bf : nop ; mov eax, edi ; ret
0x00002aaaaadeb7af : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00002aaaaad098cf : nop ; mov eax, edx ; ret
0x00002aaaaae2559f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad797af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad4b32f : nop ; mov rax, -1 ; pop rbx ; ret
0x00002aaaaad4ef3f : nop ; mov rax, -1 ; ret
0x00002aaaaad4a4cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad4a3bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaae0cebf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x00002aaaaae0cf9f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00002aaaaadf33df : nop ; mov rax, qword ptr [rip + 0x2a4491] ; ret
0x00002aaaaada3bbf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad50398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad710bf : nop ; mov rax, rdi ; ret
0x00002aaaaade6b15 : nop ; mov rdx, r13 ; call rax
0x00002aaaaad573ff : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00002aaaaadc836f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00002aaaaad7826f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00002aaaaae68994 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00002aaaaae674a8 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaae674b0 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call qword ptr [rax]
0x00002aaaaad57993 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00002aaaaadc834f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00002aaaaae82db0 : nop ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaade2e6f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaadc8e2f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad1d49f : nop ; pop rbx ; ret
0x00002aaaaae67b6c : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaae67d84 : nop ; pop rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaae72e60 : nop ; pop rsp ; jmp 0x19fe66
0x00002aaaaae67310 : nop ; pop rsp ; sti ; jmp rax
0x00002aaaaae67fac : nop ; push rbp ; cld ; call qword ptr [rax]
0x00002aaaaae67fbc : nop ; push rbx ; cld ; call qword ptr [rax]
0x00002aaaaae67f9c : nop ; push rdi ; cld ; call qword ptr [rax]
0x00002aaaaae5b970 : nop ; push rdx ; hlt ; jmp rax
0x00002aaaaae67fa4 : nop ; push rsi ; cld ; call qword ptr [rax]
0x00002aaaaae67fb4 : nop ; push rsp ; cld ; call qword ptr [rax]
0x00002aaaaacf358f : nop ; ret
0x00002aaaaacd5f9e : nop ; ret 0x5bdb
0x00002aaaaacd8690 : nop ; ret 0xf
0x00002aaaaae67aec : nop ; sbb esp, edi ; jmp rax
0x00002aaaaae68768 : nop ; stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x00002aaaaad4f88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaae5a6b4 : nop ; sub edx, esi ; call qword ptr [rax]
0x00002aaaaae80670 : nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae68270 : nop ; test bh, ah ; jmp qword ptr [rax]
0x00002aaaaae674cc : nop ; test eax, 0xb59dfffd ; std ; call rcx
0x00002aaaaae68058 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x00002aaaaae67a6c : nop ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaae67a68 : nop ; xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaae679cc : nop ; xor eax, 0x2820fffc ; cld ; jmp rax
0x00002aaaaad99cff : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad47f5f : nop ; xor eax, eax ; ret
0x00002aaaaae679c8 : nop ; xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaad60fef : nop ; xor rax, rax ; ret
0x00002aaaaae15df8 : nop dword ptr [rax + rax] ; call rcx
0x00002aaaaad080d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x00002aaaaad4602b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad43153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00002aaaaad781ab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaade6de3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00002aaaaadd8673 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x00002aaaaad06eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00002aaaaad7941b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaadfe99b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00002aaaaad18a33 : nop dword ptr [rax + rax] ; ret
0x00002aaaaad0d7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad0cf03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaad7e0bb : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00002aaaaad3e475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00002aaaaad7e38c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00002aaaaae46885 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaae15ab4 : nop dword ptr [rax] ; call qword ptr [rax]
0x00002aaaaae47549 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00002aaaaad7ec95 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaad7ec85 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad7ec8d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00002aaaaad9fe55 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00002aaaaad098c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00002aaaaad5ba25 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00002aaaaae0049d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00002aaaaad9adad : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00002aaaaad475fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad00f1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00002aaaaad78e7d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00002aaaaad49ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x00002aaaaad66e64 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaadd867d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaad56d35 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00002aaaaad56a2c : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00002aaaaad40ded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00002aaaaad570f4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad8c3fc : nop dword ptr [rax] ; pop rbx ; ret
0x00002aaaaacfed51 : nop dword ptr [rax] ; ret
0x00002aaaaade3015 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00002aaaaadaa0cd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaada970d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad3dcd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaad07a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad78e37 : nop dword ptr cs:[rax + rax] ; ret
0x00002aaaaae15df7 : nop word ptr [rax + rax] ; call rcx
0x00002aaaaad080d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x00002aaaaad4602a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00002aaaaad06eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00002aaaaad7941a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00002aaaaadfe99a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00002aaaaad18a3a : nop word ptr [rax + rax] ; ret
0x00002aaaaad0d7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad0cf02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00002aaaaad7e0ba : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00002aaaaad91b3e : not eax ; add eax, 0x16e ; ret
0x00002aaaaae0e861 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00002aaaaada9652 : not eax ; and eax, 2 ; ret
0x00002aaaaad07790 : not eax ; and eax, edx ; ret
0x00002aaaaad08f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaacf48e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaad08f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00002aaaaae71580 : or ah, 0xe9 ; call qword ptr [rsi]
0x00002aaaaae677b4 : or ah, 0xfb ; call rax
0x00002aaaaae6b189 : or ah, dh ; call rsp
0x00002aaaaad392e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaae18187 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1bd99 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae181b5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaadcf27a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaad54b3c : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaadae541 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad5c150 : or al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaad5533a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad392cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaacd344f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00002aaaaad92501 : or al, 0 ; add rax, rdi ; jmp rax
0x00002aaaaadceb12 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad615ea : or al, 0 ; cmove rax, rdx ; ret
0x00002aaaaad7e0f0 : or al, 0 ; ret
0x00002aaaaad67e02 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x94df9 ; ret
0x00002aaaaad5d576 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00002aaaaad554c2 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00002aaaaad90fb5 : or al, 0x20 ; mov rdx, rax ; jmp 0xbdfc4
0x00002aaaaadfc924 : or al, 0x24 ; call r12
0x00002aaaaae80544 : or al, 0x26 ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; hlt ; call rax
0x00002aaaaade5335 : or al, 0x2b ; add byte ptr [rax + 0xf], cl ; ret
0x00002aaaaae80e44 : or al, 0x2f ; add dword ptr [rax], eax ; pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaadd997a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x00002aaaaad26997 : or al, 0x31 ; div dh ; ret 0x4050
0x00002aaaaae05c1b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae81144 : or al, 0x32 ; add dword ptr [rax], eax ; fsub st(6) ; hlt ; jmp qword ptr [rbx]
0x00002aaaaad9e532 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad0883c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00002aaaaade9cfb : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad0db4e : or al, 0x48 ; add esp, 0x18 ; ret
0x00002aaaaad9ba73 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae15be1 : or al, 0x48 ; add esp, 0x38 ; ret
0x00002aaaaad08be9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x00002aaaaad43f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaadf5461 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00002aaaaad7e6a4 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad99a83 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad5d973 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00002aaaaad8da92 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00002aaaaade773a : or al, 0x5d ; pop r12 ; ret
0x00002aaaaae5c048 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x00002aaaaad60b68 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00002aaaaad3f6da : or al, 0x7e ; ret
0x00002aaaaacd34b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaad788ac : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaad1ec85 : or al, 0x83 ; ret
0x00002aaaaad2455c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00002aaaaad70e82 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00002aaaaad66d3f : or al, 0x88 ; add rax, rcx ; jmp rax
0x00002aaaaacfee45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00002aaaaae76844 : or al, 0x89 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x13] ; jmp qword ptr [rcx]
0x00002aaaaadb9a35 : or al, 0x89 ; push rsp ; ret
0x00002aaaaadeb0fb : or al, 0x89 ; ret 0x6ae9
0x00002aaaaadc527e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00002aaaaad5c1e3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaad640c4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00002aaaaae2b35d : or al, 0x8b ; add r9, r11 ; jmp r9
0x00002aaaaad1ac93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x00002aaaaae2342d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00002aaaaad10495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaaddd1b8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00002aaaaad06299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00002aaaaae4085f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00002aaaaad7803b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaad2f1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00002aaaaae8e8b1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00002aaaaae78844 : or al, 0xa9 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00002aaaaacd5bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x00002aaaaae23431 : or al, 0xb ; jmp r9
0x00002aaaaad7803f : or al, 0xb ; jmp rcx
0x00002aaaaae07cb8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x00002aaaaae0eb07 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaae07cce : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad0946f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae7a644 : or al, 0xc7 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00002aaaaad09473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd4d98 : or al, 0xdb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaae7be44 : or al, 0xdf ; add byte ptr [rax], al ; int1 ; call qword ptr [rdx]
0x00002aaaaad3da56 : or al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 8
0x00002aaaaad7dfa5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad78b33 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae2d8a3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaad087a3 : or al, 0xf3 ; ret
0x00002aaaaae7d544 : or al, 0xf6 ; add byte ptr [rax], al ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae6b691 : or al, 0xf6 ; call rsp
0x00002aaaaadf4da2 : or al, 0xf6 ; ret 0xc602
0x00002aaaaad3fe2b : or al, 0xf6 ; ret 0xf04
0x00002aaaaad2978c : or al, 0xf6 ; ret 0xf08
0x00002aaaaadd35d5 : or al, 0xf7 ; ret 0xfc07
0x00002aaaaacfe391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x00002aaaaae678ad : or al, 0xfc ; call qword ptr [rax]
0x00002aaaaae678cd : or al, 0xfc ; call rax
0x00002aaaaadc8c12 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaacd3884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00002aaaaadc8d02 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae8e344 : or al, 4 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaad78d70 : or al, 5 ; add byte ptr [rax], al ; ret
0x00002aaaaad8c265 : or al, 5 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00002aaaaad8c2b9 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00002aaaaad1e78c : or al, 6 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad70f76 : or al, 7 ; test cl, cl ; jne 0x9df6f ; ret
0x00002aaaaad6f93f : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaad69f7b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaad862fd : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00002aaaaad0a371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaae1735d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19f71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17381 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaace32a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaace3af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaadffd92 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaae68a85 : or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaadb2191 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00002aaaaadb4418 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaadb869e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad7ea5a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00002aaaaad0ffc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00002aaaaad422bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x00002aaaaadf8769 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00002aaaaacd34b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaae6cf0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], ah ; stc ; call rsp
0x00002aaaaae1f357 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad718d2 : or al, ch ; cwde ; ret 0xfffe
0x00002aaaaad18b5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadfd4a2 : or al, ch ; mov byte ptr [rbx - 0x11], dl ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadfe34b : or al, ch ; out dx, eax ; ret 0
0x00002aaaaad40cd7 : or al, ch ; ret
0x00002aaaaae678c9 : or bh, ah ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae0e017 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad5d8a1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x00002aaaaad4a81d : or bh, byte ptr [rax - 1] ; ret
0x00002aaaaad8c2bf : or bh, byte ptr [rcx] ; ret
0x00002aaaaadb755f : or bh, dh ; ret
0x00002aaaaadd222f : or bh, dh ; ret 0xfc07
0x00002aaaaadfd40e : or bl, al ; mov eax, 1 ; ret
0x00002aaaaad7ec93 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00002aaaaadd867b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00002aaaaadf65a3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaadf6400 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00002aaaaae7f2c8 : or bl, bl ; call qword ptr [rdi]
0x00002aaaaae8eac6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bbadd ; ret 0xb
0x00002aaaaacd52dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x00002aaaaad690c5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaadbcab8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x00002aaaaadeb79d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaad4b0e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x00002aaaaae2da63 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaad00a7f : or bl, dh ; ret
0x00002aaaaada7db8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00002aaaaadfe8b8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00002aaaaada7d31 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00002aaaaad06e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaad7ee86 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad74fcf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaada7d22 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00002aaaaada7dee : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00002aaaaad47087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00002aaaaada9672 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00002aaaaada7e01 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaae0df5a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00002aaaaad74fae : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaae390b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaae00b82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaae0adea : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaadbdd4f : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00002aaaaad0cf32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaadd5617 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaae1f532 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad91723 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00002aaaaadabd54 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00002aaaaad7500e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaad4550f : or byte ptr [r9 - 0x77], r9b ; ret
0x00002aaaaada7d91 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00002aaaaada7d51 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00002aaaaadfe383 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad47088 : or byte ptr [rax + 0x29], cl ; ret
0x00002aaaaae11db4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00002aaaaae12a37 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00002aaaaad8e0d3 : or byte ptr [rax + 0x29], r9b ; ret
0x00002aaaaad4fc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00002aaaaadd80b5 : or byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad549fc : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaad1be15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00002aaaaae05b09 : or byte ptr [rax + 0x63], cl ; ret
0x00002aaaaada9673 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00002aaaaae7c2ca : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00002aaaaae822ac : or byte ptr [rax + 0xb], cl ; ret
0x00002aaaaae7ee0d : or byte ptr [rax + 0xb], dl ; ret
0x00002aaaaadeb80b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00002aaaaade0e6f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad040dc : or byte ptr [rax + 1], cl ; ret
0x00002aaaaadd87ee : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaade53bb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad1e158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00002aaaaada7e02 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaadb0b1b : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaae0211b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00002aaaaad6179e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x00002aaaaad61012 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x00002aaaaad6688d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x00002aaaaad6685e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00002aaaaad7ecc6 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31b2 ; ret
0x00002aaaaad61026 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf812 ; ret
0x00002aaaaad7ecb2 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00002aaaaad7e0e2 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x00002aaaaade863e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8984a ; ret
0x00002aaaaade872e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89eaa ; ret
0x00002aaaaae0d9f8 : or byte ptr [rax - 0x73], cl ; je 0x13aa2a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaae0db3c : or byte ptr [rax - 0x73], cl ; je 0x13ab6e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaad51b83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaaddc7b1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00002aaaaaddc812 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00002aaaaadd5151 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00002aaaaadc65a6 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaadaf1bf : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaae0df5b : or byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaad40dd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00002aaaaadffd6d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaae07c62 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaad74faf : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaade62b5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00002aaaaad5bb4b : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaad0bf4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad74ec0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaadeb4a8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00002aaaaad056a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00002aaaaae0adeb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00002aaaaae0cd1e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00002aaaaae390b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaae00b83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaad57e11 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaadffb5b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaad50b2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaad6b3e7 : or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae01d65 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00002aaaaae0dc8f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00002aaaaadc20cb : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaacf6433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaad0cf33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad5ba1d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00002aaaaad5bac7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaad5bd29 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00002aaaaad549f8 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc241620f
0x00002aaaaad549f7 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416210
0x00002aaaaad554f8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad1bc36 : or byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad66ef6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad66f7e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaad4167e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00002aaaaad27d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00002aaaaad4344b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad4713d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaae175bc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaadd868a : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaad509d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaad50995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00002aaaaae175bd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a111 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae175e1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaad8e9d7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00002aaaaad4eb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00002aaaaad564d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00002aaaaacecee0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret
0x00002aaaaacf1608 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18bb
0x00002aaaaacee380 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18e7
0x00002aaaaacde530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00002aaaaacecec8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00002aaaaacf48a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00002aaaaad7d0e9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaadffda2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad563d6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x833a9 ; ret
0x00002aaaaadc572c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadc6cae : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00002aaaaad1d608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00002aaaaadd827d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaaddae80 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00002aaaaad7c0dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c11b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaad7c0bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaad3dbcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaae1db2e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad1b76c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaadf629f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00002aaaaad7ee87 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaada9344 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00002aaaaad8d672 : or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaad1031d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaad7eb79 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaadae9fb : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00002aaaaacd6cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaacf2c02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x00002aaaaae00c8b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x00002aaaaad44fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00002aaaaad05dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad5ba9f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaacf4a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad4c15a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x00002aaaaae6f51d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x00002aaaaad06e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaad23197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00002aaaaae100ee : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00002aaaaad403d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00002aaaaad43a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaae7cbb8 : or byte ptr [rbx], al ; call rdi
0x00002aaaaae8e981 : or byte ptr [rbx], al ; ret
0x00002aaaaad1d00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaad91724 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x00002aaaaad27b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaae14ac5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00002aaaaadb3e97 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00002aaaaadabd55 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00002aaaaae732ea : or byte ptr [rcx + 0xb], cl ; ret
0x00002aaaaad3f203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaad1b42b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaad1c0b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00002aaaaae10ef3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00002aaaaae03ac3 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x00002aaaaadf236c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00002aaaaae0d9fd : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00002aaaaad0ad67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x00002aaaaad0c1a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x00002aaaaae7b4e8 : or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaad1b432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00002aaaaad4a63a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaada930c : or byte ptr [rcx - 0x75], cl ; je 0xd633c ; or byte ptr [rcx], ch ; ret
0x00002aaaaad7500f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00002aaaaadaca43 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaad45510 : or byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad0fe6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x00002aaaaaddc888 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10989a ; ret
0x00002aaaaaddc918 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10992a ; ret
0x00002aaaaaddc9b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1099ca ; ret
0x00002aaaaaddca48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109a5a ; ret
0x00002aaaaaddcad8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109aea ; ret
0x00002aaaaaddcb68 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109b7a ; ret
0x00002aaaaaddcc08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109c1a ; ret
0x00002aaaaaddcca8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109cba ; ret
0x00002aaaaaddcd48 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109d5a ; ret
0x00002aaaaaddcdd8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109dea ; ret
0x00002aaaaaddce73 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109e85 ; ret
0x00002aaaaaddcf08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x109f1a ; ret
0x00002aaaaaddd22a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a23c ; ret
0x00002aaaaaddd2aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a2bc ; ret
0x00002aaaaaddd32a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a33c ; ret
0x00002aaaaaddd3aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a3bc ; ret
0x00002aaaaaddd42a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a43c ; ret
0x00002aaaaaddd4aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a4bc ; ret
0x00002aaaaaddd52a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a53c ; ret
0x00002aaaaaddd5aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5bc ; ret
0x00002aaaaaddd62a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a63c ; ret
0x00002aaaaaddd6aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6bc ; ret
0x00002aaaaaddd727 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a739 ; ret
0x00002aaaaaddd7aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a7bc ; ret
0x00002aaaaad55f79 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaad0c09a : or byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaadb60f8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x00002aaaaad0a611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00002aaaaadbb02a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00002aaaaadc8c22 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaad089df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaadc8d14 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae6a6c5 : or byte ptr [rcx], al ; add byte ptr [rbx + rdi*8], dh ; out dx, eax ; call rsp
0x00002aaaaada7dd7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00002aaaaada7d52 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00002aaaaad8d66f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaae11823 : or byte ptr [rcx], bh ; ret 0x3875
0x00002aaaaae74ec8 : or byte ptr [rcx], bl ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaada7d92 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00002aaaaad8c33d : or byte ptr [rcx], ch ; ret
0x00002aaaaadf791c : or byte ptr [rcx], cl ; ret 0xb60f
0x00002aaaaade7e50 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00002aaaaacf5b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaadb9fdb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad50b6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaad4f8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae57e9e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00002aaaaae763f3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00002aaaaae74a74 : or byte ptr [rdi + 0xb], al ; jae 0x1a1a88 ; ret
0x00002aaaaae726f9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x00002aaaaae82e28 : or byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaacf9ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x00002aaaaacfd219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00002aaaaad00d14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00002aaaaad4e42c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaad4af61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaada16b3 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaad3f851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00002aaaaad4afcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaae019f9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaad183b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaad08d64 : or byte ptr [rdi], cl ; ret 0xc289
0x00002aaaaae239fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00002aaaaad1a53f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x00002aaaaad1f38e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00002aaaaacf386a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00002aaaaae6ffa2 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00002aaaaae862f8 : or byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00002aaaaae89e98 : or byte ptr [rdx - 9], ch ; jmp rsi
0x00002aaaaae8e76d : or byte ptr [rdx], al ; add byte ptr [rax], al ; jp 0x1bb771 ; call qword ptr [rcx]
0x00002aaaaadaa0c7 : or byte ptr [rdx], al ; jne 0xd70a5 ; jmp 0xd7095
0x00002aaaaada7d32 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00002aaaaada7db9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00002aaaaadfe8b9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00002aaaaadce722 : or byte ptr [rip + 0x100f], ah ; ret
0x00002aaaaadce721 : or byte ptr [rip + 0x100f], r12b ; ret
0x00002aaaaae6780c : or byte ptr [rip + 0x10fffc], 0xfc ; call rax
0x00002aaaaadcea0a : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00002aaaaad77bc1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00002aaaaade1b8b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10eba1
0x00002aaaaada9751 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00002aaaaad74fd0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00002aaaaada7def : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00002aaaaadbfff0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00002aaaaada7d23 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00002aaaaae678ac : or byte ptr [rsp + rdi*8], 0xff ; adc bh, bh ; sti ; call rax
0x00002aaaaacd6cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaae71640 : or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaad68f41 : or ch, bl ; ret 0x1f0f
0x00002aaaaae8e9e8 : or ch, byte ptr [rdi + 5] ; ret
0x00002aaaaae8eacb : or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaad1a63f : or cl, al ; call 0xffffffffc28db76b
0x00002aaaaadaca40 : or cl, al ; jmp 0xffffffffc296db55
0x00002aaaaadaca3f : or cl, al ; jmp 0xffffffffc296db56
0x00002aaaaadacb43 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaad0805b : or cl, bl ; std ; fstp st(1) ; ret
0x00002aaaaad8d717 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00002aaaaacfcd94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00002aaaaad7e5b5 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x00002aaaaad4d5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00002aaaaad4bbd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00002aaaaad392cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad45faf : or cl, byte ptr [rax - 0x77] ; ret
0x00002aaaaadba866 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00002aaaaad93a12 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00002aaaaad4275c : or cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaad600ba : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaadabc2f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00002aaaaad1dc1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaad1045d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaad44f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00002aaaaadeb845 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x00002aaaaacf2963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x00002aaaaae1046f : or cl, byte ptr [rcx + 0x39] ; ret
0x00002aaaaade0ad2 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00002aaaaadeb7c5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x00002aaaaae3afe6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad587da : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00002aaaaad10323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaae100f1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00002aaaaad086f7 : or cl, ch ; ret
0x00002aaaaadb7b40 : or cl, ch ; ret 0xfffe
0x00002aaaaacd5beb : or cl, cl ; clc ; ret
0x00002aaaaad5fc05 : or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaae2d983 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaadd7ad5 : or dh, bl ; ret
0x00002aaaaad7d266 : or dh, byte ptr [rbp - 0x11] ; ret
0x00002aaaaae6b659 : or dh, dh ; jmp rsp
0x00002aaaaad545d3 : or dh, dh ; ret 0x7404
0x00002aaaaadc9613 : or dh, dh ; ret 0x7540
0x00002aaaaae00294 : or dh, dh ; ret 0x8802
0x00002aaaaad54546 : or dh, dh ; ret 0xf04
0x00002aaaaacf2e58 : or dh, dh ; ret 0xf08
0x00002aaaaad023de : or dh, dh ; ret 0xfdf
0x00002aaaaae7cde1 : or dh, dl ; call rsi
0x00002aaaaae678c8 : or dil, spl ; inc dword ptr [rax + 0xc] ; cld ; call rax
0x00002aaaaae888a8 : or dl, ah ; sti ; call rsi
0x00002aaaaae7f1d8 : or dl, bl ; jmp qword ptr [rcx]
0x00002aaaaae59df0 : or dl, bl ; out dx, eax ; jmp qword ptr [rax]
0x00002aaaaad67ba2 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaae5b4bc : or dl, ch ; call qword ptr [rdi]
0x00002aaaaae5b4d4 : or dl, ch ; jmp qword ptr [rdi]
0x00002aaaaad3956e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaadf22c0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a83d8 ; call rax
0x00002aaaaae046a3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00002aaaaade0c09 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2419
0x00002aaaaad6b76b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00002aaaaad5bebe : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00002aaaaacf3580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaae174ed : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d9df : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17447 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaad46c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00002aaaaacf422a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00002aaaaadc8188 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3956f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad77115 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaad488b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00002aaaaadc4553 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00002aaaaadc527a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaadc4a47 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00002aaaaae8eb1e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bbb34 ; ret 0xa
0x00002aaaaad1043d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaae5b74c : or dword ptr [rbp - 0xc], edx ; call qword ptr [rbx]
0x00002aaaaae41c96 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00002aaaaae005b6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaade04b6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaadc115b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x00002aaaaae5b684 : or dword ptr [rbx - 0xc], edx ; call qword ptr [rbx]
0x00002aaaaad40de3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad4b9d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaad500a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00002aaaaade5483 : or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaad1b8bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x00002aaaaad5d818 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x00002aaaaad43fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00002aaaaad587a6 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00002aaaaad68094 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaada7740 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00002aaaaad58989 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00002aaaaae15b46 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaad8fbab : or dword ptr [rdi + 0x1490030], ecx ; ret
0x00002aaaaad08f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00002aaaaad40df0 : or dword ptr [rdi], 0x20 ; ret
0x00002aaaaadce7d7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00002aaaaad09086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00002aaaaadef3fb : or dword ptr [rdi], ecx ; ret
0x00002aaaaae3afc6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaad5d7c2 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00002aaaaadd3f3a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadd44ba : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae80b8a : or dword ptr [rsi], 0x54028310 ; ret
0x00002aaaaacf99b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x00002aaaaae8eb23 : or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaae09793 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00002aaaaad5aca2 : or eax, 0x10429e ; mov rdx, rcx ; jmp 0x87c77
0x00002aaaaadcecfa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae6780d : or eax, 0x10fffc ; cld ; call rax
0x00002aaaaad077fb : or eax, 0x15ef10 ; orpd xmm0, xmm1 ; ret
0x00002aaaaad79a71 : or eax, 0x1c478d48 ; ret
0x00002aaaaad7a8c1 : or eax, 0x1d478d48 ; ret
0x00002aaaaae3b048 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00002aaaaae6728d : or eax, 0x1e80fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaad4ec62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00002aaaaadcecb1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00002aaaaae776dc : or eax, 0x380e0a03 ; ret
0x00002aaaaad3f232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad3f95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaad904b5 : or eax, 0x440f4800 ; ret 0x8d48
0x00002aaaaad68bf2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00002aaaaad9226a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00002aaaaadfef8f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaad3dcc2 : or eax, 0x5bd88948 ; ret
0x00002aaaaae0ab02 : or eax, 0x5c415d5b ; ret
0x00002aaaaad78b55 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00002aaaaad104b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaae18097 : or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae19c31 : or eax, 0x83480000 ; ret 0xe910
0x00002aaaaae180c5 : or eax, 0x83480000 ; ret 0xeb10
0x00002aaaaad7a209 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x00002aaaaad413ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00002aaaaad5fc82 : or eax, 0x8c48348 ; ret
0x00002aaaaad441f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x00002aaaaae4f579 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00002aaaaae574d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00002aaaaadd5a7e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00002aaaaae2d833 : or eax, 0xf7f0ff3 ; ret
0x00002aaaaad00b93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad2c879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x00002aaaaacf2aff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x00002aaaaad0877d : or eax, 0xffffffff ; ret
0x00002aaaaae773bf : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x00002aaaaad6fe2c : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaad2a44f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae1728d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19dd1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae172b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaace0d98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00002aaaaadffd82 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaada4639 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00002aaaaada3ffc : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00002aaaaada0499 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00002aaaaad5d6ef : or eax, dword ptr [rax] ; ret
0x00002aaaaacfd694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00002aaaaadf0b2c : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaae8efa8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00002aaaaad09848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaae8dc78 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x00002aaaaae71d46 : or eax, dword ptr [rdx] ; ret 0x900e
0x00002aaaaae773c0 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00002aaaaae8244f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00002aaaaad07cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00002aaaaad07b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaadeb810 : or eax, edi ; bswap eax ; ret
0x00002aaaaadd9966 : or eax, edi ; ret
0x00002aaaaad07a65 : or eax, edx ; movq xmm0, rax ; ret
0x00002aaaaadd99a2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00002aaaaad0d68f : or eax, edx ; ret
0x00002aaaaad08044 : or eax, esi ; je 0x34ff1 ; ret
0x00002aaaaadd99a5 : or eax, esi ; or rax, rdi ; ret
0x00002aaaaad4f884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaad40f38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad46ce0 : or ebp, eax ; ret 0xfabb
0x00002aaaaadd2be3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x00002aaaaad42dc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaaddedac : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaae8e882 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00002aaaaae2d9f3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaad48ade : or ebx, esi ; ret
0x00002aaaaad55d7a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaad51cd4 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaad93d5e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x00002aaaaad42fb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00002aaaaadde9bb : or ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaadd1e67 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaade308d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00002aaaaadbf64b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x00002aaaaacf7bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaad500a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaad10479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00002aaaaad7e044 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00002aaaaad7e094 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00002aaaaad78b13 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00002aaaaae74a3e : or ecx, dword ptr [rdx + 0xa] ; ret
0x00002aaaaad66ee4 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaad9fddb : or edi, dword ptr [rax + 0xfde8] ; jne 0xccdb4 ; ret
0x00002aaaaade0ddc : or edi, dword ptr [rax + 1] ; ret
0x00002aaaaae001b4 : or edi, dword ptr [rax + 2] ; ret
0x00002aaaaade5714 : or edi, dword ptr [rax + 7] ; ret
0x00002aaaaade6146 : or edi, dword ptr [rcx] ; ret 0xf7e
0x00002aaaaae4678d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad7c4a7 : or edi, edi ; loope 0xa951a ; nop dword ptr [rax + rax] ; ret
0x00002aaaaadd519b : or edi, edx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaade4c70 : or edx, 0x89480007 ; ret 0x894c
0x00002aaaaae89c32 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00002aaaaae74a76 : or esi, dword ptr [rbx + 0xa] ; ret
0x00002aaaaae73868 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00002aaaaadfddf4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad91501 : or esi, dword ptr [rsi + 0x30] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae89c33 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00002aaaaae7a0c9 : or esi, eax ; jmp rbx
0x00002aaaaadce76e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaae69d71 : or esi, ebp ; call rsp
0x00002aaaaae2d913 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaadc9104 : or esi, ebx ; ret
0x00002aaaaad40de4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae46731 : or esp, dword ptr [rax] ; and eax, 0x5be17500 ; ret
0x00002aaaaad4b9d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaacd5f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaadcd9b4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00002aaaaad08f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaad09085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaae3afc5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaad4b0e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x00002aaaaae2da62 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2d9f2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae2d982 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaae74a75 : or r14d, dword ptr [r11 + 0xa] ; ret
0x00002aaaaae2d912 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00002aaaaadcdae6 : or r8b, r13b ; ret
0x00002aaaaae8dc77 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00002aaaaae8244e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x00002aaaaad08043 : or r8d, esi ; je 0x34ff2 ; ret
0x00002aaaaad66ee3 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaadacb42 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaacfcd93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00002aaaaae74a3d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00002aaaaae3b047 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00002aaaaad3f231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad3f959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00002aaaaad0877c : or rax, 0xffffffffffffffff ; ret
0x00002aaaaae8c756 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x00002aaaaae1f232 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad09847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaadd99a7 : or rax, rdi ; ret
0x00002aaaaad07a64 : or rax, rdx ; movq xmm0, rax ; ret
0x00002aaaaad0d68e : or rax, rdx ; ret
0x00002aaaaadd99a4 : or rax, rsi ; or rax, rdi ; ret
0x00002aaaaae00293 : or sil, sil ; ret 0x8802
0x00002aaaaad07800 : orpd xmm0, xmm1 ; ret
0x00002aaaaad07801 : orps xmm0, xmm1 ; ret
0x00002aaaaad07bce : orps xmm0, xmm3 ; ret
0x00002aaaaadfaad1 : out -0x18, eax ; cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae06534 : out -0x18, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffee
0x00002aaaaade4452 : out -0x18, eax ; cwde ; ret
0x00002aaaaadc81d2 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x00002aaaaad9ea77 : out -0x18, eax ; ret
0x00002aaaaae56380 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaadd03ad : out -0x75, eax ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaad3da52 : out -0x77, eax ; push rsp ; and al, 0xc ; call 0xf6d07
0x00002aaaaad0c905 : out -0x77, eax ; ret
0x00002aaaaad032fe : out -0x77, eax ; ret 0x8948
0x00002aaaaadc3889 : out -0x77, eax ; ret 0x8b48
0x00002aaaaad00f33 : out -0x80, eax ; sete al ; ret
0x00002aaaaae580a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00002aaaaae811a9 : out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae2d27a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaae67951 : out -5, eax ; call qword ptr [rax]
0x00002aaaaae6a1f5 : out 0, al ; add byte ptr [rax + rdi*2], al ; out dx, al ; call rsp
0x00002aaaaae6a215 : out 0, eax ; add ah, dl ; jl 0x19720f ; jmp rsp
0x00002aaaaae7c6f5 : out 0, eax ; add byte ptr [rax], ch ; out dx, eax ; int1 ; jmp rcx
0x00002aaaaadeb819 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00002aaaaade4ac1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x00002aaaaad0a30b : out 0x41, eax ; call rdi
0x00002aaaaad0a31c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x00002aaaaad58f86 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaadc6453 : out 0x48, al ; mov edi, ebp ; call 0xef756
0x00002aaaaad0a345 : out 0x48, al ; mov edi, ebp ; call r15
0x00002aaaaad5b152 : out 0x48, al ; mov edi, ebp ; call rax
0x00002aaaaadfce2c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x00002aaaaae00b86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00002aaaaad5a2b4 : out 0x48, al ; mov edi, ebx ; call rax
0x00002aaaaadfca20 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00002aaaaad7e130 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad1b4c8 : out 0x48, eax ; mov eax, edx ; ret
0x00002aaaaadd16d5 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaada3cbf : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad5b2a7 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00002aaaaadfc5ef : out 0x4c, eax ; mov esi, esi ; call 0x558b6
0x00002aaaaad7fd6b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x00002aaaaacd4b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00002aaaaad584ae : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad4efd3 : out 0x5b, al ; ret
0x00002aaaaae0b338 : out 0x5b, eax ; ret
0x00002aaaaad58c8b : out 0x5d, al ; pop r12 ; jmp rax
0x00002aaaaacd547e : out 0xa9, al ; ret 0xbd07
0x00002aaaaadc89d1 : out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae0cbee : out 0xe8, al ; jl 0x139c56 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadea18d : out 0xe8, al ; lodsd eax, dword ptr [rsi] ; ret 0xfff5
0x00002aaaaadbe027 : out 0xe8, al ; ret
0x00002aaaaad84288 : out 0xe8, al ; ret 0x594
0x00002aaaaad9f821 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00002aaaaae79229 : out 0xee, al ; call qword ptr [rax]
0x00002aaaaad55740 : out 0xf, al ; xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaae2d1fa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00002aaaaad67e09 : out 0xf3, al ; ret
0x00002aaaaae81149 : out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaae6bd31 : out 0xf6, al ; call rsp
0x00002aaaaae6c551 : out 0xf7, al ; dec esp ; ret
0x00002aaaaae6c559 : out 0xf7, al ; jmp rsp
0x00002aaaaad42734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae8c5a5 : out 1, al ; add al, bh ; push rdi ; call qword ptr [rdx]
0x00002aaaaae8f608 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00002aaaaadf63fc : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaadf659d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaacf38f1 : out 4, eax ; add rdi, rbp ; call rax
0x00002aaaaadf05c3 : out dx, al ; adc bh, dh ; ret 0x8080
0x00002aaaaad66d59 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaae00759 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaad1ad66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaae6a2ad : out dx, al ; add byte ptr [rax], al ; hlt ; fldz ; call rsp
0x00002aaaaae7cddd : out dx, al ; add byte ptr [rax], al ; xor byte ptr [rdx], cl ; call rsi
0x00002aaaaadf601f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x12302c ; ret
0x00002aaaaad697d3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad6987b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00002aaaaadf601c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x12302f ; ret
0x00002aaaaad55d7d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00002aaaaad49a43 : out dx, al ; call 0x4d178
0x00002aaaaae78802 : out dx, al ; call qword ptr [rax]
0x00002aaaaae59cfa : out dx, al ; call qword ptr [rcx - 0x12]
0x00002aaaaae78e6a : out dx, al ; call qword ptr [rcx]
0x00002aaaaae78882 : out dx, al ; call qword ptr [rdx]
0x00002aaaaae77cc2 : out dx, al ; call qword ptr [rsi]
0x00002aaaaad5b2ad : out dx, al ; call rax
0x00002aaaaae59bbe : out dx, al ; call rsp
0x00002aaaaae59c4e : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaae59c4a : out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaae0cbf2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae03247 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaae0623b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae59d26 : out dx, al ; dec dword ptr [rdx + 0x628cffee] ; out dx, al ; jmp rsp
0x00002aaaaae59bb6 : out dx, al ; dec eax ; pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaacd4b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaae574d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00002aaaaacd6aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaae5948a : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaae5948e : out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaae59bba : out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaae5a2ad : out dx, al ; int1 ; call rax
0x00002aaaaae5a2dd : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae5a2cd : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00002aaaaae5a2d5 : out dx, al ; int1 ; jmp rax
0x00002aaaaae59492 : out dx, al ; jmp qword ptr [rax]
0x00002aaaaae78632 : out dx, al ; jmp qword ptr [rcx]
0x00002aaaaae78312 : out dx, al ; jmp qword ptr [rdi]
0x00002aaaaae7878a : out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae5997a : out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae59462 : out dx, al ; jmp rax
0x00002aaaaae78db2 : out dx, al ; jmp rbx
0x00002aaaaae78a62 : out dx, al ; jmp rdx
0x00002aaaaae59d2e : out dx, al ; jmp rsp
0x00002aaaaacd6795 : out dx, al ; jne 0x3775 ; ret 0x975
0x00002aaaaae6a0ea : out dx, al ; lcall ptr [rcx + 0x6a440000] ; out dx, al ; jmp rsp
0x00002aaaaae59976 : out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaae6a212 : out dx, al ; ljmp ptr [rdi + 0x7cd40000] ; out dx, al ; jmp rsp
0x00002aaaaacd6183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00002aaaaae2504a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaadc20f4 : out dx, al ; mov rdi, rbx ; call 0x3b3c6
0x00002aaaaad8fe79 : out dx, al ; mov rdi, rbx ; call 0x89166
0x00002aaaaad580cf : out dx, al ; mov rdi, rbx ; call rax
0x00002aaaaae2d60a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaad7e4f9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x00002aaaaae1d88e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaadacb45 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00002aaaaad617e4 : out dx, al ; or eax, dword ptr [rax] ; ret
0x00002aaaaae59972 : out dx, al ; push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaae6a2aa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00002aaaaadb63fe : out dx, al ; ret
0x00002aaaaacd55b2 : out dx, al ; ret 0x88ad
0x00002aaaaae5b2dc : out dx, al ; sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaad9a90d : out dx, al ; xor edx, edx ; jmp 0xc78d9
0x00002aaaaad7d3dd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00002aaaaadd3f3d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad9268f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00002aaaaae8cf1d : out dx, eax ; add dword ptr [rax], eax ; rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaad51cd7 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00002aaaaae0cb9c : out dx, eax ; add rbx, r12 ; call r14
0x00002aaaaae44f7d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00002aaaaadc6456 : out dx, eax ; call 0xef753
0x00002aaaaadcdaf2 : out dx, eax ; call 0xf6d03
0x00002aaaaae0075f : out dx, eax ; call qword ptr [rbx]
0x00002aaaaae79d52 : out dx, eax ; call qword ptr [rdi]
0x00002aaaaadf236f : out dx, eax ; call r12
0x00002aaaaad0c1ad : out dx, eax ; call r14
0x00002aaaaad0a348 : out dx, eax ; call r15
0x00002aaaaadef306 : out dx, eax ; call rax
0x00002aaaaad7f6e7 : out dx, eax ; call rbx
0x00002aaaaae0e3a2 : out dx, eax ; call rcx
0x00002aaaaae00256 : out dx, eax ; call rdx
0x00002aaaaae6a452 : out dx, eax ; call rsp
0x00002aaaaae5c1f8 : out dx, eax ; cmc ; call qword ptr [rdi]
0x00002aaaaadfd4a6 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae07195 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00002aaaaae071d4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00002aaaaae6a59a : out dx, eax ; dec esp ; add al, byte ptr [rcx] ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00002aaaaae6a5e2 : out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*4], al ; out dx, eax ; jmp rsp
0x00002aaaaae591c9 : out dx, eax ; in eax, dx ; inc dword ptr [rcx] ; out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae591cd : out dx, eax ; in eax, dx ; jmp qword ptr [rax]
0x00002aaaaae6a6c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x4cbffff] ; out dx, eax ; call rsp
0x00002aaaaae6a55a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], dh ; out dx, eax ; jmp rsp
0x00002aaaaae5a2e1 : out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae5a2e5 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00002aaaaae7c6f9 : out dx, eax ; int1 ; jmp rcx
0x00002aaaaad6fe11 : out dx, eax ; jmp 0x9c7bb
0x00002aaaaad7084b : out dx, eax ; jmp 0x9c843
0x00002aaaaae59e2e : out dx, eax ; jmp qword ptr [rax + 0x24]
0x00002aaaaae59df2 : out dx, eax ; jmp qword ptr [rax]
0x00002aaaaae7a06a : out dx, eax ; jmp qword ptr [rbx]
0x00002aaaaadfe998 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x00002aaaaae59e0e : out dx, eax ; jmp rsi
0x00002aaaaae6a3b2 : out dx, eax ; jmp rsp
0x00002aaaaae59e06 : out dx, eax ; lcall ptr [rax - 0x23] ; out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaae59e0a : out dx, eax ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaae6a612 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaadfeed6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00002aaaaae0d89b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00002aaaaae0d8e5 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00002aaaaad8fe5d : out dx, eax ; mov esi, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae24e7a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24f76 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae24ec2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaad1bb80 : out dx, eax ; mov rax, rdx ; ret
0x00002aaaaade77f0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaae07fcb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaae04b93 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x00002aaaaae0499b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaadfce2f : out dx, eax ; mov rcx, r13 ; call rbx
0x00002aaaaad0a8b5 : out dx, eax ; mov rdx, rbp ; call r15
0x00002aaaaae2d68a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00002aaaaae1d98d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae467bc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaad57e14 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00002aaaaae46609 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b1
0x00002aaaaad45cc1 : out dx, eax ; pop rbx ; ret
0x00002aaaaae6a3aa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x00002aaaaae408e3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae408f8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae4090d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad7d268 : out dx, eax ; ret
0x00002aaaaadfe34d : out dx, eax ; ret 0
0x00002aaaaad7c6f3 : out dx, eax ; ret 0xf66
0x00002aaaaae41dfc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaae41de5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaae41dce : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaae4088a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaadffb5e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaad1b088 : out dx, eax ; xor eax, eax ; ret
0x00002aaaaae1953e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae5aa72 : outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x78], esp ; jmp rdx
0x00002aaaaad91b41 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00002aaaaaddeb0e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae42d9e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00002aaaaae84d8d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae84dbd : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaad85774 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00002aaaaad9ba00 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaae82d39 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad07cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x00002aaaaae5a00d : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae5a009 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae5a011 : outsb dx, byte ptr [rsi] ; int1 ; jmp rax
0x00002aaaaae57c83 : outsb dx, byte ptr [rsi] ; ja 0x184c0c ; ret 0x48f
0x00002aaaaae6a121 : outsb dx, byte ptr [rsi] ; out dx, al ; call rsp
0x00002aaaaad918fe : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00002aaaaae559c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00002aaaaadc8850 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaacd666d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaadd0908 : outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a4
0x00002aaaaad61baa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaaddc3ad : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaae68ead : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaad694fd : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae84e7d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaae84ec5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaae84e95 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae84e4d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaada88cc : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e1683d
0x00002aaaaae8e379 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00002aaaaae8e349 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00002aaaaae8e469 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaadc66b0 : outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae82e29 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaade7a9d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaad5c338 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00002aaaaad6227e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00002aaaaada88c8 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e16841
0x00002aaaaae41bfd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00002aaaaae41c9d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00002aaaaad5f97a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaad102fc : outsd dx, dword ptr [rsi] ; ret
0x00002aaaaade7aa1 : outsd dx, dword ptr [rsi] ; ret 0x144
0x00002aaaaae56386 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00002aaaaae257b7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00002aaaaae41ca2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00002aaaaadb3132 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00002aaaaad5f9ca : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaadb3115 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaae6f3c9 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00002aaaaadd0872 : outsd dx, dword ptr [rsi] ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaae56385 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00002aaaaae17182 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaad7e384 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00002aaaaad7e36f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00002aaaaae17181 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae57785 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00002aaaaae57786 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00002aaaaad70df1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x00002aaaaad71465 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00002aaaaad07b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00002aaaaad07e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00002aaaaad71473 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaad71515 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9e599 ; xor eax, eax ; ret
0x00002aaaaad07b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00002aaaaad07e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00002aaaaad5db9f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8abb3 ; bsf eax, edx ; ret
0x00002aaaaae76f25 : pop qword ptr [rax] ; add al, bl ; mov ebp, gs ; jmp qword ptr [rax]
0x00002aaaaadae305 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00002aaaaade74b5 : pop r10 ; ret
0x00002aaaaae57c0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaad570fa : pop r12 ; jmp rax
0x00002aaaaad58f8c : pop r12 ; jmp rcx
0x00002aaaaadd4c8f : pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaadd4ca9 : pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaad42b6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae4660c : pop r12 ; pop r13 ; jmp 0x1f8ae
0x00002aaaaad153cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaad1534a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf324f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaacf40fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaad9fb02 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaacf32e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad40125 : pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaacf36c2 : pop r12 ; pop r13 ; ret
0x00002aaaaad88a24 : pop r12 ; pop r14 ; ret
0x00002aaaaad0c8c6 : pop r12 ; pop rbp ; ret
0x00002aaaaacf2b12 : pop r12 ; ret
0x00002aaaaae4660e : pop r13 ; jmp 0x1f8ac
0x00002aaaaad153ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaad1534c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf3251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaacf40fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaad9fb04 : pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaacf32e5 : pop r13 ; pop r14 ; ret
0x00002aaaaad46632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaad40127 : pop r13 ; pop rbp ; ret
0x00002aaaaacf36c4 : pop r13 ; ret
0x00002aaaaad153d0 : pop r14 ; fmul st(0) ; ret
0x00002aaaaad1534e : pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645f : pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf3253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaacf40ff : pop r14 ; pop r15 ; ret
0x00002aaaaad9fb06 : pop r14 ; pop rbp ; ret
0x00002aaaaacf32e7 : pop r14 ; ret
0x00002aaaaad46634 : pop r14 ; sar rax, 2 ; ret
0x00002aaaaadd6461 : pop r15 ; jmp rax
0x00002aaaaacf3255 : pop r15 ; pop rbp ; ret
0x00002aaaaacf4101 : pop r15 ; ret
0x00002aaaaad5180c : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaae07546 : pop r8 ; mov eax, 1 ; ret
0x00002aaaaae66ab7 : pop r9 ; clc ; ret 0x6e1f
0x00002aaaaadc00af : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae07c7e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00002aaaaae73765 : pop rax ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaad30f1c : pop rax ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00002aaaaae837ad : pop rax ; add dword ptr [rax], eax ; jo 0x1b073d ; cmc ; jmp rax
0x00002aaaaae85078 : pop rax ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae07e44 : pop rax ; call rax
0x00002aaaaae67f99 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x00002aaaaae67e19 : pop rax ; cld ; call rdx
0x00002aaaaae67f59 : pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaae67f95 : pop rax ; cld ; jmp qword ptr [rax]
0x00002aaaaae82508 : pop rax ; cmc ; jmp rax
0x00002aaaaae80e48 : pop rax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00002aaaaae59e08 : pop rax ; fucomp st(7) ; lcall ptr [rbx + rbx*8] ; out dx, eax ; jmp rsi
0x00002aaaaae07c86 : pop rax ; jmp rcx
0x00002aaaaae833e8 : pop rax ; js 0x1b03e3 ; jmp qword ptr [rbx]
0x00002aaaaae70968 : pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaae72f98 : pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaad5180d : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00002aaaaae07547 : pop rax ; mov eax, 1 ; ret
0x00002aaaaad00ef4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00002aaaaad00e82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00002aaaaae00bde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00002aaaaadd4408 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00002aaaaadb755e : pop rax ; or bh, dh ; ret
0x00002aaaaad77114 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaacf292e : pop rax ; pop rbx ; pop rbp ; ret
0x00002aaaaadd9829 : pop rax ; pop rdi ; call rax
0x00002aaaaae159c1 : pop rax ; pop rdx ; pop rbx ; ret
0x00002aaaaad06544 : pop rax ; ret
0x00002aaaaae73888 : pop rax ; shr ah, 1 ; jmp rbx
0x00002aaaaae6cf39 : pop rax ; stc ; jmp rsp
0x00002aaaaada3dc6 : pop rbp ; adc al, ch ; ret
0x00002aaaaadb0ed7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00002aaaaadb0d0d : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00002aaaaadeb6c6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad70859 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00002aaaaade25df : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae6b27d : pop rbp ; add dword ptr [rax], eax ; xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaae00c8d : pop rbp ; add eax, edx ; ret
0x00002aaaaade77f3 : pop rbp ; clc ; leave ; ret
0x00002aaaaae67d81 : pop rbp ; cld ; call qword ptr [rax + 0x20fffc5c]
0x00002aaaaae67bc1 : pop rbp ; cld ; call rsi
0x00002aaaaae67bbd : pop rbp ; cld ; inc dword ptr [rsi + 0x5d] ; cld ; call rsi
0x00002aaaaae6d801 : pop rbp ; cli ; call rsp
0x00002aaaaad1bdaa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00002aaaaae698e1 : pop rbp ; in eax, dx ; jmp rsp
0x00002aaaaae7bd51 : pop rbp ; int1 ; jmp qword ptr [rcx]
0x00002aaaaae4660f : pop rbp ; jmp 0x1f8ab
0x00002aaaaad44fc4 : pop rbp ; jmp rax
0x00002aaaaadfe375 : pop rbp ; jmp rcx
0x00002aaaaadffb62 : pop rbp ; jmp rdx
0x00002aaaaae465ba : pop rbp ; jo 0x17360c ; mov edi, dword ptr [rbx] ; call 0x1f8af
0x00002aaaaae0fb0b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaad51c45 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00002aaaaad570f9 : pop rbp ; pop r12 ; jmp rax
0x00002aaaaad58f8b : pop rbp ; pop r12 ; jmp rcx
0x00002aaaaadd4c8e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaadd4ca8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaad42b6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae4660b : pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8af
0x00002aaaaad153cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaad15349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf40fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaacf32e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacf36c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad88a23 : pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaacf2b11 : pop rbp ; pop r12 ; ret
0x00002aaaaadfef16 : pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaad153cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x00002aaaaad1534d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf3252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaacf40fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00002aaaaad9fb05 : pop rbp ; pop r14 ; pop rbp ; ret
0x00002aaaaacf32e6 : pop rbp ; pop r14 ; ret
0x00002aaaaad46633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaad40128 : pop rbp ; pop rbp ; ret
0x00002aaaaad1b438 : pop rbp ; pop rbx ; ret
0x00002aaaaacf2930 : pop rbp ; ret
0x00002aaaaad1bdb2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00002aaaaad49ca6 : pop rbp ; sbb al, ch ; ret
0x00002aaaaad4c15c : pop rbp ; sub rax, rdx ; ret
0x00002aaaaada7b37 : pop rbp ; test al, 0xe8 ; ret 0xfd7a
0x00002aaaaade5741 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae73a7d : pop rbx ; add byte ptr [rax], al ; rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaae54f58 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaad7d08c : pop rbx ; and eax, 0x3fc00 ; ret
0x00002aaaaad7d0bf : pop rbx ; and eax, 0x7ff80000 ; ret
0x00002aaaaade7737 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00002aaaaae67b91 : pop rbx ; cld ; call qword ptr [rsi]
0x00002aaaaae67d51 : pop rbx ; cld ; call rax
0x00002aaaaae67cd1 : pop rbx ; cld ; jmp rsp
0x00002aaaaae67ccd : pop rbx ; cld ; push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaae829c1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae54f56 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaad4128e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad428ca : pop rbx ; jmp rax
0x00002aaaaadeb6f8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00002aaaaad43b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00002aaaaad43b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00002aaaaada7d82 : pop rbx ; mov eax, 1 ; ret
0x00002aaaaadc20db : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00002aaaaad0d725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00002aaaaad7d12c : pop rbx ; mov eax, eax ; ret
0x00002aaaaad1aa11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaade915e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00002aaaaad447ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadce8eb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad25c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00002aaaaae46c49 : pop rbx ; mov esp, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaad712bd : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad45220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad45068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00002aaaaad41ff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad42c82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00002aaaaad58c88 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaae05dd4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00002aaaaad9fb01 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaad40124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaad0c8c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x00002aaaaae00c8c : pop rbx ; pop rbp ; add eax, edx ; ret
0x00002aaaaad44fc3 : pop rbx ; pop rbp ; jmp rax
0x00002aaaaadfe374 : pop rbx ; pop rbp ; jmp rcx
0x00002aaaaadffb61 : pop rbx ; pop rbp ; jmp rdx
0x00002aaaaad570f8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00002aaaaad58f8a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00002aaaaadd4c8d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00002aaaaadd4ca7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00002aaaaad42b6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae4660a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f8b0
0x00002aaaaacf32e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacf36c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad88a22 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaacf2b10 : pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadfef15 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00002aaaaacf292f : pop rbx ; pop rbp ; ret
0x00002aaaaad4c15b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00002aaaaacfd69a : pop rbx ; ret
0x00002aaaaacd4b18 : pop rbx ; ret 0x2a63
0x00002aaaaae58240 : pop rbx ; ret 0x6f9
0x00002aaaaae6734d : pop rbx ; sti ; jmp qword ptr [rax]
0x00002aaaaad7f5a9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaacf2b74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaad712ab : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaae6dadd : pop rcx ; add al, byte ptr [rax] ; test cl, cl ; cli ; jmp rsp
0x00002aaaaae66730 : pop rcx ; clc ; ret 0x6e1f
0x00002aaaaad07ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00002aaaaae761f9 : pop rcx ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae698b9 : pop rcx ; in eax, dx ; jmp rsp
0x00002aaaaacfcc93 : pop rcx ; lodsb al, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00002aaaaad392e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaad904b4 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x00002aaaaae59979 : pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae59461 : pop rcx ; out dx, al ; jmp rax
0x00002aaaaae59975 : pop rcx ; out dx, al ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaae0f01f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaadd434b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadbcaba : pop rcx ; pop rbx ; ret
0x00002aaaaacd4b17 : pop rcx ; pop rbx ; ret 0x2a63
0x00002aaaaae5b804 : pop rcx ; push rbx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad0f1af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaadcf3e2 : pop rcx ; ret
0x00002aaaaad5087e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaad7ee33 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaae001c4 : pop rcx ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaae239f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaadc93e2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00002aaaaae1e01d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaadd982a : pop rdi ; call rax
0x00002aaaaae67bb1 : pop rdi ; cld ; call qword ptr [rsi + 0x26fffc5e]
0x00002aaaaae67ced : pop rdi ; cld ; call rsp
0x00002aaaaae67ce9 : pop rdi ; cld ; inc dword ptr [rdi + rbx*2 - 4] ; call rsp
0x00002aaaaae67b6d : pop rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaae25419 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae25229 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae574fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaae72f19 : pop rdi ; jmp 0x19ff1d
0x00002aaaaae72f18 : pop rdi ; jmp 0x19ff1e
0x00002aaaaadd6462 : pop rdi ; jmp rax
0x00002aaaaae564c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00002aaaaae59c51 : pop rdi ; out dx, al ; call rsp
0x00002aaaaae59c4d : pop rdi ; out dx, al ; dec dword ptr [rax + 0x5f] ; out dx, al ; call rsp
0x00002aaaaae25049 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24e79 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24f75 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00002aaaaae24ec1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaacf3256 : pop rdi ; pop rbp ; ret
0x00002aaaaacf4102 : pop rdi ; ret
0x00002aaaaad3a499 : pop rdi ; ret 0xffff
0x00002aaaaad99cd5 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaade30fe : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00002aaaaae18906 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae82961 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaacd6a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00002aaaaae570e1 : pop rdx ; je 0x1840ab ; ret 0xacfc
0x00002aaaaacd6185 : pop rdx ; jmp 0xffffffff88c2d332
0x00002aaaaad7ecd3 : pop rdx ; or al, 0 ; ret
0x00002aaaaae580a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00002aaaaae5948d : pop rdx ; out dx, al ; inc dword ptr [rax + 0x5a] ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaae59491 : pop rdx ; out dx, al ; jmp qword ptr [rax]
0x00002aaaaade74b4 : pop rdx ; pop r10 ; ret
0x00002aaaaadd440c : pop rdx ; pop rbx ; ret
0x00002aaaaadbcab9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00002aaaaade74d9 : pop rdx ; pop rsi ; ret
0x00002aaaaacd4b92 : pop rdx ; ret
0x00002aaaaae57c10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaad7e9c5 : pop rdx ; test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaae1df1e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaadf654c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00002aaaaaddb76c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x00002aaaaae67c35 : pop rsi ; cld ; call qword ptr [rdx]
0x00002aaaaae67b79 : pop rsi ; cld ; call rax
0x00002aaaaae67b75 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00002aaaaae67bb5 : pop rsi ; cld ; jmp qword ptr [rsi]
0x00002aaaaae67d75 : pop rsi ; cld ; jmp rax
0x00002aaaaada030e : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad153d1 : pop rsi ; fmul st(0) ; ret
0x00002aaaaad1534f : pop rsi ; fmulp st(1) ; ret
0x00002aaaaae5b128 : pop rsi ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rdx]
0x00002aaaaae67550 : pop rsi ; mov bh, 0xfd ; call rcx
0x00002aaaaad66ef5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae59bbd : pop rsi ; out dx, al ; call rsp
0x00002aaaaae59bb9 : pop rsi ; out dx, al ; inc dword ptr [rax + 0x5e] ; out dx, al ; call rsp
0x00002aaaaae59a0d : pop rsi ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaadd6460 : pop rsi ; pop r15 ; jmp rax
0x00002aaaaacf3254 : pop rsi ; pop r15 ; pop rbp ; ret
0x00002aaaaacf4100 : pop rsi ; pop r15 ; ret
0x00002aaaaad9fb07 : pop rsi ; pop rbp ; ret
0x00002aaaaacf32e8 : pop rsi ; ret
0x00002aaaaadd41cb : pop rsi ; ret 0xcdbb
0x00002aaaaad46635 : pop rsi ; sar rax, 2 ; ret
0x00002aaaaadcb4e5 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae19750 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae6a614 : pop rsp ; add al, 1 ; add byte ptr [rsp + rdx*4], dh ; out dx, eax ; call rsp
0x00002aaaaae18c04 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae6db4d : pop rsp ; add al, byte ptr [rax] ; in al, -0x2a ; cli ; call rsp
0x00002aaaaae76094 : pop rsp ; add dword ptr [rax], 0xed52a800 ; jmp qword ptr [rsi]
0x00002aaaaadab9b2 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaae1a450 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00002aaaaad8dd45 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00002aaaaae67b89 : pop rsp ; cld ; call qword ptr [rax]
0x00002aaaaae67d85 : pop rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaae67b8d : pop rsp ; cld ; jmp qword ptr [rsi + 0x16fffc5b]
0x00002aaaaae67c49 : pop rsp ; cld ; jmp rdx
0x00002aaaaae8b994 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], bh ; fdivrp st(7) ; jmp rdi
0x00002aaaaae6a951 : pop rsp ; int1 ; call rsp
0x00002aaaaae5cc70 : pop rsp ; jle 0x189c6c ; jmp rdx
0x00002aaaaae72e61 : pop rsp ; jmp 0x19fe65
0x00002aaaaad570fb : pop rsp ; jmp rax
0x00002aaaaad58f8d : pop rsp ; jmp rcx
0x00002aaaaae6c32c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], dh ; call rsp
0x00002aaaaae5abb4 : pop rsp ; mov dr0, ebx ; jmp rdx
0x00002aaaaadd4c90 : pop rsp ; mov esi, 2 ; jmp rax
0x00002aaaaadd4caa : pop rsp ; mov esi, 3 ; jmp rax
0x00002aaaaad42b6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaae175e0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae0cbf1 : pop rsp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae84e94 : pop rsp ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaae4660d : pop rsp ; pop r13 ; jmp 0x1f8ad
0x00002aaaaad153cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00002aaaaad1534b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00002aaaaadd645c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00002aaaaacf3250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00002aaaaacf40fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00002aaaaad9fb03 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00002aaaaacf32e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaad46631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00002aaaaad40126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00002aaaaacf36c3 : pop rsp ; pop r13 ; ret
0x00002aaaaad88a25 : pop rsp ; pop r14 ; ret
0x00002aaaaad0c8c7 : pop rsp ; pop rbp ; ret
0x00002aaaaae59978 : pop rsp ; pop rcx ; out dx, al ; jmp qword ptr [rsi]
0x00002aaaaae72f94 : pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaae83594 : pop rsp ; push rsi ; add dword ptr [rax], eax ; call 0x221afb1e
0x00002aaaaacd6838 : pop rsp ; ret
0x00002aaaaadee1d8 : pop rsp ; ret 0x2a
0x00002aaaaacd618d : pop rsp ; ret 0x52c0
0x00002aaaaae67311 : pop rsp ; sti ; jmp rax
0x00002aaaaae70994 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaae81394 : pop rsp ; xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae696f5 : popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196701
0x00002aaaaae77cbd : popfq ; add byte ptr [rax], al ; nop ; add esi, ebp ; call qword ptr [rsi]
0x00002aaaaae87c7d : popfq ; add dword ptr [rax], eax ; adc bh, 0xf6 ; call qword ptr [rdi]
0x00002aaaaae6bdad : popfq ; add dword ptr [rax], eax ; push rsp ; div esi ; call rsp
0x00002aaaaae8077e : popfq ; add ecx, dword ptr [rdx] ; ret
0x00002aaaaae68811 : popfq ; cld ; call rdx
0x00002aaaaae6884d : popfq ; cld ; jmp qword ptr [rdx]
0x00002aaaaae674d0 : popfq ; mov ch, 0xfd ; call rcx
0x00002aaaaadf0b2b : popfq ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaad9b9ff : popfq ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaadbb4d5 : popfq ; ret
0x00002aaaaae1ae30 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaad2d7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaae2d752 : psllq mm1, qword ptr [r15] ; jg 0x15a76d ; ret
0x00002aaaaae30222 : psllq mm1, qword ptr [r15] ; jg 0x15d23d ; ret
0x00002aaaaae32d42 : psllq mm1, qword ptr [r15] ; jg 0x15fd5d ; ret
0x00002aaaaae2d753 : psllq mm1, qword ptr [rdi] ; jg 0x15a76c ; ret
0x00002aaaaae30223 : psllq mm1, qword ptr [rdi] ; jg 0x15d23c ; ret
0x00002aaaaae32d43 : psllq mm1, qword ptr [rdi] ; jg 0x15fd5c ; ret
0x00002aaaaad782b6 : psllq mm1, qword ptr [rdi] ; jg 0xa52ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad782b5 : psllq mm1, qword ptr [rdi] ; jg 0xa52cb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78317 : psllq mm1, qword ptr [rdi] ; jg 0xa532c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad78f86 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78f85 : psllq mm1, qword ptr [rdi] ; jg 0xa5f9b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad78fe7 : psllq mm1, qword ptr [rdi] ; jg 0xa5ffc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7b396 : psllq mm1, qword ptr [rdi] ; jg 0xa83aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7b395 : psllq mm1, qword ptr [rdi] ; jg 0xa83ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7b3f7 : psllq mm1, qword ptr [rdi] ; jg 0xa840c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad7be66 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7be65 : psllq mm1, qword ptr [rdi] ; jg 0xa8e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00002aaaaad7bec7 : psllq mm1, qword ptr [rdi] ; jg 0xa8edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00002aaaaad9166c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00002aaaaacd5c01 : push -0x7329150 ; ret
0x00002aaaaadc81d4 : push -0x76000003 ; ret 0xcb8
0x00002aaaaad1e15c : push -0x76000005 ; ret 0x8941
0x00002aaaaad2f896 : push -0x7c000006 ; ret 0x8908
0x00002aaaaae42d84 : push -0x9ffffff ; ret 0x7501
0x00002aaaaacf357f : push -0xcfffff7 ; ret
0x00002aaaaad7e9b7 : push -0xfb872b8 ; ret
0x00002aaaaadfe8ba : push 0 ; push 0x19 ; call qword ptr [rax]
0x00002aaaaad18f8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaad1965e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x00002aaaaadfe8bc : push 0x19 ; call qword ptr [rax]
0x00002aaaaadcc7e8 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00002aaaaadb34dc : push 0x2494b60f ; ret
0x00002aaaaad2933c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00002aaaaae8c73a : push 0x41380e0a ; ret
0x00002aaaaae6b405 : push 0x44940001 ; cmc ; jmp rsp
0x00002aaaaad580cc : push 0x48ee894c ; mov edi, ebx ; call rax
0x00002aaaaad7ecd2 : push 0x5a ; or al, 0 ; ret
0x00002aaaaadfdcd4 : push 0x5b0029d0 ; ret
0x00002aaaaadbae93 : push 0x5c415d5b ; pop r13 ; ret
0x00002aaaaae58cb9 : push 0x65f7ffed ; in eax, dx ; call rdx
0x00002aaaaae58ca5 : push 0x68caffed ; in eax, dx ; jmp qword ptr [rdx]
0x00002aaaaae57c82 : push 0x6e ; ja 0x184c0d ; ret 0x48f
0x00002aaaaae5b260 : push 0xd3 ; call qword ptr [rcx]
0x00002aaaaae70009 : push 0xe9 ; jmp rax
0x00002aaaaae6a0f1 : push 0xee ; jmp rsp
0x00002aaaaae89e99 : push 0xf7 ; jmp rsi
0x00002aaaaad6928b : push 0xff ; ja 0x96271 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae073de : push 2 ; add rdi, 0x68 ; jmp rcx
0x00002aaaaad78d12 : push 5 ; add byte ptr [rax], al ; ret
0x00002aaaaacffdd2 : push 6 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad234c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaae67b17 : push qword ptr [rax + 0x13] ; cld ; inc eax ; adc al, 0xfc ; call qword ptr [rax]
0x00002aaaaae67b03 : push qword ptr [rax + 0x21] ; cld ; inc eax ; and bh, ah ; call qword ptr [rax]
0x00002aaaaae67b73 : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x00002aaaaae6805f : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x00002aaaaae6876f : push qword ptr [rax + 0x40fffcaa] ; stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaae68557 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00002aaaaae67d8b : push qword ptr [rax + 0x50fffc5b] ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaae67327 : push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaae5ab93 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b96 ; jmp rdx
0x00002aaaaae5ab92 : push qword ptr [rax + 0x6dfff381] ; jl 0x187b97 ; jmp rdx
0x00002aaaaae5a403 : push qword ptr [rax + 1] ; jmp qword ptr [rax - 0x2f000dff]
0x00002aaaaae6721b : push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaae6ce3b : push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x00002aaaaae68403 : push qword ptr [rax + rdi*2 - 4] ; jmp rsp
0x00002aaaaae5a217 : push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x00002aaaaae5d4b7 : push qword ptr [rax - 0x1f0005d8] ; sub dl, bh ; call rax
0x00002aaaaae5b983 : push qword ptr [rax - 0x1f000bad] ; push rdx ; hlt ; jmp rax
0x00002aaaaae5a3f3 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x00002aaaaae5a41b : push qword ptr [rax - 0x2f000dff] ; add edx, esi ; jmp rax
0x00002aaaaae677bf : push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaae5a2cb : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x00002aaaaae5a257 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x00002aaaaae5a007 : push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00002aaaaae687bf : push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaae689c3 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00002aaaaad33dbb : push qword ptr [rax - 0x77] ; ret
0x00002aaaaae67937 : push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae6798b : push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaae677ef : push qword ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x00002aaaaae67877 : push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaae6771b : push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaae684cb : push qword ptr [rax] ; ja 0x1954cf ; call rax
0x00002aaaaae682c7 : push qword ptr [rax] ; js 0x1952cf ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaad77b1f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaae675cf : push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaae67f57 : push qword ptr [rax] ; pop rax ; cld ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaae672ef : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaae44708 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00002aaaaae5b7ef : push qword ptr [rbp + 0x22fff452] ; push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad4769b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00002aaaaad4ea4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00002aaaaad45b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00002aaaaae14db0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00002aaaaae0665e : push qword ptr [rbp + rcx - 0x18] ; ret 0xffee
0x00002aaaaad45b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00002aaaaad9adfe : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00002aaaaad1bb7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00002aaaaadf2192 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00002aaaaadfabcb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae4668c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00002aaaaad1b4c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00002aaaaad4efd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00002aaaaade7f82 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00002aaaaad9e6e5 : push qword ptr [rbx + 0x31] ; ret
0x00002aaaaadc7e98 : push qword ptr [rbx + 0x34] ; ret
0x00002aaaaad0876c : push qword ptr [rbx + 1] ; ret
0x00002aaaaad1ab26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00002aaaaad45cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00002aaaaae67ccf : push qword ptr [rbx + rbx*2 - 4] ; jmp rsp
0x00002aaaaad46cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x00002aaaaae6b2d3 : push qword ptr [rcx + 0x14940001] ; cmc ; call rsp
0x00002aaaaae59973 : push qword ptr [rcx + rbx*2 - 0x12] ; lcall ptr [rcx + rbx*2 - 0x12] ; jmp qword ptr [rsi]
0x00002aaaaae69cf3 : push qword ptr [rcx + rcx*8 - 0x3ec0000] ; in eax, dx ; call rsp
0x00002aaaaae6d473 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaae699c3 : push qword ptr [rcx + rsi*4 - 0x739c0000] ; in eax, dx ; jmp rsp
0x00002aaaaae6752f : push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaad47b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaada17db : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x00002aaaaad48f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaad234c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaad8a065 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00002aaaaade7cec : push qword ptr [rdi + 0x1b] ; ret
0x00002aaaaad0842d : push qword ptr [rdi + 0x20] ; ret
0x00002aaaaadc9a68 : push qword ptr [rdi + 0x35] ; ret
0x00002aaaaadc9b0c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00002aaaaae5427f : push qword ptr [rdi + 0x7bffeb21] ; and ch, bl ; call rdx
0x00002aaaaadcebb3 : push qword ptr [rdi + 0xa] ; ret
0x00002aaaaadc9102 : push qword ptr [rdi + 0xb] ; ret
0x00002aaaaad087a1 : push qword ptr [rdi + 0xc] ; ret
0x00002aaaaad9f9dc : push qword ptr [rdi + 1] ; ret
0x00002aaaaad087eb : push qword ptr [rdi + 2] ; ret
0x00002aaaaadc900a : push qword ptr [rdi + 3] ; ret
0x00002aaaaadc9059 : push qword ptr [rdi + 4] ; ret
0x00002aaaaad9e5c0 : push qword ptr [rdi + 5] ; ret
0x00002aaaaad9e4cf : push qword ptr [rdi + 6] ; ret
0x00002aaaaad9baa6 : push qword ptr [rdi + 7] ; ret
0x00002aaaaad08735 : push qword ptr [rdi + 8] ; ret
0x00002aaaaad9a82c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00002aaaaad8e88c : push qword ptr [rdi + 9] ; ret
0x00002aaaaad4e596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00002aaaaadba916 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaae681d3 : push qword ptr [rdi + rax*4 - 0x78bb0004] ; cld ; call rsp
0x00002aaaaae5ab13 : push qword ptr [rdi + rax*4 - 0xd] ; jmp rdx
0x00002aaaaae06c46 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00002aaaaae67ce7 : push qword ptr [rdi + rbx*2 + 0x5f44fffc] ; cld ; call rsp
0x00002aaaaae6a3ab : push qword ptr [rdi + rsi*8 + 0x1f940000] ; out dx, eax ; jmp rsp
0x00002aaaaad6928c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade7cc4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaae68643 : push qword ptr [rdx + 0x42fffca8] ; test al, 0xfc ; call rdx
0x00002aaaaae6cf0b : push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaae6ae1b : push qword ptr [rdx + rdi + 0x24540001] ; jmp rsp
0x00002aaaaad7f6fb : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00002aaaaae5b487 : push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaae68317 : push qword ptr [rdx] ; jle 0x19531f ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaae67bbb : push qword ptr [rsi + 0x46fffc5d] ; pop rbp ; cld ; call rsi
0x00002aaaaae680a7 : push qword ptr [rsi + 0x46fffc85] ; test edi, esp ; call rsi
0x00002aaaaae6859f : push qword ptr [rsi + 0x46fffcac] ; lodsb al, byte ptr [rsi] ; cld ; call rsi
0x00002aaaaaddbdc9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaae6a2ab : push qword ptr [rsi + rbp*8 - 0x260c0000] ; out dx, al ; call rsp
0x00002aaaaae673af : push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x00002aaaaae6808f : push qword ptr [rsi - 0x7f] ; cld ; jmp rsi
0x00002aaaaae5b7e7 : push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b783 : push qword ptr [rsi] ; push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae6ca83 : push qword ptr [rsp + 0x65640001] ; clc ; jmp rsp
0x00002aaaaae6991b : push qword ptr [rsp + rbp*4 + 0x77040000] ; in eax, dx ; jmp rsp
0x00002aaaaae69b23 : push qword ptr [rsp + rdi*4 - 0x446c0000] ; in eax, dx ; call rsp
0x00002aaaaae5b69c : push r11 ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6a0 : push r11 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae07476 : push r12 ; mov eax, 1 ; ret
0x00002aaaaae5b938 : push r13 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad4e20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad44c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4f891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaadfeb4d : push rax ; adc dh, dh ; ret 0x7401
0x00002aaaaad53c4d : push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaae6d92d : push rax ; add al, byte ptr [rax] ; je 0x19a8d8 ; cli ; call rsp
0x00002aaaaae67897 : push rax ; add bh, ah ; call rax
0x00002aaaaad4e20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaae72f95 : push rax ; add byte ptr [rax], al ; pop rax ; mov dh, 0xeb ; jmp qword ptr [rax]
0x00002aaaaae5a44b : push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaad4af5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaae83005 : push rax ; add dword ptr [rax], eax ; jno 0x1b0006 ; jmp qword ptr [rcx]
0x00002aaaaae82f75 : push rax ; add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae83035 : push rax ; add dword ptr [rax], eax ; test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad00711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x00002aaaaad67b9f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00002aaaaae678fb : push rax ; add edi, esp ; jmp rax
0x00002aaaaae5a427 : push rax ; add edx, esi ; call qword ptr [rax]
0x00002aaaaae677f3 : push rax ; add esp, edi ; call rax
0x00002aaaaae67874 : push rax ; add esp, edi ; push qword ptr [rax] ; add edi, esp ; call qword ptr [rax]
0x00002aaaaae0e019 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae0dc77 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaae13471 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00002aaaaae84e50 : push rax ; and dh, dh ; jmp qword ptr [rsi]
0x00002aaaaacf48e8 : push rax ; call rbx
0x00002aaaaae5a393 : push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaae85910 : push rax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00002aaaaad1e829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae68287 : push rax ; cmp esp, 0xfc8180ff ; jmp qword ptr [rax]
0x00002aaaaae67613 : push rax ; fsincos ; call rax
0x00002aaaaae5b749 : push rax ; hlt ; dec dword ptr [rcx] ; push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b935 : push rax ; hlt ; inc dword ptr [rbp + 0x55] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b5c1 : push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b841 : push rax ; hlt ; jmp qword ptr [rcx + 0x22fff452]
0x00002aaaaae5b5d1 : push rax ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b547 : push rax ; hlt ; jmp rax
0x00002aaaaae5b801 : push rax ; hlt ; lcall ptr [rcx + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b7e5 : push rax ; hlt ; push qword ptr [rsi] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae813b0 : push rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae5a267 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae6766c : push rax ; in eax, -5 ; jmp rax
0x00002aaaaae5a293 : push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaae47ca4 : push rax ; jb 0x174c95 ; call rax
0x00002aaaaae830b0 : push rax ; jb 0x1b00ab ; jmp qword ptr [rcx]
0x00002aaaaae682a0 : push rax ; jge 0x1952a2 ; call rax
0x00002aaaaae682a8 : push rax ; jl 0x1952aa ; call rax
0x00002aaaaae78c30 : push rax ; jle 0x1a5c24 ; jmp qword ptr [rcx]
0x00002aaaaae696f9 : push rax ; jmp 0x1966fd
0x00002aaaaae682b0 : push rax ; jnp 0x1952b2 ; call rax
0x00002aaaaae6e600 : push rax ; jnp 0x19b603 ; jmp qword ptr [rdx]
0x00002aaaaae682b8 : push rax ; jp 0x1952ba ; call rax
0x00002aaaaae687bb : push rax ; lahf ; cld ; push qword ptr [rax - 0x61] ; cld ; jmp rax
0x00002aaaaad47fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00002aaaaae68758 : push rax ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x00002aaaaad3210a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x00002aaaaae689e8 : push rax ; mov ah, bh ; call rax
0x00002aaaaae68a2c : push rax ; mov bh, ah ; call rax
0x00002aaaaae689f8 : push rax ; mov dr1, esp ; call rax
0x00002aaaaacf6ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00002aaaaae67750 : push rax ; mov ebp, 0xc190fffb ; sti ; jmp rax
0x00002aaaaae689f0 : push rax ; mov edi, esp ; call rax
0x00002aaaaae07c66 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00002aaaaade5736 : push rax ; mov rsi, rdx ; call rax
0x00002aaaaae68a3c : push rax ; nop ; cld ; call rax
0x00002aaaaad51b82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00002aaaaad545d2 : push rax ; or dh, dh ; ret 0x7404
0x00002aaaaad54545 : push rax ; or dh, dh ; ret 0xf04
0x00002aaaaacf2e57 : push rax ; or dh, dh ; ret 0xf08
0x00002aaaaae174ec : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae5a2db : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00002aaaaae82d50 : push rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae66ab6 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00002aaaaae829f0 : push rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad7ef5e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae67d74 : push rax ; pop rsi ; cld ; jmp rax
0x00002aaaaae67d90 : push rax ; push rcx ; cld ; call qword ptr [rax]
0x00002aaaaae5a3e3 : push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaae5b977 : push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaacf6ad0 : push rax ; push rsp ; ret
0x00002aaaaae6898f : push rax ; pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaacdeb70 : push rax ; ret
0x00002aaaaad4f4dc : push rax ; ret 0x34
0x00002aaaaad92651 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaad955e4 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaad4f886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaad45bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaade24f2 : push rax ; sbb dh, dh ; ret 0x7508
0x00002aaaaae67283 : push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaade6e35 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaadc7fa1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaae5a3b3 : push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaae672f7 : push rax ; sti ; call rax
0x00002aaaaae672ec : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaae67ab4 : push rax ; sub ah, bh ; jmp qword ptr [rax]
0x00002aaaaae67a9c : push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaadd38bc : push rax ; sub dword ptr [rax + rax], ebp ; ret
0x00002aaaaae67a1c : push rax ; sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00002aaaaae67997 : push rax ; sub edi, esp ; call rax
0x00002aaaaae68a1c : push rax ; test bh, ah ; call rax
0x00002aaaaae689e0 : push rax ; test edi, esp ; call rax
0x00002aaaaae68260 : push rax ; xchg ah, bh ; jmp rax
0x00002aaaaae68a44 : push rax ; xchg eax, ebx ; cld ; call rax
0x00002aaaaae68a00 : push rax ; xchg eax, ecx ; cld ; call rax
0x00002aaaaae7fe10 : push rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae68a08 : push rax ; xchg eax, esp ; cld ; call rax
0x00002aaaaae68a24 : push rax ; xchg esp, edi ; call rax
0x00002aaaaae67a8c : push rax ; xor al, 0xfc ; jmp rax
0x00002aaaaad4efcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00002aaaaadb4860 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00002aaaaadb4885 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x00002aaaaae44f87 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaae0118c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00002aaaaadc8072 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaadc7ff4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00002aaaaad1c50f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaadc489d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadd53a1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaada6a1c : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x00002aaaaae67fb1 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x00002aaaaae67fad : push rbp ; cld ; call qword ptr [rax]
0x00002aaaaae67e31 : push rbp ; cld ; call rdx
0x00002aaaaae67f71 : push rbp ; cld ; jmp qword ptr [rax + 0x20fffc54]
0x00002aaaaae67f6d : push rbp ; cld ; jmp qword ptr [rax]
0x00002aaaaadc00f8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00002aaaaae5b74d : push rbp ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b755 : push rbp ; hlt ; jmp qword ptr [rdi]
0x00002aaaaae5b939 : push rbp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaacd4cb9 : push rbp ; je 0x1ce7 ; ret
0x00002aaaaadb5427 : push rbp ; jno 0xe242f ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae67510 : push rbp ; mov ch, 0xfd ; call rcx
0x00002aaaaade6b14 : push rbp ; nop ; mov rdx, r13 ; call rax
0x00002aaaaae1bf78 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaade62b4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00002aaaaada930b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd633d ; or byte ptr [rcx], ch ; ret
0x00002aaaaadcd2fa : push rbp ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaae5b743 : push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad6b9b8 : push rbp ; ret
0x00002aaaaad6dfc6 : push rbp ; ret 0x8348
0x00002aaaaad6b9aa : push rbp ; ret 0x8349
0x00002aaaaadd7e2a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00002aaaaade6722 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00002aaaaacd55de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x00002aaaaade3ab8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad1eccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaada7c3b : push rbp ; test al, 0x89 ; ret
0x00002aaaaacf6657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x00002aaaaade6141 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00002aaaaade7de0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaad60f6a : push rbp ; xor rax, rax ; ret
0x00002aaaaad5b621 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaacd34b5 : push rbx ; add al, 4 ; ret 0x6080
0x00002aaaaad88c99 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaadd8231 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00002aaaaadad657 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad583cf : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaae83335 : push rbx ; add dword ptr [rax], eax ; js 0x1b03b6 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaade2e8c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00002aaaaae67fbd : push rbx ; cld ; call qword ptr [rax]
0x00002aaaaae67f7d : push rbx ; cld ; jmp qword ptr [rax]
0x00002aaaaae6d6e1 : push rbx ; cli ; call rsp
0x00002aaaaae5c2eb : push rbx ; cmc ; call qword ptr [rbx]
0x00002aaaaae82731 : push rbx ; cmc ; call qword ptr [rdx]
0x00002aaaaacd5053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaadb2806 : push rbx ; cmp cl, ch ; ret
0x00002aaaaadb2307 : push rbx ; cmp cl, ch ; ret 0xfffe
0x00002aaaaae5b4e4 : push rbx ; fcomi st(3) ; inc dword ptr [rcx - 0x25] ; call rcx
0x00002aaaaae5b685 : push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b69d : push rbx ; hlt ; dec dword ptr [rdi + 0x53] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6e5 : push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b68d : push rbx ; hlt ; jmp qword ptr [rdi]
0x00002aaaaae5b6a1 : push rbx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b985 : push rbx ; hlt ; jmp rax
0x00002aaaaacfd692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x00002aaaaad45ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x00002aaaaad45b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00002aaaaada001d : push rbx ; je 0xccffa ; mov eax, 1 ; ret
0x00002aaaaada001c : push rbx ; je 0xccffb ; mov eax, 1 ; ret
0x00002aaaaad7e99c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad79372 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x00002aaaaad3fe2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x00002aaaaad4e42b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00002aaaaacd6cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaadfd4a5 : push rbx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad008a8 : push rbx ; ret
0x00002aaaaad5b625 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaad49ba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaadd3e3a : push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaad4d8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x00002aaaaad4b771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaae570dc : push rbx ; xchg eax, edx ; jae 0x1840bb ; push rsi ; pop rdx ; je 0x1840b0 ; ret 0xacfc
0x00002aaaaae04725 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00002aaaaad89da6 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00002aaaaae8307d : push rcx ; add dword ptr [rax], eax ; and byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaae8310d : push rcx ; add dword ptr [rax], eax ; loopne 0x1b018a ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae830ad : push rcx ; add dword ptr [rax], eax ; push rax ; jb 0x1b00ae ; jmp qword ptr [rcx]
0x00002aaaaada91be : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00002aaaaad53203 : push rcx ; add dword ptr [rcx], edx ; add cl, ch ; ret 0xfffe
0x00002aaaaad71239 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad712b8 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaae0cf4e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaae56365 : push rcx ; call qword ptr [rsi]
0x00002aaaaae67d91 : push rcx ; cld ; call qword ptr [rax]
0x00002aaaaae67fcd : push rcx ; cld ; inc dword ptr [rax] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaae67f91 : push rcx ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x00002aaaaae67e11 : push rcx ; cld ; jmp rdx
0x00002aaaaae5b5c5 : push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b609 : push rcx ; hlt ; call rdx
0x00002aaaaae5b5d9 : push rcx ; hlt ; dec dword ptr [rdx + 0x51] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b605 : push rcx ; hlt ; dec eax ; push rcx ; hlt ; call rdx
0x00002aaaaae5b5cd : push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b611 : push rcx ; hlt ; jmp rsi
0x00002aaaaae5b5c9 : push rcx ; hlt ; lcall ptr [rbx] ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad7216d : push rcx ; jl 0x9f1be ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad722d4 : push rcx ; jl 0x9f325 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaad728c0 : push rcx ; jl 0x9f911 ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad72a27 : push rcx ; jl 0x9fa78 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaad7300d : push rcx ; jl 0xa005e ; adc dword ptr [rcx - 1], edi ; ret
0x00002aaaaad73174 : push rcx ; jl 0xa01c5 ; adc dword ptr [rcx + 7], edi ; ret
0x00002aaaaaddf98b : push rcx ; jle 0x10c9bf ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaae5a3e5 : push rcx ; jmp qword ptr [rax]
0x00002aaaaacd4b2c : push rcx ; jns 0x1b39 ; ret
0x00002aaaaae6751f : push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaae6753f : push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaae5a3e1 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaae8d12e : push rcx ; ret
0x00002aaaaadee1cf : push rcx ; ret 0x2a
0x00002aaaaad1031f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaad7c232 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad7a7c2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00002aaaaad7c390 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad7c068 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c07a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaad70ef4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00002aaaaad7a60a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00002aaaaae2d8b9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad70e64 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00002aaaaad70df4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x00002aaaaad00a7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00002aaaaae6da5d : push rdi ; add al, byte ptr [rax] ; and al, 0xc3 ; cli ; jmp rsp
0x00002aaaaae6da65 : push rdi ; add al, byte ptr [rax] ; push rsp ; ret
0x00002aaaaad7c03a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad7988c : push rdi ; add eax, 0xc478d48 ; ret
0x00002aaaaad7a6cc : push rdi ; add eax, 0xd478d48 ; ret
0x00002aaaaadd0e5a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00002aaaaad7c098 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaaddaeaa : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00002aaaaae8c5a9 : push rdi ; call qword ptr [rdx]
0x00002aaaaae24d08 : push rdi ; clc ; ret
0x00002aaaaacd68eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaae67fa1 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x00002aaaaae67f9d : push rdi ; cld ; call qword ptr [rax]
0x00002aaaaae67e21 : push rdi ; cld ; call rdx
0x00002aaaaae67f61 : push rdi ; cld ; jmp qword ptr [rax + 0x20fffc56]
0x00002aaaaae67f5d : push rdi ; cld ; jmp qword ptr [rax]
0x00002aaaaae24e80 : push rdi ; cld ; ret
0x00002aaaaae6d751 : push rdi ; cli ; jmp rsp
0x00002aaaaae259a7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae2d199 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae07ce5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00002aaaaad5ab2a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00002aaaaae2d119 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae03245 : push rdi ; imul dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaae58cbb : push rdi ; in eax, dx ; call rdx
0x00002aaaaae2cf6a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaad4e164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaae2cffa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00002aaaaadf5460 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00002aaaaad7c0dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c11a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaad7c0ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaad8d671 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaad1d00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00002aaaaad1b42a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00002aaaaae10ef2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00002aaaaad1b431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00002aaaaad4af60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00002aaaaad79a70 : push rdi ; or eax, 0x1c478d48 ; ret
0x00002aaaaad7a8c0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00002aaaaae41bfe : push rdi ; ret
0x00002aaaaad6f935 : push rdi ; ret 0xf800
0x00002aaaaae41c9e : push rdi ; ret 0xff3
0x00002aaaaadc6595 : push rdi ; ret 0xfff2
0x00002aaaaade4380 : push rdi ; rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae0e2c3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00002aaaaade1986 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae0f3db : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaae25ba7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae253ca : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaae257a7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae07d2d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00002aaaaadd703c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4700f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaad7c370 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaad5f97b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaae6b185 : push rdx ; add dword ptr [rax], eax ; add al, 8 ; hlt ; call rsp
0x00002aaaaae831b5 : push rdx ; add dword ptr [rax], eax ; fdiv dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00002aaaaae83185 : push rdx ; add dword ptr [rax], eax ; js 0x1b0203 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83184 : push rdx ; add dword ptr [rax], eax ; js 0x1b0204 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83155 : push rdx ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaadf630e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaae6abe1 : push rdx ; call rsp
0x00002aaaaae67dc9 : push rdx ; cld ; call rax
0x00002aaaaae5b96d : push rdx ; hlt ; call qword ptr [rax - 0x1f000bae]
0x00002aaaaae5b681 : push rdx ; hlt ; dec dword ptr [rcx] ; push rbx ; hlt ; call qword ptr [rbx]
0x00002aaaaae5b785 : push rdx ; hlt ; inc dword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b995 : push rdx ; hlt ; inc eax ; push rdx ; hlt ; jmp rax
0x00002aaaaae5b99d : push rdx ; hlt ; jmp qword ptr [rax + 0x26fff452]
0x00002aaaaae5b62d : push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b9a1 : push rdx ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae5b971 : push rdx ; hlt ; jmp rax
0x00002aaaaae5b629 : push rdx ; hlt ; lcall ptr [rax] ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b7dd : push rdx ; hlt ; ljmp ptr [rdi] ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b631 : push rdx ; hlt ; ljmp ptr [rdx + rdx*2] ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b975 : push rdx ; hlt ; push rax ; push rdx ; hlt ; jmp rax
0x00002aaaaae76099 : push rdx ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaadd19ca : push rdx ; jbe 0xfea01 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad5bac6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaae11822 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x00002aaaaae67c48 : push rdx ; pop rsp ; cld ; jmp rdx
0x00002aaaaae67e30 : push rdx ; push rbp ; cld ; call rdx
0x00002aaaaae67e20 : push rdx ; push rdi ; cld ; call rdx
0x00002aaaaae67e28 : push rdx ; push rsi ; cld ; call rdx
0x00002aaaaae67e38 : push rdx ; push rsp ; cld ; call rdx
0x00002aaaaae795f5 : push rdx ; ret
0x00002aaaaae5b334 : push rdx ; retf ; jmp qword ptr [rdi]
0x00002aaaaacf6aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00002aaaaae6cf11 : push rdx ; stc ; call rsp
0x00002aaaaae6862c : push rdx ; stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x00002aaaaade4834 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae68134 : push rdx ; test bh, ah ; jmp rdx
0x00002aaaaacd4b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00002aaaaae408e4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad7cb39 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xa9b90 ; adc dword ptr [rsi + 3], edx ; ret
0x00002aaaaad450a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00002aaaaad54314 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00002aaaaad48be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x00002aaaaae2db51 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaadcba16 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaae83595 : push rsi ; add dword ptr [rax], eax ; call 0x221afb1d
0x00002aaaaae835f5 : push rsi ; add dword ptr [rax], eax ; jnp 0x1b05f6 ; jmp qword ptr [rcx]
0x00002aaaaae83625 : push rsi ; add dword ptr [rax], eax ; js 0x1b06ab ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8357d : push rsi ; add dword ptr [rax], eax ; sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaae835dd : push rsi ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaae2dbc1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad78245 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00002aaaaacf3c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae2dae1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad781e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00002aaaaae408f9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae24e32 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00002aaaaae67fa9 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x00002aaaaae67fa5 : push rsi ; cld ; call qword ptr [rax]
0x00002aaaaae67e29 : push rsi ; cld ; call rdx
0x00002aaaaae67f69 : push rsi ; cld ; jmp qword ptr [rax + 0x20fffc55]
0x00002aaaaae67f65 : push rsi ; cld ; jmp qword ptr [rax]
0x00002aaaaae255a1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae251d5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae253b5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae25595 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae24ff5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00002aaaaae6d711 : push rsi ; cli ; jmp rsp
0x00002aaaaae57c80 : push rsi ; cli ; push 0x6e ; ja 0x184c0f ; ret 0x48f
0x00002aaaaae44246 : push rsi ; cmc ; sub eax, edx ; ret
0x00002aaaaae44236 : push rsi ; hlt ; sub eax, edx ; ret
0x00002aaaaae44206 : push rsi ; int1 ; sub eax, edx ; ret
0x00002aaaaade5712 : push rsi ; je 0x112728 ; mov eax, 7 ; ret
0x00002aaaaae6fdd9 : push rsi ; jmp 0x1b90e1
0x00002aaaaadc833b : push rsi ; js 0xf538f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00002aaaaadc8cd8 : push rsi ; js 0xf5d2c ; mov dword ptr [rdi + 0x100], edx ; ret
0x00002aaaaae67570 : push rsi ; mov dh, 0xfd ; call rcx
0x00002aaaaad29808 : push rsi ; or al, 0x83 ; ret
0x00002aaaaad2978b : push rsi ; or al, 0xf6 ; ret 0xf08
0x00002aaaaad66f7d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaad8d66e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00002aaaaae570e0 : push rsi ; pop rdx ; je 0x1840ac ; ret 0xacfc
0x00002aaaaad07bcf : push rsi ; ret
0x00002aaaaadb7597 : push rsi ; ret 0x7420
0x00002aaaaad71e1a : push rsi ; ret 0x7518
0x00002aaaaad34bbf : push rsi ; ret 0xf02
0x00002aaaaadb6f71 : push rsi ; ret 0xf08
0x00002aaaaad2b2e8 : push rsi ; ret 0xf10
0x00002aaaaad53eca : push rsi ; sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00002aaaaadc13af : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae44216 : push rsi ; sub eax, edx ; ret
0x00002aaaaae685c8 : push rsi ; test al, 0xfc ; jmp rsi
0x00002aaaaadcd9b7 : push rsi ; xor ax, ax ; ret
0x00002aaaaae4090e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae6bef8 : push rsp ; adc edi, esi ; jmp rsp
0x00002aaaaae833e5 : push rsp ; add dword ptr [rax], eax ; pop rax ; js 0x1b03e6 ; jmp qword ptr [rbx]
0x00002aaaaade12f1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00002aaaaade11ed : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00002aaaaadb65cf : push rsp ; and al, 0x18 ; call 0x1f8a5
0x00002aaaaad10fe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x00002aaaaadfec08 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00002aaaaad53d10 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00002aaaaad5408c : push rsp ; and al, 0x20 ; call rax
0x00002aaaaad8cb3e : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00002aaaaadd0164 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00002aaaaad56d3a : push rsp ; and al, 0x68 ; call rax
0x00002aaaaad580ca : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00002aaaaad3da54 : push rsp ; and al, 0xc ; call 0xf6d05
0x00002aaaaae6ae20 : push rsp ; and al, 0xf3 ; jmp rsp
0x00002aaaaae6b790 : push rsp ; and al, 0xf6 ; call rsp
0x00002aaaaad1d1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00002aaaaad1d18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00002aaaaad539a2 : push rsp ; and eax, 0x950f4100 ; ret
0x00002aaaaae81851 : push rsp ; call rsi
0x00002aaaaae8dcf1 : push rsp ; clc ; call qword ptr [rax]
0x00002aaaaae8dd29 : push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaae6c9e8 : push rsp ; clc ; jmp rsp
0x00002aaaaae67fb9 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x00002aaaaae67fb5 : push rsp ; cld ; call qword ptr [rax]
0x00002aaaaae67e39 : push rsp ; cld ; call rdx
0x00002aaaaae67f79 : push rsp ; cld ; jmp qword ptr [rax + 0x20fffc53]
0x00002aaaaae67f75 : push rsp ; cld ; jmp qword ptr [rax]
0x00002aaaaae78fe9 : push rsp ; cli ; call qword ptr [rax]
0x00002aaaaae5c04b : push rsp ; cmc ; call rsp
0x00002aaaaad009cf : push rsp ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00002aaaaae6aaa0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00002aaaaae6bdb0 : push rsp ; div esi ; call rsp
0x00002aaaaae6c9e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], dl ; jmp rsp
0x00002aaaaae5b6e9 : push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b6f5 : push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b6f1 : push rsp ; hlt ; jmp qword ptr [rip + 0x22fff454]
0x00002aaaaae5b741 : push rsp ; hlt ; push rbp ; push rsp ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae7488c : push rsp ; imul eax, dword ptr [rax], 0xed012000 ; call qword ptr [rsi]
0x00002aaaaae6840c : push rsp ; ja 0x19540e ; jmp rsp
0x00002aaaaad9fe26 : push rsp ; jne 0xccdb3 ; mov eax, 0x7d00 ; ret
0x00002aaaaae7508c : push rsp ; jno 0x1a2096 ; add byte ptr [rax], dh ; in eax, dx ; call rdx
0x00002aaaaad7157b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaadd0740 : push rsp ; mov byte ptr [rax + rax], ch ; ret
0x00002aaaaae07477 : push rsp ; mov eax, 1 ; ret
0x00002aaaaae7998c : push rsp ; mov edx, 0x73700000 ; out dx, eax ; call rax
0x00002aaaaae6c558 : push rsp ; out 0xf7, al ; jmp rsp
0x00002aaaaae84d8c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaae5b930 : push rsp ; push rcx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae5b644 : push rsp ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaacf6ad1 : push rsp ; ret
0x00002aaaaad07df8 : push rsp ; ret 0x2e0f
0x00002aaaaaddc844 : push rsp ; ret 0x8940
0x00002aaaaad07aba : push rsp ; ret 0xf66
0x00002aaaaae6c50b : push rsp ; ret 1
0x00002aaaaadb9a33 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00002aaaaae6a8dc : push rsp ; sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x00002aaaaae6d3c8 : push rsp ; sti ; stc ; jmp rsp
0x00002aaaaae686f4 : push rsp ; stosb byte ptr [rdi], al ; cld ; jmp rsp
0x00002aaaaadd3ddb : push rsp ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae6a450 : push rsp ; xor ch, bh ; call rsp
0x00002aaaaae19410 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaae7e3d4 : pushfq ; add al, 1 ; add byte ptr [rax], bl ; call rcx
0x00002aaaaae6d6dc : pushfq ; add al, byte ptr [rax] ; push rbx ; cli ; call rsp
0x00002aaaaad587dd : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00002aaaaae81dd4 : pushfq ; add dword ptr ds:[rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae8e8a4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00002aaaaae82bd4 : pushfq ; add qword ptr [rax], r8 ; call 0x221af150
0x00002aaaaacf6ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00002aaaaadad65f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00002aaaaae6d2a4 : pushfq ; and al, 2 ; add byte ptr [rcx + rdx*8], al ; stc ; call rsp
0x00002aaaaae68991 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00002aaaaae68951 : pushfq ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x00002aaaaae8b9d4 : pushfq ; fiadd dword ptr [rcx] ; add al, ch ; fdivrp st(7) ; jmp rdi
0x00002aaaaacf2b06 : pushfq ; jmp 0x1face
0x00002aaaaae6a0ec : pushfq ; loope 0x1970f6 ; add byte ptr [rdx + rbp*2 - 0x12], al ; jmp rsp
0x00002aaaaad4b41c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00002aaaaae69bac : pushfq ; mov edi, 0xc7440000 ; in eax, dx ; call rsp
0x00002aaaaadd6c08 : pushfq ; mov esp, 0x8b49fff1 ; jge 0x103c18 ; call rbx
0x00002aaaaae883d4 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; test al, 0xf1 ; sti ; call rcx
0x00002aaaaae1a110 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae180c4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00002aaaaae696f4 : pushfq ; popfq ; add byte ptr [rax], al ; and al, 0x50 ; jmp 0x196702
0x00002aaaaacecee8 : pushfq ; ret
0x00002aaaaad8fbdf : pushfq ; ret 0xb60f
0x00002aaaaad7e5cb : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaae698dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196946 ; in eax, dx ; jmp rsp
0x00002aaaaae6abdc : pushfq ; sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaae73a80 : rcl ah, 1 ; in al, dx ; call rsp
0x00002aaaaadcb4ca : rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae68a40 : rcl byte ptr [rcx - 0x6caf0004], 1 ; cld ; call rax
0x00002aaaaae68a04 : rcl byte ptr [rdx - 0x6baf0004], 1 ; cld ; call rax
0x00002aaaaae8cf20 : rcl byte ptr [rdx], 0xf8 ; jmp qword ptr [rbx]
0x00002aaaaae67e34 : rcl byte ptr [rsp + rdi*8 - 1], cl ; push rdx ; push rsp ; cld ; call rdx
0x00002aaaaae677c4 : rcl cl, 0xfb ; call qword ptr [rax]
0x00002aaaaadc7fa0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00002aaaaae570df : rcl dword ptr [rsi + 0x5a], cl ; je 0x1840ad ; ret 0xacfc
0x00002aaaaae570db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1840b1 ; ret 0xacfc
0x00002aaaaadd6cfc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaad07f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x00002aaaaad0f1b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00002aaaaadce8ee : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00002aaaaacf2b76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaad9c030 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaad1aa13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaad1b437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00002aaaaad9f858 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00002aaaaad48051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00002aaaaacf5b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaad8d9b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00002aaaaad0d26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad9c07c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad27b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00002aaaaad56ff8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00002aaaaad18c48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaad42b6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaaddede8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00002aaaaae574fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaae81e50 : rcr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rdx]
0x00002aaaaae67d70 : rcr byte ptr [rsi - 4], 0xff ; push rax ; pop rsi ; cld ; jmp rax
0x00002aaaaae67afc : rcr byte ptr [rsi], 1 ; cld ; jmp qword ptr [rax]
0x00002aaaaad1b469 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaae20086 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaae153f4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaadf6238 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaad08f9a : rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaacd3937 : ret
0x00002aaaaae69c45 : ret 0
0x00002aaaaad79b1a : ret 0x10
0x00002aaaaacd37bf : ret 0x102
0x00002aaaaad3fddf : ret 0x107
0x00002aaaaace06a1 : ret 0x11
0x00002aaaaad54882 : ret 0x110
0x00002aaaaadb9397 : ret 0x110f
0x00002aaaaad1b40c : ret 0x114d
0x00002aaaaadb321c : ret 0x1175
0x00002aaaaadab406 : ret 0x1176
0x00002aaaaacf72a8 : ret 0x1189
0x00002aaaaadd9e29 : ret 0x11e8
0x00002aaaaad86104 : ret 0x11eb
0x00002aaaaacd8fa9 : ret 0x12
0x00002aaaaad3f099 : ret 0x1202
0x00002aaaaacf28fa : ret 0x1231
0x00002aaaaadd1ddc : ret 0x1274
0x00002aaaaad73a5a : ret 0x13
0x00002aaaaad2e04a : ret 0x134b
0x00002aaaaad6b61a : ret 0x1374
0x00002aaaaade9cda : ret 0x1376
0x00002aaaaad24f17 : ret 0x13e8
0x00002aaaaad2d6dc : ret 0x144
0x00002aaaaadf58d9 : ret 0x1472
0x00002aaaaad715b9 : ret 0x147c
0x00002aaaaad1c3f2 : ret 0x148
0x00002aaaaad17099 : ret 0x1480
0x00002aaaaada937b : ret 0x148b
0x00002aaaaad4efe2 : ret 0x149
0x00002aaaaad137e8 : ret 0x14b8
0x00002aaaaad0a63d : ret 0x14c
0x00002aaaaad7252c : ret 0x14d
0x00002aaaaada553c : ret 0x14eb
0x00002aaaaad03f90 : ret 0x15
0x00002aaaaad13e3a : ret 0x152c
0x00002aaaaad4c03a : ret 0x157
0x00002aaaaad07c00 : ret 0x1575
0x00002aaaaadbf9c1 : ret 0x1589
0x00002aaaaad04d46 : ret 0x15a2
0x00002aaaaace1460 : ret 0x16
0x00002aaaaaddaa97 : ret 0x1674
0x00002aaaaade9b27 : ret 0x1676
0x00002aaaaad5e01a : ret 0x17
0x00002aaaaadcf136 : ret 0x1777
0x00002aaaaad72469 : ret 0x180f
0x00002aaaaae08495 : ret 0x1872
0x00002aaaaacff4a6 : ret 0x1874
0x00002aaaaad60fd5 : ret 0x1876
0x00002aaaaacf1610 : ret 0x18bb
0x00002aaaaacee388 : ret 0x18e7
0x00002aaaaad509c5 : ret 0x18eb
0x00002aaaaae75a31 : ret 0x18f
0x00002aaaaad8f764 : ret 0x190
0x00002aaaaad2b7ca : ret 0x197
0x00002aaaaad60c75 : ret 0x1974
0x00002aaaaad31c5e : ret 0x1a
0x00002aaaaad7121a : ret 0x1a74
0x00002aaaaad0ef12 : ret 0x1a75
0x00002aaaaae57a5a : ret 0x1ad4
0x00002aaaaada75ba : ret 0x1aeb
0x00002aaaaae561ed : ret 0x1b49
0x00002aaaaaddaeb2 : ret 0x1b72
0x00002aaaaad6757a : ret 0x1b8
0x00002aaaaacd4bf5 : ret 0x1bb7
0x00002aaaaad9092b : ret 0x1be
0x00002aaaaad564df : ret 0x1bf
0x00002aaaaacd649f : ret 0x1bf9
0x00002aaaaadcf231 : ret 0x1c77
0x00002aaaaae51650 : ret 0x1d4
0x00002aaaaae51de8 : ret 0x1d5
0x00002aaaaad60b76 : ret 0x1d74
0x00002aaaaacd51d9 : ret 0x1dd4
0x00002aaaaacff79d : ret 0x1de8
0x00002aaaaad92a54 : ret 0x1e74
0x00002aaaaacf7c2b : ret 0x1e76
0x00002aaaaacf98e2 : ret 0x1f0f
0x00002aaaaad7ebc3 : ret 0x1f74
0x00002aaaaad5717e : ret 0x1f76
0x00002aaaaad94804 : ret 0x1fbd
0x00002aaaaad00952 : ret 0x200
0x00002aaaaad83b05 : ret 0x2041
0x00002aaaaad5bdfd : ret 0x2074
0x00002aaaaada81a9 : ret 0x20be
0x00002aaaaad2fb3b : ret 0x21
0x00002aaaaad07778 : ret 0x2148
0x00002aaaaadc7f19 : ret 0x21e8
0x00002aaaaad5bd8b : ret 0x2275
0x00002aaaaad7cc97 : ret 0x2276
0x00002aaaaad5beb8 : ret 0x2288
0x00002aaaaacd6ff0 : ret 0x23
0x00002aaaaae41e02 : ret 0x2373
0x00002aaaaad098a2 : ret 0x237f
0x00002aaaaacd55e7 : ret 0x23cb
0x00002aaaaae50658 : ret 0x24
0x00002aaaaacd57d8 : ret 0x244f
0x00002aaaaada20fc : ret 0x2476
0x00002aaaaad4da6e : ret 0x2501
0x00002aaaaad71098 : ret 0x2574
0x00002aaaaad566ad : ret 0x2575
0x00002aaaaacf6dc8 : ret 0x2576
0x00002aaaaacd8ec8 : ret 0x26
0x00002aaaaad5de56 : ret 0x2774
0x00002aaaaadcf413 : ret 0x27e8
0x00002aaaaae0f6d4 : ret 0x28
0x00002aaaaacd354f : ret 0x2800
0x00002aaaaad73bf5 : ret 0x280f
0x00002aaaaadf9c60 : ret 0x2875
0x00002aaaaacf7273 : ret 0x2876
0x00002aaaaad9265a : ret 0x28f5
0x00002aaaaadf9c28 : ret 0x29
0x00002aaaaae0958a : ret 0x2919
0x00002aaaaad85401 : ret 0x2941
0x00002aaaaad286a3 : ret 0x2944
0x00002aaaaad1a468 : ret 0x2948
0x00002aaaaad82c0a : ret 0x2949
0x00002aaaaad6d71f : ret 0x294c
0x00002aaaaad4bcdf : ret 0x294d
0x00002aaaaad1bb64 : ret 0x2973
0x00002aaaaad7d394 : ret 0x2975
0x00002aaaaad4a9aa : ret 0x2976
0x00002aaaaadbcd84 : ret 0x2977
0x00002aaaaad33591 : ret 0x29e9
0x00002aaaaadee143 : ret 0x2a
0x00002aaaaadfad9a : ret 0x2a09
0x00002aaaaacd4b19 : ret 0x2a63
0x00002aaaaad5708b : ret 0x2a75
0x00002aaaaadecc79 : ret 0x2aea
0x00002aaaaadd9b84 : ret 0x2b
0x00002aaaaad19198 : ret 0x2b48
0x00002aaaaacf622e : ret 0x2b49
0x00002aaaaadf3712 : ret 0x2b74
0x00002aaaaad3dd97 : ret 0x2b76
0x00002aaaaad7cff2 : ret 0x2b77
0x00002aaaaae01c9b : ret 0x2b8
0x00002aaaaadde572 : ret 0x2bb0
0x00002aaaaadc9bac : ret 0x2c
0x00002aaaaadf9c59 : ret 0x2c3c
0x00002aaaaad542ec : ret 0x2c75
0x00002aaaaadd069a : ret 0x2c88
0x00002aaaaad07df9 : ret 0x2e0f
0x00002aaaaae01dd5 : ret 0x2e66
0x00002aaaaadd1d7c : ret 0x2f3c
0x00002aaaaad5ab2e : ret 0x2f74
0x00002aaaaadb51ea : ret 0x2fe9
0x00002aaaaace3e90 : ret 0x30
0x00002aaaaad0dca8 : ret 0x3039
0x00002aaaaacd4b88 : ret 0x306a
0x00002aaaaad8fe96 : ret 0x308b
0x00002aaaaad8fdfa : ret 0x308c
0x00002aaaaad54f1c : ret 0x30be
0x00002aaaaad34cda : ret 0x30e8
0x00002aaaaadb442b : ret 0x30f
0x00002aaaaace07b8 : ret 0x31
0x00002aaaaacf610d : ret 0x3101
0x00002aaaaadf8fe2 : ret 0x3108
0x00002aaaaad1afd9 : ret 0x3145
0x00002aaaaae01d68 : ret 0x314c
0x00002aaaaad7f03a : ret 0x3151
0x00002aaaaad03389 : ret 0x31e8
0x00002aaaaad59b0c : ret 0x33
0x00002aaaaadc9152 : ret 0x3375
0x00002aaaaadc245d : ret 0x33eb
0x00002aaaaad4f475 : ret 0x34
0x00002aaaaad71599 : ret 0x347c
0x00002aaaaad040a5 : ret 0x348
0x00002aaaaacfc44d : ret 0x349
0x00002aaaaad392ba : ret 0x34c
0x00002aaaaad4071a : ret 0x3549
0x00002aaaaad5ab38 : ret 0x3574
0x00002aaaaadc90f0 : ret 0x3575
0x00002aaaaad0ef68 : ret 0x357e
0x00002aaaaad3bdb2 : ret 0x35a0
0x00002aaaaadabca5 : ret 0x35e8
0x00002aaaaad29c42 : ret 0x36
0x00002aaaaadba2a1 : ret 0x3673
0x00002aaaaae31bca : ret 0x36b
0x00002aaaaad194a1 : ret 0x37
0x00002aaaaad27e2a : ret 0x3708
0x00002aaaaad9e703 : ret 0x37e8
0x00002aaaaad09b7a : ret 0x38
0x00002aaaaae5733a : ret 0x3827
0x00002aaaaad8e14e : ret 0x3840
0x00002aaaaad4671f : ret 0x3841
0x00002aaaaadd52bf : ret 0x3845
0x00002aaaaad0d73a : ret 0x386a
0x00002aaaaae11825 : ret 0x3875
0x00002aaaaad60fb5 : ret 0x3876
0x00002aaaaad4e52b : ret 0x389
0x00002aaaaae559c6 : ret 0x38ae
0x00002aaaaad41516 : ret 0x38b
0x00002aaaaad31d1d : ret 0x38e9
0x00002aaaaad393be : ret 0x3901
0x00002aaaaadabfb8 : ret 0x3902
0x00002aaaaadf4a5b : ret 0x3904
0x00002aaaaad70fb6 : ret 0x3941
0x00002aaaaadb6ba7 : ret 0x3944
0x00002aaaaadb0217 : ret 0x3945
0x00002aaaaad0a381 : ret 0x3948
0x00002aaaaacfa72a : ret 0x3949
0x00002aaaaacfd296 : ret 0x394c
0x00002aaaaad0713d : ret 0x394d
0x00002aaaaad030fa : ret 0x3985
0x00002aaaaad267c2 : ret 0x39e9
0x00002aaaaae06c4a : ret 0x3a
0x00002aaaaad7c5a2 : ret 0x3a01
0x00002aaaaacf6016 : ret 0x3a18
0x00002aaaaae41deb : ret 0x3a73
0x00002aaaaadb63e0 : ret 0x3ae9
0x00002aaaaada5631 : ret 0x3b01
0x00002aaaaadae187 : ret 0x3b42
0x00002aaaaadae1d7 : ret 0x3b43
0x00002aaaaae0fb43 : ret 0x3b48
0x00002aaaaae07172 : ret 0x3b74
0x00002aaaaad91c65 : ret 0x3b8
0x00002aaaaad8eafa : ret 0x3bba
0x00002aaaaade2a14 : ret 0x3bf
0x00002aaaaada26de : ret 0x3c01
0x00002aaaaad5bd71 : ret 0x3c75
0x00002aaaaadc38bf : ret 0x3c76
0x00002aaaaad0c53e : ret 0x3ce8
0x00002aaaaadaa666 : ret 0x3d01
0x00002aaaaad07840 : ret 0x3d75
0x00002aaaaad15180 : ret 0x3d7e
0x00002aaaaaddf396 : ret 0x3d83
0x00002aaaaad19ef7 : ret 0x3dbe
0x00002aaaaad91712 : ret 0x3e9
0x00002aaaaad43efb : ret 0x3f7
0x00002aaaaadc7779 : ret 0x3f76
0x00002aaaaadab69a : ret 0x4001
0x00002aaaaadbe535 : ret 0x4002
0x00002aaaaad52142 : ret 0x4007
0x00002aaaaacd39f5 : ret 0x4021
0x00002aaaaad2699b : ret 0x4050
0x00002aaaaad7f009 : ret 0x408d
0x00002aaaaacf5d30 : ret 0x4101
0x00002aaaaad8a9e5 : ret 0x4102
0x00002aaaaadb0752 : ret 0x4104
0x00002aaaaad206a9 : ret 0x4108
0x00002aaaaad2220c : ret 0x4110
0x00002aaaaad5518c : ret 0x4117
0x00002aaaaadc05f8 : ret 0x4118
0x00002aaaaad71263 : ret 0x4153
0x00002aaaaadfebc3 : ret 0x415f
0x00002aaaaadca1c5 : ret 0x4164
0x00002aaaaacf6b8e : ret 0x41c3
0x00002aaaaad6d767 : ret 0x4201
0x00002aaaaae002a5 : ret 0x4203
0x00002aaaaad8ea44 : ret 0x4240
0x00002aaaaad71baa : ret 0x4266
0x00002aaaaadacfb6 : ret 0x428b
0x00002aaaaad8f86c : ret 0x428d
0x00002aaaaacff1b8 : ret 0x42e8
0x00002aaaaad6cdca : ret 0x4301
0x00002aaaaacfd853 : ret 0x4389
0x00002aaaaad47d83 : ret 0x4401
0x00002aaaaadb3c15 : ret 0x4404
0x00002aaaaad94ca4 : ret 0x4407
0x00002aaaaad9f245 : ret 0x4408
0x00002aaaaacd3888 : ret 0x440c
0x00002aaaaad20c71 : ret 0x440f
0x00002aaaaad45857 : ret 0x4410
0x00002aaaaacd3456 : ret 0x4412
0x00002aaaaadab1f4 : ret 0x4422
0x00002aaaaade19a6 : ret 0x4428
0x00002aaaaade57d8 : ret 0x4430
0x00002aaaaadb3c46 : ret 0x4489
0x00002aaaaad07ea0 : ret 0x448b
0x00002aaaaad0fe72 : ret 0x44c6
0x00002aaaaadb81c2 : ret 0x44c7
0x00002aaaaad303da : ret 0x45
0x00002aaaaadb60fb : ret 0x4501
0x00002aaaaad3f712 : ret 0x4502
0x00002aaaaad392db : ret 0x4504
0x00002aaaaade9fa7 : ret 0x4510
0x00002aaaaad8a9be : ret 0x4574
0x00002aaaaad09b2e : ret 0x4577
0x00002aaaaadb274f : ret 0x45c6
0x00002aaaaadf212b : ret 0x45e9
0x00002aaaaad41678 : ret 0x45f6
0x00002aaaaad7d377 : ret 0x4675
0x00002aaaaacfcd97 : ret 0x4676
0x00002aaaaade5616 : ret 0x46e9
0x00002aaaaad8a957 : ret 0x4703
0x00002aaaaad6cfaf : ret 0x470e
0x00002aaaaad71014 : ret 0x474
0x00002aaaaae564c4 : ret 0x474c
0x00002aaaaacf86f6 : ret 0x4801
0x00002aaaaad66d61 : ret 0x4802
0x00002aaaaad41681 : ret 0x4803
0x00002aaaaacf956d : ret 0x4804
0x00002aaaaad66e0d : ret 0x4805
0x00002aaaaad66df5 : ret 0x4806
0x00002aaaaaddae9b : ret 0x4807
0x00002aaaaadf93bf : ret 0x4808
0x00002aaaaacff4b4 : ret 0x4809
0x00002aaaaaddd5e2 : ret 0x480a
0x00002aaaaaddd1e2 : ret 0x480b
0x00002aaaaad8daf2 : ret 0x480e
0x00002aaaaad24184 : ret 0x480f
0x00002aaaaad1bd94 : ret 0x4810
0x00002aaaaacf291e : ret 0x4811
0x00002aaaaae09a71 : ret 0x4812
0x00002aaaaaddb38d : ret 0x4814
0x00002aaaaad1e632 : ret 0x481e
0x00002aaaaad1e652 : ret 0x4820
0x00002aaaaad2732c : ret 0x482d
0x00002aaaaadf804e : ret 0x482e
0x00002aaaaacf446f : ret 0x4830
0x00002aaaaad39165 : ret 0x4840
0x00002aaaaad9e8bc : ret 0x4864
0x00002aaaaade7add : ret 0x4874
0x00002aaaaade9bd5 : ret 0x4875
0x00002aaaaade3308 : ret 0x48b
0x00002aaaaae05fe4 : ret 0x48bf
0x00002aaaaad5dba8 : ret 0x48c3
0x00002aaaaad0dba0 : ret 0x48d
0x00002aaaaae57c86 : ret 0x48f
0x00002aaaaacf5cfa : ret 0x4901
0x00002aaaaad0737c : ret 0x4903
0x00002aaaaacfc019 : ret 0x4904
0x00002aaaaacf948c : ret 0x4906
0x00002aaaaad228a9 : ret 0x4908
0x00002aaaaad917a9 : ret 0x4909
0x00002aaaaae01ef0 : ret 0x4910
0x00002aaaaad597ee : ret 0x4920
0x00002aaaaad58738 : ret 0x4930
0x00002aaaaad99ca9 : ret 0x4948
0x00002aaaaacd68f3 : ret 0x49ec
0x00002aaaaadbd100 : ret 0x4a08
0x00002aaaaad550a5 : ret 0x4a74
0x00002aaaaad463b0 : ret 0x4ae8
0x00002aaaaad8ae80 : ret 0x4ae9
0x00002aaaaad05d55 : ret 0x4c01
0x00002aaaaad66fd1 : ret 0x4c02
0x00002aaaaadaa062 : ret 0x4c04
0x00002aaaaad269a6 : ret 0x4c05
0x00002aaaaad34c84 : ret 0x4c08
0x00002aaaaadaacab : ret 0x4c20
0x00002aaaaad1dcf6 : ret 0x4c40
0x00002aaaaadabd58 : ret 0x4c6
0x00002aaaaad92c15 : ret 0x4c80
0x00002aaaaad26400 : ret 0x4c8b
0x00002aaaaad145b5 : ret 0x4d01
0x00002aaaaacf6ca1 : ret 0x4d02
0x00002aaaaad784b2 : ret 0x4d10
0x00002aaaaade2542 : ret 0x4d30
0x00002aaaaacf5800 : ret 0x4d74
0x00002aaaaae576e7 : ret 0x4e27
0x00002aaaaad485d0 : ret 0x4e8b
0x00002aaaaad90fb9 : ret 0x4eb
0x00002aaaaacf4938 : ret 0x4ee9
0x00002aaaaacde328 : ret 0x4f
0x00002aaaaacfcd8e : ret 0x4f72
0x00002aaaaad099d4 : ret 0x4f77
0x00002aaaaae8e8a9 : ret 0x503
0x00002aaaaada9e95 : ret 0x5089
0x00002aaaaae41dd4 : ret 0x5173
0x00002aaaaadbe38a : ret 0x51e
0x00002aaaaadcf9e9 : ret 0x51e8
0x00002aaaaacff2b3 : ret 0x527e
0x00002aaaaacd618e : ret 0x52c0
0x00002aaaaacdb658 : ret 0x53
0x00002aaaaae0ba1a : ret 0x535
0x00002aaaaad40008 : ret 0x5389
0x00002aaaaae00cfb : ret 0x53ff
0x00002aaaaadc00bc : ret 0x5408
0x00002aaaaad8e21b : ret 0x5438
0x00002aaaaad71579 : ret 0x547c
0x00002aaaaad1d1f6 : ret 0x5488
0x00002aaaaacfd11a : ret 0x5489
0x00002aaaaae5594c : ret 0x5508
0x00002aaaaad0595f : ret 0x5525
0x00002aaaaacd545e : ret 0x5576
0x00002aaaaada934a : ret 0x5589
0x00002aaaaacde538 : ret 0x56
0x00002aaaaad5bd57 : ret 0x5675
0x00002aaaaadefc12 : ret 0x56e9
0x00002aaaaad901fa : ret 0x572
0x00002aaaaad59c52 : ret 0x575
0x00002aaaaade99e2 : ret 0x577
0x00002aaaaadd3be3 : ret 0x57e8
0x00002aaaaada1ce3 : ret 0x57e9
0x00002aaaaae57c18 : ret 0x5803
0x00002aaaaad0c6fb : ret 0x589
0x00002aaaaad3dfe2 : ret 0x58e8
0x00002aaaaae55620 : ret 0x591c
0x00002aaaaad8428a : ret 0x594
0x00002aaaaadab491 : ret 0x5974
0x00002aaaaadf2073 : ret 0x5978
0x00002aaaaacd6269 : ret 0x5a51
0x00002aaaaadf6343 : ret 0x5a74
0x00002aaaaae56387 : ret 0x5ae4
0x00002aaaaadb9ee9 : ret 0x5ba
0x00002aaaaacd5f9f : ret 0x5bdb
0x00002aaaaade3ab0 : ret 0x5bf
0x00002aaaaacf9d01 : ret 0x5c77
0x00002aaaaacd6055 : ret 0x5cbe
0x00002aaaaad885ce : ret 0x5ce8
0x00002aaaaae0091a : ret 0x5e6
0x00002aaaaadbc10d : ret 0x5ee9
0x00002aaaaacd34b9 : ret 0x6080
0x00002aaaaacd5725 : ret 0x617e
0x00002aaaaae580b2 : ret 0x62c1
0x00002aaaaad27d53 : ret 0x6348
0x00002aaaaad4a662 : ret 0x6349
0x00002aaaaadab3c0 : ret 0x634d
0x00002aaaaad7d35a : ret 0x6375
0x00002aaaaad5fd2f : ret 0x63be
0x00002aaaaadf8c7a : ret 0x646
0x00002aaaaad71569 : ret 0x647c
0x00002aaaaae032c9 : ret 0x6600
0x00002aaaaadbb64a : ret 0x6601
0x00002aaaaad10251 : ret 0x6610
0x00002aaaaad60f42 : ret 0x6620
0x00002aaaaacd5827 : ret 0x6642
0x00002aaaaad5dbf5 : ret 0x66c3
0x00002aaaaadcba26 : ret 0x674
0x00002aaaaae5563f : ret 0x67b2
0x00002aaaaadda4d3 : ret 0x67e8
0x00002aaaaad8ea41 : ret 0x6948
0x00002aaaaadc6639 : ret 0x69e9
0x00002aaaaadd8cea : ret 0x69f
0x00002aaaaadeb0fd : ret 0x6ae9
0x00002aaaaad94cff : ret 0x6b45
0x00002aaaaada05df : ret 0x6b8
0x00002aaaaacd6ce2 : ret 0x6bba
0x00002aaaaade21a2 : ret 0x6bf
0x00002aaaaad7eb21 : ret 0x6c74
0x00002aaaaacf46fa : ret 0x6d7
0x00002aaaaae66733 : ret 0x6e1f
0x00002aaaaadf0b1a : ret 0x6e4
0x00002aaaaae58241 : ret 0x6f9
0x00002aaaaad02ace : ret 0x6fe9
0x00002aaaaadeb9de : ret 0x708d
0x00002aaaaaddafc9 : ret 0x71e8
0x00002aaaaade6cd8 : ret 0x71e9
0x00002aaaaacf44fa : ret 0x723
0x00002aaaaae2011e : ret 0x7280
0x00002aaaaad4ea51 : ret 0x7401
0x00002aaaaad57283 : ret 0x7402
0x00002aaaaad545d5 : ret 0x7404
0x00002aaaaad45b69 : ret 0x7408
0x00002aaaaad40ba1 : ret 0x7420
0x00002aaaaad24562 : ret 0x7450
0x00002aaaaad98435 : ret 0x748d
0x00002aaaaad7ce4f : ret 0x74e9
0x00002aaaaad736e7 : ret 0x7501
0x00002aaaaad736ec : ret 0x7502
0x00002aaaaad34ba6 : ret 0x7504
0x00002aaaaad45b11 : ret 0x7508
0x00002aaaaae42d5b : ret 0x7510
0x00002aaaaad61744 : ret 0x7518
0x00002aaaaae42d68 : ret 0x7520
0x00002aaaaadab288 : ret 0x7540
0x00002aaaaada8a67 : ret 0x7580
0x00002aaaaadb4105 : ret 0x75e8
0x00002aaaaae40cc2 : ret 0x7677
0x00002aaaaacf6222 : ret 0x774
0x00002aaaaad1b78a : ret 0x777
0x00002aaaaadda3c3 : ret 0x77e8
0x00002aaaaadefbf1 : ret 0x77e9
0x00002aaaaade3e0a : ret 0x793
0x00002aaaaacd5eec : ret 0x793b
0x00002aaaaad9fed9 : ret 0x7974
0x00002aaaaadf1b1c : ret 0x7a8d
0x00002aaaaad855b0 : ret 0x7ae8
0x00002aaaaacf6dfa : ret 0x7b8
0x00002aaaaad07d85 : ret 0x7c7
0x00002aaaaad60ed2 : ret 0x7e20
0x00002aaaaadc9d33 : ret 0x7e8
0x00002aaaaad5c33c : ret 0x7f10
0x00002aaaaad2c904 : ret 0x7f3c
0x00002aaaaae2b44e : ret 0x80
0x00002aaaaad5d519 : ret 0x8000
0x00002aaaaad073bc : ret 0x8001
0x00002aaaaad919a2 : ret 0x8010
0x00002aaaaada20a9 : ret 0x8040
0x00002aaaaadb33cf : ret 0x8041
0x00002aaaaad788ed : ret 0x8072
0x00002aaaaadf05c6 : ret 0x8080
0x00002aaaaacd68b0 : ret 0x80fc
0x00002aaaaadaa2fd : ret 0x8141
0x00002aaaaad18d16 : ret 0x8148
0x00002aaaaad0808f : ret 0x8166
0x00002aaaaadc7eb9 : ret 0x81e8
0x00002aaaaadb3ad9 : ret 0x820f
0x00002aaaaadfe016 : ret 0x828d
0x00002aaaaad53ebf : ret 0x82e9
0x00002aaaaad49cd1 : ret 0x82eb
0x00002aaaaad04275 : ret 0x8301
0x00002aaaaae033fe : ret 0x8302
0x00002aaaaadf4019 : ret 0x8303
0x00002aaaaadab16a : ret 0x8304
0x00002aaaaad6bf05 : ret 0x8305
0x00002aaaaad6befd : ret 0x8306
0x00002aaaaad310cb : ret 0x8308
0x00002aaaaad28c34 : ret 0x830f
0x00002aaaaae02122 : ret 0x8320
0x00002aaaaadb157f : ret 0x833b
0x00002aaaaad19daa : ret 0x8341
0x00002aaaaad0d61d : ret 0x8348
0x00002aaaaad106e4 : ret 0x8349
0x00002aaaaad42353 : ret 0x8389
0x00002aaaaad82fa7 : ret 0x83e8
0x00002aaaaad47cf0 : ret 0x840
0x00002aaaaada0fde : ret 0x8401
0x00002aaaaade0278 : ret 0x8408
0x00002aaaaacf306c : ret 0x840f
0x00002aaaaadbb5dd : ret 0x844
0x00002aaaaad69bf8 : ret 0x8440
0x00002aaaaad7cdb6 : ret 0x8444
0x00002aaaaad69827 : ret 0x8445
0x00002aaaaadb2b40 : ret 0x8488
0x00002aaaaad27d45 : ret 0x8504
0x00002aaaaad3fe96 : ret 0x8508
0x00002aaaaacf491c : ret 0x850f
0x00002aaaaad186b1 : ret 0x8539
0x00002aaaaadc3fbd : ret 0x8545
0x00002aaaaacf3130 : ret 0x8548
0x00002aaaaacff2c5 : ret 0x854d
0x00002aaaaadbd728 : ret 0x8589
0x00002aaaaad252bc : ret 0x858b
0x00002aaaaad21a24 : ret 0x85c7
0x00002aaaaacf70f0 : ret 0x860f
0x00002aaaaad085b6 : ret 0x870f
0x00002aaaaae54f5e : ret 0x871e
0x00002aaaaad106d7 : ret 0x875
0x00002aaaaad60fe5 : ret 0x876
0x00002aaaaad0fe6d : ret 0x87e
0x00002aaaaadcf3b3 : ret 0x87e8
0x00002aaaaacfec4a : ret 0x87e9
0x00002aaaaad5b7da : ret 0x8801
0x00002aaaaad71e32 : ret 0x8802
0x00002aaaaacf7e31 : ret 0x8804
0x00002aaaaad2a621 : ret 0x880f
0x00002aaaaacf8949 : ret 0x8840
0x00002aaaaacd55b4 : ret 0x88ad
0x00002aaaaacf7202 : ret 0x8901
0x00002aaaaad2f89b : ret 0x8908
0x00002aaaaaddc845 : ret 0x8940
0x00002aaaaad1e161 : ret 0x8941
0x00002aaaaad8bbd5 : ret 0x8942
0x00002aaaaad49b9c : ret 0x8944
0x00002aaaaad23ebe : ret 0x8945
0x00002aaaaad8bff6 : ret 0x8946
0x00002aaaaacf9dc1 : ret 0x8948
0x00002aaaaacf7ffe : ret 0x8949
0x00002aaaaad03cca : ret 0x894c
0x00002aaaaacf5d0f : ret 0x894d
0x00002aaaaad1c0ab : ret 0x894e
0x00002aaaaad0e360 : ret 0x8966
0x00002aaaaad60b4a : ret 0x8a04
0x00002aaaaacd5553 : ret 0x8a4c
0x00002aaaaad3862f : ret 0x8ae9
0x00002aaaaad3f962 : ret 0x8b04
0x00002aaaaad00a3e : ret 0x8b05
0x00002aaaaadaacc0 : ret 0x8b10
0x00002aaaaae5778e : ret 0x8b36
0x00002aaaaacff53a : ret 0x8b41
0x00002aaaaadc2c43 : ret 0x8b44
0x00002aaaaada94c0 : ret 0x8b47
0x00002aaaaad08d75 : ret 0x8b48
0x00002aaaaad474d6 : ret 0x8b49
0x00002aaaaad1c02e : ret 0x8b4a
0x00002aaaaacfd27d : ret 0x8b4c
0x00002aaaaad41418 : ret 0x8b64
0x00002aaaaad8012c : ret 0x8b8
0x00002aaaaad93e98 : ret 0x8c0f
0x00002aaaaacd67b6 : ret 0x8cba
0x00002aaaaad2ed95 : ret 0x8d01
0x00002aaaaad1dc1d : ret 0x8d04
0x00002aaaaad24fef : ret 0x8d0f
0x00002aaaaad96651 : ret 0x8d41
0x00002aaaaadeb8ff : ret 0x8d44
0x00002aaaaadeb950 : ret 0x8d45
0x00002aaaaacf3778 : ret 0x8d48
0x00002aaaaad03319 : ret 0x8d49
0x00002aaaaad1b529 : ret 0x8d4a
0x00002aaaaad1b3c5 : ret 0x8d4c
0x00002aaaaad75742 : ret 0x8d4d
0x00002aaaaad551ec : ret 0x8d4e
0x00002aaaaae112ab : ret 0x8d8b
0x00002aaaaacfb54c : ret 0x8e0f
0x00002aaaaadcea11 : ret 0x8e75
0x00002aaaaad8394d : ret 0x8eb
0x00002aaaaade0cac : ret 0x8ee8
0x00002aaaaadb2be9 : ret 0x8f0f
0x00002aaaaad441f8 : ret 0x8feb
0x00002aaaaae71d48 : ret 0x900e
0x00002aaaaadaa12d : ret 0x9066
0x00002aaaaad0090d : ret 0x90c3
0x00002aaaaae12705 : ret 0x90f3
0x00002aaaaad4b0ec : ret 0x91eb
0x00002aaaaad25008 : ret 0x92e8
0x00002aaaaadeba05 : ret 0x930f
0x00002aaaaad59e8e : ret 0x93be
0x00002aaaaadf9153 : ret 0x93c
0x00002aaaaad34b92 : ret 0x940f
0x00002aaaaad10ad7 : ret 0x941
0x00002aaaaad52efa : ret 0x945
0x00002aaaaadad4ff : ret 0x947c
0x00002aaaaae01f37 : ret 0x948
0x00002aaaaad5fa18 : ret 0x94c
0x00002aaaaadaf01a : ret 0x94d
0x00002aaaaad1f391 : ret 0x9522
0x00002aaaaade6a69 : ret 0x952b
0x00002aaaaad03b18 : ret 0x953d
0x00002aaaaae565b3 : ret 0x9576
0x00002aaaaad44389 : ret 0x95eb
0x00002aaaaadcaf3f : ret 0x970f
0x00002aaaaacd6798 : ret 0x975
0x00002aaaaad53ed9 : ret 0x976
0x00002aaaaadc96a3 : ret 0x97e8
0x00002aaaaadb637c : ret 0x9848
0x00002aaaaad5bda5 : ret 0x9874
0x00002aaaaad48be4 : ret 0x98eb
0x00002aaaaacfd0da : ret 0x9a
0x00002aaaaad15208 : ret 0x9a74
0x00002aaaaae10477 : ret 0x9ae9
0x00002aaaaada2893 : ret 0x9aeb
0x00002aaaaad8afc7 : ret 0x9be9
0x00002aaaaad3df23 : ret 0x9ce9
0x00002aaaaad3b20a : ret 0x9d
0x00002aaaaad788d0 : ret 0x9d72
0x00002aaaaad80a18 : ret 0x9e74
0x00002aaaaacf5f83 : ret 0x9e9
0x00002aaaaad8102c : ret 0x9eb
0x00002aaaaad17e11 : ret 0x9f74
0x00002aaaaadc1161 : ret 0xa
0x00002aaaaae7d9ec : ret 0xa02
0x00002aaaaad4264a : ret 0xa1
0x00002aaaaadba869 : ret 0xa1e8
0x00002aaaaad0efe8 : ret 0xa274
0x00002aaaaae562a3 : ret 0xa514
0x00002aaaaadbd35d : ret 0xa6e9
0x00002aaaaadfd01f : ret 0xa74
0x00002aaaaad8cb82 : ret 0xa8e9
0x00002aaaaae56727 : ret 0xac65
0x00002aaaaae570e4 : ret 0xacfc
0x00002aaaaadc87ed : ret 0xade9
0x00002aaaaadabc2d : ret 0xaeb
0x00002aaaaad7ce3a : ret 0xaf0f
0x00002aaaaacf3cce : ret 0xaf72
0x00002aaaaad591b1 : ret 0xafe9
0x00002aaaaae8eac2 : ret 0xb
0x00002aaaaad548bf : ret 0xb48b
0x00002aaaaad1e1ad : ret 0xb589
0x00002aaaaad3ca45 : ret 0xb5e8
0x00002aaaaad02459 : ret 0xb60f
0x00002aaaaadd0468 : ret 0xb6e9
0x00002aaaaad8f885 : ret 0xb70f
0x00002aaaaadf9c88 : ret 0xb74
0x00002aaaaad4ad0c : ret 0xb76
0x00002aaaaad92b3e : ret 0xb77d
0x00002aaaaadc9483 : ret 0xb7e8
0x00002aaaaad07b83 : ret 0xb8
0x00002aaaaad077b1 : ret 0xb848
0x00002aaaaacff305 : ret 0xb87f
0x00002aaaaad337c8 : ret 0xb908
0x00002aaaaae565ee : ret 0xb9b9
0x00002aaaaacd6189 : ret 0xba88
0x00002aaaaad9bd23 : ret 0xbb
0x00002aaaaad3f81d : ret 0xbb41
0x00002aaaaad30fff : ret 0xbbe9
0x00002aaaaad1b8b2 : ret 0xbc41
0x00002aaaaacd5480 : ret 0xbd07
0x00002aaaaadfb9af : ret 0xbd74
0x00002aaaaad1e19a : ret 0xbd89
0x00002aaaaad34808 : ret 0xbe08
0x00002aaaaad94c86 : ret 0xbe0f
0x00002aaaaae56344 : ret 0xbe57
0x00002aaaaad26498 : ret 0xbf07
0x00002aaaaad33051 : ret 0xbf08
0x00002aaaaad50b9e : ret 0xbfe9
0x00002aaaaae071d8 : ret 0xbfeb
0x00002aaaaad5d3d9 : ret 0xc000
0x00002aaaaad1542e : ret 0xc001
0x00002aaaaad153e2 : ret 0xc002
0x00002aaaaadf58e7 : ret 0xc019
0x00002aaaaad3f072 : ret 0xc031
0x00002aaaaadaff8a : ret 0xc041
0x00002aaaaadfdffa : ret 0xc069
0x00002aaaaad1ad6c : ret 0xc083
0x00002aaaaadd1dd5 : ret 0xc084
0x00002aaaaad5f9e5 : ret 0xc085
0x00002aaaaadb01cc : ret 0xc141
0x00002aaaaad07a17 : ret 0xc148
0x00002aaaaad1d538 : ret 0xc149
0x00002aaaaae084a8 : ret 0xc173
0x00002aaaaad088bd : ret 0xc189
0x00002aaaaadda279 : ret 0xc1e8
0x00002aaaaad1a542 : ret 0xc221
0x00002aaaaad0dba6 : ret 0xc229
0x00002aaaaad0dd40 : ret 0xc269
0x00002aaaaad96431 : ret 0xc26b
0x00002aaaaad563db : ret 0xc275
0x00002aaaaadc805a : ret 0xc283
0x00002aaaaad08d67 : ret 0xc289
0x00002aaaaae41ca4 : ret 0xc2b2
0x00002aaaaadefbc0 : ret 0xc2e9
0x00002aaaaad0d6f8 : ret 0xc35b
0x00002aaaaad563dd : ret 0xc3f3
0x00002aaaaadcba90 : ret 0xc3f6
0x00002aaaaae54162 : ret 0xc4c3
0x00002aaaaae55ef8 : ret 0xc4ff
0x00002aaaaae201b8 : ret 0xc580
0x00002aaaaadb7db5 : ret 0xc5e8
0x00002aaaaade0a6a : ret 0xc601
0x00002aaaaadf4da4 : ret 0xc602
0x00002aaaaadb731e : ret 0xc683
0x00002aaaaad29263 : ret 0xc689
0x00002aaaaad718f4 : ret 0xc6e8
0x00002aaaaad59c91 : ret 0xc6eb
0x00002aaaaae01c16 : ret 0xc707
0x00002aaaaadcba1a : ret 0xc72
0x00002aaaaad0a291 : ret 0xc748
0x00002aaaaad172b6 : ret 0xc749
0x00002aaaaad7d3b1 : ret 0xc75
0x00002aaaaad6f69f : ret 0xc76
0x00002aaaaad54bae : ret 0xc789
0x00002aaaaadc58bd : ret 0xc7e9
0x00002aaaaad064a8 : ret 0xc801
0x00002aaaaad6abe1 : ret 0xc829
0x00002aaaaad44cb4 : ret 0xc883
0x00002aaaaacf8b9c : ret 0xc985
0x00002aaaaad5be16 : ret 0xc9ff
0x00002aaaaadb0fe2 : ret 0xca39
0x00002aaaaadbd327 : ret 0xca83
0x00002aaaaad2fb8d : ret 0xcb73
0x00002aaaaada563d : ret 0xcb75
0x00002aaaaadc8089 : ret 0xcb8
0x00002aaaaae5598a : ret 0xcca7
0x00002aaaaadfe45a : ret 0xcd
0x00002aaaaae57a6d : ret 0xcd11
0x00002aaaaad788a0 : ret 0xcd72
0x00002aaaaadd41cc : ret 0xcdbb
0x00002aaaaad55d81 : ret 0xce31
0x00002aaaaad04ff8 : ret 0xce80
0x00002aaaaad2f46d : ret 0xce83
0x00002aaaaad51cdb : ret 0xcf31
0x00002aaaaad82ed6 : ret 0xd
0x00002aaaaada4f2e : ret 0xd008
0x00002aaaaadac080 : ret 0xd009
0x00002aaaaad8e3b3 : ret 0xd021
0x00002aaaaad9fcf2 : ret 0xd029
0x00002aaaaae2002c : ret 0xd073
0x00002aaaaad19dbf : ret 0xd084
0x00002aaaaad0596e : ret 0xd089
0x00002aaaaad87d3d : ret 0xd0f7
0x00002aaaaadc0bf1 : ret 0xd101
0x00002aaaaadd0e44 : ret 0xd108
0x00002aaaaad32c5d : ret 0xd129
0x00002aaaaadaaa1a : ret 0xd138
0x00002aaaaadae282 : ret 0xd139
0x00002aaaaadb01d3 : ret 0xd141
0x00002aaaaae01d39 : ret 0xd148
0x00002aaaaaddaf69 : ret 0xd1e8
0x00002aaaaad06e55 : ret 0xd231
0x00002aaaaacf386d : ret 0xd284
0x00002aaaaad71270 : ret 0xd308
0x00002aaaaad34a97 : ret 0xd309
0x00002aaaaad34f73 : ret 0xd329
0x00002aaaaad58666 : ret 0xd341
0x00002aaaaad0f3db : ret 0xd348
0x00002aaaaad09942 : ret 0xd521
0x00002aaaaacd389a : ret 0xd5a4
0x00002aaaaad258e2 : ret 0xd5e9
0x00002aaaaadb2fd3 : ret 0xd609
0x00002aaaaad32ebd : ret 0xd629
0x00002aaaaadadeda : ret 0xd639
0x00002aaaaaddabbe : ret 0xd6e9
0x00002aaaaad8ca2d : ret 0xd721
0x00002aaaaadb0381 : ret 0xd739
0x00002aaaaadd8216 : ret 0xd74
0x00002aaaaad8b979 : ret 0xd76
0x00002aaaaad9e763 : ret 0xd7e8
0x00002aaaaad959a4 : ret 0xd801
0x00002aaaaad7ce3f : ret 0xd889
0x00002aaaaae57505 : ret 0xd8f
0x00002aaaaacf34df : ret 0xd975
0x00002aaaaada9a9d : ret 0xd9eb
0x00002aaaaadf54d0 : ret 0xda21
0x00002aaaaadb0d10 : ret 0xda39
0x00002aaaaade77b3 : ret 0xda75
0x00002aaaaad07eb1 : ret 0xdaf7
0x00002aaaaadc30d2 : ret 0xdb31
0x00002aaaaacf839b : ret 0xdb85
0x00002aaaaad8d541 : ret 0xdc00
0x00002aaaaadb4ad1 : ret 0xdc74
0x00002aaaaae575e6 : ret 0xdcd9
0x00002aaaaad5ac1e : ret 0xdce8
0x00002aaaaad9a8f0 : ret 0xdd72
0x00002aaaaadb3133 : ret 0xddeb
0x00002aaaaae56562 : ret 0xde5d
0x00002aaaaad47615 : ret 0xde74
0x00002aaaaae0cba7 : ret 0xde77
0x00002aaaaad18ced : ret 0xde8
0x00002aaaaae552f1 : ret 0xde9e
0x00002aaaaade1885 : ret 0xdeb
0x00002aaaaad5d299 : ret 0xe000
0x00002aaaaae6ed15 : ret 0xe01
0x00002aaaaae42d19 : ret 0xe074
0x00002aaaaacf6ded : ret 0xe077
0x00002aaaaadf6bf6 : ret 0xe083
0x00002aaaaae7c0f9 : ret 0xe0a
0x00002aaaaae001ca : ret 0xe0ff
0x00002aaaaadb4c9c : ret 0xe174
0x00002aaaaacfb555 : ret 0xe183
0x00002aaaaacf729b : ret 0xe277
0x00002aaaaacf3628 : ret 0xe281
0x00002aaaaacfa352 : ret 0xe283
0x00002aaaaad82ffa : ret 0xe2d
0x00002aaaaacf40b9 : ret 0xe2ff
0x00002aaaaad1e173 : ret 0xe383
0x00002aaaaad68176 : ret 0xe3e9
0x00002aaaaadb4889 : ret 0xe474
0x00002aaaaadf0ee6 : ret 0xe4e8
0x00002aaaaad68fc0 : ret 0xe575
0x00002aaaaad509b7 : ret 0xe675
0x00002aaaaad23583 : ret 0xe680
0x00002aaaaae57706 : ret 0xe71f
0x00002aaaaadab4d6 : ret 0xe775
0x00002aaaaada5a98 : ret 0xe777
0x00002aaaaad421c2 : ret 0xe8
0x00002aaaaadcd584 : ret 0xe801
0x00002aaaaadab9bb : ret 0xe875
0x00002aaaaad24e85 : ret 0xe87f
0x00002aaaaad3f20b : ret 0xe883
0x00002aaaaad9fbdf : ret 0xe8b8
0x00002aaaaacf3497 : ret 0xe8c1
0x00002aaaaacfea92 : ret 0xe901
0x00002aaaaad02b2e : ret 0xe902
0x00002aaaaacf9ec9 : ret 0xe904
0x00002aaaaad8daa1 : ret 0xe907
0x00002aaaaad5bea6 : ret 0xe908
0x00002aaaaae19276 : ret 0xe910
0x00002aaaaad1e70d : ret 0xe920
0x00002aaaaad587e3 : ret 0xe96e
0x00002aaaaae55a67 : ret 0xe970
0x00002aaaaad0ef2c : ret 0xe974
0x00002aaaaade3094 : ret 0xe975
0x00002aaaaad5898c : ret 0xe977
0x00002aaaaacfdcaa : ret 0xea
0x00002aaaaad1907b : ret 0xea75
0x00002aaaaad7cfea : ret 0xea81
0x00002aaaaad1e18a : ret 0xeac0
0x00002aaaaada92b2 : ret 0xeac1
0x00002aaaaad6f924 : ret 0xeb01
0x00002aaaaada9baa : ret 0xeb04
0x00002aaaaae172b6 : ret 0xeb10
0x00002aaaaad9c642 : ret 0xeb11
0x00002aaaaad587af : ret 0xeb5b
0x00002aaaaad0c4fa : ret 0xeb72
0x00002aaaaae58218 : ret 0xec2
0x00002aaaaad8b225 : ret 0xec77
0x00002aaaaada9df1 : ret 0xec7f
0x00002aaaaadeba58 : ret 0xed75
0x00002aaaaacfb098 : ret 0xed85
0x00002aaaaadb3217 : ret 0xee72
0x00002aaaaacf5c8f : ret 0xee75
0x00002aaaaae000cc : ret 0xeee8
0x00002aaaaae57eba : ret 0xef32
0x00002aaaaae0b95a : ret 0xef5c
0x00002aaaaad45a2e : ret 0xef75
0x00002aaaaada5639 : ret 0xef7c
0x00002aaaaacd8691 : ret 0xf
0x00002aaaaad5d159 : ret 0xf000
0x00002aaaaacf8941 : ret 0xf01
0x00002aaaaad34bc1 : ret 0xf02
0x00002aaaaadae522 : ret 0xf039
0x00002aaaaad3fe2d : ret 0xf04
0x00002aaaaad71e13 : ret 0xf077
0x00002aaaaacf2e5a : ret 0xf08
0x00002aaaaadeb97f : ret 0xf089
0x00002aaaaad6c47b : ret 0xf0e
0x00002aaaaad02b37 : ret 0xf0e9
0x00002aaaaad53c50 : ret 0xf0f
0x00002aaaaad2b2ea : ret 0xf10
0x00002aaaaade19e2 : ret 0xf10e
0x00002aaaaade17da : ret 0xf110
0x00002aaaaad7167c : ret 0xf188
0x00002aaaaacf3341 : ret 0xf189
0x00002aaaaadce649 : ret 0xf1e8
0x00002aaaaad41e5c : ret 0xf20
0x00002aaaaad5d849 : ret 0xf201
0x00002aaaaad3f375 : ret 0xf229
0x00002aaaaadc582a : ret 0xf2cf
0x00002aaaaad0a614 : ret 0xf301
0x00002aaaaae5ac98 : ret 0xf377
0x00002aaaaadb7e2a : ret 0xf3a9
0x00002aaaaadf5d1e : ret 0xf3c3
0x00002aaaaad297ca : ret 0xf40
0x00002aaaaad6cb4e : ret 0xf41
0x00002aaaaadae8aa : ret 0xf43f
0x00002aaaaadb0f1b : ret 0xf44
0x00002aaaaadae9a5 : ret 0xf45
0x00002aaaaad0fbc6 : ret 0xf48
0x00002aaaaad25ef7 : ret 0xf4c
0x00002aaaaadf0a5a : ret 0xf4f5
0x00002aaaaada9676 : ret 0xf53
0x00002aaaaacf2a3a : ret 0xf58
0x00002aaaaad696c5 : ret 0xf5e8
0x00002aaaaad93a18 : ret 0xf601
0x00002aaaaad1caa2 : ret 0xf631
0x00002aaaaadeba3b : ret 0xf641
0x00002aaaaadeb9ab : ret 0xf643
0x00002aaaaad07abb : ret 0xf66
0x00002aaaaae5cda8 : ret 0xf678
0x00002aaaaadd16c4 : ret 0xf683
0x00002aaaaad7cc0c : ret 0xf685
0x00002aaaaadd0fda : ret 0xf6f7
0x00002aaaaad08d5d : ret 0xf701
0x00002aaaaad548a3 : ret 0xf710
0x00002aaaaad1cb15 : ret 0xf74
0x00002aaaaad1a645 : ret 0xf741
0x00002aaaaad61b3c : ret 0xf748
0x00002aaaaad1b774 : ret 0xf749
0x00002aaaaadd705a : ret 0xf771
0x00002aaaaade6148 : ret 0xf7e
0x00002aaaaad25bd3 : ret 0xf7e9
0x00002aaaaadb237c : ret 0xf80
0x00002aaaaad5d019 : ret 0xf800
0x00002aaaaad7fb7a : ret 0xf810
0x00002aaaaade15fa : ret 0xf852
0x00002aaaaae551d0 : ret 0xf869
0x00002aaaaad811d5 : ret 0xf883
0x00002aaaaad983a5 : ret 0xf889
0x00002aaaaad94679 : ret 0xf8c1
0x00002aaaaacf400d : ret 0xf8e9
0x00002aaaaadcb9ca : ret 0xf95c
0x00002aaaaadf9c80 : ret 0xf980
0x00002aaaaad36814 : ret 0xf983
0x00002aaaaadc4c3a : ret 0xf9cb
0x00002aaaaad965bf : ret 0xfa29
0x00002aaaaad4e9e2 : ret 0xfa3e
0x00002aaaaad253c0 : ret 0xfa80
0x00002aaaaad10ee2 : ret 0xfa81
0x00002aaaaacfca79 : ret 0xfa83
0x00002aaaaad46ce2 : ret 0xfabb
0x00002aaaaad05982 : ret 0xfac1
0x00002aaaaadade9d : ret 0xfad1
0x00002aaaaae144ca : ret 0xfb58
0x00002aaaaadfa031 : ret 0xfb80
0x00002aaaaadac00e : ret 0xfb83
0x00002aaaaad5ced9 : ret 0xfc00
0x00002aaaaad124d6 : ret 0xfc01
0x00002aaaaad1248a : ret 0xfc02
0x00002aaaaadd2231 : ret 0xfc07
0x00002aaaaad2f8da : ret 0xfc2f
0x00002aaaaad5d869 : ret 0xfc3
0x00002aaaaae67e44 : ret 0xfc52
0x00002aaaaae67c44 : ret 0xfc5c
0x00002aaaaad2afda : ret 0xfc78
0x00002aaaaae68130 : ret 0xfc84
0x00002aaaaae6883c : ret 0xfc9f
0x00002aaaaae68834 : ret 0xfca0
0x00002aaaaae6882c : ret 0xfca1
0x00002aaaaae68824 : ret 0xfca2
0x00002aaaaae6881c : ret 0xfca3
0x00002aaaaae68628 : ret 0xfcab
0x00002aaaaad1e3e2 : ret 0xfd44
0x00002aaaaada7b3a : ret 0xfd7a
0x00002aaaaad7cd18 : ret 0xfd83
0x00002aaaaadc764a : ret 0xfda2
0x00002aaaaad023e0 : ret 0xfdf
0x00002aaaaad5cd99 : ret 0xfe00
0x00002aaaaad7cd39 : ret 0xfe83
0x00002aaaaadf3738 : ret 0xfe9
0x00002aaaaad17b7a : ret 0xfe90
0x00002aaaaad06ee2 : ret 0xfeb9
0x00002aaaaae1fffe : ret 0xfec5
0x00002aaaaae000bc : ret 0xfee8
0x00002aaaaad5cc59 : ret 0xff00
0x00002aaaaadf66fa : ret 0xff0d
0x00002aaaaad17d4f : ret 0xff2
0x00002aaaaad898a0 : ret 0xff25
0x00002aaaaad71ada : ret 0xff3
0x00002aaaaad5b5b5 : ret 0xff31
0x00002aaaaad70d1d : ret 0xff41
0x00002aaaaacfe3e2 : ret 0xff44
0x00002aaaaad5bd54 : ret 0xff48
0x00002aaaaadd39ca : ret 0xff63
0x00002aaaaad5cb19 : ret 0xff80
0x00002aaaaad0f216 : ret 0xff81
0x00002aaaaad0f1ca : ret 0xff82
0x00002aaaaad36832 : ret 0xff83
0x00002aaaaad3cde9 : ret 0xffaf
0x00002aaaaacf296b : ret 0xffb8
0x00002aaaaad15317 : ret 0xffbf
0x00002aaaaad5c9d9 : ret 0xffc0
0x00002aaaaad6e45c : ret 0xffd0
0x00002aaaaad70c39 : ret 0xffd3
0x00002aaaaad5525a : ret 0xffd5
0x00002aaaaad6e74c : ret 0xffd7
0x00002aaaaad59ad1 : ret 0xffdf
0x00002aaaaad5c899 : ret 0xffe0
0x00002aaaaad2aafa : ret 0xffe1
0x00002aaaaad39b2d : ret 0xffe5
0x00002aaaaacf3fda : ret 0xffe8
0x00002aaaaacf4005 : ret 0xffe9
0x00002aaaaae465c1 : ret 0xffea
0x00002aaaaad13f87 : ret 0xffec
0x00002aaaaae69b81 : ret 0xffed
0x00002aaaaae06537 : ret 0xffee
0x00002aaaaad0e58c : ret 0xffef
0x00002aaaaad5c759 : ret 0xfff0
0x00002aaaaad04d08 : ret 0xfff1
0x00002aaaaadc6511 : ret 0xfff2
0x00002aaaaad96c27 : ret 0xfff3
0x00002aaaaad82b6e : ret 0xfff4
0x00002aaaaad70b05 : ret 0xfff5
0x00002aaaaadc1a6e : ret 0xfff6
0x00002aaaaad904a1 : ret 0xfff7
0x00002aaaaad21c76 : ret 0xfff8
0x00002aaaaad076c6 : ret 0xfff9
0x00002aaaaad2415a : ret 0xfffa
0x00002aaaaacfe0b3 : ret 0xfffb
0x00002aaaaad073c6 : ret 0xfffc
0x00002aaaaad32ac0 : ret 0xfffd
0x00002aaaaadd27f7 : ret 0xfffe
0x00002aaaaad00905 : ret 0xffff
0x00002aaaaacf26bc : ret 1
0x00002aaaaad1e519 : ret 2
0x00002aaaaacd41c8 : ret 3
0x00002aaaaacda608 : ret 4
0x00002aaaaacd4570 : ret 5
0x00002aaaaace0da0 : ret 6
0x00002aaaaad7d8fa : ret 7
0x00002aaaaacd4a8c : ret 8
0x00002aaaaae437ca : ret 9
0x00002aaaaae58ca8 : retf -0x1298 ; jmp qword ptr [rdx]
0x00002aaaaae58cb8 : retf -0x1298 ; push rdi ; in eax, dx ; call rdx
0x00002aaaaad6507f : retf -0x7af1 ; call qword ptr [rsi]
0x00002aaaaadd4eda : retf -0xe27 ; dec dword ptr [rax - 0x75] ; jge 0x101eea ; call rbx
0x00002aaaaae7aa1d : retf 0 ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaae7aa4d : retf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dl ; call qword ptr [rax]
0x00002aaaaad919f7 : retf ; jmp 0xbea0b
0x00002aaaaae5b335 : retf ; jmp qword ptr [rdi]
0x00002aaaaae15ab3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00002aaaaae5b485 : retf ; push qword ptr [rdx - 0x24] ; call qword ptr [rcx]
0x00002aaaaad7c665 : rol bl, 0x48 ; mov eax, edi ; ret
0x00002aaaaad7d12e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00002aaaaadd1c1c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x00002aaaaad710bc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x00002aaaaad7151d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00002aaaaad7f1bd : rol bl, 0x90 ; mov eax, 1 ; ret
0x00002aaaaad7feeb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad45e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00002aaaaad6113d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00002aaaaad0d6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00002aaaaade300d : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x00002aaaaad71ab2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00002aaaaad8fc82 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x00002aaaaad5de52 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00002aaaaacd4390 : rol byte ptr [rax + rax], 0 ; ret
0x00002aaaaae53020 : rol byte ptr [rax + rax], 0 ; ret 4
0x00002aaaaad54636 : rol byte ptr [rax + rax], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaacf7bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00002aaaaad3932c : rol byte ptr [rax + rcx*2], 1 ; ret
0x00002aaaaadf6549 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00002aaaaad10320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00002aaaaae689d4 : rol byte ptr [rax - 0x7daf0004], 1 ; cld ; call rax
0x00002aaaaad7ed9d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00002aaaaae40bcd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae69bcd : rol byte ptr [rax], 0 ; mov ah, 0xd0 ; in eax, dx ; call rsp
0x00002aaaaad8ea58 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00002aaaaad3e62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00002aaaaadd7897 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad9a390 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad0869c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaad5fc5b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00002aaaaad68b22 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00002aaaaad309e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00002aaaaad09269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x00002aaaaadefb67 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x00002aaaaadefd4d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x00002aaaaae68a20 : rol byte ptr [rbp - 0x78af0004], 1 ; cld ; call rax
0x00002aaaaad1b46b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00002aaaaadeb539 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00002aaaaadd7e2b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00002aaaaada9607 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00002aaaaaddcaec : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00002aaaaad46058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00002aaaaad00f31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00002aaaaada3af5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00002aaaaae689dc : rol byte ptr [rbx - 0x7aaf0004], 1 ; cld ; call rax
0x00002aaaaad30f0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00002aaaaad7e3e2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaadf4f16 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaae00011 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00002aaaaae5a468 : rol byte ptr [rbx], 0xf2 ; jmp rax
0x00002aaaaad7cfe1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00002aaaaadefb69 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x00002aaaaadefd4f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x00002aaaaad69773 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00002aaaaad70fb2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00002aaaaad8aa7b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x00002aaaaad7106b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00002aaaaada8985 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x00002aaaaacfc75b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00002aaaaad7e49e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xab470 ; ret
0x00002aaaaadf6202 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00002aaaaadd55e7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00002aaaaad94c9e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00002aaaaadade3e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x00002aaaaad947fd : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00002aaaaad5d842 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaad7e3c2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaadba54a : rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaadab9b8 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00002aaaaadb8242 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaad1b082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00002aaaaad7cdeb : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00002aaaaaddbdcd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00002aaaaadab697 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00002aaaaacfe152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00002aaaaad41e57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00002aaaaad1906a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00002aaaaadd4577 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00002aaaaad7ce4b : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaad7ce36 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaae5a420 : rol byte ptr [rcx], 1 ; jmp rax
0x00002aaaaae2002e : rol byte ptr [rcx], 1 ; ret 0x148
0x00002aaaaae5ea14 : rol byte ptr [rcx], 1 ; sti ; jmp rax
0x00002aaaaae6ed12 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00002aaaaae8eb18 : rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaae8eac0 : rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaadc8e5c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00002aaaaaddcebd : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaad7e422 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaae5a4a4 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x00002aaaaae5a4a8 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x00002aaaaae68a18 : rol byte ptr [rdx - 0x7baf0004], 1 ; cld ; call rax
0x00002aaaaae68084 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00002aaaaad7e3d2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaacf48e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00002aaaaae77180 : rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaadd9825 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00002aaaaad9f677 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00002aaaaae5a448 : rol byte ptr [rdx], 1 ; push rax ; add dh, dl ; call qword ptr [rax]
0x00002aaaaad91b3f : rol byte ptr [rip + 0x16e], 1 ; ret
0x00002aaaaaddcd8d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00002aaaaad3ed99 : rol byte ptr [rip - 0x76b7ffee], 1 ; ret 0x8948
0x00002aaaaae689e4 : rol byte ptr [rsi - 0x77af0004], 1 ; cld ; call rax
0x00002aaaaae6825c : rol byte ptr [rsi - 0x79af0004], 0xfc ; jmp rax
0x00002aaaaad7e412 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00002aaaaada9e91 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x00002aaaaae54160 : rol cl, 0xc2 ; ret
0x00002aaaaae67764 : rol dh, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaadef4e7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00002aaaaae77660 : rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaad7e36c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00002aaaaade2fe1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00002aaaaacd39ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00002aaaaae69c0d : rol dword ptr [rax], 0 ; and al, 0xd4 ; in eax, dx ; jmp rsp
0x00002aaaaae7a07d : rol dword ptr [rax], 0 ; shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaad3ecf8 : rol dword ptr [rax], 1 ; ret
0x00002aaaaad71517 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00002aaaaacf29be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00002aaaaad9857b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00002aaaaad39328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x00002aaaaacf5d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaade4381 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaad7a2b9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00002aaaaadf63ae : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00002aaaaad090c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad5d8a9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad9b38b : rol ebx, 0x2f ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00002aaaaae09b88 : rol ecx, 1 ; jmp 0xffffffff80d662a4
0x00002aaaaae09e0f : rol ecx, 1 ; jmp 0xffffffff80d6652b
0x00002aaaaacd39ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00002aaaaad5d8a8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad090c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaadeb7b2 : ror ax, 8 ; ret
0x00002aaaaad08f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00002aaaaad090c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00002aaaaad60fb2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8dff9 ; add rax, rdi ; ret
0x00002aaaaad5dd07 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00002aaaaad736de : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00002aaaaad4742a : ror byte ptr [rax + 0x29], 1 ; ret
0x00002aaaaacf6db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x00002aaaaae0e1bd : ror byte ptr [rax + 0x39], 0xca ; je 0x13b1d7 ; ret
0x00002aaaaadcf23f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfc277 ; ret
0x00002aaaaade6eb8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00002aaaaadc8e5e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00002aaaaadc90ed : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00002aaaaad1bf16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00002aaaaade6dd8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00002aaaaada6400 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00002aaaaad19f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00002aaaaad8e850 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00002aaaaade7ef2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00002aaaaadfb31c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaad69db7 : ror byte ptr [rax + 0xf], 1 ; ret
0x00002aaaaad1afd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x00002aaaaacff864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00002aaaaacff855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00002aaaaad1ca9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x00002aaaaad71663 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00002aaaaad689fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00002aaaaad5f8a9 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaadf6383 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00002aaaaad49b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaad81571 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00002aaaaad8a626 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x00002aaaaad15205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00002aaaaad80a15 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00002aaaaad0efe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x00002aaaaad0ef29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00002aaaaad5dd04 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00002aaaaadb1c70 : ror byte ptr [rax + 9], 0x14 ; ret
0x00002aaaaae4f428 : ror byte ptr [rax + rax], 0 ; ret
0x00002aaaaad61135 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaad7cc9c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f29f8
0x00002aaaaad00902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00002aaaaaddbb06 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaad2a15a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00002aaaaad92652 : ror byte ptr [rax - 0x46], 1 ; ret
0x00002aaaaad8da48 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaada0008 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00002aaaaad60f72 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00002aaaaad60fa2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00002aaaaad71552 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00002aaaaad60f92 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00002aaaaada17dd : ror byte ptr [rax - 0x75], 0x54 ; ret
0x00002aaaaaddc841 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00002aaaaad98558 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00002aaaaad4ea0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaae68a28 : ror byte ptr [rax - 0x75af0004], 1 ; cld ; call rax
0x00002aaaaad1bdb3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x00002aaaaad71199 : ror byte ptr [rax - 0x77], 0xa ; ret
0x00002aaaaae006b9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12d65b ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad69db4 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x00002aaaaae051d8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00002aaaaade7de2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00002aaaaae0cb99 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x00002aaaaad5a55c : ror byte ptr [rax - 0x77], 1 ; ret
0x00002aaaaae1244a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00002aaaaad0e35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00002aaaaad4bf65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00002aaaaad91645 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00002aaaaad25005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x00002aaaaae01d36 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x00002aaaaacf3625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00002aaaaad596f2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaae04809 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00002aaaaadc20f1 : ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x3b3c9
0x00002aaaaad50b6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00002aaaaad4d391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00002aaaaadd48fb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00002aaaaad4a3e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00002aaaaad67921 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad0ddac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae0d731 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae094e6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae0926e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d5 ; ret
0x00002aaaaadcad70 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00002aaaaad0d08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad183b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaae15a80 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaae05c1d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae0e76a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaadf4626 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad715b2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00002aaaaad71592 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00002aaaaad71572 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaadc928e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad551e5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2916a04
0x00002aaaaad955e5 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00002aaaaadb3116 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x00002aaaaad22583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00002aaaaadcff25 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00002aaaaad48f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00002aaaaad19180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaada76c3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad788c6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaacf9489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00002aaaaad9129e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaad4accf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaacf893e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaad4b18a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4b1cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9d2a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00002aaaaad8236a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00002aaaaad5fc04 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00002aaaaad8a9bb : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00002aaaaad7f4c7 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00002aaaaadc30d6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00002aaaaae68a30 : ror byte ptr [rbx - 0x72af0004], 1 ; cld ; call rax
0x00002aaaaadc914f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00002aaaaacf7c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00002aaaaacf6dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00002aaaaacf7270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00002aaaaad7ee07 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00002aaaaad80fb3 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x00002aaaaadfc72b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x00002aaaaad07f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00002aaaaad67386 : ror byte ptr [rcx - 0x39], cl ; ret
0x00002aaaaad0822e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00002aaaaae689ec : ror byte ptr [rcx - 0x74af0004], 1 ; cld ; call rax
0x00002aaaaadf545e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00002aaaaada92ee : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00002aaaaad7cc94 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x00002aaaaadf2071 : ror byte ptr [rcx - 0x7ca6873e], 0x3d ; ret
0x00002aaaaad673c8 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00002aaaaad784af : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaad6befa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00002aaaaad7eda0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00002aaaaad8d6a0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00002aaaaadd997c : ror byte ptr [rcx], 0xf8 ; ret
0x00002aaaaad61979 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00002aaaaae689fc : ror byte ptr [rdi - 0x6eaf0004], 1 ; cld ; call rax
0x00002aaaaadd83e0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00002aaaaadd40b5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00002aaaaadbce00 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaad8f882 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x00002aaaaad0d6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00002aaaaad1a45f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00002aaaaad8fe3d : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad4873c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad694fa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaad5aa36 : ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaadc6f87 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaadb5d8f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00002aaaaad96e46 : ror byte ptr [rdi], 0x84 ; ret 1
0x00002aaaaad6942a : ror byte ptr [rdi], 0x84 ; ret 2
0x00002aaaaad36693 : ror byte ptr [rdi], 0x84 ; ret 3
0x00002aaaaacfdecd : ror byte ptr [rdi], 0x84 ; ret 5
0x00002aaaaade2ff2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x00002aaaaad4938c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae37c0a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00002aaaaad56f05 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad714dc : ror byte ptr [rdi], 0x85 ; jge 0x9e4ea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad58a91 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad77111 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00002aaaaad2fd99 : ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaad73a57 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00002aaaaad330bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00002aaaaadadcdf : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00002aaaaade5d25 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x00002aaaaadebcae : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00002aaaaadf46a8 : ror byte ptr [rdi], 0x88 ; ret
0x00002aaaaadcab17 : ror byte ptr [rdi], 0x88 ; ret 1
0x00002aaaaadd27f4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00002aaaaad8e223 : ror byte ptr [rdi], 0x89 ; ret 3
0x00002aaaaad9fcef : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaad5a94d : ror byte ptr [rdi], 0x94 ; ret
0x00002aaaaadbf9be : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00002aaaaadb51e7 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00002aaaaad8e14b : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaae09126 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00002aaaaad8e218 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x00002aaaaad2c901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00002aaaaad53ebc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00002aaaaadb2f48 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x00002aaaaacf3775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00002aaaaad34a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x00002aaaaad42fba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00002aaaaade1fe3 : ror byte ptr [rdi], 0x95 ; ret
0x00002aaaaadabf35 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00002aaaaad8cb7f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00002aaaaad8ca2a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x00002aaaaad18c3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00002aaaaad7f6ff : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00002aaaaad7f9ec : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00002aaaaadac00b : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x00002aaaaad4671c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00002aaaaada0005 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00002aaaaadbcdfd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaad3e34b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaad7e5cc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaadcaf5a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaad06bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00002aaaaadb8245 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00002aaaaadae51f : ror byte ptr [rdi], 1 ; ret 0xf039
0x00002aaaaad52239 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad93d4b : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad6976d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaad715fd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00002aaaaad4850c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00002aaaaad8e49a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x00002aaaaad6adb7 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00002aaaaad89cd0 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x00002aaaaae68a38 : ror byte ptr [rsi - 0x6faf0004], 1 ; cld ; call rax
0x00002aaaaae689f4 : ror byte ptr [rsp + rdi*8 - 0x371af01], 1 ; call rax
0x00002aaaaae5b564 : ror byte ptr [rsp + rsi*8 - 1], 0xc0 ; hlt ; jmp rax
0x00002aaaaae677b8 : ror ch, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaae67770 : ror dl, 0xfb ; call qword ptr [rax]
0x00002aaaaad6bf7f : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00002aaaaad47143 : ror dword ptr [rax + 0x29], cl ; ret
0x00002aaaaad9562c : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00002aaaaad9f801 : ror dword ptr [rax + 0x63], cl ; ret
0x00002aaaaae1cb95 : ror dword ptr [rax + 1], -8 ; ret
0x00002aaaaae1ca59 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x00002aaaaae1ccae : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x00002aaaaae11717 : ror dword ptr [rax + 1], cl ; ret
0x00002aaaaaddc634 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaadb0c7e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00002aaaaadacfcc : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaad1cda3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00002aaaaad71185 : ror dword ptr [rax - 0x77], 0xa ; ret
0x00002aaaaadd823d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00002aaaaadaf017 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x00002aaaaae15191 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00002aaaaad25bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x00002aaaaae20082 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaad44bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x00002aaaaad4df3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x00002aaaaad0d178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00002aaaaad05752 : ror dword ptr [rax - 0x7d], cl ; ret
0x00002aaaaad1e64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00002aaaaad93a15 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00002aaaaadb7b3f : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x00002aaaaae02190 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00002aaaaad6d4d0 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x00002aaaaad6bf80 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00002aaaaadaf014 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x00002aaaaacff2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00002aaaaad66ee5 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00002aaaaadb9a34 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00002aaaaadbb6ab : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00002aaaaadbb6b3 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x00002aaaaae42d17 : ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaad6cb43 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x00002aaaaad71475 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaad0f3d8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00002aaaaadb63dd : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00002aaaaadaaa17 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00002aaaaae41438 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41b44 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41916 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00002aaaaae42a40 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41896 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00002aaaaae41bd4 : ror dword ptr [rdi], -0x7b ; je 0x16ebe4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae416cb : ror dword ptr [rdi], -0x7b ; jno 0x16e6e0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41793 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaaded0e7 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00002aaaaae41410 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad51dbf : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaadcaf3c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00002aaaaad71267 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00002aaaaadf6045 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaadeb7b3 : ror eax, 8 ; ret
0x00002aaaaae5b4ec : ror edx, 1 ; jmp qword ptr [rdi]
0x00002aaaaad44bfc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71bf8 ; ret
0x00002aaaaad4df3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x00002aaaaad5aca3 : sahf ; adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x87c76
0x00002aaaaae6971d : sahf ; add byte ptr [rax], al ; add al, 0xa6 ; jmp 0x196729
0x00002aaaaad44385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00002aaaaae68849 : sahf ; cld ; call qword ptr [rdx + 0x22fffc9d]
0x00002aaaaae68845 : sahf ; cld ; jmp qword ptr [rdx]
0x00002aaaaae689c5 : sahf ; cld ; jmp rax
0x00002aaaaae68550 : sahf ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00002aaaaacd55e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00002aaaaacd55e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x00002aaaaadf179e : sahf ; mov edx, 0x448b0006 ; ret 0x4804
0x00002aaaaae1d9de : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaadbb5d3 : sahf ; ret
0x00002aaaaad1c3f1 : sahf ; ret 0x148
0x00002aaaaad94803 : sahf ; ret 0x1fbd
0x00002aaaaae559c5 : sahf ; ret 0x38ae
0x00002aaaaad0b87c : sahf ; ret 0x8348
0x00002aaaaadbb5dc : sahf ; ret 0x844
0x00002aaaaad8e3df : sahf ; ret 0xe8c1
0x00002aaaaacd545b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00002aaaaad1eaae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad91b3d : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00002aaaaada9651 : sal bh, 0xd0 ; and eax, 2 ; ret
0x00002aaaaae0916e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae097b9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaade1012 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3e34e : sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaad3e31b : sal bh, 0xd8 ; ret
0x00002aaaaad7d142 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00002aaaaad5d517 : sal bh, 1 ; ret 0x8000
0x00002aaaaad5d3d7 : sal bh, 1 ; ret 0xc000
0x00002aaaaad5d297 : sal bh, 1 ; ret 0xe000
0x00002aaaaad5d157 : sal bh, 1 ; ret 0xf000
0x00002aaaaad5d017 : sal bh, 1 ; ret 0xf800
0x00002aaaaad5ced7 : sal bh, 1 ; ret 0xfc00
0x00002aaaaad5cd97 : sal bh, 1 ; ret 0xfe00
0x00002aaaaad5cc57 : sal bh, 1 ; ret 0xff00
0x00002aaaaad5cb17 : sal bh, 1 ; ret 0xff80
0x00002aaaaad5c9d7 : sal bh, 1 ; ret 0xffc0
0x00002aaaaad5c897 : sal bh, 1 ; ret 0xffe0
0x00002aaaaad5c757 : sal bh, 1 ; ret 0xfff0
0x00002aaaaad5c617 : sal bh, 1 ; ret 0xfff8
0x00002aaaaad5c4d7 : sal bh, 1 ; ret 0xfffc
0x00002aaaaad5c397 : sal bh, 1 ; ret 0xfffe
0x00002aaaaad234c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00002aaaaadf6237 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00002aaaaae5b29d : sal bl, 1 ; call qword ptr [rcx]
0x00002aaaaad18a28 : sal bl, 1 ; ret
0x00002aaaaad5bb13 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaad7eb6f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00002aaaaada16b1 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00002aaaaae08df5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00002aaaaae67a44 : sal byte ptr [rax], 1 ; cld ; call rax
0x00002aaaaae465f7 : sal byte ptr [rbp + 0x1e], 0x49 ; mov edi, dword ptr [rbp] ; call 0x1f8b1
0x00002aaaaad60f68 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x00002aaaaad26995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x00002aaaaae0e891 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x00002aaaaad5fc80 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x00002aaaaad3dcc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad2455e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00002aaaaade6ec7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad08307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00002aaaaae005b4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaade75a4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x00002aaaaad4d394 : sal byte ptr [rbp + 9], cl ; ret
0x00002aaaaadfe633 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00002aaaaae00251 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00002aaaaae06514 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00002aaaaae0a6c9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00002aaaaae1cb90 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00002aaaaae0ab00 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00002aaaaade74b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00002aaaaad4f845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00002aaaaad70f35 : sal byte ptr [rbp - 0x10], cl ; ret
0x00002aaaaae79a20 : sal byte ptr [rbp - 0x11], 1 ; jmp qword ptr [rax]
0x00002aaaaad1b086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00002aaaaade77ee : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaad5ba20 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00002aaaaad7c7d0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaad44c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x00002aaaaad7122a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaae0b336 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00002aaaaad71c5b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaada3a1f : sal byte ptr [rbp - 0x21], cl ; ret
0x00002aaaaad70fd3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00002aaaaad06bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00002aaaaadf59cb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00002aaaaad7ea72 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00002aaaaad5fc5d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x00002aaaaad5ab8e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadcdaee : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf6d07
0x00002aaaaade7946 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00002aaaaad5baca : sal byte ptr [rbp - 0xd], cl ; ret
0x00002aaaaad7ff1b : sal byte ptr [rbp - 0xe], cl ; ret
0x00002aaaaadfd452 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00002aaaaadff09c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaadd1662 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00002aaaaadd1383 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00002aaaaadffc42 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00002aaaaade6144 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00002aaaaadd1e65 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00002aaaaae0a6f2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00002aaaaad40cdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaae0028e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00002aaaaad4261a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaad7125e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00002aaaaadd81e9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00002aaaaad5dc4c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00002aaaaae47ca8 : sal byte ptr [rcx - 0x15], 1 ; call rax
0x00002aaaaae47c94 : sal byte ptr [rcx - 0x15], 1 ; jmp rax
0x00002aaaaade6eb6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00002aaaaadcd0d5 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00002aaaaadc8ef1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00002aaaaadd59f2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00002aaaaadf633e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x00002aaaaae684c8 : sal byte ptr [rdi - 4], 0xff ; xor byte ptr [rdi - 4], dh ; call rax
0x00002aaaaae68488 : sal byte ptr [rdi - 4], 1 ; inc dword ptr [rax + 0x77] ; cld ; call rax
0x00002aaaaad18ce4 : sal byte ptr [rdi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00002aaaaad5de1b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00002aaaaadf5893 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00002aaaaad736e3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00002aaaaad5beb3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00002aaaaad715fb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaade6ddc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00002aaaaae67a48 : sal byte ptr [rdx], 1 ; cld ; call rax
0x00002aaaaae10187 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x00002aaaaae0523a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132258 ; call rax
0x00002aaaaae0b3ba : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1383d8 ; call rax
0x00002aaaaae0bad3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138af1 ; call rax
0x00002aaaaae0741e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134494 ; call rax
0x00002aaaaae07e3e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134ea4 ; call rax
0x00002aaaaadc3166 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298497a
0x00002aaaaade4fa1 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x111f77
0x00002aaaaad5d971 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00002aaaaadf4da0 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x00002aaaaaddb1f2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00002aaaaae6793c : sal dh, 0xfb ; call qword ptr [rax]
0x00002aaaaae67930 : sal dl, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaad07e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x00002aaaaad07acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x00002aaaaad1b76f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00002aaaaae0e2d4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaad7ea52 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x00002aaaaae0e1bb : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13b1d9 ; ret
0x00002aaaaad71197 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaadf6235 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaad4ea08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaae674d4 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rcx
0x00002aaaaae67558 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; call rsi
0x00002aaaaae675e8 : sal dword ptr [rdi - 0x482e0003], 1 ; std ; jmp qword ptr [rax]
0x00002aaaaae6754c : sal dword ptr [rdi - 0x48a10003], 1 ; std ; call rcx
0x00002aaaaae6758c : sal dword ptr [rdi - 0x48b80003], 1 ; std ; call rcx
0x00002aaaaae675cc : sal dword ptr [rdi - 0x48cf0003], 1 ; std ; call rcx
0x00002aaaaae6753c : sal dword ptr [rdi - 0x490e0003], 1 ; std ; call rcx
0x00002aaaaae6757c : sal dword ptr [rdi - 0x49290003], 1 ; std ; call rcx
0x00002aaaaae675bc : sal dword ptr [rdi - 0x49440003], 1 ; std ; call rcx
0x00002aaaaae675fc : sal dword ptr [rdi - 0x495f0003], 1 ; std ; call rcx
0x00002aaaaae6752c : sal dword ptr [rdi - 0x498e0003], 1 ; std ; call rcx
0x00002aaaaae6756c : sal dword ptr [rdi - 0x49a90003], 1 ; std ; call rcx
0x00002aaaaae675ac : sal dword ptr [rdi - 0x49c40003], 1 ; std ; call rcx
0x00002aaaaae675ec : sal dword ptr [rdi - 0x49df0003], 1 ; std ; call rcx
0x00002aaaaae6751c : sal dword ptr [rdi - 0x4a0e0003], 1 ; std ; call rcx
0x00002aaaaae6755c : sal dword ptr [rdi - 0x4a290003], 1 ; std ; call rcx
0x00002aaaaae6759c : sal dword ptr [rdi - 0x4a440003], 1 ; std ; call rcx
0x00002aaaaae675dc : sal dword ptr [rdi - 0x4a5f0003], 1 ; std ; call rcx
0x00002aaaaae674dc : sal dword ptr [rdi - 0x4a6e0003], 1 ; std ; call rcx
0x00002aaaaae674fc : sal dword ptr [rdi - 0x4a7f0003], 1 ; std ; call rcx
0x00002aaaaae674ec : sal dword ptr [rdi - 0x4a990003], 1 ; std ; call rcx
0x00002aaaaae6750c : sal dword ptr [rdi - 0x4aaa0003], 1 ; std ; call rcx
0x00002aaaaad71029 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9e028 ; ret
0x00002aaaaae59f69 : sal eax, -1 ; pop rax ; ret
0x00002aaaaae5b2dd : sal ebx, 1 ; dec ecx ; fcompi st(3) ; call qword ptr [rcx]
0x00002aaaaae20085 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00002aaaaae5b261 : sal ebx, cl ; call qword ptr [rcx]
0x00002aaaaae6bcd1 : sal esi, -1 ; cld ; xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaae80a11 : sal esp, 1 ; jmp rcx
0x00002aaaaae42d56 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaae6c8dd : salc ; add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaae051db : salc ; add rdi, 0x10 ; jmp rcx
0x00002aaaaae233c6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00002aaaaae46551 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaade5739 : salc ; call rax
0x00002aaaaad7ca3a : salc ; clc ; ret
0x00002aaaaae6db51 : salc ; cli ; call rsp
0x00002aaaaade3010 : salc ; cmovne eax, ecx ; ret
0x00002aaaaadf634f : salc ; ja 0x12333c ; mov eax, 0xffffffff ; ret
0x00002aaaaacd68ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00002aaaaad1b21e : salc ; jne 0x48215 ; xor eax, eax ; ret
0x00002aaaaae67560 : salc ; mov ch, 0xfd ; call rcx
0x00002aaaaae67580 : salc ; mov dh, 0xfd ; call rcx
0x00002aaaaad46020 : salc ; mov eax, 0xffffffff ; ja 0x73039 ; ret
0x00002aaaaacd4bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00002aaaaade4fa3 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x111f75
0x00002aaaaad7eb89 : salc ; mov rax, rdi ; ret
0x00002aaaaadb36b1 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00002aaaaad97721 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00002aaaaacd52e4 : salc ; ret
0x00002aaaaacd55e6 : salc ; ret 0x23cb
0x00002aaaaae13336 : salc ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00002aaaaae5a390 : sar ah, 1 ; int1 ; push rax ; cld ; int1 ; call qword ptr [rax]
0x00002aaaaae5a3e0 : sar bh, 0xf1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x00002aaaaad34b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaad31be8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00002aaaaadf3380 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaae677c1 : sar bl, 1 ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaadf41e3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x00002aaaaadf3e11 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00002aaaaae130b2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaacfd84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00002aaaaada001f : sar byte ptr [rax + 1], cl ; ret
0x00002aaaaad57c67 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00002aaaaad48adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x00002aaaaacf9ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00002aaaaadd97f3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00002aaaaae85ad0 : sar byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00002aaaaae83580 : sar byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00002aaaaada971d : sar byte ptr [rdx], 0xe ; je 0xd66bc ; pop rbx ; ret
0x00002aaaaacd5b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00002aaaaadd5f1c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00002aaaaad9f64c : sar byte ptr [rsi + 9], 1 ; ret
0x00002aaaaae5635f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00002aaaaae682a4 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1952ae ; call rax
0x00002aaaaae5a3b0 : sar ch, 1 ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaae67984 : sar cl, 1 ; sti ; jmp qword ptr [rax]
0x00002aaaaadabc25 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd8c42
0x00002aaaaad71f33 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9ef3e ; ret
0x00002aaaaad72686 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9f691 ; ret
0x00002aaaaad72dd3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9fdde ; ret
0x00002aaaaadd0e9b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaadd6ad3 : sar dword ptr [rbp - 0x74b6000f], 1 ; cmp al, 0x24 ; call rbx
0x00002aaaaadba246 : sar dword ptr [rcx], 1 ; ret
0x00002aaaaacf2969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00002aaaaada5637 : sar dword ptr [rcx], cl ; ret 0xef7c
0x00002aaaaad14925 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00002aaaaadd0e3f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaad07f03 : sar eax, 0x10 ; ret
0x00002aaaaad07b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00002aaaaae12a74 : sar eax, 0x1f ; ret
0x00002aaaaad07ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x00002aaaaad0778d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaacd6af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00002aaaaadd0a02 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaad45d6c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaad48660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad464f9 : sar eax, 2 ; ret
0x00002aaaaadeb4ad : sar eax, 6 ; ret
0x00002aaaaae677c5 : sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaae6d2a9 : sar ecx, 1 ; call rsp
0x00002aaaaae560c3 : sar ecx, 1 ; jnp 0x183084 ; ret
0x00002aaaaad0d634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00002aaaaad0d647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaad61137 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaad45d6b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaad0778c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00002aaaaad464f8 : sar rax, 2 ; ret
0x00002aaaaadeb4ac : sar rax, 6 ; ret
0x00002aaaaad61136 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaae67ae9 : sbb ah, bh ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaadc8d29 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00002aaaaae6fc25 : sbb al, 0 ; add byte ptr [rax], bl ; cmp ch, cl ; call qword ptr [rsi]
0x00002aaaaae6fbf5 : sbb al, 0 ; add byte ptr [rax], ch ; cmp ch, cl ; call qword ptr [rax]
0x00002aaaaade573e : sbb al, 0x20 ; je 0x1127a6 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaade573d : sbb al, 0x20 ; je 0x1127a7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae80654 : sbb al, 0x27 ; add dword ptr [rax], eax ; js 0x1ad609 ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae5a718 : sbb al, 0x29 ; jmp rsp
0x00002aaaaae0911d : sbb al, 0x41 ; call qword ptr [rdx]
0x00002aaaaacd5f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00002aaaaade1b88 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10ebb4 ; mov rdx, r8 ; jmp 0x10eba4
0x00002aaaaae82e54 : sbb al, 0x4f ; add dword ptr [rax], eax ; cmp byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae83154 : sbb al, 0x52 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaae84f54 : sbb al, 0x70 ; add dword ptr [rax], eax ; clc ; sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaadd2163 : sbb al, 0x83 ; ret
0x00002aaaaad3c99b : sbb al, 0x83 ; ret 0x8308
0x00002aaaaad3bac8 : sbb al, 0x89 ; ret
0x00002aaaaada7e03 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaacd3454 : sbb al, 0xc ; ret 0x4412
0x00002aaaaae7a154 : sbb al, 0xc2 ; add byte ptr [rax], al ; call 0x281a6b8d
0x00002aaaaae59e0c : sbb al, 0xdb ; out dx, eax ; jmp rsi
0x00002aaaaadb1095 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00002aaaaae7b4e9 : sbb al, 0xf1 ; jmp qword ptr [rcx]
0x00002aaaaae81c69 : sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaae7fc0d : sbb al, 1 ; add al, ah ; stc ; call qword ptr [rax]
0x00002aaaaae74ec5 : sbb al, byte ptr [rax] ; add byte ptr [rax], cl ; sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaadf6110 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00002aaaaad1e9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00002aaaaad7eb7c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00002aaaaad2da9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00002aaaaadb65d1 : sbb al, ch ; leave ; ret 0xfff3
0x00002aaaaad49ca7 : sbb al, ch ; ret
0x00002aaaaad07ab4 : sbb al, dh ; adc eax, 0x540f6600 ; ret 0xf66
0x00002aaaaae7e3d8 : sbb al, dh ; call rcx
0x00002aaaaae67289 : sbb bh, bl ; call qword ptr [rax]
0x00002aaaaada7dba : sbb bh, byte ptr [rax + 2] ; ret
0x00002aaaaae78fb9 : sbb bh, dl ; call qword ptr [rax]
0x00002aaaaae54e45 : sbb bl, byte ptr [rsi] ; ret
0x00002aaaaad06e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaad49b8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00002aaaaae159bf : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00002aaaaae0e231 : sbb byte ptr [r8 + 1], r15b ; ret
0x00002aaaaade56a7 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00002aaaaad9bfe2 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00002aaaaae0e5d6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaad37133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00002aaaaad7c2b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c2d6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c314 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaad54c50 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x00002aaaaad471da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaad49b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00002aaaaad51c13 : sbb byte ptr [rax + 0x39], cl ; ret
0x00002aaaaada87b6 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00002aaaaae159c0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00002aaaaad50397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x00002aaaaade9cd3 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3a62b
0x00002aaaaae0e232 : sbb byte ptr [rax + 1], bh ; ret
0x00002aaaaae0fc3d : sbb byte ptr [rax + 1], cl ; ret
0x00002aaaaade56a8 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00002aaaaae5b0bc : sbb byte ptr [rax - 0x437d000d], dh ; jmp qword ptr [rbx]
0x00002aaaaad9b702 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00002aaaaacf7368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00002aaaaacf7d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00002aaaaadafa1a : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad4e161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00002aaaaadc67b7 : sbb byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadc245a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00002aaaaad5b626 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00002aaaaad46f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00002aaaaad8470a : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00002aaaaad4bb09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00002aaaaad9bfe3 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadcb4e6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad66d5e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00002aaaaad567d7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00002aaaaad66d5d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00002aaaaad9d2b9 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00002aaaaad5087f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00002aaaaae8eac7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00002aaaaae8eb1f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00002aaaaad4e9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae0e5d7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00002aaaaad37134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaad4a3e6 : sbb byte ptr [rax], al ; setne al ; ret
0x00002aaaaacd545c : sbb byte ptr [rax], cl ; ret 0x5576
0x00002aaaaad7c2b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c2d7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c315 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaae10d68 : sbb byte ptr [rbp + 0x39], cl ; ret
0x00002aaaaadfec0a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00002aaaaae0a271 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x00002aaaaacf4859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00002aaaaae82c08 : sbb byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00002aaaaae7bd68 : sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaad05854 : sbb byte ptr [rbx + 0x29480005], al ; ret
0x00002aaaaadc9292 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaad49b04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad7189d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad49ba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaadfef14 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x00002aaaaad0e177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaad4f887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00002aaaaae81918 : sbb byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00002aaaaad70faf : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00002aaaaad54c51 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaad45bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00002aaaaae0f3dc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00002aaaaadbe52e : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00002aaaaad54146 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00002aaaaada1346 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad7f800 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00002aaaaad7fab8 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00002aaaaad0b382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00002aaaaad480c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00002aaaaad7fd68 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00002aaaaad4a9c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad554c3 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00002aaaaae6ffb8 : sbb byte ptr [rcx - 0x17], ah ; jmp rdx
0x00002aaaaade6723 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00002aaaaad70d4e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00002aaaaad474d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00002aaaaad471db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaad8bfac : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaad7eb71 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00002aaaaae6a8dd : sbb byte ptr [rcx], al ; add ah, dh ; int1 ; call rsp
0x00002aaaaadc2454 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xef49c
0x00002aaaaadcefe1 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00002aaaaada7382 : sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaad48117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaade9d28 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00002aaaaad3e318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00002aaaaae0cf98 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00002aaaaae0e76e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaad06e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaae00768 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae85188 : sbb byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x00002aaaaae7d518 : sbb byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaacd5057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00002aaaaae5b62c : sbb byte ptr [rdx - 0xc], dl ; jmp qword ptr [rdx]
0x00002aaaaae67af8 : sbb byte ptr [rip + 0x1ed0fffc], 0xfc ; jmp qword ptr [rax]
0x00002aaaaae5bddc : sbb byte ptr [rip + 0x518fff5], al ; cmc ; call rax
0x00002aaaaae5bde8 : sbb byte ptr [rip + 0x518fff5], al ; cmc ; jmp rax
0x00002aaaaae5be60 : sbb byte ptr [rip + 0x580fff5], al ; cmc ; call rax
0x00002aaaaaddbde2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00002aaaaaddbde1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00002aaaaae67290 : sbb byte ptr [rsi], 0xfb ; jmp qword ptr [rax]
0x00002aaaaada737f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00002aaaaae84ec9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00002aaaaadc89de : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaadfb833 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00002aaaaade2d0d : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00002aaaaad78d0f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaae17c5d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae19dcd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1784d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaae17359 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae17b69 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1dd7a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d59a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d98a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d1aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a92d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1a10d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaae175dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae198ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaae1791d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaae17c39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d349 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17d09 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a44d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae19c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1940d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaae1a5ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaae17abd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae172ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaae176ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaae1d83a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d05a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1e16a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae17b8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaae1737d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae1974d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1741f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1777d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae19883 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a583 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a0a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d73b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1e06b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae179ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae1a8c3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19bc3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae196e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a3e3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d88b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1d0ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17443 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae6c049 : sbb dh, bh ; call rsp
0x00002aaaaade24f3 : sbb dh, dh ; ret 0x7508
0x00002aaaaae7f250 : sbb dl, 0xf3 ; jmp qword ptr [rcx]
0x00002aaaaae73768 : sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaae1b088 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaada7d93 : sbb dword ptr [rax + 1], edi ; ret
0x00002aaaaad01514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00002aaaaadd81f6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00002aaaaae127c4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae1b011 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1b089 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaad9fe25 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00002aaaaad692d3 : sbb dword ptr [rbp - 0x76b70008], edx ; ret 0x8949
0x00002aaaaad7d17e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x00002aaaaade8683 : sbb dword ptr [rbx + rax], edi ; ret
0x00002aaaaae576fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00002aaaaadf630a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00002aaaaae09581 : sbb dword ptr [rcx], ebp ; add byte ptr [rbp + 0xa], dh ; jmp 0x1365b3
0x00002aaaaad7a42e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00002aaaaacd4cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x00002aaaaae5b51c : sbb eax, -0xd ; jmp rax
0x00002aaaaae3f01c : sbb eax, -1 ; ret
0x00002aaaaade7f74 : sbb eax, 0 ; leave ; ret
0x00002aaaaad1a062 : sbb eax, 0x146ad7 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaae67af9 : sbb eax, 0x1ed0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaae46730 : sbb eax, 0x25200b ; jne 0x173720 ; pop rbx ; ret
0x00002aaaaaddb971 : sbb eax, 0x2ba8ca ; pop rbx ; ret
0x00002aaaaae672cd : sbb eax, 0x3a40fffb ; sti ; jmp qword ptr [rax]
0x00002aaaaad78d99 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00002aaaaade5732 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00002aaaaad7a4ed : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00002aaaaae7fc4d : sbb eax, 0x66b00001 ; stc ; call qword ptr [rax]
0x00002aaaaadd827a : sbb eax, 0x888bf ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaade2ff5 : sbb eax, 0x89000001 ; ret 0x8944
0x00002aaaaadfa02b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaadf8ada : sbb eax, 0xf48002a ; ret 0xff81
0x00002aaaaadf9c7a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00002aaaaae1ae31 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1aea9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae05470 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00002aaaaada9606 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x00002aaaaad1b46a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00002aaaaada9650 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00002aaaaadf58e8 : sbb eax, eax ; ret
0x00002aaaaae44725 : sbb eax, eax ; sbb eax, -1 ; ret
0x00002aaaaae74ec9 : sbb ebp, ebp ; jmp qword ptr [rax]
0x00002aaaaada8143 : sbb ebp, ecx ; ret
0x00002aaaaad8def7 : sbb ebx, 0x89000001 ; ret
0x00002aaaaae67285 : sbb ebx, edi ; jmp rax
0x00002aaaaae67281 : sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaadd1385 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x00002aaaaad27d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00002aaaaadff0a1 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaacf6acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00002aaaaadf7d64 : sbb edi, dword ptr [rcx] ; ret
0x00002aaaaae5b5cc : sbb edx, dword ptr [rcx - 0xc] ; jmp qword ptr [rdx]
0x00002aaaaae6d479 : sbb edx, edi ; jmp rsp
0x00002aaaaae7d1c9 : sbb edx, esi ; jmp qword ptr [rcx]
0x00002aaaaacd55df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x00002aaaaae69e11 : sbb esi, ebp ; call rsp
0x00002aaaaade7cee : sbb esi, ebx ; ret
0x00002aaaaadaea04 : sbb esi, esi ; ret
0x00002aaaaae67aed : sbb esp, edi ; jmp rax
0x00002aaaaae3f01b : sbb rax, -1 ; ret
0x00002aaaaae67ae8 : sbb spl, dil ; call qword ptr [rax - 0x1f0003e7]
0x00002aaaaae18db2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaada7177 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00002aaaaae78d7d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d10 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae78d7c : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d11 ; out dx, al ; call qword ptr [rsi]
0x00002aaaaae78dad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a5d40 ; out dx, al ; jmp rbx
0x00002aaaaad6082d : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae1ddce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00002aaaaae68595 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rsi + 0x26fffcad]
0x00002aaaaae5ccc8 : scasb al, byte ptr [rdi] ; jns 0x189cc4 ; jmp qword ptr [rdx]
0x00002aaaaae5ccd0 : scasb al, byte ptr [rdi] ; jns 0x189ccc ; jmp qword ptr [rdx]
0x00002aaaaae5cd6c : scasb al, byte ptr [rdi] ; jns 0x189d68 ; jmp qword ptr [rdx]
0x00002aaaaae466f6 : scasb al, byte ptr [rdi] ; shr edx, -1 ; ret
0x00002aaaaacd5f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaae1decd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae78ef5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov bh, bh ; stc ; call qword ptr [rax]
0x00002aaaaad4e5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00002aaaaad602cd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae07113 : scasd eax, dword ptr [rdi] ; add eax, 0x3d8d4800 ; ret
0x00002aaaaae5af3d : scasd eax, dword ptr [rdi] ; call qword ptr [rcx]
0x00002aaaaae5af39 : scasd eax, dword ptr [rdi] ; dec dword ptr [rbp - 0x51] ; call qword ptr [rcx]
0x00002aaaaae73439 : scasd eax, dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00002aaaaade9b23 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a475
0x00002aaaaade9cd6 : scasd eax, dword ptr [rdi] ; jmp 0x76d3a628
0x00002aaaaadeb79f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00002aaaaad6f93e : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x00002aaaaad0a300 : scasd eax, dword ptr [rdi] ; ret
0x00002aaaaad4707c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00002aaaaad7ce4e : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00002aaaaad596f8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaad7ce39 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00002aaaaad0a290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x00002aaaaad06e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00002aaaaaddbb0d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00002aaaaaddc633 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00002aaaaacd5bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00002aaaaacd55ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaad5ab90 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae5af3c : scasq rax, qword ptr [rdi] ; call qword ptr [rcx]
0x00002aaaaaddbe15 : seta al ; movzx eax, al ; neg eax ; ret
0x00002aaaaadcaf58 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00002aaaaade6ebc : setae al ; ret
0x00002aaaaad99a08 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaaddcaf0 : setbe al ; ret
0x00002aaaaadfd408 : sete al ; add rsp, 8 ; ret
0x00002aaaaae0cea4 : sete al ; movzx eax, al ; ret
0x00002aaaaad00f35 : sete al ; ret
0x00002aaaaada7fb9 : setg dl ; jmp 0xd4f42
0x00002aaaaad7e5ca : setl al ; movzx eax, al ; neg eax ; ret
0x00002aaaaae0926c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00002aaaaadbcdfb : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x00002aaaaad3e349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00002aaaaadbcddd : setne al ; movzx eax, al ; neg eax ; ret
0x00002aaaaadd4984 : setne al ; movzx eax, al ; pop rbx ; ret
0x00002aaaaad08f26 : setne al ; movzx eax, al ; ret
0x00002aaaaad4605c : setne al ; neg eax ; ret
0x00002aaaaad4a3e8 : setne al ; ret
0x00002aaaaad8102a : setne dl ; jmp 0xae03a
0x00002aaaaad8394b : setne dl ; jmp 0xb095a
0x00002aaaaad86102 : setne dl ; jmp 0xb311a
0x00002aaaaad68455 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaadc05f2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaacf9553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaae7a080 : shl bl, 1 ; out dx, eax ; call rsp
0x00002aaaaae67320 : shl byte ptr [rcx - 5], 1 ; jmp qword ptr [rax]
0x00002aaaaae84dc0 : shl byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00002aaaaae7d410 : shl byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae67b08 : shl byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x00002aaaaae54288 : shl byte ptr [rdx], cl ; jmp 0x18128e
0x00002aaaaad7c6ef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00002aaaaad07853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00002aaaaae42d13 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaad5c0f5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00002aaaaae41dcb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaae41de2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaad5f9b6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaad5f9c7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaad71438 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00002aaaaae41cc1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae50650 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00002aaaaae56248 : shl dword ptr [rdi - 5], 1 ; ret
0x00002aaaaae41d46 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad7c54b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00002aaaaad5f9b2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaae41dfd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00002aaaaae41de6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00002aaaaae41dcf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00002aaaaae4088b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae41d61 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad60d8c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00002aaaaad71678 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x00002aaaaae41c21 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad18a24 : shl eax, 0x1e ; or eax, edx ; ret
0x00002aaaaadf656a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00002aaaaad09083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaad1ba2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaad1b9b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaad1b986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad66ee1 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00002aaaaacf38f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x00002aaaaad0d688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00002aaaaadb742b : shl edx, 2 ; xor esi, esi ; call 0x8e699
0x00002aaaaadf63fb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x00002aaaaadf659c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaad1ba2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00002aaaaad1b9b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00002aaaaad1b985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad09082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00002aaaaacf38ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00002aaaaadf659b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00002aaaaae5a25c : shr ah, 0xf1 ; call rax
0x00002aaaaae5a260 : shr ah, 1 ; int1 ; jmp rax
0x00002aaaaae73889 : shr ah, 1 ; jmp rbx
0x00002aaaaade4b15 : shr al, 0x65 ; ret
0x00002aaaaadcd0d9 : shr al, 0x71 ; ret
0x00002aaaaadbc64d : shr al, 0x7d ; ret
0x00002aaaaade4ac3 : shr al, 0xb7 ; ret
0x00002aaaaade6e36 : shr ax, 0xe ; and eax, 1 ; ret
0x00002aaaaae16221 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00002aaaaad9a90f : shr bl, cl ; ret
0x00002aaaaad1aa2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaae68754 : shr byte ptr [rbp - 0x52af0004], 0xfc ; jmp rax
0x00002aaaaad8fa3e : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00002aaaaad9467f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00002aaaaae6857c : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x00002aaaaad71c5f : shr byte ptr [rcx], 0xc8 ; ret
0x00002aaaaae78310 : shr byte ptr [rcx], 0xee ; jmp qword ptr [rdi]
0x00002aaaaad8c39f : shr byte ptr [rcx], 1 ; ret
0x00002aaaaacfcae8 : shr byte ptr [rcx], cl ; ret
0x00002aaaaad6113b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00002aaaaadcaf5d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaae5af30 : shr byte ptr [rdx - 0x5586000d], 0xf3 ; jmp qword ptr [rdi]
0x00002aaaaadb9f14 : shr byte ptr [rip + 0x28b4800], 0x48 ; mov dword ptr [rdx], edi ; ret
0x00002aaaaae5a00c : shr byte ptr [rsi - 0xf], 0xff ; shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x00002aaaaae5a010 : shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x00002aaaaae69bd1 : shr ch, 1 ; call rsp
0x00002aaaaae5a290 : shr ch, 1 ; int1 ; push rax ; in eax, dx ; int1 ; call qword ptr [rax]
0x00002aaaaad17ac0 : shr cl, cl ; ret
0x00002aaaaae5a2d0 : shr dh, 0xf1 ; call rax
0x00002aaaaae5a2d4 : shr dh, 1 ; int1 ; jmp rax
0x00002aaaaad994d0 : shr dword ptr [rcx], 1 ; ret
0x00002aaaaadeb848 : shr eax, 0x18 ; ret
0x00002aaaaad07b91 : shr eax, 0x1f ; ret
0x00002aaaaae42c8c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x16fc9f ; xor eax, eax ; ret
0x00002aaaaad077c0 : shr eax, 0x3f ; ret
0x00002aaaaadd9978 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaad7d06a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00002aaaaade6e37 : shr eax, 0xe ; and eax, 1 ; ret
0x00002aaaaada9705 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00002aaaaad4af02 : shr eax, 4 ; and eax, 1 ; ret
0x00002aaaaadf6570 : shr eax, 4 ; ret
0x00002aaaaad4af12 : shr eax, 5 ; and eax, 1 ; ret
0x00002aaaaad7d049 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00002aaaaad08f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00002aaaaaddc88b : shr eax, cl ; and eax, 1 ; ret
0x00002aaaaae153f1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00002aaaaad08f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaad1bb3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaad1bac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaad1ba90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad9cc06 : shr ecx, cl ; ret
0x00002aaaaae466f7 : shr edx, -1 ; ret
0x00002aaaaad45e73 : shr edx, 2 ; sub eax, edx ; ret
0x00002aaaaae0eb0a : shr edx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaad489b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaad48aa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00002aaaaad00a79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x00002aaaaad1bb3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00002aaaaad1bac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00002aaaaad1ba8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00002aaaaad077bf : shr rax, 0x3f ; ret
0x00002aaaaadd9977 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00002aaaaadf656f : shr rax, 4 ; ret
0x00002aaaaad45e72 : shr rdx, 2 ; sub eax, edx ; ret
0x00002aaaaae0eb09 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00002aaaaad70ee1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00002aaaaad70e51 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00002aaaaad6bb5e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad6e17c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaadd9963 : sldt word ptr [rax] ; or eax, edi ; ret
0x00002aaaaae4f829 : sldt word ptr [rax] ; ret
0x00002aaaaadb3411 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b5
0x00002aaaaae0076b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaadf6041 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00002aaaaadf9c7c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00002aaaaae78efa : stc ; call qword ptr [rax]
0x00002aaaaae6d1e2 : stc ; call qword ptr [rdi + rbx + 2]
0x00002aaaaad7fd6e : stc ; call rbx
0x00002aaaaae6ce22 : stc ; call rsp
0x00002aaaaade0261 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x00002aaaaadfd012 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00002aaaaadcb4cc : stc ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad5a7c6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaadc5942 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00002aaaaadc6f83 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00002aaaaad5bb0f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00002aaaaadcb332 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaadcba12 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00002aaaaae6d262 : stc ; inc dword ptr [rdx - 0x366bfffe] ; stc ; call rsp
0x00002aaaaae6d0ca : stc ; inc dword ptr [rsi + rdx - 0x78bbfffe] ; stc ; call rsp
0x00002aaaaacd666f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaae7c989 : stc ; int1 ; call rsi
0x00002aaaaae1ce82 : stc ; je 0x149e4e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae1e512 : stc ; je 0x14b4de ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaae84eca : stc ; jmp qword ptr [rsi]
0x00002aaaaad0629d : stc ; jmp rcx
0x00002aaaaae6ce42 : stc ; jmp rsp
0x00002aaaaae560c4 : stc ; jnp 0x183083 ; ret
0x00002aaaaae6d2a2 : stc ; lcall ptr [rsp - 0x2efbfffe] ; stc ; call rsp
0x00002aaaaae6d0e2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, dl ; mov bh, cl ; call rsp
0x00002aaaaae25ba8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaadf9f02 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad70dcb : stc ; mov rax, rdi ; ret
0x00002aaaaae6ce3a : stc ; push qword ptr [rax + rax + 0x3bf40002] ; stc ; jmp rsp
0x00002aaaaad1bb7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00002aaaaae6cf0a : stc ; push qword ptr [rdx + rcx + 0x52240002] ; stc ; call rsp
0x00002aaaaad7ca39 : stc ; salc ; clc ; ret
0x00002aaaaaddc88a : stc ; shr eax, cl ; and eax, 1 ; ret
0x00002aaaaae67985 : stc ; sti ; jmp qword ptr [rax]
0x00002aaaaad72434 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaad5d845 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaad56562 : stc ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaad19075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaad9fdde : std ; add byte ptr [rax], al ; jne 0xccdb1 ; ret
0x00002aaaaadba272 : std ; add byte ptr [rcx], bh ; ret
0x00002aaaaae8dd25 : std ; add dword ptr [rax], eax ; push rsp ; clc ; jmp qword ptr [rcx]
0x00002aaaaad1f8ac : std ; add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae6749e : std ; call qword ptr [rax + 0x10fffda3]
0x00002aaaaae674a6 : std ; call qword ptr [rax + 0x10fffda4]
0x00002aaaaae674ae : std ; call qword ptr [rax + 0x10fffda5]
0x00002aaaaae6749a : std ; call qword ptr [rax - 0x6f00025e]
0x00002aaaaae674a2 : std ; call qword ptr [rax]
0x00002aaaaae674de : std ; call qword ptr [rcx - 0x2e00024b]
0x00002aaaaae673d2 : std ; call qword ptr [rcx]
0x00002aaaaae674d2 : std ; call rcx
0x00002aaaaae67436 : std ; call rsi
0x00002aaaaae6ddaa : std ; call rsp
0x00002aaaaadc8851 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaae00c49 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00002aaaaad49a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00002aaaaae5a0fa : std ; dec dword ptr [rax] ; ret 0xfffd
0x00002aaaaae6dda2 : std ; dec esp ; adc eax, 0x77440001 ; std ; call rsp
0x00002aaaaad0805d : std ; fstp st(1) ; ret
0x00002aaaaae817a9 : std ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad4976f : std ; imul edi, ebp, 0x89c085ff ; ret
0x00002aaaaae674fe : std ; inc dword ptr [rax - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaae67406 : std ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaae6758e : std ; inc dword ptr [rdi - 0x49] ; std ; call rcx
0x00002aaaaae67432 : std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaae6742e : std ; inc esi ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; inc dword ptr [rsi - 0x5a] ; std ; call rsi
0x00002aaaaae5a3ad : std ; int1 ; call rax
0x00002aaaaae5a3b5 : std ; int1 ; jmp qword ptr [rax]
0x00002aaaaae5a3b1 : std ; int1 ; push rax ; std ; int1 ; jmp qword ptr [rax]
0x00002aaaaae465cf : std ; ja 0x17359d ; call 0x1f8ad
0x00002aaaaae675fe : std ; jmp qword ptr [rax - 0x2e00024a]
0x00002aaaaae675de : std ; jmp qword ptr [rax - 0x2e00024b]
0x00002aaaaae673ca : std ; jmp qword ptr [rax]
0x00002aaaaae67402 : std ; jmp qword ptr [rcx + 0x41fffda8]
0x00002aaaaae6f0d2 : std ; jmp qword ptr [rdi]
0x00002aaaaae673b2 : std ; jmp qword ptr [rdx]
0x00002aaaaae67446 : std ; jmp qword ptr [rsi]
0x00002aaaaae673d6 : std ; jmp rcx
0x00002aaaaae77182 : std ; jmp rsp
0x00002aaaaae674ce : std ; lcall ptr [rbp - 0x2e00024b] ; mov bh, 0xfd ; call rcx
0x00002aaaaae6754e : std ; lcall ptr [rsi - 0x49] ; std ; call rcx
0x00002aaaaae6760e : std ; ljmp ptr [rax] ; fdivr st(3) ; push rax ; fsincos ; call rax
0x00002aaaaae253cb : std ; mov word ptr [rdi - 2], cx ; ret
0x00002aaaaadc66af : std ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae675ce : std ; push qword ptr [rax] ; mov bh, 0xfd ; call rcx
0x00002aaaaae6752e : std ; push qword ptr [rcx - 0x4a] ; std ; call rcx
0x00002aaaaae673ae : std ; push qword ptr [rsi - 0x60] ; std ; jmp qword ptr [rdx]
0x00002aaaaae5b5c0 : std ; push rax ; hlt ; inc dword ptr [rdi] ; push rcx ; hlt ; call qword ptr [rcx]
0x00002aaaaae5b6e4 : std ; push rbx ; hlt ; inc dword ptr [rdi] ; push rsp ; hlt ; call qword ptr [rcx]
0x00002aaaaae6751e : std ; push rcx ; mov ch, 0xfd ; call rcx
0x00002aaaaae6753e : std ; push rcx ; mov dh, 0xfd ; call rcx
0x00002aaaaadee01f : std ; ret
0x00002aaaaad81029 : std ; setne dl ; jmp 0xae03b
0x00002aaaaad8394a : std ; setne dl ; jmp 0xb095b
0x00002aaaaad86101 : std ; setne dl ; jmp 0xb311b
0x00002aaaaad24341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaadd59f0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaad2d6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00002aaaaae6762a : sti ; call qword ptr [rax + 0x20fffbe5]
0x00002aaaaae67972 : sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaae6791e : sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaae677a6 : sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaae67752 : sti ; call qword ptr [rax - 0x1f00043f]
0x00002aaaaae6730e : sti ; call qword ptr [rax - 0x1f0004a4]
0x00002aaaaae67796 : sti ; call qword ptr [rax - 0x3d]
0x00002aaaaae67222 : sti ; call qword ptr [rax]
0x00002aaaaae6731e : sti ; call rax
0x00002aaaaae883da : sti ; call rcx
0x00002aaaaae888aa : sti ; call rsi
0x00002aaaaae6dc9a : sti ; call rsp
0x00002aaaaae6798e : sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaad90ebe : sti ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaada0310 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaad40cdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00002aaaaad42616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00002aaaaad5213e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00002aaaaad40361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00002aaaaae5ea0e : sti ; dec eax ; add ebx, edi ; call rax
0x00002aaaaae672a6 : sti ; inc dword ptr [rax + 0x28] ; sti ; jmp rax
0x00002aaaaae672c6 : sti ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaae672ce : sti ; inc dword ptr [rax + 0x3a] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676ae : sti ; inc dword ptr [rax + 0x40fffbd7] ; fsincos ; jmp qword ptr [rax]
0x00002aaaaae6721e : sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaae6791a : sti ; inc dword ptr [rax - 0x14] ; sti ; call qword ptr [rax - 0x1f000413]
0x00002aaaaae6794e : sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae6767e : sti ; inc dword ptr [rax - 0x21] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676b2 : sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676ce : sti ; inc dword ptr [rax - 0x29] ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaae6797e : sti ; inc dword ptr [rax - 0x2f000408] ; stc ; sti ; jmp qword ptr [rax]
0x00002aaaaae6792a : sti ; inc dword ptr [rax - 0x2f00040f] ; sti ; jmp qword ptr [rax]
0x00002aaaaae677a2 : sti ; inc dword ptr [rax - 0x39] ; sti ; call qword ptr [rax - 0x1f000438]
0x00002aaaaae6796e : sti ; inc dword ptr [rax - 0xd] ; sti ; call qword ptr [rax - 0x1f00040c]
0x00002aaaaae678f2 : sti ; inc dword ptr [rax] ; cld ; call qword ptr [rax]
0x00002aaaaae6794a : sti ; inc dword ptr [rax] ; cld ; sti ; inc dword ptr [rax - 0x19] ; sti ; call qword ptr [rax]
0x00002aaaaae676d2 : sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaae67792 : sti ; inc dword ptr [rax] ; ret 0xfffb
0x00002aaaaae6727e : sti ; inc dword ptr [rax] ; sbb ebx, edi ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaae672d6 : sti ; inc dword ptr [rax] ; sti ; call rax
0x00002aaaaae6793a : sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae677c2 : sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaae6732a : sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaae5c918 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00002aaaaae67352 : sti ; jmp qword ptr [rax + 0x20fffb74]
0x00002aaaaae6735a : sti ; jmp qword ptr [rax + 0x20fffb77]
0x00002aaaaae67362 : sti ; jmp qword ptr [rax + 0x20fffb7a]
0x00002aaaaae6736a : sti ; jmp qword ptr [rax + 0x20fffb7d]
0x00002aaaaae67372 : sti ; jmp qword ptr [rax + 0x20fffb80]
0x00002aaaaae6737a : sti ; jmp qword ptr [rax + 0x20fffb83]
0x00002aaaaae67382 : sti ; jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaae672c2 : sti ; jmp qword ptr [rax + 0x40fffb33]
0x00002aaaaae67236 : sti ; jmp qword ptr [rax]
0x00002aaaaae8d3aa : sti ; jmp qword ptr [rdx]
0x00002aaaaae5ea16 : sti ; jmp rax
0x00002aaaaada93ab : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00002aaaaae257a8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00002aaaaae46ca9 : sti ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaad70dad : sti ; mov rax, rdi ; ret
0x00002aaaaadbb029 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00002aaaaadef3fa : sti ; or dword ptr [rdi], ecx ; ret
0x00002aaaaae6a6c9 : sti ; out dx, eax ; call rsp
0x00002aaaaae67326 : sti ; push qword ptr [rax + 0x64] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x00002aaaaae6721a : sti ; push qword ptr [rax + 2] ; sti ; inc dword ptr [rax + 3] ; sti ; call qword ptr [rax]
0x00002aaaaae677be : sti ; push qword ptr [rax - 0x30] ; sti ; inc eax ; sar ebx, 1 ; call qword ptr [rax]
0x00002aaaaae67936 : sti ; push qword ptr [rax - 0xb] ; sti ; inc eax ; idiv bl ; call qword ptr [rax]
0x00002aaaaae6798a : sti ; push qword ptr [rax - 4] ; sti ; dec dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00002aaaaae6771a : sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; jmp qword ptr [rax]
0x00002aaaaae672ee : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00002aaaaae67612 : sti ; push rax ; fsincos ; call rax
0x00002aaaaae67282 : sti ; push rax ; sbb ebx, edi ; jmp rax
0x00002aaaaae672f6 : sti ; push rax ; sti ; call rax
0x00002aaaaae5624a : sti ; ret
0x00002aaaaad09b79 : sti ; ret 0x38
0x00002aaaaad15316 : sti ; ret 0xffbf
0x00002aaaaae5b49c : sti ; retf ; jmp qword ptr [rdi]
0x00002aaaaae6d3c9 : sti ; stc ; jmp rsp
0x00002aaaaadfa02d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaacff377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00002aaaaad82a0f : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2e
0x00002aaaaad87eb7 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d6
0x00002aaaaadd4c40 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaacd5314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00002aaaaadc248c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00002aaaaadf5a32 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae698dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x196945 ; in eax, dx ; jmp rsp
0x00002aaaaae68639 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rdx + 0x22fffca9]
0x00002aaaaae685b5 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi]
0x00002aaaaae68775 : stosb byte ptr [rdi], al ; cld ; call rax
0x00002aaaaae68771 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rax - 0x56] ; cld ; call rax
0x00002aaaaae686f5 : stosb byte ptr [rdi], al ; cld ; jmp rsp
0x00002aaaaae56724 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00002aaaaae5af35 : stosb byte ptr [rdi], al ; jmp qword ptr [rdi]
0x00002aaaaad1aa30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x00002aaaaacd5317 : stosb byte ptr [rdi], al ; ret
0x00002aaaaacd666e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00002aaaaae78b25 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae6856d : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x00002aaaaae68769 : stosd dword ptr [rdi], eax ; cld ; jmp qword ptr [rax]
0x00002aaaaae6862d : stosd dword ptr [rdi], eax ; cld ; jmp rdx
0x00002aaaaadf623a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00002aaaaae5b664 : stosd dword ptr [rdi], eax ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00002aaaaad08f9c : stosd dword ptr [rdi], eax ; ret
0x00002aaaaae0b2d4 : stosd dword ptr [rdi], eax ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e9 ; ret
0x00002aaaaadf6239 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaad08f9b : stosq qword ptr [rdi], rax ; ret
0x00002aaaaae57c11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00002aaaaae67991 : sub ah, bh ; call qword ptr [rax]
0x00002aaaaae679b1 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaae67ab5 : sub ah, bh ; jmp qword ptr [rax]
0x00002aaaaae679d1 : sub ah, bh ; jmp rax
0x00002aaaaacf4973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x00002aaaaae70fe8 : sub al, 0 ; add byte ptr [rax], al ; mov ah, 0x30 ; add byte ptr [rax], al ; ret 0xffe9
0x00002aaaaadd43d3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00002aaaaadd03af : sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaadd2be0 : sub al, 0 ; jne 0xffbf8 ; jmp 0xffc12
0x00002aaaaadd073b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8854] ; ret
0x00002aaaaadd057b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8a14] ; ret
0x00002aaaaadd1747 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00002aaaaadd49f5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00002aaaaadd0909 : sub al, 0 ; mov rdx, rax ; jmp 0xfd8a3
0x00002aaaaadd437f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00002aaaaadd1ce6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaadd19cc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd4349 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadd0582 : sub al, 0 ; ret
0x00002aaaaae7f164 : sub al, 0x12 ; add dword ptr [rax], eax ; fcomp st(1) ; call qword ptr [rsi]
0x00002aaaaae70964 : sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; mov cl, ch ; jmp qword ptr [rsi]
0x00002aaaaad53ecb : sub al, 0x34 ; add dh, dh ; ret 0xf02
0x00002aaaaad7e052 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00002aaaaae81c64 : sub al, 0x3d ; add dword ptr [rax], eax ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00002aaaaada8fec : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00002aaaaae5b634 : sub al, 0x52 ; hlt ; jmp qword ptr [rdx]
0x00002aaaaae73764 : sub al, 0x58 ; add byte ptr [rax], al ; sbb dl, cl ; in al, dx ; jmp rax
0x00002aaaaad7e055 : sub al, 0x75 ; pop rax ; ret
0x00002aaaaada9ee9 : sub al, 0x83 ; ret 0x4801
0x00002aaaaad8e149 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00002aaaaae68810 : sub al, 0x9d ; cld ; call rdx
0x00002aaaaae41413 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae7bd64 : sub al, 0xde ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00002aaaaad6ff16 : sub al, 0xf ; mov dh, 0x45 ; ret
0x00002aaaaad6dfd2 : sub al, 0xf ; mov dh, 0x55 ; ret
0x00002aaaaadfa02e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00002aaaaae7d689 : sub al, 0xf2 ; jmp rcx
0x00002aaaaae67a9d : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax]
0x00002aaaaadd3f7f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00002aaaaae80c0d : sub al, 1 ; add byte ptr [rax], ah ; fcomi st(4) ; call qword ptr [rbx]
0x00002aaaaad803de : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae6e064 : sub al, 1 ; add byte ptr [rax], al ; call 0x111998cc
0x00002aaaaae6abdd : sub al, 1 ; add byte ptr [rdx + rdx*2], dl ; call rsp
0x00002aaaaae6d3dd : sub al, 2 ; add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaae8e464 : sub al, 5 ; add al, byte ptr [rax] ; cwde ; outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00002aaaaae67610 : sub al, bl ; sti ; push rax ; fsincos ; call rax
0x00002aaaaae709bd : sub al, byte ptr [rax] ; add al, al ; mov ebp, ecx ; jmp rsp
0x00002aaaaae70995 : sub al, byte ptr [rax] ; add al, bh ; mov cl, ch ; jmp rsp
0x00002aaaaad06ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00002aaaaadf2aa3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaadf22c6 : sub al, byte ptr [rax] ; call rax
0x00002aaaaadee080 : sub al, byte ptr [rax] ; jne 0x11b097 ; jmp 0x11b0b1
0x00002aaaaadf33e5 : sub al, byte ptr [rax] ; ret
0x00002aaaaadfa74e : sub al, byte ptr [rax] ; test eax, eax ; je 0x12775e ; ret
0x00002aaaaad2f6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00002aaaaad1f4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaad84207 : sub al, ch ; ret
0x00002aaaaad06635 : sub al, ch ; ret 0xfffe
0x00002aaaaad2d7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00002aaaaae679b5 : sub bh, ah ; jmp rax
0x00002aaaaae67995 : sub bh, ah ; push rax ; sub edi, esp ; call rax
0x00002aaaaad4506c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00002aaaaae7c6f8 : sub bh, ch ; int1 ; jmp rcx
0x00002aaaaae5b458 : sub bl, ah ; jmp qword ptr [rdi]
0x00002aaaaae672a9 : sub bl, bh ; jmp rax
0x00002aaaaae672a8 : sub bl, dil ; jmp rax
0x00002aaaaad7e046 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaad49b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaad471de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00002aaaaae0e5a1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae15187 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00002aaaaae167c3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x1437d9 ; xor eax, eax ; ret
0x00002aaaaae167f3 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143809 ; xor eax, eax ; ret
0x00002aaaaae16823 : sub byte ptr [r8], r8b ; test eax, eax ; jne 0x143839 ; xor eax, eax ; ret
0x00002aaaaae0e2d1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaadc8057 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaad49b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00002aaaaadf3af4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x00002aaaaae07d2e : sub byte ptr [rax + 1], bh ; ret
0x00002aaaaad471df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x00002aaaaae0e5a2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad5a7c4 : sub byte ptr [rax - 0x76b70007], al ; ret
0x00002aaaaad57404 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00002aaaaae04998 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00002aaaaad05a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadcc271 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00002aaaaad5bb15 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaadcb337 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaad46f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00002aaaaad4020c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad443f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00002aaaaadb51e4 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00002aaaaadc13b0 : sub byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae82f18 : sub byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00002aaaaacd52e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00002aaaaae15930 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00002aaaaacfdca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00002aaaaae70805 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaae0a705 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae12d25 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00002aaaaae0b2d5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x1382e8 ; ret
0x00002aaaaae132de : sub byte ptr [rax], al ; ret
0x00002aaaaae10184 : sub byte ptr [rax], al ; test eax, eax ; je 0x13d198 ; xor eax, eax ; ret
0x00002aaaaae132b8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1402d1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae167c4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1437d8 ; xor eax, eax ; ret
0x00002aaaaae167f4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143808 ; xor eax, eax ; ret
0x00002aaaaae16824 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143838 ; xor eax, eax ; ret
0x00002aaaaae16854 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143868 ; xor eax, eax ; ret
0x00002aaaaae16884 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143898 ; xor eax, eax ; ret
0x00002aaaaae168b4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1438c8 ; xor eax, eax ; ret
0x00002aaaaacd52e2 : sub byte ptr [rax], dl ; salc ; ret
0x00002aaaaae12d24 : sub byte ptr [rax], r8b ; call qword ptr [rax]
0x00002aaaaae16853 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143869 ; xor eax, eax ; ret
0x00002aaaaae16883 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x143899 ; xor eax, eax ; ret
0x00002aaaaae168b3 : sub byte ptr [rax], r8b ; test eax, eax ; jne 0x1438c9 ; xor eax, eax ; ret
0x00002aaaaad7e04a : sub byte ptr [rbp + 0x63], dh ; ret
0x00002aaaaad7e049 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaacf36bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00002aaaaad17c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae15903 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00002aaaaae15902 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00002aaaaae83158 : sub byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00002aaaaae672b0 : sub byte ptr [rbx], 0xfb ; jmp qword ptr [rax]
0x00002aaaaad7e047 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00002aaaaad54089 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x00002aaaaae0e627 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad53d0a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00002aaaaad06500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x00002aaaaacfd27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00002aaaaadb62e9 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00002aaaaae15931 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaae0e2d2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00002aaaaad57530 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00002aaaaae00bfc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00002aaaaae81dd8 : sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad811d2 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00002aaaaad1f66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae7e6fa : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00002aaaaae7b25a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x00002aaaaae5be70 : sub byte ptr [rsi], al ; cmc ; call qword ptr [rcx]
0x00002aaaaacd5c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00002aaaaae82119 : sub ch, dh ; jmp qword ptr [rbx]
0x00002aaaaad07b32 : sub cl, al ; add rsp, 0x28 ; ret
0x00002aaaaad07ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x00002aaaaad07e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x00002aaaaad07931 : sub cl, al ; ret
0x00002aaaaadcb331 : sub cl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00002aaaaadd4f7c : sub cl, bl ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaada3c0d : sub cl, byte ptr [rax - 0x7d] ; ret
0x00002aaaaad6b9b5 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00002aaaaad392c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad4d8a5 : sub cl, ch ; ret 0xfffe
0x00002aaaaade0b5c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10db2a
0x00002aaaaad1ecd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaadd703d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae59e45 : sub dh, al ; jmp rax
0x00002aaaaad7ee34 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00002aaaaad08302 : sub dh, byte ptr [rcx + rdi] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaae7d609 : sub dh, dl ; jmp qword ptr [rdi]
0x00002aaaaae5d4bd : sub dl, bh ; call rax
0x00002aaaaae5d4b9 : sub dl, bh ; jmp rax
0x00002aaaaadd38bd : sub dword ptr [rax + rax], ebp ; ret
0x00002aaaaad37324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00002aaaaadfe9cd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00002aaaaae09582 : sub dword ptr [rax], eax ; jne 0x136598 ; jmp 0x1365b2
0x00002aaaaadfab85 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x127b99 ; ret
0x00002aaaaae0a62c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00002aaaaae001c5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00002aaaaadfae05 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00002aaaaadfdcd6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x00002aaaaadfe9b4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12b9c6 ; ret
0x00002aaaaad9bc33 : sub dword ptr [rbx - 0x76b7ffd1], edi ; ret 0x8d48
0x00002aaaaae3af03 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae6ab7d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], dh ; call rsp
0x00002aaaaae15a7e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00002aaaaae239f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15109d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae241d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1511ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15133d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15148d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae245c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15172d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15187d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae249b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24b07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae24c57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae263c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1533dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15352d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15367d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae267b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1537cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15391d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae26f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae270e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1540fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae27237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15424d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae27387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15439d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae274d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1544ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae27627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15463d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae28d97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae28ee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x155efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15604d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15619d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae292d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1562ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15643d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15658d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae296c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1566dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15682d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15697d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae29ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15700d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00002aaaaae23953 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00002aaaaae2394f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00002aaaaad39500 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadc4204 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaae239fd : sub dword ptr [rdi], esp ; jmp r9
0x00002aaaaadf22c5 : sub dword ptr [rdx], 0 ; call rax
0x00002aaaaae42a69 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41bf6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00002aaaaae0a726 : sub eax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaad57509 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaae0e3aa : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaadb9f15 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00002aaaaae67a3d : sub eax, 0x2f00fffc ; cld ; call rax
0x00002aaaaae67a1d : sub eax, 0x2f30fffc ; cld ; call qword ptr [rax]
0x00002aaaaadba8b5 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00002aaaaadfd432 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadbcab5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaad07ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00002aaaaad29841 : sub eax, 0x83000000 ; ret
0x00002aaaaad6ae0d : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae8eabb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x00002aaaaae05af4 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x00002aaaaae0989e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaada04e4 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaad6996a : sub eax, 1 ; jne 0x96967 ; pop rbx ; pop rbp ; ret
0x00002aaaaacfd6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00002aaaaad1b46f : sub eax, 1 ; ret
0x00002aaaaade7611 : sub eax, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaade7343 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114359 ; xor eax, eax ; ret
0x00002aaaaade7373 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114389 ; xor eax, eax ; ret
0x00002aaaaade73a3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143b9 ; xor eax, eax ; ret
0x00002aaaaade73d3 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x1143e9 ; xor eax, eax ; ret
0x00002aaaaade7403 : sub eax, dword ptr [r8] ; test eax, eax ; jne 0x114419 ; xor eax, eax ; ret
0x00002aaaaaddba43 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaaddba36 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00002aaaaade7612 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaaddbb28 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00002aaaaade77af : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x114798 ; ret
0x00002aaaaaddb9c2 : sub eax, dword ptr [rax] ; je 0x1089cd ; pop rbp ; ret
0x00002aaaaadde56a : sub eax, dword ptr [rax] ; jne 0x10b580 ; jmp 0x10b59a
0x00002aaaaaddc755 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaaddc02d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00002aaaaade7efc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00002aaaaaddb974 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00002aaaaade6ef4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f08 ; xor eax, eax ; ret
0x00002aaaaade6f24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f38 ; xor eax, eax ; ret
0x00002aaaaade6f54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f68 ; xor eax, eax ; ret
0x00002aaaaade6f84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113f98 ; xor eax, eax ; ret
0x00002aaaaade6fb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113fc8 ; xor eax, eax ; ret
0x00002aaaaade6fe4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x113ff8 ; xor eax, eax ; ret
0x00002aaaaade7014 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114028 ; xor eax, eax ; ret
0x00002aaaaade7044 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114058 ; xor eax, eax ; ret
0x00002aaaaade7074 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114088 ; xor eax, eax ; ret
0x00002aaaaade70a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140b8 ; xor eax, eax ; ret
0x00002aaaaade70d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1140e8 ; xor eax, eax ; ret
0x00002aaaaade7104 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114118 ; xor eax, eax ; ret
0x00002aaaaade7134 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114148 ; xor eax, eax ; ret
0x00002aaaaade7164 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114178 ; xor eax, eax ; ret
0x00002aaaaade7194 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141a8 ; xor eax, eax ; ret
0x00002aaaaade71c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1141d8 ; xor eax, eax ; ret
0x00002aaaaade71f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114208 ; xor eax, eax ; ret
0x00002aaaaade7224 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114238 ; xor eax, eax ; ret
0x00002aaaaade7254 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114268 ; xor eax, eax ; ret
0x00002aaaaade7284 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114298 ; xor eax, eax ; ret
0x00002aaaaade72e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1142f8 ; xor eax, eax ; ret
0x00002aaaaade7314 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114328 ; xor eax, eax ; ret
0x00002aaaaade7344 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114358 ; xor eax, eax ; ret
0x00002aaaaade7374 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114388 ; xor eax, eax ; ret
0x00002aaaaade73a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143b8 ; xor eax, eax ; ret
0x00002aaaaade73d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1143e8 ; xor eax, eax ; ret
0x00002aaaaade7404 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114418 ; xor eax, eax ; ret
0x00002aaaaade7434 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114448 ; xor eax, eax ; ret
0x00002aaaaade7433 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114449 ; xor eax, eax ; ret
0x00002aaaaade7464 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114478 ; xor eax, eax ; ret
0x00002aaaaade7463 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114479 ; xor eax, eax ; ret
0x00002aaaaade7985 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x114997 ; ret
0x00002aaaaad0169f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad1ec80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00002aaaaad7d211 : sub eax, dword ptr [rcx + r8*4] ; je 0xaa1f7 ; ret
0x00002aaaaad7d212 : sub eax, dword ptr [rcx + rax*4] ; je 0xaa1f6 ; ret
0x00002aaaaae6ddd5 : sub eax, dword ptr [rcx] ; add ah, dh ; ret 0xfffd
0x00002aaaaad500be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00002aaaaad4a4d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00002aaaaad4a3c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00002aaaaadeb94c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00002aaaaad464f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00002aaaaad4a4c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00002aaaaad4a3b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00002aaaaad7d1ca : sub eax, dword ptr [rdx + rcx*4] ; je 0xaa1b6 ; ret
0x00002aaaaae6d3c5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaad4f863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00002aaaaade300c : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaae1ca5e : sub eax, eax ; ret
0x00002aaaaad4e6dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad7f5ab : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x00002aaaaad4f019 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaad1d13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00002aaaaad5d57c : sub eax, ecx ; ret
0x00002aaaaad5dd09 : sub eax, edi ; ret
0x00002aaaaade2f9f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00002aaaaad0d639 : sub eax, edx ; ret
0x00002aaaaad07b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00002aaaaad077bd : sub eax, edx ; shr rax, 0x3f ; ret
0x00002aaaaae44ef7 : sub eax, edx ; vzeroupper ; ret
0x00002aaaaae59e41 : sub eax, esi ; jmp qword ptr [rax - 0x1f000fd6]
0x00002aaaaad4e7fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad4bfb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaade300b : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00002aaaaae1635b : sub ebp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae564be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00002aaaaad40f3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00002aaaaae54f55 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00002aaaaacd5f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00002aaaaad8c26c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad08f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00002aaaaad1c125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad78a51 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00002aaaaad7d3dc : sub edi, 0x10 ; add rax, rdi ; ret
0x00002aaaaad70f56 : sub edi, dword ptr [rcx] ; ret 0x2774
0x00002aaaaae46c79 : sub edi, dword ptr [rdx + rbp*8 + 0x1f0fff] ; ret
0x00002aaaaae672b1 : sub edi, ebx ; jmp qword ptr [rax]
0x00002aaaaae7a171 : sub edi, edx ; call qword ptr [rdi]
0x00002aaaaae67999 : sub edi, esp ; call rax
0x00002aaaaae67a39 : sub edi, esp ; jmp qword ptr [rax]
0x00002aaaaae67a59 : sub edi, esp ; jmp rax
0x00002aaaaad4f890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaad4f885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00002aaaaad60fb4 : sub edx, eax ; jbe 0x8dff7 ; add rax, rdi ; ret
0x00002aaaaad60fc4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00002aaaaad60fd4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaad60fe4 : sub edx, eax ; jbe 0x8dff9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00002aaaaada553b : sub edx, eax ; jmp 0xd2554
0x00002aaaaad07eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x00002aaaaad07ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00002aaaaae7a159 : sub edx, edi ; jmp qword ptr [rdi]
0x00002aaaaae6d559 : sub edx, edi ; jmp rsp
0x00002aaaaae5a6b1 : sub edx, esi ; call qword ptr [rax + 0x10fff229]
0x00002aaaaae5a6b5 : sub edx, esi ; call qword ptr [rax]
0x00002aaaaae5a719 : sub edx, esi ; jmp rsp
0x00002aaaaae5a715 : sub edx, esi ; lcall ptr [rcx + rbp] ; jmp rsp
0x00002aaaaad47012 : sub edx, esi ; mov rdi, r15 ; call rax
0x00002aaaaad4b774 : sub edx, esi ; mov rdi, rbx ; call rax
0x00002aaaaad697d2 : sub esi, 1 ; jne 0x967d0 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad6987a : sub esi, 1 ; jne 0x96877 ; xor eax, eax ; ret
0x00002aaaaadf601e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00002aaaaae1504a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00002aaaaae5aed0 : sub esi, dword ptr [rdx - 0x441b000d] ; call qword ptr [rdx]
0x00002aaaaae59e49 : sub esi, eax ; jmp qword ptr [rax]
0x00002aaaaae78311 : sub esi, ebp ; jmp qword ptr [rdi]
0x00002aaaaadcf244 : sub esi, ebx ; ret
0x00002aaaaadc9290 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0e71e : sub esp, -0x80 ; pop rbx ; ret
0x00002aaaaad5b268 : sub esp, 0x80 ; call 0x114498
0x00002aaaaadfe349 : sub esp, 8 ; call 0x137645
0x00002aaaaad718d0 : sub esp, 8 ; call 0x8ab75
0x00002aaaaae67a35 : sub esp, edi ; inc dword ptr [rax + 0x2b] ; cld ; jmp qword ptr [rax]
0x00002aaaaae67a55 : sub esp, edi ; inc dword ptr [rax] ; sub edi, esp ; jmp rax
0x00002aaaaada553a : sub r10, rax ; jmp 0xd2555
0x00002aaaaade0b5b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10db2b
0x00002aaaaad4f018 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00002aaaaadf2aa2 : sub r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x00002aaaaadf33e4 : sub r8b, byte ptr [rax] ; ret
0x00002aaaaade6f53 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f69 ; xor eax, eax ; ret
0x00002aaaaade6f83 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113f99 ; xor eax, eax ; ret
0x00002aaaaade6fb3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113fc9 ; xor eax, eax ; ret
0x00002aaaaade6fe3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x113ff9 ; xor eax, eax ; ret
0x00002aaaaade7013 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114029 ; xor eax, eax ; ret
0x00002aaaaade7133 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114149 ; xor eax, eax ; ret
0x00002aaaaade7163 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114179 ; xor eax, eax ; ret
0x00002aaaaade7193 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141a9 ; xor eax, eax ; ret
0x00002aaaaade71c3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x1141d9 ; xor eax, eax ; ret
0x00002aaaaade71f3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114209 ; xor eax, eax ; ret
0x00002aaaaade7223 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114239 ; xor eax, eax ; ret
0x00002aaaaade7043 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114059 ; xor eax, eax ; ret
0x00002aaaaade7073 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114089 ; xor eax, eax ; ret
0x00002aaaaade70a3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140b9 ; xor eax, eax ; ret
0x00002aaaaade70d3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1140e9 ; xor eax, eax ; ret
0x00002aaaaade7103 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114119 ; xor eax, eax ; ret
0x00002aaaaade7253 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114269 ; xor eax, eax ; ret
0x00002aaaaade7283 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114299 ; xor eax, eax ; ret
0x00002aaaaade72e3 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x1142f9 ; xor eax, eax ; ret
0x00002aaaaade7313 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x114329 ; xor eax, eax ; ret
0x00002aaaaae0a725 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00002aaaaad69969 : sub rax, 1 ; jne 0x96968 ; pop rbx ; pop rbp ; ret
0x00002aaaaad7c923 : sub rax, 1 ; ret
0x00002aaaaade6ef3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f09 ; xor eax, eax ; ret
0x00002aaaaade6f23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x113f39 ; xor eax, eax ; ret
0x00002aaaaad500bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00002aaaaad4a4d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00002aaaaad4a3c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00002aaaaad464f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00002aaaaad4a4c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00002aaaaad4a3b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00002aaaaae1ca5d : sub rax, r8 ; ret
0x00002aaaaad7f5aa : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00002aaaaad5dd08 : sub rax, rdi ; ret
0x00002aaaaad0d64d : sub rax, rdx ; ret
0x00002aaaaad077bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x00002aaaaae44ef6 : sub rax, rdx ; vzeroupper ; ret
0x00002aaaaad7d3db : sub rdi, 0x10 ; add rax, rdi ; ret
0x00002aaaaad60fb3 : sub rdx, rax ; jbe 0x8dff8 ; add rax, rdi ; ret
0x00002aaaaad47011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00002aaaaad4b773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00002aaaaad697d1 : sub rsi, 1 ; jne 0x967d1 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad69879 : sub rsi, 1 ; jne 0x96878 ; xor eax, eax ; ret
0x00002aaaaadc928f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0e71d : sub rsp, -0x80 ; pop rbx ; ret
0x00002aaaaad5b267 : sub rsp, 0x80 ; call 0x114499
0x00002aaaaadfe348 : sub rsp, 8 ; call 0x137646
0x00002aaaaadfe347 : sub rsp, 8 ; call 0x137647
0x00002aaaaad718cf : sub rsp, 8 ; call 0x8ab76
0x00002aaaaae67990 : sub spl, dil ; call qword ptr [rax]
0x00002aaaaae679b0 : sub spl, dil ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00002aaaaad07890 : subps xmm0, xmm1 ; ret
0x00002aaaaad0788f : subsd xmm0, xmm1 ; ret
0x00002aaaaad07c24 : subss xmm0, xmm1 ; ret
0x00002aaaaadf7581 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00002aaaaadcff37 : syscall ; mov eax, edx ; ret
0x00002aaaaadc8d2d : syscall ; neg eax ; ret
0x00002aaaaade74d7 : syscall ; pop rdx ; pop rsi ; ret
0x00002aaaaad8e7c5 : syscall ; ret
0x00002aaaaadd97ef : syscall ; test rax, rax ; jl 0x10683e ; je 0x106802 ; ret
0x00002aaaaad57879 : sysenter
0x00002aaaaade4a05 : test ah, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaad47153 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00002aaaaadaa09b : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00002aaaaad39502 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae6caac : test ah, ch ; add dword ptr [rax], eax ; xor al, 0x69 ; clc ; call rsp
0x00002aaaaadc4206 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00002aaaaae6c560 : test ah, dh ; idiv edi ; cld ; ret
0x00002aaaaae78785 : test al, 0 ; add byte ptr [rax + 0x37], cl ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae0a787 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae04822 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00002aaaaae08f76 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00002aaaaacffb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00002aaaaaddb9c1 : test al, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00002aaaaad5b66c : test al, 0x33 ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaacd6cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00002aaaaadabf68 : test al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaae75b28 : test al, 0x48 ; in eax, dx ; jmp qword ptr [rdi]
0x00002aaaaae76098 : test al, 0x52 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaae82dc8 : test al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae83038 : test al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae78b28 : test al, 0x73 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaad6f7e8 : test al, 0x83 ; ret 0x4901
0x00002aaaaada7c3c : test al, 0x89 ; ret
0x00002aaaaae55817 : test al, 0x97 ; xchg eax, esp ; ret
0x00002aaaaadba8b3 : test al, 0xe5 ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x00002aaaaae79228 : test al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00002aaaaae7c438 : test al, 0xe8 ; int1 ; call qword ptr [rbx]
0x00002aaaaae7c408 : test al, 0xe8 ; int1 ; jmp qword ptr [rdi]
0x00002aaaaada7b38 : test al, 0xe8 ; ret 0xfd7a
0x00002aaaaacf6658 : test al, 0xe8 ; ret 0xffff
0x00002aaaaae69a69 : test al, 0xed ; call rsp
0x00002aaaaadd7f2b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaadbf3c3 : test al, 0xf ; xchg eax, esp ; ret
0x00002aaaaad7e999 : test al, 0xf0 ; jne 0xab9f8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaad7e998 : test al, 0xf0 ; jne 0xab9f9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaae883d8 : test al, 0xf1 ; sti ; call rcx
0x00002aaaaae5b119 : test al, 0xf3 ; call rdi
0x00002aaaaae805e1 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaae68785 : test al, 0xfc ; call qword ptr [rax]
0x00002aaaaae68649 : test al, 0xfc ; call rdx
0x00002aaaaae68645 : test al, 0xfc ; inc dword ptr [rdx - 0x58] ; cld ; call rdx
0x00002aaaaae685c9 : test al, 0xfc ; jmp rsi
0x00002aaaaae67405 : test al, 0xfd ; inc dword ptr [rcx - 0x57] ; std ; jmp rcx
0x00002aaaaae67445 : test al, 0xfd ; jmp qword ptr [rsi]
0x00002aaaaadc9a96 : test al, 2 ; cmove eax, edx ; ret
0x00002aaaaad70fd2 : test al, al ; jne 0x9dfb5 ; ret
0x00002aaaaad71110 : test al, al ; jne 0x9e0f6 ; xor eax, eax ; ret
0x00002aaaaad71c5a : test al, al ; jne 0x9ec48 ; xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaadf39c5 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaae6da58 : test al, dl ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cdbfffe]
0x00002aaaaae68075 : test bh, ah ; call qword ptr [rax]
0x00002aaaaae68a1d : test bh, ah ; call rax
0x00002aaaaae68271 : test bh, ah ; jmp qword ptr [rax]
0x00002aaaaae68135 : test bh, ah ; jmp rdx
0x00002aaaaad19074 : test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00002aaaaae0076a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae6e738 : test bpl, al ; call qword ptr [rax]
0x00002aaaaae6e750 : test bpl, al ; jmp qword ptr [rcx]
0x00002aaaaad00ef6 : test byte ptr [rax + 0x200], bh ; ret
0x00002aaaaadf79d3 : test byte ptr [rax + 0x39000003], al ; ret
0x00002aaaaada012a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00002aaaaae046f5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x00002aaaaad0640d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00002aaaaad976af : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00002aaaaae07cb5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00002aaaaad8c2b8 : test byte ptr [rax + 0x74db8500], cl ; or bh, byte ptr [rcx] ; ret
0x00002aaaaad3b469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x00002aaaaadc5823 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf2cf
0x00002aaaaae01f56 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00002aaaaadc8ef3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00002aaaaadd52b1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00002aaaaadd59f4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00002aaaaad1a059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00002aaaaadfc91e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x00002aaaaae06531 : test byte ptr [rax - 0x77], 0xe7 ; call 0x1f7e6
0x00002aaaaae0e4c9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x00002aaaaae7d545 : test byte ptr [rax], 0 ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00002aaaaae7d605 : test byte ptr [rax], 0 ; cmp byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00002aaaaae1041b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00002aaaaadb5a55 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00002aaaaade274f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00002aaaaad4aeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00002aaaaae15dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00002aaaaae42eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00002aaaaae3b09a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00002aaaaad7817a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00002aaaaad7914a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00002aaaaae3b0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00002aaaaad7916a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00002aaaaad7917a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00002aaaaada965a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00002aaaaae3b10a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00002aaaaad791ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad4fb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00002aaaaae3b0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00002aaaaad7915a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00002aaaaad4d61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00002aaaaacf3589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00002aaaaad488ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad3dcca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4b29a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad715ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00002aaaaad5223b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae6d59c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x00002aaaaad6882c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaad69f79 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaae6a6c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaad68844 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaae77cbc : test byte ptr [rbp + 0x1900000], bl ; out dx, al ; call qword ptr [rsi]
0x00002aaaaade6142 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00002aaaaad41536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00002aaaaae69a2c : test byte ptr [rbp - 0x5f4c0000], dh ; in eax, dx ; jmp rsp
0x00002aaaaad8a067 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00002aaaaad4850e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00002aaaaae10909 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaad393b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00002aaaaad50776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x00002aaaaad5123f : test byte ptr [rbp - 0xa000000], dl ; ret
0x00002aaaaae6b888 : test byte ptr [rbp - 0xa], bl ; call rsp
0x00002aaaaade573c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1127a8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadc30cc : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00002aaaaad2b397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x00002aaaaae680b8 : test byte ptr [rbx - 0x7c790004], 0xfc ; call qword ptr [rsi]
0x00002aaaaae6c368 : test byte ptr [rbx - 9], ah ; jmp rsp
0x00002aaaaad5702e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaad5672f : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad58bbe : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00002aaaaae72abc : test byte ptr [rbx], cl ; add byte ptr [rax + 0x32], al ; jmp 0x19faca
0x00002aaaaad699fb : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x00002aaaaade959f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad59e1f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00002aaaaad0a8b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x00002aaaaad10ad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00002aaaaad8c9b3 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00002aaaaad82403 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaad23302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00002aaaaadd4c42 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00002aaaaadabfb2 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00002aaaaad99b3a : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaad56a57 : test byte ptr [rcx - 0xa000000], dl ; ret
0x00002aaaaae17446 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaacf5c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadf5250 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00002aaaaada3c26 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x00002aaaaae5b060 : test byte ptr [rdi - 0x587b000d], ah ; jmp rax
0x00002aaaaad2a49b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x00002aaaaad1a64e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00002aaaaae0a81c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00002aaaaad6fe2a : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x00002aaaaad6f93d : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00002aaaaad52124 : test byte ptr [rdi - 0x9fffffc], al ; ret
0x00002aaaaadf39c3 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaad8924c : test byte ptr [rdi], 0x84 ; ret
0x00002aaaaadd50ba : test byte ptr [rdi], 0x84 ; ret 0
0x00002aaaaacf7ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaadbf3c9 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x00002aaaaad32eba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x00002aaaaad4a412 : test byte ptr [rdi], 4 ; sete al ; ret
0x00002aaaaad4a422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00002aaaaad78af8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00002aaaaad6846c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaad68454 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00002aaaaadc05f1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00002aaaaacf9552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00002aaaaad00e84 : test byte ptr [rdx + 0x200], al ; ret
0x00002aaaaae829bc : test byte ptr [rdx + 1], cl ; add byte ptr [rax], ah ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae6b184 : test byte ptr [rdx + 1], dl ; add byte ptr [rax + rcx], al ; hlt ; call rsp
0x00002aaaaae6d3dc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax - 6], al ; call rsp
0x00002aaaaad509be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x00002aaaaad96c21 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00002aaaaae6b3d8 : test byte ptr [rdx - 0xb], al ; jmp rsp
0x00002aaaaae6d264 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaae7e1bc : test byte ptr [rdx], al ; add dword ptr [rax], eax ; in eax, -0xe ; call qword ptr [rsi]
0x00002aaaaad392ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00002aaaaae065dc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x00002aaaaade2ff4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00002aaaaadc331e : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00002aaaaad5ddad : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00002aaaaae84dbc : test byte ptr [rsi + 1], ch ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x00002aaaaad6f949 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00002aaaaad05e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad5dbed : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00002aaaaae81dbc : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; adc byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00002aaaaad073b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00002aaaaae6d600 : test byte ptr [rsi], bh ; cli ; jmp rsp
0x00002aaaaacfe95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae7fdbc : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; loopne 0x1acd59 ; hlt ; call qword ptr [rcx]
0x00002aaaaae6d0cc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xchg ecx, r15d ; call rsp
0x00002aaaaadf493e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00002aaaaad7d032 : test ch, 0xf0 ; je 0xaa02b ; movzx eax, cl ; pop rbx ; ret
0x00002aaaaad8fe3f : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae6e739 : test ch, al ; call qword ptr [rax]
0x00002aaaaae6e751 : test ch, al ; jmp qword ptr [rcx]
0x00002aaaaae00758 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00002aaaaade3857 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadae9ea : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaae6dae0 : test cl, cl ; cli ; jmp rsp
0x00002aaaaadf8a9b : test cl, cl ; jne 0x1259ec ; ret
0x00002aaaaad70f78 : test cl, cl ; jne 0x9df6d ; ret
0x00002aaaaad710b7 : test cl, cl ; jne 0x9e0ae ; xor eax, eax ; ret
0x00002aaaaad7c5af : test cl, cl ; jne 0xa95a4 ; ret
0x00002aaaaad7c65f : test cl, cl ; jne 0xa9654 ; ret
0x00002aaaaad7c91f : test cl, cl ; jne 0xa9918 ; sub rax, 1 ; ret
0x00002aaaaad7d05a : test dh, 0xf0 ; je 0xaa029 ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaad7d05a : test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaadf7adc : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00002aaaaad420c4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaae5ab6d : test dh, bl ; call qword ptr [rsi]
0x00002aaaaae5ab49 : test dh, bl ; jmp rdx
0x00002aaaaad93d4d : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad71170 : test dh, dh ; jne 0x9e167 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaacf6b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00002aaaaae42d74 : test dl, 0x40 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 7] ; ret
0x00002aaaaae42da2 : test dl, 4 ; jne 0x16fd39 ; lea rax, qword ptr [rdi + 3] ; ret
0x00002aaaaad8fcbb : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00002aaaaad54635 : test dl, dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00002aaaaad06bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x00002aaaaad70f34 : test dl, dl ; jne 0x9df2d ; ret
0x00002aaaaad7c7cf : test dl, dl ; jne 0xa97c8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00002aaaaada3a1e : test dl, dl ; jne 0xd0a06 ; ret
0x00002aaaaad61c49 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00002aaaaad78e2b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00002aaaaad7a33b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00002aaaaad7a23b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00002aaaaad92500 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x00002aaaaad3c60e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x00002aaaaad2f8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x00002aaaaad2fd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x00002aaaaad420c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00002aaaaae6a3ad : test dword ptr [rax], 0xef1f9400 ; jmp rsp
0x00002aaaaae7d685 : test dword ptr [rax], 0xf22c4800 ; jmp rcx
0x00002aaaaada9bb9 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00002aaaaad582a3 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad28b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00002aaaaad57997 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x00002aaaaad3889a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00002aaaaad57996 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00002aaaaad66c1f : test dword ptr [rbp - 0xc000004], esp ; ret
0x00002aaaaad714de : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaacd4b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00002aaaaad7df60 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaad7e888 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00002aaaaae3afe8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae3afc8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00002aaaaae3aee0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaae0bf6c : test dword ptr [rbx + 5], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00002aaaaad7a430 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00002aaaaae416f7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41b46 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaacd5b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaadb6a14 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00002aaaaad71448 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaad0e4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaad60f2a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x00002aaaaad61960 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00002aaaaae3acea : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae416cd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad78a12 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaae415dd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae414ed : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad7dfa7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaae44c27 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00002aaaaad7df77 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00002aaaaae3b08a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00002aaaaad0ab7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x00002aaaaad30532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00002aaaaadc4552 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00002aaaaad53ed2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00002aaaaad61b4a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00002aaaaad78b77 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad78b57 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00002aaaaad08f23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00002aaaaad66a35 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00002aaaaad09106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00002aaaaad78d11 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00002aaaaad7a119 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00002aaaaae42a42 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaae41412 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaadd5a5d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x00002aaaaad0e9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00002aaaaae3afa7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad7e92d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00002aaaaae445b2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad78b35 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00002aaaaad78b15 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00002aaaaad78a2d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00002aaaaad66d1e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00002aaaaada9ba3 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00002aaaaae41918 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00002aaaaad2afd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00002aaaaad9f823 : test eax, 0x39fffffe ; ret
0x00002aaaaae0a733 : test eax, 0x480028b8 ; add esp, 8 ; ret
0x00002aaaaade9fc7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x00002aaaaadd6bfb : test eax, 0x49fff1bc ; mov edi, dword ptr [rsi] ; call rbx
0x00002aaaaae78845 : test eax, 0x4e880000 ; out dx, al ; jmp qword ptr [rdx]
0x00002aaaaae7887d : test eax, 0x4f200000 ; out dx, al ; call qword ptr [rdx]
0x00002aaaaae698b5 : test eax, 0x59440000 ; in eax, dx ; jmp rsp
0x00002aaaaadfdd93 : test eax, 0x5b0029cf ; ret
0x00002aaaaae57500 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00002aaaaae2b446 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaad07c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00002aaaaad389cf : test eax, 0x83000000 ; ret 0x8308
0x00002aaaaad338fc : test eax, 0x89000007 ; ret 0x348
0x00002aaaaad67eaf : test eax, 0x8948fff8 ; ret
0x00002aaaaae6857d : test eax, 0xa950fffc ; cld ; jmp rax
0x00002aaaaae674cd : test eax, 0xb59dfffd ; std ; call rcx
0x00002aaaaae5b0a5 : test eax, 0xbc2dfff3 ; call qword ptr [rax]
0x00002aaaaae5c916 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00002aaaaae888a5 : test eax, 0xe2080001 ; sti ; call rsi
0x00002aaaaadd83df : test eax, eax ; cmove eax, edx ; ret
0x00002aaaaad0d6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00002aaaaadd782c : test eax, eax ; je 0x1048d0 ; call rax
0x00002aaaaadd79a3 : test eax, eax ; je 0x104aa8 ; call rax
0x00002aaaaade7988 : test eax, eax ; je 0x114994 ; ret
0x00002aaaaade7c80 : test eax, eax ; je 0x114cb4 ; call rax
0x00002aaaaade9aaa : test eax, eax ; je 0x116ac0 ; add rsp, 8 ; ret
0x00002aaaaadf1eb5 : test eax, eax ; je 0x11eec5 ; mov rdi, rbx ; call rax
0x00002aaaaadf21ad : test eax, eax ; je 0x11f1bd ; mov rdi, rbx ; call rax
0x00002aaaaadfa750 : test eax, eax ; je 0x12775c ; ret
0x00002aaaaadfd451 : test eax, eax ; je 0x12a43f ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadfdc91 : test eax, eax ; je 0x12aca1 ; mov rdi, rsp ; call rax
0x00002aaaaadfdd7c : test eax, eax ; je 0x12ad8c ; mov rdi, rsp ; call rax
0x00002aaaaadfe632 : test eax, eax ; je 0x12b642 ; mov rdi, rbp ; call rax
0x00002aaaaadfe9b6 : test eax, eax ; je 0x12b9c4 ; ret
0x00002aaaaadff6c3 : test eax, eax ; je 0x12c6d3 ; mov rdi, r14 ; call rax
0x00002aaaaadffc41 : test eax, eax ; je 0x12cc56 ; xor eax, eax ; ret
0x00002aaaaae05058 : test eax, eax ; je 0x132068 ; mov rdi, r12 ; call rax
0x00002aaaaae05239 : test eax, eax ; je 0x13224b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae06513 : test eax, eax ; je 0x133523 ; mov rdi, r13 ; call rax
0x00002aaaaae06706 : test eax, eax ; je 0x133716 ; mov rdi, rbp ; call rax
0x00002aaaaae06926 : test eax, eax ; je 0x133936 ; mov rdi, rbp ; call rax
0x00002aaaaae0741d : test eax, eax ; je 0x13442f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaae07ac9 : test eax, eax ; je 0x134ad9 ; mov rdi, r12 ; call rax
0x00002aaaaae07e3d : test eax, eax ; je 0x134e4f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaae0a6c8 : test eax, eax ; je 0x13765a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00002aaaaae0a64d : test eax, eax ; je 0x13765d ; pop rbx ; ret
0x00002aaaaae0aaff : test eax, eax ; je 0x137b18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaae0b3b9 : test eax, eax ; je 0x1383cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae0bad2 : test eax, eax ; je 0x138ae4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae10186 : test eax, eax ; je 0x13d196 ; xor eax, eax ; ret
0x00002aaaaae17e53 : test eax, eax ; je 0x144e5f ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae18e38 : test eax, eax ; je 0x145e44 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae4638c : test eax, eax ; je 0x17339b ; call rax
0x00002aaaaacfe023 : test eax, eax ; je 0x2b02d ; call rax
0x00002aaaaacff379 : test eax, eax ; je 0x2c383 ; call rax
0x00002aaaaad4b48d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x00002aaaaad51072 : test eax, eax ; je 0x7e07c ; call rax
0x00002aaaaad579b9 : test eax, eax ; je 0x849c3 ; call rax
0x00002aaaaad5d970 : test eax, eax ; je 0x8a988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad999de : test eax, eax ; je 0xc6a00 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00002aaaaad9e7ef : test eax, eax ; je 0xcb7f9 ; call rax
0x00002aaaaad9e9d1 : test eax, eax ; je 0xcb9de ; call rax
0x00002aaaaadcf7ec : test eax, eax ; je 0xfc7f7 ; ret
0x00002aaaaadd1661 : test eax, eax ; je 0xfe670 ; mov qword ptr [rax], rdx ; ret
0x00002aaaaadd97f2 : test eax, eax ; jl 0x10683b ; je 0x1067ff ; ret
0x00002aaaaade6ec6 : test eax, eax ; jne 0x113ed9 ; mov eax, 1 ; ret
0x00002aaaaade6ef6 : test eax, eax ; jne 0x113f06 ; xor eax, eax ; ret
0x00002aaaaade6f26 : test eax, eax ; jne 0x113f36 ; xor eax, eax ; ret
0x00002aaaaade6f56 : test eax, eax ; jne 0x113f66 ; xor eax, eax ; ret
0x00002aaaaade6f86 : test eax, eax ; jne 0x113f96 ; xor eax, eax ; ret
0x00002aaaaade6fb6 : test eax, eax ; jne 0x113fc6 ; xor eax, eax ; ret
0x00002aaaaade6fe6 : test eax, eax ; jne 0x113ff6 ; xor eax, eax ; ret
0x00002aaaaade7016 : test eax, eax ; jne 0x114026 ; xor eax, eax ; ret
0x00002aaaaade7046 : test eax, eax ; jne 0x114056 ; xor eax, eax ; ret
0x00002aaaaade7076 : test eax, eax ; jne 0x114086 ; xor eax, eax ; ret
0x00002aaaaade70a6 : test eax, eax ; jne 0x1140b6 ; xor eax, eax ; ret
0x00002aaaaade70d6 : test eax, eax ; jne 0x1140e6 ; xor eax, eax ; ret
0x00002aaaaade7106 : test eax, eax ; jne 0x114116 ; xor eax, eax ; ret
0x00002aaaaade7136 : test eax, eax ; jne 0x114146 ; xor eax, eax ; ret
0x00002aaaaade7166 : test eax, eax ; jne 0x114176 ; xor eax, eax ; ret
0x00002aaaaade7196 : test eax, eax ; jne 0x1141a6 ; xor eax, eax ; ret
0x00002aaaaade71c6 : test eax, eax ; jne 0x1141d6 ; xor eax, eax ; ret
0x00002aaaaade71f6 : test eax, eax ; jne 0x114206 ; xor eax, eax ; ret
0x00002aaaaade7226 : test eax, eax ; jne 0x114236 ; xor eax, eax ; ret
0x00002aaaaade7256 : test eax, eax ; jne 0x114266 ; xor eax, eax ; ret
0x00002aaaaade7286 : test eax, eax ; jne 0x114296 ; xor eax, eax ; ret
0x00002aaaaade72e6 : test eax, eax ; jne 0x1142f6 ; xor eax, eax ; ret
0x00002aaaaade7316 : test eax, eax ; jne 0x114326 ; xor eax, eax ; ret
0x00002aaaaade7346 : test eax, eax ; jne 0x114356 ; xor eax, eax ; ret
0x00002aaaaade7376 : test eax, eax ; jne 0x114386 ; xor eax, eax ; ret
0x00002aaaaade73a6 : test eax, eax ; jne 0x1143b6 ; xor eax, eax ; ret
0x00002aaaaade73d6 : test eax, eax ; jne 0x1143e6 ; xor eax, eax ; ret
0x00002aaaaade7406 : test eax, eax ; jne 0x114416 ; xor eax, eax ; ret
0x00002aaaaade7436 : test eax, eax ; jne 0x114446 ; xor eax, eax ; ret
0x00002aaaaade7466 : test eax, eax ; jne 0x114476 ; xor eax, eax ; ret
0x00002aaaaade74b0 : test eax, eax ; jne 0x1144ab ; pop rdx ; pop r10 ; ret
0x00002aaaaade75a3 : test eax, eax ; jne 0x1145b5 ; ret
0x00002aaaaade7945 : test eax, eax ; jne 0x1148e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaadfab8a : test eax, eax ; jne 0x127b94 ; ret
0x00002aaaaae05456 : test eax, eax ; jne 0x132464 ; ret
0x00002aaaaae0b335 : test eax, eax ; jne 0x138325 ; pop rbx ; ret
0x00002aaaaae0b5b6 : test eax, eax ; jne 0x1385c4 ; ret
0x00002aaaaae132ba : test eax, eax ; jne 0x1402cf ; xor eax, eax ; pop rbx ; ret
0x00002aaaaae167c6 : test eax, eax ; jne 0x1437d6 ; xor eax, eax ; ret
0x00002aaaaae167f6 : test eax, eax ; jne 0x143806 ; xor eax, eax ; ret
0x00002aaaaae16826 : test eax, eax ; jne 0x143836 ; xor eax, eax ; ret
0x00002aaaaae16856 : test eax, eax ; jne 0x143866 ; xor eax, eax ; ret
0x00002aaaaae16886 : test eax, eax ; jne 0x143896 ; xor eax, eax ; ret
0x00002aaaaae168b6 : test eax, eax ; jne 0x1438c6 ; xor eax, eax ; ret
0x00002aaaaae468a6 : test eax, eax ; jne 0x1738b5 ; ret
0x00002aaaaad08306 : test eax, eax ; jne 0x35315 ; ret
0x00002aaaaad3dcbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x00002aaaaad4f844 : test eax, eax ; jne 0x7c83d ; ret
0x00002aaaaad508d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaad5ba1f : test eax, eax ; jne 0x88a15 ; ret
0x00002aaaaad5fc5c : test eax, eax ; jne 0x8cc26 ; add rsp, 8 ; ret
0x00002aaaaad5fc7f : test eax, eax ; jne 0x8cc98 ; add rsp, 8 ; ret
0x00002aaaaad60f67 : test eax, eax ; jne 0x8dfc7 ; xor rax, rax ; ret
0x00002aaaaad71518 : test eax, eax ; jne 0x9e596 ; xor eax, eax ; ret
0x00002aaaaad7ea71 : test eax, eax ; jne 0xaba45 ; ret
0x00002aaaaad7eb2a : test eax, eax ; jne 0xabb26 ; xor eax, eax ; ret
0x00002aaaaadcdaed : test eax, eax ; jne 0xfaa98 ; mov edi, ebp ; call 0xf6d08
0x00002aaaaadd050f : test eax, eax ; jne 0xfd4e7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd06d0 : test eax, eax ; jne 0xfd6a7 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad48adb : test eax, eax ; js 0x75aed ; ret
0x00002aaaaad57c66 : test eax, eax ; js 0x84c75 ; ret
0x00002aaaaad7e49d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xab471 ; ret
0x00002aaaaadfd406 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00002aaaaacf5d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00002aaaaadb6a05 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00002aaaaad81025 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xae03f
0x00002aaaaad83946 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb095f
0x00002aaaaad860fd : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb311f
0x00002aaaaad60e90 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00002aaaaad56f07 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaad4b15e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad7eb86 : test ebx, ebx ; jne 0xabb68 ; mov rax, rdi ; ret
0x00002aaaaae46984 : test ebx, ebx ; mov rdx, rbx ; jne 0x173981 ; pop rbx ; ret
0x00002aaaaae42d62 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00002aaaaae42d6f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00002aaaaacfe394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x00002aaaaad3e458 : test ecx, ecx ; je 0x6b465 ; ret
0x00002aaaaad7ea5b : test ecx, ecx ; jne 0xaba55 ; ret
0x00002aaaaad7fed9 : test ecx, ecx ; jne 0xace98 ; mov rax, rdx ; ret
0x00002aaaaad7d263 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaa25f ; ret
0x00002aaaaae67381 : test edi, ebx ; jmp qword ptr [rax + 0x20fffb86]
0x00002aaaaae0665d : test edi, edi ; je 0x133674 ; call 0x1f8ae
0x00002aaaaad59cf0 : test edi, edi ; je 0x86d09 ; mov eax, 0x16 ; ret
0x00002aaaaadf2191 : test edi, edi ; jne 0x11f185 ; pop rbx ; ret
0x00002aaaaae4668b : test edi, edi ; jne 0x17367f ; pop rbx ; ret
0x00002aaaaadeb842 : test edi, edi ; js 0x118859 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00002aaaaae6826d : test edi, esp ; call qword ptr [rax + 0x20fffc84]
0x00002aaaaae689e1 : test edi, esp ; call rax
0x00002aaaaae680ad : test edi, esp ; call rsi
0x00002aaaaae680a9 : test edi, esp ; inc dword ptr [rsi - 0x7b] ; cld ; call rsi
0x00002aaaaae00250 : test edx, edx ; je 0x12d260 ; mov rdi, rbp ; call rdx
0x00002aaaaae46274 : test edx, edx ; je 0x17327e ; call rdx
0x00002aaaaad4a81a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x00002aaaaad4ab9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x00002aaaaad5dba2 : test edx, edx ; je 0x8abb0 ; bsf eax, edx ; ret
0x00002aaaaad5dba2 : test edx, edx ; je 0x8abb1 ; bsf eax, edx ; ret
0x00002aaaaad5dc4b : test edx, edx ; je 0x8ac67 ; bsf rax, rdx ; ret
0x00002aaaaad5dc4b : test edx, edx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x00002aaaaad5de1a : test edx, edx ; je 0x8ae47 ; bsf rax, rdx ; ret
0x00002aaaaad5de1a : test edx, edx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x00002aaaaad9e940 : test edx, edx ; je 0xcb94d ; call rdx
0x00002aaaaade77ed : test edx, edx ; jne 0x1147e9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaae0e890 : test edx, edx ; jne 0x13b8a9 ; mov eax, 1 ; ret
0x00002aaaaae0e8d0 : test edx, edx ; jne 0x13b8e9 ; mov eax, 1 ; ret
0x00002aaaaad44bff : test edx, edx ; jne 0x71bf5 ; ret
0x00002aaaaad4d393 : test edx, edx ; jne 0x7a3a4 ; ret
0x00002aaaaad4df3f : test edx, edx ; jne 0x7af35 ; ret
0x00002aaaaad5bac9 : test edx, edx ; jne 0x88ac5 ; ret
0x00002aaaaad7ff1a : test edx, edx ; jne 0xacf15 ; ret
0x00002aaaaacf348e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00002aaaaad7ed9f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xabd9f ; ret
0x00002aaaaad8d69f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xba6a0 ; ret
0x00002aaaaad0926a : test edx, edx ; sete al ; ret
0x00002aaaaae42d55 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00002aaaaad58a93 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaae837b1 : test esi, ebp ; jmp rax
0x00002aaaaae5ab3d : test esi, ebx ; call qword ptr [rax]
0x00002aaaaad5dd11 : test esi, esi ; jne 0x8ad20 ; xor rax, rax ; ret
0x00002aaaaad68f3e : test esi, esi ; jne 0x95f51 ; jmp 0x95f0b
0x00002aaaaae7d684 : test qword ptr [rax], -0xdd3b800 ; jmp rcx
0x00002aaaaad09105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00002aaaaad7eb85 : test r11d, r11d ; jne 0xabb69 ; mov rax, rdi ; ret
0x00002aaaaae680ac : test r15d, esp ; call rsi
0x00002aaaaad70fd1 : test r8b, r8b ; jne 0x9dfb6 ; ret
0x00002aaaaad7110f : test r8b, r8b ; jne 0x9e0f7 ; xor eax, eax ; ret
0x00002aaaaae17e52 : test r8d, r8d ; je 0x144e60 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae18e37 : test r8d, r8d ; je 0x145e45 ; xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaad7ea70 : test r8d, r8d ; jne 0xaba46 ; ret
0x00002aaaaad7fed8 : test r9d, r9d ; jne 0xace99 ; mov rax, rdx ; ret
0x00002aaaaadd782b : test rax, rax ; je 0x1048d1 ; call rax
0x00002aaaaadd79a2 : test rax, rax ; je 0x104aa9 ; call rax
0x00002aaaaade7987 : test rax, rax ; je 0x114995 ; ret
0x00002aaaaade7c7f : test rax, rax ; je 0x114cb5 ; call rax
0x00002aaaaade9aa9 : test rax, rax ; je 0x116ac1 ; add rsp, 8 ; ret
0x00002aaaaadf1eb4 : test rax, rax ; je 0x11eec6 ; mov rdi, rbx ; call rax
0x00002aaaaadf21ac : test rax, rax ; je 0x11f1be ; mov rdi, rbx ; call rax
0x00002aaaaadfd450 : test rax, rax ; je 0x12a440 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadfdc90 : test rax, rax ; je 0x12aca2 ; mov rdi, rsp ; call rax
0x00002aaaaadfdd7b : test rax, rax ; je 0x12ad8d ; mov rdi, rsp ; call rax
0x00002aaaaadfe631 : test rax, rax ; je 0x12b643 ; mov rdi, rbp ; call rax
0x00002aaaaadff6c2 : test rax, rax ; je 0x12c6d4 ; mov rdi, r14 ; call rax
0x00002aaaaae05057 : test rax, rax ; je 0x132069 ; mov rdi, r12 ; call rax
0x00002aaaaae05238 : test rax, rax ; je 0x13224c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae06512 : test rax, rax ; je 0x133524 ; mov rdi, r13 ; call rax
0x00002aaaaae06705 : test rax, rax ; je 0x133717 ; mov rdi, rbp ; call rax
0x00002aaaaae06925 : test rax, rax ; je 0x133937 ; mov rdi, rbp ; call rax
0x00002aaaaae0741c : test rax, rax ; je 0x134430 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00002aaaaae07ac8 : test rax, rax ; je 0x134ada ; mov rdi, r12 ; call rax
0x00002aaaaae07e3c : test rax, rax ; je 0x134e50 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00002aaaaae0a64c : test rax, rax ; je 0x13765e ; pop rbx ; ret
0x00002aaaaae0b3b8 : test rax, rax ; je 0x1383cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae0bad1 : test rax, rax ; je 0x138ae5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00002aaaaae4638b : test rax, rax ; je 0x17339c ; call rax
0x00002aaaaacfe022 : test rax, rax ; je 0x2b02e ; call rax
0x00002aaaaacff378 : test rax, rax ; je 0x2c384 ; call rax
0x00002aaaaad4b48c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x00002aaaaad51071 : test rax, rax ; je 0x7e07d ; call rax
0x00002aaaaad579b8 : test rax, rax ; je 0x849c4 ; call rax
0x00002aaaaad5d96f : test rax, rax ; je 0x8a989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad9e7ee : test rax, rax ; je 0xcb7fa ; call rax
0x00002aaaaad9e9d0 : test rax, rax ; je 0xcb9df ; call rax
0x00002aaaaadcf7eb : test rax, rax ; je 0xfc7f8 ; ret
0x00002aaaaadd1660 : test rax, rax ; je 0xfe671 ; mov qword ptr [rax], rdx ; ret
0x00002aaaaadd97f1 : test rax, rax ; jl 0x10683c ; je 0x106800 ; ret
0x00002aaaaae0b334 : test rax, rax ; jne 0x138326 ; pop rbx ; ret
0x00002aaaaad4f843 : test rax, rax ; jne 0x7c83e ; ret
0x00002aaaaad508d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00002aaaaad5ba1e : test rax, rax ; jne 0x88a16 ; ret
0x00002aaaaadd050e : test rax, rax ; jne 0xfd4e8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd06cf : test rax, rax ; jne 0xfd6a8 ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad4b15d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaacfe393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x00002aaaaae0665c : test rdi, rdi ; je 0x133675 ; call 0x1f8af
0x00002aaaaadf2190 : test rdi, rdi ; jne 0x11f186 ; pop rbx ; ret
0x00002aaaaadf218f : test rdi, rdi ; jne 0x11f187 ; pop rbx ; ret
0x00002aaaaae4668a : test rdi, rdi ; jne 0x173680 ; pop rbx ; ret
0x00002aaaaae0024f : test rdx, rdx ; je 0x12d261 ; mov rdi, rbp ; call rdx
0x00002aaaaae46273 : test rdx, rdx ; je 0x17327f ; call rdx
0x00002aaaaad5dc4a : test rdx, rdx ; je 0x8ac68 ; bsf rax, rdx ; ret
0x00002aaaaad5dc4a : test rdx, rdx ; je 0x8ac69 ; bsf rax, rdx ; ret
0x00002aaaaad5de19 : test rdx, rdx ; je 0x8ae48 ; bsf rax, rdx ; ret
0x00002aaaaad5de19 : test rdx, rdx ; je 0x8ae49 ; bsf rax, rdx ; ret
0x00002aaaaad9e93f : test rdx, rdx ; je 0xcb94e ; call rdx
0x00002aaaaad44bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x00002aaaaad4d392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x00002aaaaad4df3e : test rdx, rdx ; jne 0x7af36 ; ret
0x00002aaaaad5bac8 : test rdx, rdx ; jne 0x88ac6 ; ret
0x00002aaaaad5dd10 : test rsi, rsi ; jne 0x8ad21 ; xor rax, rax ; ret
0x00002aaaaad68f3d : test rsi, rsi ; jne 0x95f52 ; jmp 0x95f0c
0x00002aaaaad7116f : test sil, sil ; jne 0x9e168 ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaacd5b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaad4c945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00002aaaaad71fca : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00002aaaaae2021a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x00002aaaaae20150 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x00002aaaaae1ff19 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00002aaaaad7ca25 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaae2005f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00002aaaaae1fe83 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00002aaaaae1fee6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00002aaaaad7ca29 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00002aaaaad71fb6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00002aaaaad71f9d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00002aaaaad7ca1b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaad7ca1f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00002aaaaad7ca34 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaad7ca38 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00002aaaaad722d3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00002aaaaad7216c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00002aaaaad71f6e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00002aaaaad71f32 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00002aaaaad72435 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00002aaaaad7cbd8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00002aaaaad7cb3b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00002aaaaad7c9da : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00002aaaaae1ce81 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00002aaaaad059d5 : vpsubsb xmm10, xmm15, xmmword ptr [rcx + rax*4 + 0x29480005] ; ret
0x00002aaaaad6b614 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x00002aaaaae44ef9 : vzeroupper ; ret
0x00002aaaaae696a5 : wait ; add byte ptr [rax], al ; jmp 0x1966b1
0x00002aaaaae77a5d : wait ; add byte ptr [rax], al ; mov al, 0xf0 ; in eax, dx ; call rsi
0x00002aaaaae802e1 : wait ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae46d09 : wait ; mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00002aaaaadd6d09 : wait ; mov ebx, 0x8b49fff1 ; jge 0x103d19 ; call rbx
0x00002aaaaad7c1ed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaad7c26f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaad7c371 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaacd5bd4 : xabort -0xd ; ret
0x00002aaaaacd5bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x00002aaaaae68121 : xchg ah, bh ; call qword ptr [rdx]
0x00002aaaaae68065 : xchg ah, bh ; call rax
0x00002aaaaae68061 : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00002aaaaae680a1 : xchg ah, bh ; jmp qword ptr [rsi]
0x00002aaaaae68261 : xchg ah, bh ; jmp rax
0x00002aaaaae17c5f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18483 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae19dcf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1784f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00002aaaaae18573 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18393 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae1735b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae6a7d1 : xchg al, dh ; jmp rsp
0x00002aaaaae17b6b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1dd7c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d59c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d98c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d1ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1fcad : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae5c420 : xchg bl, al ; cmc ; call rdx
0x00002aaaaae67385 : xchg bl, bh ; jmp qword ptr [rax]
0x00002aaaaae1e7b1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaae1f9b1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1f0b1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1f3b1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1eaa9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae18ddb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00002aaaaae1a92f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1a10f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaae175df : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae198ef : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaae1791f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaae18933 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaada272c : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00002aaaaadba547 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00002aaaaae17c3b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d34b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17d0b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a44f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae180c3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00002aaaaae19c2f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1940f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00002aaaaae1a5ef : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00002aaaaae17abf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae18b13 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae182a3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae172af : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaae795f1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x00002aaaaad01bba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00002aaaaae18cf3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaad55742 : xchg byte ptr [rcx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00002aaaaae176af : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00002aaaaae1d83c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d05c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1e16c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae17b8f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaae18c03 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae1737f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae1974f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17421 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18545 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18635 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18455 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1777f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00002aaaaae1ed56 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19885 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a585 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1fc56 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f356 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1f056 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1a0a5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1d73d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1ea4e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1e06d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae179ef : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaae181b3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00002aaaaae1c0df : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1beff : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1c8d7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1b7f7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae1c6f7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae70809 : xchg cl, ch ; jmp qword ptr [rcx]
0x00002aaaaae68e81 : xchg cl, ch ; jmp rsp
0x00002aaaaae1a8c5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae19bc5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaae196e5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae1a3e5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00002aaaaae1d88d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaacd55b1 : xchg dh, ch ; ret 0x88ad
0x00002aaaaae1d0ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00002aaaaae17445 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00002aaaaadd6f7a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae18365 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18185 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18275 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00002aaaaae18095 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00002aaaaad8bff3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00002aaaaada6404 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00002aaaaad52125 : xchg dword ptr [rax + rax], eax ; add dh, dh ; ret
0x00002aaaaad0250f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00002aaaaacf991b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00002aaaaad354e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00002aaaaad7ea6f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00002aaaaad31f3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x00002aaaaad2a44d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaad3b1a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x00002aaaaadd1745 : xchg dword ptr [rcx + 0x2c], edi ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00002aaaaae551cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00002aaaaad587dc : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00002aaaaadc8c11 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00002aaaaad338fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00002aaaaad389ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x00002aaaaad3a897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x00002aaaaad51e04 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x00002aaaaade74ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1144ad ; pop rdx ; pop r10 ; ret
0x00002aaaaadc4a3b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x00002aaaaad51dc1 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00002aaaaad33d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00002aaaaad3a1db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x00002aaaaae5536b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00002aaaaae1b438 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00002aaaaad45a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00002aaaaad4938f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad51240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaad47f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaad692d4 : xchg eax, ebp ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00002aaaaae68a0d : xchg eax, ebp ; cld ; call qword ptr [rax]
0x00002aaaaad01197 : xchg eax, ebp ; cmp qword ptr [r8], r8 ; mov qword ptr fs:[rdx], rax ; ret
0x00002aaaaadd500f : xchg eax, ebp ; fdiv st(1) ; dec dword ptr [rcx - 0x75] ; jge 0x10201f ; call rbx
0x00002aaaaae80141 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7bec9 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x00002aaaaad4ef3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x00002aaaaadef272 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00002aaaaadd0907 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; sub al, 0 ; mov rdx, rax ; jmp 0xfd8a5
0x00002aaaaacd50d3 : xchg eax, ebp ; ret
0x00002aaaaad86103 : xchg eax, ebp ; ret 0x11eb
0x00002aaaaad842c4 : xchg eax, ebp ; ret 0x2041
0x00002aaaaad82a15 : xchg eax, ebp ; ret 0x294c
0x00002aaaaadf9c58 : xchg eax, ebp ; ret 0x2c3c
0x00002aaaaadd1d7b : xchg eax, ebp ; ret 0x2f3c
0x00002aaaaadbf3cb : xchg eax, ebp ; ret 0x3145
0x00002aaaaad8e49c : xchg eax, ebp ; ret 0x3840
0x00002aaaaad70fb5 : xchg eax, ebp ; ret 0x3941
0x00002aaaaad40007 : xchg eax, ebp ; ret 0x5389
0x00002aaaaad08de5 : xchg eax, ebp ; ret 0x5489
0x00002aaaaadfd015 : xchg eax, ebp ; ret 0x8041
0x00002aaaaadabf37 : xchg eax, ebp ; ret 0x8341
0x00002aaaaad54ad1 : xchg eax, ebp ; ret 0x8349
0x00002aaaaad699fe : xchg eax, ebp ; ret 0x8445
0x00002aaaaadb2b3f : xchg eax, ebp ; ret 0x8488
0x00002aaaaad1a656 : xchg eax, ebp ; ret 0x854d
0x00002aaaaad8c9ce : xchg eax, ebp ; ret 0x8b4c
0x00002aaaaad8394c : xchg eax, ebp ; ret 0x8eb
0x00002aaaaad10ad6 : xchg eax, ebp ; ret 0x941
0x00002aaaaad03b17 : xchg eax, ebp ; ret 0x953d
0x00002aaaaad8102b : xchg eax, ebp ; ret 0x9eb
0x00002aaaaad8cb81 : xchg eax, ebp ; ret 0xa8e9
0x00002aaaaad6adb9 : xchg eax, ebp ; ret 0xb60f
0x00002aaaaadd1dd4 : xchg eax, ebp ; ret 0xc084
0x00002aaaaad1a541 : xchg eax, ebp ; ret 0xc221
0x00002aaaaad0f3da : xchg eax, ebp ; ret 0xd348
0x00002aaaaad09941 : xchg eax, ebp ; ret 0xd521
0x00002aaaaad8ca2c : xchg eax, ebp ; ret 0xd721
0x00002aaaaad18c3f : xchg eax, ebp ; ret 0xdaf7
0x00002aaaaadf6bf5 : xchg eax, ebp ; ret 0xe083
0x00002aaaaad7f701 : xchg eax, ebp ; ret 0xe883
0x00002aaaaad8f25f : xchg eax, ebp ; ret 0xf748
0x00002aaaaadf9c7f : xchg eax, ebp ; ret 0xf980
0x00002aaaaad7f9ee : xchg eax, ebp ; ret 0xf983
0x00002aaaaadfa030 : xchg eax, ebp ; ret 0xfb80
0x00002aaaaadac00d : xchg eax, ebp ; ret 0xfb83
0x00002aaaaae0926d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x1362d6 ; ret
0x00002aaaaadd1c14 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaadbcdfc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00002aaaaad3e34a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00002aaaaadbcdde : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaae0916d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaad4605d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00002aaaaad34b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00002aaaaae8d741 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x00002aaaaacd5b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00002aaaaad4e702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00002aaaaad53c47 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00002aaaaae40860 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00002aaaaacd6959 : xchg eax, ebx ; and cl, ah ; ret
0x00002aaaaae68a45 : xchg eax, ebx ; cld ; call rax
0x00002aaaaae5c409 : xchg eax, ebx ; cmc ; jmp qword ptr [rcx]
0x00002aaaaae7fee9 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaadef57d : xchg eax, ebx ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00002aaaaad7803c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00002aaaaae23502 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00002aaaaadd3e39 : xchg eax, ebx ; push rbx ; sub al, 0 ; add rsp, 8 ; ret
0x00002aaaaad6cb4a : xchg eax, ebx ; ret
0x00002aaaaad8aa7e : xchg eax, ebx ; ret 0x14c
0x00002aaaaad0a380 : xchg eax, ebx ; ret 0x3948
0x00002aaaaad0aecd : xchg eax, ebx ; ret 0x3949
0x00002aaaaad47cef : xchg eax, ebx ; ret 0x840
0x00002aaaaad0b3a1 : xchg eax, ebx ; ret 0x8548
0x00002aaaaad45494 : xchg eax, ebx ; ret 0xd108
0x00002aaaaae46611 : xchg eax, ebx ; ret 0xffea
0x00002aaaaae006be : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x00002aaaaad56a58 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00002aaaaad36e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00002aaaaadb36b5 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00002aaaaae68a01 : xchg eax, ecx ; cld ; call rax
0x00002aaaaae7b629 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00002aaaaae7fe11 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae7fe29 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00002aaaaae6b281 : xchg eax, ecx ; hlt ; jmp rsp
0x00002aaaaae674e0 : xchg eax, ecx ; mov ch, 0xfd ; call rcx
0x00002aaaaae1a9d1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00002aaaaad38d5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00002aaaaae87fef : xchg eax, ecx ; ret
0x00002aaaaadd9be3 : xchg eax, ecx ; ret 0x2b
0x00002aaaaae190ff : xchg eax, ecx ; sub eax, edx ; ret
0x00002aaaaadf33e3 : xchg eax, ecx ; sub r8b, byte ptr [rax] ; ret
0x00002aaaaacf7aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00002aaaaae7765d : xchg eax, edi ; add byte ptr [rax], al ; rol dl, 1 ; in eax, dx ; jmp qword ptr [rsi]
0x00002aaaaadc8cdc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaad043b4 : xchg eax, edi ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00002aaaaae0bd75 : xchg eax, edi ; jmp 0xffffffffc29d8d7c
0x00002aaaaade7948 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00002aaaaad18f27 : xchg eax, edi ; ret 0x870f
0x00002aaaaada4f2d : xchg eax, edi ; ret 0xd008
0x00002aaaaad9fcee : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00002aaaaaddbe16 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00002aaaaadcaf59 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00002aaaaadaaa16 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00002aaaaae8d4a9 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00002aaaaaddc754 : xchg eax, edi ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00002aaaaae55818 : xchg eax, edi ; xchg eax, esp ; ret
0x00002aaaaad67a8a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00002aaaaad34ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00002aaaaae7717d : xchg eax, edx ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xfd ; jmp rsp
0x00002aaaaad50aba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00002aaaaad40a0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00002aaaaae570dd : xchg eax, edx ; jae 0x1840ba ; push rsi ; pop rdx ; je 0x1840af ; ret 0xacfc
0x00002aaaaad4b0ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x00002aaaaade5482 : xchg eax, edx ; or dword ptr [rbx], ebp ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00002aaaaae6a5e9 : xchg eax, edx ; out dx, eax ; jmp rsp
0x00002aaaaae6884c : xchg eax, edx ; popfq ; cld ; jmp qword ptr [rdx]
0x00002aaaaad2c94a : xchg eax, edx ; ret 0x12
0x00002aaaaad0ffc4 : xchg eax, edx ; ret 0x8348
0x00002aaaaadcaf3e : xchg eax, edx ; ret 0x970f
0x00002aaaaad10325 : xchg eax, edx ; ret 0xb60f
0x00002aaaaad9fcf1 : xchg eax, edx ; ret 0xd029
0x00002aaaaadaaa19 : xchg eax, edx ; ret 0xd138
0x00002aaaaae1ca4d : xchg eax, edx ; ret 0xf40
0x00002aaaaae551cf : xchg eax, edx ; ret 0xf869
0x00002aaaaae17e57 : xchg eax, edx ; sub eax, edx ; ret
0x00002aaaaae40b60 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae695ad : xchg eax, esi ; add byte ptr [rax], al ; adc al, 0x20 ; jmp 0x1965b9
0x00002aaaaae2cc43 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00002aaaaacd55ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00002aaaaae6bcd5 : xchg eax, esi ; add dword ptr [rax], eax ; ret 0xfff6
0x00002aaaaad7e0e6 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x00002aaaaae5c411 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x00002aaaaae40c1d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae68598 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x00002aaaaae40b7b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae68a84 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rbp + rbx*4 - 0x18], al ; call rsp
0x00002aaaaada9753 : xchg eax, esi ; pop rbx ; ret
0x00002aaaaae67bb4 : xchg eax, esi ; pop rsi ; cld ; jmp qword ptr [rsi]
0x00002aaaaad06506 : xchg eax, esi ; ret
0x00002aaaaad092cc : xchg eax, esi ; ret 0x394c
0x00002aaaaad5d7c4 : xchg eax, esi ; ret 0xc031
0x00002aaaaae57a6c : xchg eax, esi ; ret 0xcd11
0x00002aaaaadf6047 : xchg eax, esi ; ret 0xfb83
0x00002aaaaae40bcc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaae680a0 : xchg eax, esi ; xchg ah, bh ; jmp qword ptr [rsi]
0x00002aaaaae6b2d8 : xchg eax, esp ; adc al, 0xf5 ; call rsp
0x00002aaaaae6b708 : xchg eax, esp ; adc al, 0xf6 ; call rsp
0x00002aaaaae69208 : xchg eax, esp ; adc ch, dl ; jmp rsp
0x00002aaaaae6f0cc : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; jno 0x19c0d7 ; jmp qword ptr [rdi]
0x00002aaaaae69148 : xchg eax, esp ; add al, 0xea ; call rsp
0x00002aaaaadb2be4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaae82ecc : xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x1aff48 ; cmc ; jmp qword ptr [rcx]
0x00002aaaaadb80d6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad876ac : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaadb2be2 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00002aaaaad44867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00002aaaaae6c8e0 : xchg eax, esp ; and al, 0xf8 ; jmp rsp
0x00002aaaaae68a09 : xchg eax, esp ; cld ; call rax
0x00002aaaaae6cd04 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; xor al, 0xdb ; clc ; call rsp
0x00002aaaaae6b408 : xchg eax, esp ; cmc ; jmp rsp
0x00002aaaaae6ae6c : xchg eax, esp ; cmp eax, 0x32b40001 ; jmp rsp
0x00002aaaaae6db98 : xchg eax, esp ; fdivr st(2) ; jmp rsp
0x00002aaaaae80019 : xchg eax, esp ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae59374 : xchg eax, esp ; in eax, dx ; in eax, dx ; inc dword ptr [rbx - 0x13] ; in eax, dx ; call qword ptr [rax]
0x00002aaaaae68d40 : xchg eax, esp ; jg 0x195d2f ; jmp rsp
0x00002aaaaae6d268 : xchg eax, esp ; leave ; stc ; call rsp
0x00002aaaaae69a64 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rax + rbp*4], dl ; in eax, dx ; call rsp
0x00002aaaaae797cc : xchg eax, esp ; mov eax, 0x1e00000 ; out dx, eax ; jmp rsi
0x00002aaaaae6a619 : xchg eax, esp ; out dx, eax ; call rsp
0x00002aaaaae68eac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, ecx ; jmp rsp
0x00002aaaaae6cf38 : xchg eax, esp ; pop rax ; stc ; jmp rsp
0x00002aaaaada9721 : xchg eax, esp ; pop rbx ; ret
0x00002aaaaae57c7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184c10 ; ret 0x48f
0x00002aaaaaceced0 : xchg eax, esp ; ret
0x00002aaaaae7a1cc : xchg eax, esp ; ret 0
0x00002aaaaadbf9c0 : xchg eax, esp ; ret 0x1589
0x00002aaaaad83b04 : xchg eax, esp ; ret 0x2041
0x00002aaaaad851dd : xchg eax, esp ; ret 0x294c
0x00002aaaaadb51e9 : xchg eax, esp ; ret 0x2fe9
0x00002aaaaad8e14d : xchg eax, esp ; ret 0x3840
0x00002aaaaad7106e : xchg eax, esp ; ret 0x3941
0x00002aaaaadf7197 : xchg eax, esp ; ret 0x3945
0x00002aaaaadb63df : xchg eax, esp ; ret 0x3ae9
0x00002aaaaae09128 : xchg eax, esp ; ret 0x3d83
0x00002aaaaadab1f3 : xchg eax, esp ; ret 0x4422
0x00002aaaaadc00bb : xchg eax, esp ; ret 0x5408
0x00002aaaaad8e21a : xchg eax, esp ; ret 0x5438
0x00002aaaaad2c903 : xchg eax, esp ; ret 0x7f3c
0x00002aaaaad53ebe : xchg eax, esp ; ret 0x82e9
0x00002aaaaad19da9 : xchg eax, esp ; ret 0x8341
0x00002aaaaacf9ec5 : xchg eax, esp ; ret 0x8348
0x00002aaaaade3c5d : xchg eax, esp ; ret 0x840
0x00002aaaaad69bf7 : xchg eax, esp ; ret 0x8440
0x00002aaaaad7cdb5 : xchg eax, esp ; ret 0x8444
0x00002aaaaad69826 : xchg eax, esp ; ret 0x8445
0x00002aaaaadefb6c : xchg eax, esp ; ret 0x8545
0x00002aaaaadb44cb : xchg eax, esp ; ret 0x854d
0x00002aaaaadb2fda : xchg eax, esp ; ret 0x8941
0x00002aaaaadb4f15 : xchg eax, esp ; ret 0x8949
0x00002aaaaacf3777 : xchg eax, esp ; ret 0x8d48
0x00002aaaaadf9152 : xchg eax, esp ; ret 0x93c
0x00002aaaaad1f390 : xchg eax, esp ; ret 0x9522
0x00002aaaaadb637b : xchg eax, esp ; ret 0x9848
0x00002aaaaad02458 : xchg eax, esp ; ret 0xb60f
0x00002aaaaadadf91 : xchg eax, esp ; ret 0xc031
0x00002aaaaadf1e15 : xchg eax, esp ; ret 0xc085
0x00002aaaaadb731d : xchg eax, esp ; ret 0xc683
0x00002aaaaadac07f : xchg eax, esp ; ret 0xd009
0x00002aaaaad8e3b2 : xchg eax, esp ; ret 0xd021
0x00002aaaaad19dbe : xchg eax, esp ; ret 0xd084
0x00002aaaaadd0e43 : xchg eax, esp ; ret 0xd108
0x00002aaaaacf386c : xchg eax, esp ; ret 0xd284
0x00002aaaaad7126f : xchg eax, esp ; ret 0xd308
0x00002aaaaad34a96 : xchg eax, esp ; ret 0xd309
0x00002aaaaadb2fd2 : xchg eax, esp ; ret 0xd609
0x00002aaaaad42fbc : xchg eax, esp ; ret 0xdaf7
0x00002aaaaadbeb1d : xchg eax, esp ; ret 0xf0e9
0x00002aaaaad5d848 : xchg eax, esp ; ret 0xf201
0x00002aaaaadb62ef : xchg eax, esp ; ret 0xf44
0x00002aaaaadefd52 : xchg eax, esp ; ret 0xf741
0x00002aaaaad811d4 : xchg eax, esp ; ret 0xf883
0x00002aaaaada4f1c : xchg eax, esp ; ret 0xf983
0x00002aaaaad253bf : xchg eax, esp ; ret 0xfa80
0x00002aaaaad7cd17 : xchg eax, esp ; ret 0xfd83
0x00002aaaaad7cd38 : xchg eax, esp ; ret 0xfe83
0x00002aaaaae6c4ec : xchg eax, esp ; ret 1
0x00002aaaaad7f1bc : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00002aaaaad67920 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaadcad6f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00002aaaaad183b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaae0e769 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00002aaaaadd0e9a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaadd0e3e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00002aaaaae69e10 : xchg eax, esp ; sbb esi, ebp ; call rsp
0x00002aaaaae79f79 : xchg eax, esp ; sti ; call qword ptr [rax]
0x00002aaaaae8d829 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00002aaaaadbcab4 : xchg eax, esp ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00002aaaaae6d3c4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], dl ; jmp rsp
0x00002aaaaae5b118 : xchg eax, esp ; test al, 0xf3 ; call rdi
0x00002aaaaade61de : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00002aaaaad59aca : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00002aaaaae83849 : xchg ebp, esi ; jmp rax
0x00002aaaaae8e5b9 : xchg ebx, edi ; call rcx
0x00002aaaaae7eac9 : xchg ebx, esi ; call qword ptr [rsi]
0x00002aaaaae5ab15 : xchg ebx, esi ; jmp rdx
0x00002aaaaae6d0d1 : xchg ecx, edi ; call rsp
0x00002aaaaae6d0d0 : xchg ecx, r15d ; call rsp
0x00002aaaaadd3f3c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadd44bc : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaadd82e1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00002aaaaadd6edb : xchg edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaad1ad65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00002aaaaae6809d : xchg esp, edi ; call qword ptr [rsi + 0x26fffc86]
0x00002aaaaae68a25 : xchg esp, edi ; call rax
0x00002aaaaae681d9 : xchg esp, edi ; call rsp
0x00002aaaaae681d5 : xchg esp, edi ; inc dword ptr [rdi + rax*4 - 4] ; call rsp
0x00002aaaaae68059 : xchg esp, edi ; jmp qword ptr [rax]
0x00002aaaaada043f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00002aaaaae7fbf1 : xchg esp, esi ; call qword ptr [rax]
0x00002aaaaae7fba9 : xchg esp, esi ; call qword ptr [rsi]
0x00002aaaaae5b9c9 : xchg esp, esi ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x00002aaaaae681d8 : xchg esp, r15d ; call rsp
0x00002aaaaad47f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00002aaaaae68064 : xchg spl, dil ; call rax
0x00002aaaaad91435 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaae52679 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00002aaaaae233c9 : xlatb ; add r9, r11 ; jmp r9
0x00002aaaaadc65e9 : xlatb ; call 0x1f8ab
0x00002aaaaae69c39 : xlatb ; in eax, dx ; inc esp ; ret 0
0x00002aaaaadd518e : xlatb ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x10219c ; call rbx
0x00002aaaaadd5173 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaadd519c : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00002aaaaadd5180 : xlatb ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10218e ; call rbx
0x00002aaaaadcf242 : xlatb ; ja 0xfc274 ; ret
0x00002aaaaade75b9 : xlatb ; jmp rax
0x00002aaaaae56243 : xlatb ; jo 0x1832bf ; mov ebp, 0xfb67d10d ; ret
0x00002aaaaad1d772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x00002aaaaadf6386 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00002aaaaad29a9d : xlatb ; ret
0x00002aaaaae576e6 : xlatb ; ret 0x4e27
0x00002aaaaacd6268 : xlatb ; ret 0x5a51
0x00002aaaaad5fa17 : xlatb ; ret 0x94c
0x00002aaaaad60d8f : xlatb ; ret 0xc085
0x00002aaaaad5c040 : xlatb ; ret 0xc148
0x00002aaaaad7167b : xlatb ; ret 0xf188
0x00002aaaaad5dbc4 : xlatb ; ret 0xf66
0x00002aaaaad68b21 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00002aaaaad71516 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00002aaaaad784ae : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00002aaaaae42d16 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaad71474 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00002aaaaad5d516 : xlatb ; sal bh, 1 ; ret 0x8000
0x00002aaaaad5d3d6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00002aaaaad5d296 : xlatb ; sal bh, 1 ; ret 0xe000
0x00002aaaaad5d156 : xlatb ; sal bh, 1 ; ret 0xf000
0x00002aaaaad5d016 : xlatb ; sal bh, 1 ; ret 0xf800
0x00002aaaaad5ced6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00002aaaaad5cd96 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00002aaaaad5cc56 : xlatb ; sal bh, 1 ; ret 0xff00
0x00002aaaaad5cb16 : xlatb ; sal bh, 1 ; ret 0xff80
0x00002aaaaad5c9d6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00002aaaaad5c896 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00002aaaaad5c756 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00002aaaaad5c616 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00002aaaaad5c4d6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00002aaaaad5c396 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00002aaaaae42d12 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00002aaaaad5f9b5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaad5f9c6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00002aaaaae676b1 : xlatb ; sti ; inc dword ptr [rax - 0x27] ; sti ; jmp qword ptr [rax]
0x00002aaaaae676d1 : xlatb ; sti ; inc dword ptr [rax] ; fsincos ; jmp rax
0x00002aaaaad08f68 : xlatb ; xor eax, eax ; ret
0x00002aaaaad77ca8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00002aaaaad77c3e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00002aaaaae67aa5 : xor ah, bh ; call qword ptr [rax]
0x00002aaaaae67a45 : xor ah, bh ; call rax
0x00002aaaaae6771c : xor ah, bl ; sti ; jmp qword ptr [rax]
0x00002aaaaacd55e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x00002aaaaae0f121 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaace07b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00002aaaaad4fc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00002aaaaad4fba6 : xor al, 0 ; add dword ptr [rip + 0x348bb5], 1 ; ret
0x00002aaaaad5402e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaad53f44 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x00002aaaaad4fb15 : xor al, 0 ; ret
0x00002aaaaad54169 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x00002aaaaae551ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00002aaaaad68f3b : xor al, 0x24 ; test rsi, rsi ; jne 0x95f54 ; jmp 0x95f0e
0x00002aaaaae8066c : xor al, 0x27 ; add dword ptr [rax], eax ; nop ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00002aaaaadb08c2 : xor al, 0x2b ; call 0x938c8
0x00002aaaaadd4348 : xor al, 0x2c ; add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00002aaaaae7166c : xor al, 0x37 ; add byte ptr [rax], al ; or ch, 0xe9 ; call qword ptr [rdx]
0x00002aaaaad08303 : xor al, 0x39 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00002aaaaacd5051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00002aaaaad7159b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00002aaaaae6d858 : xor al, 0x66 ; cli ; call rsp
0x00002aaaaae6cab0 : xor al, 0x69 ; clc ; call rsp
0x00002aaaaae6dcc8 : xor al, 0x73 ; sti ; call rsp
0x00002aaaaae7b4e4 : xor al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx + rsi*8], bl ; jmp qword ptr [rcx]
0x00002aaaaad7d0e1 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00002aaaaae6a560 : xor al, 0x81 ; out dx, eax ; jmp rsp
0x00002aaaaadb7da2 : xor al, 0x83 ; ret 0x4401
0x00002aaaaadbb443 : xor al, 0x89 ; ret 0x4489
0x00002aaaaad0595d : xor al, 0x89 ; ret 0x5525
0x00002aaaaad7d0a9 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00002aaaaae6b280 : xor al, 0x91 ; hlt ; jmp rsp
0x00002aaaaae6a618 : xor al, 0x94 ; out dx, eax ; call rsp
0x00002aaaaad97724 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00002aaaaad976b2 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00002aaaaada9a95 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd6a78 ; mov edx, eax ; jmp 0xd6a81
0x00002aaaaad3fa9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00002aaaaad06410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x00002aaaaae7a16c : xor al, 0xc2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; cli ; call qword ptr [rdi]
0x00002aaaaae6c4d4 : xor al, 0xc2 ; add dword ptr [rax], eax ; xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaae563aa : xor al, 0xd8 ; ret
0x00002aaaaae7b86c : xor al, 0xd9 ; add byte ptr [rax], al ; and dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00002aaaaae6cd08 : xor al, 0xdb ; clc ; call rsp
0x00002aaaaae6c4d8 : xor al, 0xe3 ; idiv edi ; ret 1
0x00002aaaaae6c528 : xor al, 0xe5 ; idiv edi ; push rsp ; ret
0x00002aaaaad86934 : xor al, 0xe9 ; ret 6
0x00002aaaaae71b01 : xor al, 0xea ; jmp rax
0x00002aaaaae78631 : xor al, 0xee ; jmp qword ptr [rcx]
0x00002aaaaae59e65 : xor al, 0xf0 ; jmp rax
0x00002aaaaae7d06c : xor al, 0xf1 ; add byte ptr [rax], al ; loopne 0x1aa08d ; call qword ptr [rdx]
0x00002aaaaae8d26c : xor al, 0xf3 ; add dword ptr [rax], eax ; add byte ptr [rsi], dl ; clc ; call qword ptr [rdx]
0x00002aaaaae6a6c8 : xor al, 0xfb ; out dx, eax ; call rsp
0x00002aaaaae68011 : xor al, 0xfc ; jmp qword ptr [rax + 0x20fffc35]
0x00002aaaaae67a6d : xor al, 0xfc ; jmp qword ptr [rax]
0x00002aaaaae67a8d : xor al, 0xfc ; jmp rax
0x00002aaaaae813c5 : xor al, 1 ; add byte ptr [rax - 0x14], ch ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae813ad : xor al, 1 ; add byte ptr [rax - 0x14], dl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaae81365 : xor al, 1 ; add byte ptr [rax - 0x15], bl ; hlt ; jmp rdx
0x00002aaaaad7df78 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00002aaaaae81395 : xor al, 1 ; add byte ptr [rax], bh ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad1eaaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00002aaaaae6d4f5 : xor al, 2 ; add byte ptr [rdx], ah ; cli ; call rsp
0x00002aaaaae8e76c : xor al, 8 ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; call qword ptr [rcx]
0x00002aaaaadd997b : xor al, al ; or eax, edi ; ret
0x00002aaaaada8442 : xor al, byte ptr [rbx + rcx + 0x3d8d4800] ; ret
0x00002aaaaae81145 : xor al, byte ptr [rcx] ; add al, bl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00002aaaaae6acc5 : xor al, byte ptr [rcx] ; add byte ptr [rax + rdx*4], al ; jmp rsp
0x00002aaaaae811a5 : xor al, byte ptr [rcx] ; add byte ptr [rax], bh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00002aaaaae59e59 : xor al, dh ; jmp qword ptr [rax]
0x00002aaaaadcd9b8 : xor ax, ax ; ret
0x00002aaaaae67a69 : xor bh, ah ; call qword ptr [rax + 0x20fffc34]
0x00002aaaaae67aa9 : xor bh, ah ; call qword ptr [rax]
0x00002aaaaae67a49 : xor bh, ah ; call rax
0x00002aaaaae68318 : xor bh, byte ptr [rsi - 4] ; jmp qword ptr [rdx + 0x22fffc7d]
0x00002aaaaade42ba : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad60fec : xor bl, al ; nop ; xor rax, rax ; ret
0x00002aaaaad8f25a : xor bl, byte ptr [rax - 0x6af0ffd0] ; ret 0xf748
0x00002aaaaae72ac0 : xor bpl, bl ; call qword ptr [rcx]
0x00002aaaaadfb318 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaad7e06c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaad60ead : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00002aaaaad1abb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x00002aaaaae00cd2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x00002aaaaae06812 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaade3091 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00002aaaaad96a3b : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaadc810f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00002aaaaad5bf51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00002aaaaad71576 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00002aaaaadfddc7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cf71 ; pop rbx ; ret
0x00002aaaaadfdd8f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29cfa9 ; pop rbx ; ret
0x00002aaaaadfdcd0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d068 ; pop rbx ; ret
0x00002aaaaad7ab87 : xor byte ptr [rax - 0x73], cl ; ret
0x00002aaaaad1af48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00002aaaaad90894 : xor byte ptr [rax - 0x75], cl ; je 0xbd8c5 ; cmp byte ptr [rcx + 1], cl ; ret
0x00002aaaaad1abb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x00002aaaaad1af47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x00002aaaaad5be7f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00002aaaaae0e6fa : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00002aaaaad82a10 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd8f2d
0x00002aaaaad87eb8 : xor byte ptr [rax - 0x77], cl ; call 0x4ccde3d5
0x00002aaaaad9af59 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00002aaaaad7f9ad : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00002aaaaae07fc8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00002aaaaad49ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaad036c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00002aaaaada20a6 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00002aaaaadb33cc : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00002aaaaae00cd3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00002aaaaada962e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00002aaaaad45b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00002aaaaadfb319 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00002aaaaad062f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00002aaaaae682c8 : xor byte ptr [rax - 4], bh ; jmp qword ptr [rax + 0x16fffc77]
0x00002aaaaae67f58 : xor byte ptr [rax - 4], bl ; jmp qword ptr [rax + 0x20fffc57]
0x00002aaaaad476ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaae06813 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00002aaaaacf3b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00002aaaaad5fca8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00002aaaaacf384e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00002aaaaad0cfca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00002aaaaad08323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00002aaaaad0d5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00002aaaaad026d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00002aaaaad7d105 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaade7c7b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x114cb9 ; call rax
0x00002aaaaad20399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00002aaaaad8f4da : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad8dc31 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00002aaaaae677f0 : xor byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x00002aaaaad45aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00002aaaaad90fb1 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbdfc8
0x00002aaaaad7c407 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7e070 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00002aaaaad7e06f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaad4ec60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaae67500 : xor byte ptr [rbp - 0x482e0003], 0xfd ; call rcx
0x00002aaaaae45d9b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00002aaaaad579cc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaadf3e4c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00002aaaaae7773f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00002aaaaadbb43e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00002aaaaadbb43f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x00002aaaaad61bab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00002aaaaad4efce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00002aaaaadfdc9d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00002aaaaae835e0 : xor byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00002aaaaae67878 : xor byte ptr [rbx], al ; cld ; call qword ptr [rax]
0x00002aaaaad7e06d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00002aaaaacd4b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00002aaaaad0fe9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00002aaaaad24377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaade1baf : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00002aaaaadb340e : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe03b8
0x00002aaaaae672f0 : xor byte ptr [rcx - 5], cl ; call qword ptr [rax]
0x00002aaaaadce7dc : xor byte ptr [rcx], 0xc0 ; ret
0x00002aaaaae80fed : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], al ; hlt ; call qword ptr [rsi]
0x00002aaaaae81005 : xor byte ptr [rcx], al ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad476ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00002aaaaad4b4b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad40cb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00002aaaaad398fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x00002aaaaadf3e7b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00002aaaaaddcaea : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00002aaaaae67790 : xor byte ptr [rdi - 0x3dff0005], bh ; sti ; call qword ptr [rax - 0x3d]
0x00002aaaaae675d0 : xor byte ptr [rdi - 0x482e0003], dh ; std ; call rcx
0x00002aaaaae684cc : xor byte ptr [rdi - 4], dh ; call rax
0x00002aaaaae67a20 : xor byte ptr [rdi], ch ; cld ; call qword ptr [rax]
0x00002aaaaadd3f81 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00002aaaaad44cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00002aaaaad24342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00002aaaaadcc7ed : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00002aaaaad5d846 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00002aaaaad6814c : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00002aaaaae7d530 : xor byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00002aaaaae78057 : xor byte ptr [rdx], al ; ret
0x00002aaaaae7c0f7 : xor byte ptr [rdx], al ; ret 0xe0a
0x00002aaaaae7cde0 : xor byte ptr [rdx], cl ; call rsi
0x00002aaaaae4090f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00002aaaaad5f97c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00002aaaaad60eae : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00002aaaaacddc88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x00002aaaaad0bfea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00002aaaaadc887c : xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00002aaaaae75090 : xor byte ptr [rsi], ah ; in eax, dx ; call rdx
0x00002aaaaae67274 : xor byte ptr [rsi], dl ; sti ; jmp qword ptr [rax]
0x00002aaaaae6a451 : xor ch, bh ; call rsp
0x00002aaaaae72ac1 : xor ch, bl ; call qword ptr [rcx]
0x00002aaaaae6769c : xor ch, bl ; sti ; call qword ptr [rax]
0x00002aaaaadb7b10 : xor ch, byte ptr [rcx] ; ret
0x00002aaaaad7c198 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00002aaaaad7c1ae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00002aaaaad7c1d0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00002aaaaad7c1ee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00002aaaaad7c20e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00002aaaaad7c234 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00002aaaaad7c250 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00002aaaaad7c270 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00002aaaaad7c290 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00002aaaaad7c2b6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00002aaaaad7c2d8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00002aaaaad7c2f6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00002aaaaad7c316 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00002aaaaad7c332 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00002aaaaad7c352 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00002aaaaad7c372 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00002aaaaad7c392 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00002aaaaad7c3b8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00002aaaaad7c408 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00002aaaaad7c0de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00002aaaaad7c0fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00002aaaaad7c11c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00002aaaaad7c13e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00002aaaaad7c15e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00002aaaaad7c17e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00002aaaaad7c014 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00002aaaaad7c026 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00002aaaaad7c03c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00002aaaaad7c054 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00002aaaaad7c06a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00002aaaaad7c07c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00002aaaaad7c09a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00002aaaaad7c0a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00002aaaaad7c0bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00002aaaaad7c000 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00002aaaaae6792c : xor cl, 0xfb ; call rax
0x00002aaaaad6863b : xor cl, byte ptr [rax + 0x39] ; ret
0x00002aaaaad96a36 : xor cl, byte ptr [rax - 0x75] ; jl 0xc3a67 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00002aaaaae0473f : xor cl, byte ptr [rax - 0x77] ; jp 0x131751 ; ret
0x00002aaaaae074af : xor cl, byte ptr [rax - 0x77] ; jp 0x1344c1 ; ret
0x00002aaaaae074c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1344d9 ; ret
0x00002aaaaae07cff : xor cl, byte ptr [rax - 0x77] ; jp 0x134d11 ; ret
0x00002aaaaae07d17 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d29 ; ret
0x00002aaaaae07d47 : xor cl, byte ptr [rax - 0x77] ; jp 0x134d59 ; ret
0x00002aaaaad55b95 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00002aaaaadb9b5d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00002aaaaae0314c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaade0271 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00002aaaaadd5b82 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaade2e91 : xor cl, ch ; ret
0x00002aaaaad77b20 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00002aaaaae7b901 : xor cl, dh ; jmp qword ptr [rcx]
0x00002aaaaae6ae71 : xor dh, bl ; jmp rsp
0x00002aaaaadfaa84 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00002aaaaae01c14 : xor dh, dh ; ret 0xc707
0x00002aaaaadd5172 : xor dl, bh ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00002aaaaad13540 : xor dl, byte ptr [rip - 0x3e7cb700] ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00002aaaaad008ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00002aaaaad596f5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00002aaaaad7eccb : xor dword ptr [rax + rax], ecx ; ret
0x00002aaaaad5b723 : xor dword ptr [rax - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x00002aaaaad25bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x00002aaaaad7116e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaada3d0e : xor dword ptr [rax - 0x7d], ecx ; ret
0x00002aaaaae710b5 : xor dword ptr [rax], eax ; add al, bh ; ret
0x00002aaaaad6f039 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x00002aaaaae6d475 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], dh ; jmp rsp
0x00002aaaaad2c46e : xor dword ptr [rip - 0x77cb800], eax ; dec dword ptr [rcx - 0x77] ; ret
0x00002aaaaadd6023 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaad21618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00002aaaaad180e0 : xor eax, 0x1cb ; call rax
0x00002aaaaadce5e3 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaae679cd : xor eax, 0x2820fffc ; cld ; jmp rax
0x00002aaaaad4221b : xor eax, 0x30 ; call rax
0x00002aaaaad36b68 : xor eax, 0x35f403 ; call rax
0x00002aaaaad2ee5a : xor eax, 0x367111 ; call rax
0x00002aaaaad2e804 : xor eax, 0x367767 ; call rax
0x00002aaaaae67fd5 : xor eax, 0x36a0fffc ; cld ; jmp qword ptr [rax]
0x00002aaaaad2304c : xor eax, 0x372f1f ; call rax
0x00002aaaaad203d0 : xor eax, 0x375b9b ; call rax
0x00002aaaaad4b181 : xor eax, 0x39480000 ; ret
0x00002aaaaad149ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x00002aaaaad3f41d : xor eax, 0x48b4800 ; ret 0x8548
0x00002aaaaae8eb13 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x00002aaaaadb4007 : xor eax, 0x83fff4cc ; call qword ptr [rax]
0x00002aaaaadf1bc7 : xor eax, 0x8b002a8a ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00002aaaaacd5479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00002aaaaad2b2e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x00002aaaaad4f74b : xor eax, 0xffffe1e0 ; call rax
0x00002aaaaad4f2fb : xor eax, 0xffffe630 ; call rax
0x00002aaaaad4ef0b : xor eax, 0xffffea20 ; call rax
0x00002aaaaad4deab : xor eax, 0xfffffa80 ; call rax
0x00002aaaaad4dc3b : xor eax, 0xfffffcf0 ; call rax
0x00002aaaaad42514 : xor eax, 0xfffffd37 ; call rax
0x00002aaaaacf384b : xor eax, dword ptr [0x30] ; call rax
0x00002aaaaad08320 : xor eax, dword ptr [0x30] ; jmp rax
0x00002aaaaad20396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00002aaaaad5a8d2 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00002aaaaad5ab58 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00002aaaaad5aa41 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00002aaaaad60b8c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00002aaaaad5aaf4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00002aaaaad5fc2a : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00002aaaaad58951 : xor eax, dword ptr [rax] ; jne 0x85967 ; jmp 0x85981
0x00002aaaaad56563 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00002aaaaad5b66d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00002aaaaad5b9dd : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00002aaaaad57c64 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x84c77 ; ret
0x00002aaaaae812fd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], ah ; hlt ; jmp qword ptr [rcx]
0x00002aaaaad99d00 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00002aaaaae05c1c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00002aaaaad91bd2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00002aaaaadf4625 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00002aaaaadf0ef8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00002aaaaae094e5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00002aaaaae16218 : xor eax, eax ; add rsp, 0x38 ; ret
0x00002aaaaae15a7f : xor eax, eax ; add rsp, 0x48 ; ret
0x00002aaaaad0d08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00002aaaaad8dc5e : xor eax, eax ; add rsp, 8 ; ret
0x00002aaaaad00f30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00002aaaaae0d8a1 : xor eax, eax ; call r8
0x00002aaaaad48297 : xor eax, eax ; call rbx
0x00002aaaaae0d8eb : xor eax, eax ; call rcx
0x00002aaaaae0e700 : xor eax, eax ; call rdx
0x00002aaaaad0d6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00002aaaaada971c : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd66bd ; pop rbx ; ret
0x00002aaaaaddcaeb : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00002aaaaada3af4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00002aaaaadd48fa : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x101911 ; pop rbx ; ret
0x00002aaaaadcf23e : xor eax, eax ; cmp rdi, rdx ; ja 0xfc278 ; ret
0x00002aaaaae0e1bc : xor eax, eax ; cmp rdx, rcx ; je 0x13b1d8 ; ret
0x00002aaaaade6eb7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00002aaaaad80422 : xor eax, eax ; jmp 0xad209
0x00002aaaaad80831 : xor eax, eax ; jmp 0xad669
0x00002aaaaae00550 : xor eax, eax ; jmp rcx
0x00002aaaaade7f85 : xor eax, eax ; leave ; ret
0x00002aaaaadf6548 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00002aaaaadf545d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00002aaaaadce770 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00002aaaaad0dc82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00002aaaaad71198 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00002aaaaade7de1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00002aaaaadfc72a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00002aaaaae0cb98 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00002aaaaada75b6 : xor eax, eax ; mov rdx, r8 ; jmp 0xd45db
0x00002aaaaae051d7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00002aaaaad0e370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00002aaaaad417e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaacf2b75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00002aaaaad9f857 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00002aaaaadfe372 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00002aaaaadffb5f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00002aaaaacf5b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00002aaaaad8d9b8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00002aaaaad0d26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad3dc54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00002aaaaad06ee6 : xor eax, eax ; pop rbx ; ret
0x00002aaaaadf6236 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00002aaaaacf2b7b : xor eax, eax ; ret
0x00002aaaaad71c5e : xor eax, eax ; sub eax, ecx ; ret
0x00002aaaaad4a410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x00002aaaaad4a420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00002aaaaad7d058 : xor eax, eax ; test dh, 0xf0 ; je 0xaa02b ; movzx eax, dl ; pop rbx ; ret
0x00002aaaaad09268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00002aaaaad4d390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x00002aaaaad0dfbe : xor eax, ecx ; ret
0x00002aaaaad0d637 : xor eax, edx ; sub eax, edx ; ret
0x00002aaaaad0d64b : xor eax, edx ; sub rax, rdx ; ret
0x00002aaaaae06239 : xor eax, esi ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00002aaaaae5c3fd : xor ebp, 0xf58ec0ff ; call rsi
0x00002aaaaae72b11 : xor ebp, ebx ; jmp qword ptr [rsi]
0x00002aaaaae5ab95 : xor ebx, 0xf37c6dff ; jmp rdx
0x00002aaaaae5ab7d : xor ebx, 0xffffffff ; mov sil, bl ; jmp rdx
0x00002aaaaad8f073 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00002aaaaad5a96a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00002aaaaad9a8ed : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x00002aaaaacf8041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00002aaaaadc5699 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00002aaaaad692f5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00002aaaaad5b6bc : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x00002aaaaacff4b2 : xor ecx, eax ; ret 0x4809
0x00002aaaaacfca73 : xor ecx, ecx ; call r15
0x00002aaaaad07a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00002aaaaad7f4c4 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaadfb4a4 : xor edi, dword ptr [0x30] ; call rax
0x00002aaaaae672c5 : xor edi, ebx ; inc dword ptr [rax + 0x35] ; sti ; call qword ptr [rax]
0x00002aaaaad508d9 : xor edi, edi ; call qword ptr [r15]
0x00002aaaaad54035 : xor edi, edi ; call qword ptr [rax]
0x00002aaaaad999e5 : xor edi, edi ; call rax
0x00002aaaaad508aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00002aaaaae679c9 : xor edi, esp ; call qword ptr [rax + 0x20fffc35]
0x00002aaaaae67a29 : xor edi, esp ; call qword ptr [rax]
0x00002aaaaae67a09 : xor edi, esp ; inc dword ptr [rax + 0x35] ; cld ; call rax
0x00002aaaaad0cfc7 : xor edx, dword ptr [0x30] ; call rdx
0x00002aaaaacd4b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00002aaaaacf48e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00002aaaaad92281 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00002aaaaad234c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x00002aaaaad4b189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaad4b1cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00002aaaaade9d29 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00002aaaaad9a90e : xor edx, edx ; jmp 0xc78d8
0x00002aaaaad7f4c6 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00002aaaaad7122d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00002aaaaad4ea09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00002aaaaad50b6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00002aaaaad5fc03 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00002aaaaaddede7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00002aaaaadc8ef0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaadd59f1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaae5cc29 : xor esi, 0xf67ce2ff ; jmp rax
0x00002aaaaae59e61 : xor esi, eax ; jmp qword ptr [rax - 0x1f000fcc]
0x00002aaaaadb742e : xor esi, esi ; call 0x8e696
0x00002aaaaad2039d : xor esi, esi ; call rax
0x00002aaaaadc8ef2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00002aaaaadd4c41 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00002aaaaadd59f3 : xor esi, esi ; mov rbx, rax ; call rax
0x00002aaaaadd5a18 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00002aaaaadd5a3d : xor esi, esi ; mov rdi, r13 ; call rbx
0x00002aaaaadd5a61 : xor esi, esi ; mov rdi, r14 ; call rbx
0x00002aaaaadd5a81 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00002aaaaae06530 : xor esi, esi ; mov rdi, rsp ; call 0x1f7e7
0x00002aaaaadbb02e : xor esi, esi ; ret
0x00002aaaaae67a25 : xor esp, edi ; call qword ptr [rax]
0x00002aaaaad38b89 : xor esp, esp ; jmp 0x63704
0x00002aaaaad38b88 : xor r12d, r12d ; jmp 0x63705
0x00002aaaaad48296 : xor r8d, r8d ; call rbx
0x00002aaaaade2e90 : xor r9b, bpl ; ret
0x00002aaaaacfca72 : xor r9d, r9d ; call r15
0x00002aaaaadce5e2 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00002aaaaacf384a : xor rax, qword ptr [0x30] ; call rax
0x00002aaaaad0831f : xor rax, qword ptr [0x30] ; jmp rax
0x00002aaaaacf3849 : xor rax, qword ptr fs:[0x30] ; call rax
0x00002aaaaad0831e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00002aaaaad5dd15 : xor rax, rax ; ret
0x00002aaaaad0d64a : xor rax, rdx ; sub rax, rdx ; ret
0x00002aaaaadfb4a3 : xor rdi, qword ptr [0x30] ; call rax
0x00002aaaaadfb4a2 : xor rdi, qword ptr fs:[0x30] ; call rax
0x00002aaaaad0cfc6 : xor rdx, qword ptr [0x30] ; call rdx
0x00002aaaaad0cfc5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 21465
