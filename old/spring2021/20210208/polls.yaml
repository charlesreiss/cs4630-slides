- title: "encoding?"
  questions:
  - text: "encoding of btsl $7, 4(%rax)? (as sequence of hex bytes)"
    single: true
    options:
    - "0f ba 40 04 07"
    - "0f ba 68 04 07"
    - "0f ba 68 07 04"
    - "0f ba 85 07 04"
    - "0f ba a8 07 04"
    - "0f ba a1 04 07"
    - "none of these"
- title: "64-bit ex 2a"
  questions:
  - text: "encoding of add %eax, %r10d?"
    single: true
    options:
    - "40 (REX.no flags) 01 c1 (mod: 11; reg: 000; r/m: 001)"
    - "48 (REX.w) 01 c1 (mod: 11; reg: 000; r/m: 001)"
    - "48 (REX.w) 01 c2 (mod: 11; reg: 000; r/m: 010)"
    - "41 (REX.b) 01 c1 (mod: 11; reg: 000; r/m: 001)"
    - "41 (REX.b) 01 c2 (mod: 11; reg: 000; r/m: 010)"
    - "44 (REX.r) 01 c1 (mod: 11; reg: 000; r/m: 001)"
    - "44 (REX.r) 01 c2 (mod: 11; reg: 000; r/m: 010)"
    - "44 (REX.r) 01 c8 (mod: 11; reg: 001; r/m: 000)"
    - "44 (REX.r) 01 c9 (mod: 11; reg: 001; r/m: 001)"
    - "45 (REX.wb) 01 c1 (mod: 11; reg: 000; r/m: 001)"
    - "45 (REX.wb) 01 c2 (mod: 11; reg: 000; r/m: 010)"
    - "something else?"
- title: "64-bit ex 2b"
  questions:
  - text: "encoding of add rax, rcx?"
    single: true
    options:
    - "40 (REX.no flags) 01 c1 (mod: 11  reg: 000  r/m: 001)"
    - "48 (REX.w) 01 c1 (mod: 11  reg: 000  r/m: 001)"
    - "41 (REX.b) 01 c1 (mod: 11  reg: 000  r/m: 001)"
    - "44 (REX.r) 01 c1 (mod: 11  reg: 000  r/m: 001)"
    - "44 (REX.r) 01 d0 (mod: 11  reg: 000  r/m: 000)"
    - "45 (REX.wb) 01 c1 (mod: 11  reg: 000  r/m: 001)"
    - "something else?"
- title: "position independence?"
  questions:
  - text: "which of these to use absolute encoding for?"
    multiple: true
    options:
    - "A. address of a jump from evil code to function at fixed loc in executable"
    - "B. address of a jump in a loop in the “evil” code"
    - "C. address of a string in the “evil” code"
    - "D. address of a string in the executable"
- title: "ELF static question 1"
  questions:
  - text: "about how large is this executable on disk? (choose closest answer)"
    single: true
    options:
    - "0xc18ea bytes = 0x518 + 0x9352d + 0x265e5 + 0x78c0 bytes"
    - "0xc019a bytes = 0x518 + 0x9352d + 265e5 + 0x6170 bytes"
    - "0xc2230 bytes = 0xbc0c0 + 0x6170 bytes"
    - "0xc3980 bytes = 0xbc0c0 + 0x78c0 bytes"
    - "0x1520c0 bytes = 0x1000 + 0x95000 + 0xbc0c0 bytes"
    - "0x4c3230 bytes = 0x4bd0c0 + 0x6170 bytes"
    - "something else < 0xc40000"
    - "something else < 0x1000000 and >= 0xc40000"
    - "something else >= 0x1000000"
- title: "ELF static question 2"
  questions:
  - text: "if global array int array[SIZE] = {...}; maximum plausible SIZE?"
    single: true
    options:
    - "less than 128"
    - "128-1023 (0x80-0x3ff)"
    - "1024-8191 (0x400-0x1fff)"
    - "8192-65535 (0x2000-0xffff)"
    - "65536-131071 (0xffff-0x1ffff)"
    - "131071 or more"
